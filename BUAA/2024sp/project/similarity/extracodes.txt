1000001
main()
{int a[5];
 int i,j;
 int cc[5];
 int o=1;
 int k[6]={0};
 for(a[0]=1;a[0]<=5;a[0]++)
 {
     for(a[1]=1;a[1]<=5;a[1]++)
     {
                               for(a[2]=1;a[2]<=5;a[2]++)
                               {
                                                for(a[3]=1;a[3]<=5;a[3]++)
                                               {
                                                    for(a[4]=1;a[4]<=5;a[4]++)
                                                    {if((a[0]!=a[1])&&(a[0]!=a[2])&&(a[0]!=a[3])&&(a[0]!=a[4])&&(a[4]==4)&&(a[1]!=a[2])&&(a[1]!=a[3])&&(a[1]!=a[4])
                                                    &&(a[2]!=a[3])&&(a[2]!=a[4])&&(a[3]!=a[4])&&(a[2]==1))
                                                       {cc[0]=(a[4]==1);
                                                        cc[1]=(a[1]==2);
                                                        cc[2]=(a[0]==5);
                                                        cc[3]=(a[2]!=1);
                                                        cc[4]=(a[3]==1);
                                                        for(j=1;j<=2;j++)
                                                        {for(i=0;i<=4;i++)
                                                           {if((a[i]==j)&&(cc[i]==1))
                                                           k[j]=1;
                                                           }
                                                        }
                                                        for(j=3;j<=5;j++)
                                                        {for(i=0;i<=4;i++)
                                                           {if((a[i]==j)&&(cc[i]==0))
                                                           k[j]=1;

                                                           }
                                                        }

                                                       if((k[1]==1)&&(k[2]==1)&&(k[3]==1)&&(k[4]==1)&&(k[5]==1))
                                                       {for(i=0;i<=3;i++)
                                                       {cout<<a[i]<<"";}
                                                       cout<<a[4];
                                                       }

                                                    }
                                                    k[1]=0;k[2]=0;k[3]=0;k[4]=0;k[5]=0;

                                               }

                             }
     }
   }
}
   return 0;
}

1000002

main()
{
      scanf("",str,sub,repl);
      for(i=0;str[i]!='\0';i++)
      {
                                  if(sub[0]==str[i])
                                  {
                                                             k=i+1;
                                                             j=1;
                                                             for(j=1;sub[j]!='\0';j++)
                                                             {
                                                                                         if(sub[j]==str[k])
                                                                                         {
                                                                                                                    k++;
                                                                                         }
                                                                                         else
                                                                                         {
                                                                                             break;
                                                                                         }
                                                             }
                                                             if(sub[j]=='\0')
                                                             {
                                                                             break;
                                                                             
                                                             }
                                  }
      }
      for(m=0;repl[m]!='\0';m++)
      {
                                if(str[i]=='\0')
                                {
                                                break;
                                }
                                str[i]=repl[m];
                                i++;
      }
      printf("",str);
      getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();getchar();
}
                                                                            
                                                                                                                        
                                                                                                                     
                                                                                         
                                  
      


1000003
main()
{
   int n,m,j,i,jz[20][20];
   scanf("",&m,&n);
   for(i=0;i<m;i++)
   {
      for(j=0;j<n;j++)
      {
         scanf("",&jz[i][j]);
      }
   }
   for(i=0;i<m;i++)
   {
      for(j=0;j<n;j++)
      {
         if(i==0&&j==0)
         {
             if(jz[i][j]>=jz[i][j+1]&&jz[i][j]>=jz[i+1][j])
             {
                 printf("",i,j);
             }
         }
         if(i==0&&j!=0&&j!=n-1)
         {
             if(jz[i][j]>=jz[i][j-1]&&jz[i][j]>=jz[i+1][j]&&jz[i][j]>=jz[i][j+1])
                {
                  printf("",i,j);
                }
         }
         if(i==0&&j==n-1)
         {
             if(jz[i][j]>=jz[i][j-1]&&jz[i][j]>=jz[i+1][j])
             {
                  printf("",i,j) ;
             }
         }
         if(i!=0&&i!=m-1&&j==0)
         {
             if(jz[i][j]>=jz[i][j+1]&&jz[i][j]>=jz[i+1][j]&&jz[i][j]>=jz[i-1][j])
             {
                   printf("",i,j);
             }
         }
         if(i!=0&&i!=m-1&&j!=0&&j!=n-1)
         {
              if(jz[i][j]>=jz[i][j+1]&&jz[i][j]>=jz[i+1][j]&&jz[i][j]>=jz[i][j-1]&&jz[i][j]>=jz[i-1][j])
              {
                   printf("",i,j);
              }
         }
         if(i!=0&&i!=m-1&&j==n-1)
         {
              if(jz[i][j]>=jz[i][j-1]&&jz[i][j]>=jz[i+1][j]&&jz[i][j]>=jz[i-1][j])
              {
                   printf("",i,j);
              }
         }
         if(i==m-1&&j==0)
         {
              if(jz[i][j]>=jz[i][j+1]&&jz[i][j]>=jz[i-1][j])
              {
               printf("",i,j);
              }
         }
         if(i==m-1&&j!=0&&j!=n-1)
         {
              if(jz[i][j]>=jz[i][j+1]&&jz[i][j]>=jz[i][j-1]&&jz[i][j]>=jz[i-1][j])
              {
                   printf("",i,j);
              }
         }
         if(i==m-1&&j==n-1)
         {
              if(jz[i][j]>=jz[i-1][j]&&jz[i][j]>=jz[i][j-1])
              {
                   printf("",i,j);
              }
         }
      }
   }	
  return 0;
}

1000004
main()
{
int n;
int year,ma,mb,day;
int i;
day=1;
int xa,xb;
scanf("",&n);
for(i=0;i<n;i++)
{
    scanf("",&year,&ma,&mb);
	if((year%4==0 && year%100!=0) || (year%400==0))
	{
	       if(ma==1)
		   {
	           xa=day;
		   }
	       if(ma==2)
		   {
	           xa=31+day;
		   }
	       if(ma==3)
		   {
	           xa=31+29+day;
		   }
	       if(ma==4)
		   {
	           xa=31+29+31+day;
		   }
	       if(ma==5)
		   {
	           xa=31*2+30+29+day;
		   }
	       if(ma==6)
		   {
	           xa=31*3+30+29+day;
		   }
	       if(ma==7)
		   {
	           xa=31*3+30*2+29+day;
		   }
	       if(ma==8)
		   {
	           xa=31*4+30*2+29+day;
		   }
	       if(ma==9)
		   {
	           xa=31*5+30*2+29+day;
		   }
	       if(ma==10)
		   {
	           xa=31*5+30*3+29+day;
		   }
	       if(ma==11)
		   {
	           xa=31*6+30*3+29+day;
		   }
	       if(ma==12)
		   {
	           xa=31*6+30*4+29+day;
		   }
           if(mb==1)
		   {
	           xb=day;
		   }
	       if(mb==2)
		   {
	           xb=31+day;
		   }
	       if(mb==3)
		   {
	           xb=31+29+day;
		   }
	       if(mb==4)
		   {
	           xb=31+29+31+day;
		   }
	       if(mb==5)
		   {
	           xb=31*2+30+29+day;
		   }
	       if(mb==6)
		   {
	           xb=31*3+30+29+day;
		   }
	       if(mb==7)
		   {
	           xb=31*3+30*2+29+day;
		   }
	       if(mb==8)
		   {
	           xb=31*4+30*2+29+day;
		   }
	       if(mb==9)
		   {
	           xb=31*5+30*2+29+day;
		   }
	       if(mb==10)
		   {
	           xb=31*5+30*3+29+day;
		   }
	       if(mb==11)
		   {
	           xb=31*6+30*3+29+day;
		   }
	       if(mb==12)
		   {
	           xb=31*6+30*4+29+day;
		   }
	}
	   else
	   {
	       if(ma==1)
		   {
	           xa=day;
		   }
	       if(ma==2)
		   {
	           xa=31+day;
		   }
	       if(ma==3)
		   {
	           xa=31+28+day;
		   }
	       if(ma==4)
		   {
	           xa=31+28+31+day;
		   }
	       if(ma==5)
		   {
	           xa=31*2+30+28+day;
		   }
	       if(ma==6)
		   {
	           xa=31*3+30+28+day;
		   }
	       if(ma==7)
		   {
	           xa=31*3+30*2+28+day;
		   }
	       if(ma==8)
		   {
	           xa=31*4+30*2+28+day;
		   }
	       if(ma==9)
		   {
	           xa=31*5+30*2+28+day;
		   }
	       if(ma==10)
		   {
	           xa=31*5+30*3+28+day;
		   }
	       if(ma==11)
		   {
	           xa=31*6+30*3+28+day;
		   }
	       if(ma==12)
		   {
	           xa=31*6+30*4+28+day;
		   }
		   if(mb==1)
		   {
	           xb=day;
		   }
	       if(mb==2)
		   {
	           xb=31+day;
		   }
	       if(mb==3)
		   {
	           xb=31+28+day;
		   }
	       if(mb==4)
		   {
	           xb=31+28+31+day;
		   }
	       if(mb==5)
		   {
	           xb=31*2+30+28+day;
		   }
	       if(mb==6)
		   {
	           xb=31*3+30+28+day;
		   }
	       if(mb==7)
		   {
	           xb=31*3+30*2+28+day;
		   }
	       if(mb==8)
		   {
	           xb=31*4+30*2+28+day;
		   }
	       if(mb==9)
		   {
	           xb=31*5+30*2+28+day;
		   }
	       if(mb==10)
		   {
	           xb=31*5+30*3+28+day;
		   }
	       if(mb==11)
		   {
	           xb=31*6+30*3+28+day;
		   }
	       if(mb==12)
		   {
	           xb=31*6+30*4+28+day;
		   }
	   }
       if((xb-xa)%7==0)
		   printf("");
	   printf("");
}
	return 0;
}

1000005
main()
{
    int a[110][110],b[110];
    int (*ju)[110]=a;
    int num1,num,i,j,m,sum=0,*min=b;
    cin>>num1;
    for(m=0;m<num1;m++)
    {
                      num=num1;
                      sum=0;
                      for(i=0;i<num;i++)
                                     for(j=0;j<num;j++) cin>>*(*(ju+i)+j);
                      while(num>1)
                      {
                                 
                                   
                                  for(i=0;i<num;i++)
                                  {
                                                    *(min+i)=10000;
                                                    for(j=0;j<num;j++)
                                                                      if (*(*(ju+i)+j)<*(min+i)) *(min+i)=*(*(ju+i)+j);
                                  }
                                
                                  for(i=0;i<num;i++)
                                     for(j=0;j<num;j++) *(*(ju+i)+j)=*(*(ju+i)+j)-*(min+i);
                                    
                                      
                                  for(j=0;j<num;j++)
                                  {
                                                    *(min+j)=10000;
                                                    for(i=0;i<num;i++)
                                                                      if (*(*(ju+i)+j)<*(min+j)) *(min+j)=*(*(ju+i)+j);
                                  }
                                  
                                  for(i=0;i<num;i++)
                                     for(j=0;j<num;j++) *(*(ju+i)+j)=*(*(ju+i)+j)-*(min+j);
                                 
                                   
                                     
                                  sum=sum+*(*(ju+1)+1);
                                  
                                  for(i=0;i<num;i++)
                                  {
                                                    for(j=0;j<num-1;j++)
                                                    {
                                                                        if (j>=1) *(*(ju+i)+j)=*(*(ju+i)+j+1);
                                                    }
                                  }
                                
                                  
                                  for(j=0;j<num-1;j++)
                                  {
                                                    for(i=0;i<num-1;i++)
                                                    {
                                                                        if (i>=1) *(*(ju+i)+j)=*(*(ju+i+1)+j);
                                                    }
                                  }
                                 
                                   
                                  num--;
                                  
                      }
                      cout<<sum<<endl;
    }
    cin.get();cin.get();cin.get();cin.get();
    return 0;
}


1000006
main()
{
    char num1[10000];
    char num2[10000];
    
    scanf("",num1);
    
    scanf("",num2);
    if(num1[0]!=''&&num2[0]!='')
    {
        int i1=0;
        int i2=0;
        int max;
        while(num1[i1]!='\0')
        {
            i1++;
        }
        while(num2[i2]!='\0')
        {
            i2++;
        }
        if(i1>=i2)
        {
            max=i1;
        }
        else
        {
            max=i2;
        }                         
        create(&phead1,max);      
        create(&phead2,max);
        create(&phead3,max+1);
        struct num* ptemp1=phead1;
        struct num* ptemp2=phead2;
        int i3;
        for(i3=i1-1;i3>=0;i3--)
        {
            ptemp1->n=num1[i3]-'';
            ptemp1=ptemp1->next;
        }
        int i4;
        for(i4=i2-1;i4>=0;i4--)
        {
            ptemp2->n=num2[i4]-'';
            ptemp2=ptemp2->next;
        }                         
        struct num* ptemp3=phead1;
        struct num* ptemp4=phead2;
        struct num* ptemp5=phead3;
        while(ptemp3!=NULL)
        {
            if(((ptemp3->n)+(ptemp4->n)+(ptemp5->n))>=10)
            {
                 ptemp5->n=ptemp5->n+((ptemp3->n)+(ptemp4->n))-10;
                 ptemp3=ptemp3->next;
                 ptemp4=ptemp4->next;
                 ptemp5=ptemp5->next;
                 ptemp5->n=(ptemp5->n)+1;
            }
           else
           {
               ptemp5->n=ptemp5->n+(ptemp3->n)+(ptemp4->n);
               ptemp3=ptemp3->next;
               ptemp4=ptemp4->next;
               ptemp5=ptemp5->next;
           }
        }                       
        struct num* ptemp7=phead3;
        while(ptemp7->next!=NULL)
        {
            ptemp7=ptemp7->next;
        }
        
        if(ptemp7->n==0)
        {
            ptemp7=ptemp7->ahead;
            if(ptemp7->ahead==NULL)
            {
                printf("");
                return 0;
            }
            else
            {
                while(ptemp7->n==0)
                {
                    ptemp7=ptemp7->ahead;
                }
                while(ptemp7!=NULL)
                {
                    printf("",ptemp7->n);
                    ptemp7=ptemp7->ahead;
                }
            }
        }
        else
        {
            while(ptemp7!=NULL)
            {
                printf("",ptemp7->n);
                ptemp7=ptemp7->ahead;
            }
        }

    }
    struct num* release1=phead1;
    struct num* release2=phead2;
    struct num* release3=phead3;
    while(phead1->next!=NULL)
    {
        release1=phead1;
        phead1->next=(phead1->next)->next;
        free(release1->next);
    }
    free(phead1);
    while(phead2->next!=NULL)
    {
        release2=phead2;
        phead2->next=(phead2->next)->next;
        free(release2->next);
    }
    free(phead2);
    while(phead3->next!=NULL)
    {
        release3=phead3;
        phead3->next=(phead3->next)->next;
        free(release3->next);
    }
    free(phead3);
    return 0;
}


1000007
main ()
{
	char st[300];
	int jr,lr,a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;
	
	scanf("",st);
	
	lr=strlen(st);
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			a=a+1;
			
		}
	}
	if(a>0)
	printf("",a);
	b=0;	
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			b=b+1;
			
		}
	}
	if(b>0)
	printf("",b);

	c=0;
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			c=c+1;
			
		}
	}if(c>0)
	printf("",c);
	d=0;	
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			d=d+1;
			
		}
	}if(d>0)
	printf("",d);
	e=0;	
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			e=e+1;
			
		}
	}if(e>0)
	printf("",e);
	
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			f=f+1;
			
		}
	}if(f>0)
	printf("",f);
		
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			g=g+1;
			
		}
	}if(g>0)
	printf("",g);

    	
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			h=h+1;
			
		}
	}if(h>0)
	printf("",h);
	
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			i=i+1;
			
		}
	}if(i>0)
	printf("",i);
		
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			j=j+1;
		
		}
	}if(j>0)
	printf("",j);
		
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			k=k+1;
			
		}
	}if(k>0)
	printf("",k);
	
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			l=l+1;
			
		}
	}if(l>0)
	printf("",l);
		
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			m=m+1;
			
		}
	}if(m>0)
    printf("",m);
    	
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			n=n+1;
			
		}
	}if(n>0)
	printf("",n);
	
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			o=o+1;
			
		}
	}if(o>0)
	printf("",o);
		
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			p=p+1;
			
		}
	}if(p>0)
	printf("",p);
		
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			q=q+1;
			
		}
	}if(q>0)
	printf("",q);
	
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			r=r+1;
			
		}
	}if(r>0)
	printf("",r);

		
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			s=s+1;
			
		}
	}if(s>0)
    printf("",s);
    	
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			t=t+1;
			
		}
	}if(t>0)
	printf("",t);
	
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			u=u+1;
			
		}
	}if(u>0)
	printf("",u);
		
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			v=v+1;
			
		}
	}if(v>0)
	printf("",v);
		
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			w=w+1;
			
		}
	}if(w>0)
	printf("",w);
	
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			x=x+1;
			
		}
	}if(x>0)
	printf("",x);
		
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			y=y+1;
			
		}
	}if(y>0)
	printf("",y);
         	
	for(jr=0;jr<lr;jr++)
	{
		if(st[jr]=='')
		{
			z=z+1;
			
		}
	}
        if(z>0)
	printf("",z);
		if(a==0&&b==0&&c==0&&d==0&&e==0&&f==0&&g==0&&h==0&&i==0&&j==0&&k==0&&l==0&&m==0&&n==0&&o==0&&p==0&&q==0&&r==0&&s==0&&t==0&&u==0&&v==0&&w==0&&x==0&&y==0&&z==0)
		{
			printf("");
		}
         
         

    	return 0;
}

1000008
main()
{
    char num1[10000];
    char num2[10000];
    
    scanf("",num1);
    
    scanf("",num2);
    int i1=0;
    int i2=0;
    int max;
    while(num1[i1]!='\0')
    {
        i1++;
    }
    while(num2[i2]!='\0')
    {
        i2++;
    }
    if(i1>=i2)
    {
        max=i1;
    }
    else
    {
        max=i2;
    }                         
    create(&phead1,max);      
    create(&phead2,max);
    create(&phead3,max+1);
    struct num* ptemp1=phead1;
    struct num* ptemp2=phead2;
    int i3;
    for(i3=i1-1;i3>=0;i3--)
    {
        ptemp1->n=num1[i3]-'';
        ptemp1=ptemp1->next;
    }
    int i4;
    for(i4=i2-1;i4>=0;i4--)
    {
        ptemp2->n=num2[i4]-'';
        ptemp2=ptemp2->next;
    }                         
    struct num* ptemp3=phead1;
    struct num* ptemp4=phead2;
    struct num* ptemp5=phead3;
    while(ptemp3!=NULL)
    {
        if(((ptemp3->n)+(ptemp4->n)+(ptemp5->n))>=10)
        {
             ptemp5->n=ptemp5->n+((ptemp3->n)+(ptemp4->n))-10;
             ptemp3=ptemp3->next;
             ptemp4=ptemp4->next;
             ptemp5=ptemp5->next;
             ptemp5->n=(ptemp5->n)+1;
        }
        else
        {
            ptemp5->n=ptemp5->n+(ptemp3->n)+(ptemp4->n);
            ptemp3=ptemp3->next;
            ptemp4=ptemp4->next;
            ptemp5=ptemp5->next;
         }
    }                       
    struct num* ptemp7=phead3;
    while(ptemp7->next!=NULL)
    {
        ptemp7=ptemp7->next;
    }
    
    if(ptemp7->n==0)
    {
        ptemp7=ptemp7->ahead;
        if(ptemp7->ahead==NULL)
        {
            printf("");
            return 0;
        }
        else
        {
            while(ptemp7->n==0)
            {
                ptemp7=ptemp7->ahead;
            }
            while(ptemp7!=NULL)
            {
                printf("",ptemp7->n);
                ptemp7=ptemp7->ahead;
            }
        }
    }
    else
    {
        while(ptemp7!=NULL)
        {
            printf("",ptemp7->n);
            ptemp7=ptemp7->ahead;
        }
    }
    struct num* release1=phead1;
    struct num* release2=phead2;
    struct num* release3=phead3;
    while(phead1->next!=NULL)
    {
        release1=phead1->next;
        phead1->next=(phead1->next)->next;
        free(release1);
    }
    free(phead1);
    while(phead2->next!=NULL)
    {
        release2=phead2->next;
        phead2->next=(phead2->next)->next;
        free(release2);
    }
    free(phead2);
    while(phead3->next!=NULL)
    {
        release3=phead3->next;
        phead3->next=(phead3->next)->next;
        free(release3);
    }
    free(phead3);
    return 0;
}


1000009
main()
{
    int k,i,j,l,sum,temp,c,d,e,q,w,r,t;
    int a[100][100];
    scanf("",&k);
    int m[100],n[100];
    for(i=0;i<k;i++)
    {
                    scanf("",&m[i],&n[i]);
                    for(j=0;j<m[i];j++)
                    {
                                       for(l=0;l<n[i];l++)
                                       {
                                                          scanf("",&a[j][l]);
                                       }
                    }
                    sum=0;
                    temp=0;
                    c=0;
                    d=0;
                    e=0;
                    for(j=0;j<n[i];j++)
                    {
                                       temp=temp+a[0][j];
                    }
                    for(j=0;j<n[i];j++)
                    {
                                       c=c+a[m[i]-1][j];
                    }
                    for(j=0;j<m[i];j++)
                    {
                                       d=d+a[j][0];
                    }
                    for(j=0;j<m[i];j++)
                    {
                                       e=e+a[j][n[i]-1];
                    }
                    if(m[i]==1&&n[i]==1)
                    {
                                      sum=a[0][0];
                                      printf("",sum);
                    }
                    if(m[i]==1&&n[i]!=1)
                    {
                                       for(j=0;j<n[i];j++)
                                       {
                                                          sum=sum+a[0][j];
                                       }
                                       printf("",sum);
                    }
                    if(m[i]!=1&&n[i]==1)
                    {
                                        for(j=0;j<n[i];j++)
                                        {
                                                           sum=sum+a[j][0];
                                        }
                                        printf("",sum);
                    }
                    if(m[i]!=1&&n[i]!=1)
                    {
                                        q=a[0][0];
                                        w=a[0][n[i]-1];
                                        r=a[m[i]-1][0];
                                        t=a[m[i]-1][n[i]-1];
                                        sum=c+d+e+temp-q-w-r-t;
                                        printf("",sum);
                    }
    }
    return 0;
}

1000010
main(void)
{
	int i,j,k;
	int n;
	int max;       

		int x=0;
		int m=0;
		scanf("",beichushu);
		memset(beichu,0,sizeof(beichu));
		memset(chu,0,sizeof(chu));
		memset(chu1,0,sizeof(chu1));
		memset(shang,0,sizeof(shang));
		
		for(i=strlen(beichushu)-1,j=0;i>=0;i--)
			beichu[j++]=beichushu[i]-'';
        chu[0]=3;
        chu[1]=1;
        chu1[0]=3;
        chu1[1]=1;
		k=wei(beichu)-wei(chu);            
		max=k;                             
		int a=compare(beichu,chu);         
		fangda(chu1,k);                    
		while(compare(beichu,chu))
		{
			while(compare(beichu,chu1))
			{
				subtract(beichu,chu1);
				m++;
			}
			shang[x]=m;
			x++;
			m=0;
			memset(chu1,0,sizeof(chu1));
		    chu1[0]=3;
		    chu1[1]=1;
			k--;
			if(k>=1)
			    fangda(chu1,k);
		}
		if(shang[0]==0)
		{
			for(i=1;i<=max;i++)
			{
			    printf("",shang[i]);
			}
		}
		if(shang[0]>0)
		{
			for(i=0;i<=max;i++)
			    printf("",shang[i]);
		}
		if(a==0)
		    printf("");
		printf("");
		if(beichu[1]==1)
		for(i=1;i>=0;i--)
		    printf("",beichu[i]);
		printf("",beichu[0]);
	return 0;
}

subtract(int *beichu,int *chu1)
{
	int i;
	for(i=0;i<120;i++)
	{
		beichu[i]=beichu[i]-chu1[i];
		if(beichu[i]<0)
		{
			beichu[i]+=10;
			beichu[i+1]--;
		}
	}
}
compare(int *beichu,int *chu1)
{
	if(wei(beichu)>wei(chu1))
	    return 1;
	if(wei(beichu)<wei(chu1))
	    return 0;
	else
	{
		int i;
		for(i=149;;i--)
		{
			if(beichu[i]>chu1[i])
			    return 1;
			if(beichu[i]<chu1[i])
			    return 0;
		}
	}
	return 1;
}
wei(int *a)
{
	int i,post;
	for(i=149;i>=0;i--)
	{
		if(a[i]>0)
		{
			post=i+1;
				return post;
		}
	}
} 
fangda(int *c,int n)
{
	int i;
	for(i=100;i>=0;i--)
	{
		c[i+n]=c[i];
	}
	for(i=0;i<n;i++)
	{
		c[i]=0;
	} 
}

1000011
swap(int n,int *a,int *b)
{
    int win;
    int lost;
    int money;
    int i,j,k;
    i=0;
    j=0;
    int *c=(int*)malloc(n*sizeof(int));
    for(j=0;j<n;j++)
    {
             win=0;
             lost=0;       
             for(i=0;i<n;i++)
             {
                             
                             if(a[i]>b[i]) {win++;}
                             if(a[i]<b[i]) {lost++;}
                             
                             
             } 
             c[j]=win*200-lost*200;
             
             k=a[0];
             for(i=0;i<n-1;i++)
             {
                            a[i]=a[i+1];
             }   
             a[n-1]=k;
                
             
    }
    money=c[0];
    for(j=0;j<n;j++)
    {
                    if(money<c[j]){money=c[j];}
    }
    
    return money;        
}
main()
{
    int i;
    for(i=1;;i++)
    {
        int n;
        scanf("",&n);
        if(n==0) break;
        else
        {
            int *a=(int*)malloc(n*sizeof(int));
            int l,k;
            for(l=0;l<n;l++)
            {
                scanf("",&a[l]);
            }
            scanf("");
           
            
            for(l=0;l<n-1;l++)   
            {
                for(k=0;k<n-1-l;k++)
                {
                    if(a[k]<a[k+1])
                    {
                        int temp;
                        temp=a[k];
                        a[k]=a[k+1];
                        a[k+1]=temp;
                    }
                }
               
            }
            int *b=(int*)malloc(n*sizeof(int));
           
            for(l=0;l<n;l++)
            {
                scanf("",&b[l]);
               
                
            }
            
            
          
            
            for(l=0;l<n-1;l++)   
            {
                for(k=0;k<n-1-l;k++)
                {
                    if(b[k]<b[k+1])
                    {
                        int temp;
                        temp=b[k];
                        b[k]=b[k+1];
                        b[k+1]=temp;
                        
                    }
                    
                }
               
            }
           

            printf("",swap(n,a,b));
        }
    }
    getchar;
    getchar;
}


1000012
main()
{
	int n,day,i,j;
	int day0[9][9],day1[9][9], day2[9][9],day3[9][9],day4[9][9];
	for(i=0;i<9;i++)
	{
		for(j=0;j<9;j++)
		{
			day0[i][j]=0;
		}
	}
	for(i=0;i<9;i++)
	{
		for(j=0;j<9;j++)
		{
			day1[i][j]=0;
		}
	}
	for(i=0;i<9;i++)
	{
		for(j=0;j<9;j++)
		{
			day2[i][j]=0;
		}
	}
	for(i=0;i<9;i++)
	{
		for(j=0;j<9;j++)
		{
			day3[i][j]=0;
		}
	}
	for(i=0;i<9;i++)
	{
		for(j=0;j<9;j++)
		{
			day4[i][j]=0;
		}
	}


	scanf("",&n,&day);	
	day0[4][4]=n;
	for(i=0;i<9;i++)
	{
		for(j=0;j<9;j++)
		{
			if(day0[i][j]!=0)
			{
				day1[i-1][j-1]=1*day0[i][j];
				day1[i-1][j-0]=1*day0[i][j];
				day1[i-1][j+1]=1*day0[i][j];
				day1[i-0][j-1]=1*day0[i][j];
				day1[i-0][j+1]=1*day0[i][j];
				day1[i+1][j-1]=1*day0[i][j];
				day1[i+1][j-0]=1*day0[i][j];
				day1[i+1][j+1]=1*day0[i][j];
				day1[i][j]=2*day0[i][j];
			}
		}
	}
	for(i=0;i<9;i++)
	{
		for(j=0;j<9;j++)
		{
			if(day1[i][j]!=0)
			{
				day2[i-1][j-1]=1*day1[i][j]+day2[i-1][j-1];
				day2[i-1][j-0]=1*day1[i][j]+day2[i-1][j-0];
				day2[i-1][j+1]=1*day1[i][j]+day2[i-1][j+1];
				day2[i-0][j-1]=1*day1[i][j]+day2[i-0][j-1];
				day2[i-0][j+1]=1*day1[i][j]+day2[i-0][j+1];
				day2[i+1][j-1]=1*day1[i][j]+day2[i+1][j-1];
				day2[i+1][j-0]=1*day1[i][j]+day2[i+1][j-0];
				day2[i+1][j+1]=1*day1[i][j]+day2[i+1][j+1];
				day2[i][j]=2*day1[i][j]+day2[i][j];
			}
		}
	}
	for(i=0;i<9;i++)
	{
		for(j=0;j<9;j++)
		{
			if(day2[i][j]!=0)
			{
				day3[i-1][j-1]=1*day2[i][j]+day3[i-1][j-1];
				day3[i-1][j-0]=1*day2[i][j]+day3[i-1][j-0];
				day3[i-1][j+1]=1*day2[i][j]+day3[i-1][j+1];
				day3[i-0][j-1]=1*day2[i][j]+day3[i-0][j-1];
				day3[i-0][j+1]=1*day2[i][j]+day3[i-0][j+1];
				day3[i+1][j-1]=1*day2[i][j]+day3[i+1][j-1];
				day3[i+1][j-0]=1*day2[i][j]+day3[i+1][j-0];
				day3[i+1][j+1]=1*day2[i][j]+day3[i+1][j+1];
				day3[i][j]=2*day2[i][j]+day3[i][j];
			}
		}
	}
	for(i=0;i<9;i++)
	{
		for(j=0;j<9;j++)
		{
			if(day3[i][j]!=0)
			{
				day4[i-1][j-1]=1*day3[i][j]+day4[i-1][j-1];
				day4[i-1][j-0]=1*day3[i][j]+day4[i-1][j-0];
				day4[i-1][j+1]=1*day3[i][j]+day4[i-1][j+1];
				day4[i-0][j-1]=1*day3[i][j]+day4[i-0][j-1];
				day4[i-0][j+1]=1*day3[i][j]+day4[i-0][j+1];
				day4[i+1][j-1]=1*day3[i][j]+day4[i+1][j-1];
				day4[i+1][j-0]=1*day3[i][j]+day4[i+1][j-0];
				day4[i+1][j+1]=1*day3[i][j]+day4[i+1][j+1];
				day4[i][j]=2*day3[i][j]+day4[i][j];
			}
		}
	}
	if(day==1)
	{
		for(i=0;i<9;i++)
		{
			for(j=0;j<8;j++)
			{
				printf("", day1[i][j]);
			}
			printf("",day1[i][8]);
		}
	}
		if(day==2)
	{
		for(i=0;i<9;i++)
		{
			for(j=0;j<8;j++)
			{
				printf("", day2[i][j]);
			}
			printf("",day2[i][8]);
		}
	}
			if(day==3)
	{
		for(i=0;i<9;i++)
		{
			for(j=0;j<8;j++)
			{
				printf("", day3[i][j]);
			}
			printf("",day3[i][8]);
		}
	}
				if(day==4)
	{
		for(i=0;i<9;i++)
		{
			for(j=0;j<8;j++)
			{
				printf("", day4[i][j]);
			}
			printf("",day4[i][8]);
		}
	}
				return 0;
				}

1000013
main()
{
    char input[501],word[501][7];
    char ctemp;
    int num,i,j,length,k,jishu[501],temp,m,count;
    cin>>num;
    for(i=0;i<501;i++) input[i]='\0';
    for(i=0;i<501;i++) jishu[i]=1;
    for(i=0;i<501;i++)
         for(j=0;j<7;j++) word[i][j]='\0';
    cin.get();
    cin.get(input,501);
    length=strlen(input);
    k=-1;
    for(i=0;i<length-num+1;i=i-num+1)
    {
                         k++;
                         for(j=0;j<num;j++) 
                         {
                                            word[k][j]=input[i];
                                            i++;
                         }
    }
    for(i=0;i<k+1;i++)
    {
                      for(j=i+1;j<k+1;j++)
                      {
                                      count=0;
                                      for(m=0;m<num;m++)
                                      {
                                                        if (word[i][m]!=word[j][m]) break;
                                                        else count++;
                                      }
                                      if (count==num) jishu[i]++;
                      }
    }
   
    for(i=0;i<k;i++)
    {
                    for(j=0;j<k-i;j++)
                    {
                                      if (jishu[j]<jishu[j+1])
                                      {
                                                              temp=jishu[j];
                                                              jishu[j]=jishu[j+1];
                                                              jishu[j+1]=temp;
                                                              for(int m=0;m<num;m++)
                                                              {
                                                                      ctemp=word[j][m];
                                                                      word[j][m]=word[j+1][m];
                                                                      word[j+1][m]=ctemp;
                                                              }
                                      }
                    }
    }
    
    if (jishu[0]>1)
    {
                    cout<<jishu[0]<<endl;
                    for(i=0;i<k+1;i++)
                    {
                                      if (jishu[i]==jishu[0]) cout<<word[i]<<endl;
                                      else break;
                    }
    }
    else cout<<"";
    cin.get();cin.get();cin.get();cin.get();
    return 0;            
}


1000014
main()
{
    int startYear,startMonth,startDay,endYear,endMonth,endDay,i,j,a,b,c=0,d,m,n,x,y,sum;
    scanf("",&startYear,&startMonth,&startDay,&endYear,&endMonth,&endDay);
    a=endYear-startYear;
    sum=365*a;
    for(b=startYear;b<endYear;b++)
  {  if((b % 4 == 0 && b % 100 != 0) || (b % 400 == 0))
    c++;}
    sum=sum+c;
    if((startYear % 4 == 0 && startYear % 100 != 0) || (startYear % 400 == 0))
   {m=29; if(startMonth==1){x=startDay;}if(startMonth==2){x=31+startDay;}
    if(startMonth==3){x=31+m+startDay;}if(startMonth==4){x=31+m+31+startDay;}if(startMonth==5){x=31+m+31+30+startDay;}
    if(startMonth==6){x=31+m+31+30+31+startDay;}if(startMonth==7){x=31+m+31+30+31+30+startDay;}
    if(startMonth==8){x=31+m+31+30+31+30+31+startDay;}if(startMonth==9){x=31+m+31+30+31+62+30+startDay;}
    if(startMonth==10){x=31+m+31+30+31+62+30+30+startDay;}if(startMonth==11){x=31+m+31+30+31+62+61+30+startDay;}
    if(startMonth==12){x=31+m+31+30+31+62+61+30+30+startDay;}} 
    else
     {m=28; if(startMonth==1){x=startDay;}if(startMonth==2){x=31+startDay;}
    if(startMonth==3){x=31+m+startDay;}if(startMonth==4){x=31+m+31+startDay;}if(startMonth==5){x=31+m+31+30+startDay;}
    if(startMonth==6){x=31+m+31+30+31+startDay;}if(startMonth==7){x=31+m+31+30+31+30+startDay;}
    if(startMonth==8){x=31+m+31+30+31+30+31+startDay;}if(startMonth==9){x=31+m+31+30+31+62+30+startDay;}
    if(startMonth==10){x=31+m+31+30+31+62+30+30+startDay;}if(startMonth==11){x=31+m+31+30+31+62+61+30+startDay;}
    if(startMonth==12){x=31+m+31+30+31+62+61+30+30+startDay;}} 
    sum=sum-x;
    if((endYear % 4 == 0 && endYear % 100 != 0) || (endYear % 400 == 0))
   {m=29; if(endMonth==1){y=endDay;}if(endMonth==2){y=31+endDay;}
    if(endMonth==3){y=31+m+endDay;}if(endMonth==4){y=31+m+31+endDay;}if(endMonth==5){y=31+m+31+30+endDay;}
    if(endMonth==6){y=31+m+31+30+31+startDay;}if(endMonth==7){y=31+m+31+30+31+30+endDay;}
    if(endMonth==8){y=31+m+31+30+31+30+31+startDay;}if(endMonth==9){y=31+m+31+30+31+62+30+endDay;}
    if(endMonth==10){y=31+m+31+30+31+62+30+30+startDay;}if(endMonth==11){y=31+m+31+30+31+62+61+30+endDay;}
    if(endMonth==12){y=31+m+31+30+31+62+61+30+30+endDay;}} 
    else
       {m=28; if(endMonth==1){y=endDay;}if(endMonth==2){y=31+endDay;}
    if(endMonth==3){y=31+m+endDay;}if(endMonth==4){y=31+m+31+endDay;}if(endMonth==5){y=31+m+31+30+endDay;}
    if(endMonth==6){y=31+m+31+30+31+startDay;}if(endMonth==7){y=31+m+31+30+31+30+endDay;}
    if(endMonth==8){y=31+m+31+30+31+30+31+startDay;}if(endMonth==9){y=31+m+31+30+31+62+30+endDay;}
    if(endMonth==10){y=31+m+31+30+31+62+30+30+startDay;}if(endMonth==11){y=31+m+31+30+31+62+61+30+endDay;}
    if(endMonth==12){y=31+m+31+30+31+62+61+30+30+endDay;}} 
    sum=sum+y;
    printf("",sum);
    return 0;}

1000015
run(struct ill *head,int age,int turn,char *num)
{
     struct ill *pre,*p,*s;
     s=(struct ill *)malloc(sizeof(struct ill));
     pre=head;
     p=pre->next;
     strcpy(s->num,num);
     s->turn=turn;
     s->age=age;
     
     for(;p!=NULL;)
     {
                   pre=p;
                   p=p->next;
     }
     pre->next=s;
     s->next=p;
}


main()
{
    int i,j,k,age,turn,m,n;
    char *num;
    run(struct ill *head,int age,int turn,char *num);
    num=(char *)malloc(20*sizeof(char));
    struct ill *head,*p,*s,*pre;
    head=(struct ill *)malloc(sizeof(struct ill));
    head->next=NULL;
    scanf("",&n);
    for(i=0;i<n;i++)
    {
                    scanf("",num,&age);
                    turn=i;
                    run(head,age,turn,num);
    }
    k=0;
    for(p=head->next;p!=NULL;p=p->next)
    {
                                       if(p->age>=60)
                                       {
                                                   k++;
                                       }
    }
    
    p=head->next;
    m=100;
    if(k==0)
    {
            for(i=0;i<n;i++)
            {
                            p=head->next;
                            for(;p!=NULL;)
                            {
                                          if(p->turn==i)
                                          {
                                                        puts(p->num);
                                                        
                                                        break;
                                          }
                            }
            }
    }
    if(k==n)
    {
         for(i=0;i<n;i++)
         {
                         p=head->next;
                         m=0;j=100;
                         for(;p!=NULL;)
                         {
                                       if(p->age>m)
                                       {
                                                   m=p->age;
                                                   j=p->turn;
                                       }
                                       if(p->age==m)
                                       {
                                            if(p->turn<j)
                                            {
                                                         m=p->age;
                                                         j=p->turn;
                                            }
                                       }
                                       p=p->next;
                         }
                         pre=head;
                         p=head->next;
                         for(;p!=NULL;)
                         {
                                       if((p->age==m)&&(p->turn==j))
                                       {
                                                                    puts(p->num);
                                                                    
                                                                    pre->next=p->next;
                                                                    break;
                                       }
                                       else
                                       {
                                           pre=p;
                                           p=p->next;
                                       }
                         }
         }
    }
    else
    {
             for(i=0;i<k;i++)
             {
                         p=head->next;
                         m=0;j=100;
                         for(;p!=NULL;)
                         {
                                       if(p->age>m)
                                       {
                                                   m=p->age;
                                                   j=p->turn;
                                       }
                                       if(p->age==m)
                                       {
                                            if(p->turn<j)
                                            {
                                                         m=p->age;
                                                         j=p->turn;
                                            }
                                       }
                                       p=p->next;
                         }
                         pre=head;
                         p=head->next;
                         for(;p!=NULL;)
                         {
                                       if((p->age==m)&&(p->turn==j))
                                       {
                                                                    puts(p->num);
                                                                    
                                                                    pre->next=p->next;
                                                                    break;
                                       }
                                       else
                                       {
                                           pre=p;
                                           p=p->next;
                                       }
                         }
               }
               for(i=0;i<n-k;i++)
               {
                                 m=100;
                                 p=head->next;
                                 for(;p!=NULL;)
                                 {
                                               if(p->turn<m)
                                               {
                                                            m=p->turn;
                                               }
                                               p=p->next;
                                 }
                                 p=head->next;
                                 for(;p!=NULL;)
                                 {
                                               if(p->turn==m)
                                               {
                                                            puts(p->num);
                                                            
                                                            p->turn=100;
                                                            break;
                                               }
                                               else
                                               {
                                                   p=p->next;
                                               }
                                 }
               }
    }
    return 0;
}

1000016
main()
{
	int a,b,c,d,e,f,g,h,i,j,k,l;
	scanf("",&a,&b,&c);
	d=(a-1)/4;
	e=(a-1)/100;
	f=(a-1)/400;
	k=(a-1)/3200;
	l=(a-1)/88981;
	g=365*(a-1)+d-e+f-k+l;
	if(a%4==0)
	{
		if(a%100==0)
		{
			if(a%400==0)
			{
				switch(b)
				{
			case 1:
				h=c-1;
				break;
			case 2:
				h=c+30;
				break;
			case 3:
				h=c+59;
				break;
			case 4:
				h=c+90;
				break;
			case 5:
				h=c+120;
				break;
			case 6:
				h=c+151;
				break;
			case 7:
				h=c+181;
				break;
			case 8:
				h=c+212;
				break;
			case 9:
				h=c+243;
				break;
			case 10:
				h=c+273;
				break;
			case 11:
				h=c+304;
				break;
			case 12:
				h=c+334;
				break;
				}
			}
			else
			{
				switch(b)
				{
			case 1:
				h=c-1;
				break;
			case 2:
				h=c+30;
				break;
			case 3:
				h=c+58;
				break;
			case 4:
				h=c+89;
				break;
			case 5:
				h=c+119;
				break;
			case 6:
				h=c+150;
				break;
			case 7:
				h=c+180;
				break;
			case 8:
				h=c+211;
				break;
			case 9:
				h=c+242;
				break;
			case 10:
				h=c+272;
				break;
			case 11:
				h=c+303;
				break;
			case 12:
				h=c+333;
				break;
				}
			}
		}
		else
		{
            switch(b)
			{
			case 1:
				h=c-1;
				break;
			case 2:
				h=c+30;
				break;
			case 3:
				h=c+59;
				break;
			case 4:
				h=c+90;
				break;
			case 5:
				h=c+120;
				break;
			case 6:
				h=c+151;
				break;
			case 7:
				h=c+181;
				break;
			case 8:
				h=c+212;
				break;
			case 9:
				h=c+243;
				break;
			case 10:
				h=c+273;
				break;
			case 11:
				h=c+304;
				break;
			case 12:
				h=c+334;
				break;
			}
		}
	}
	else
	{
		switch(b)
		{
		    case 1:
				h=c-1;
				break;
			case 2:
				h=c+30;
				break;
			case 3:
				h=c+58;
				break;
			case 4:
				h=c+89;
				break;
			case 5:
				h=c+119;
				break;
			case 6:
				h=c+150;
				break;
			case 7:
				h=c+180;
				break;
			case 8:
				h=c+211;
				break;
			case 9:
				h=c+242;
				break;
			case 10:
				h=c+272;
				break;
			case 11:
				h=c+303;
				break;
			case 12:
				h=c+333;
				break;
		}
	}
	i=g+h;
	j=i%7;
	switch(j)
	{
	case 0:
		printf("");
		break;
	case 1:
		printf("");
		break;
	case 2:
		printf("");
		break;
	case 3:
		printf("");
		break;
	case 4:
		printf("");
		break;
	case 5:
		printf("");
		break;
	case 6:
		printf("");
	}
	return 0;
}

1000017
main()
{
	int y1,y2,m1,m2,d1,d2,i,j,k=0,n,a[12]={31,28,31,30,31,30,31,31,30,31,30,31},b[12]={31,29,31,30,31,30,31,31,30,31,30,31};
	scanf("",&y1,&m1,&d1);
	scanf("",&y2,&m2,&d2);
	if(y2==y1)
	{
		if(y1%400==0||y1%4==0&&y1%100!=0)
		{
			if(m1==m2)
			    printf("",d2-d1);
			else
			{
				if(m1<=2)
				{
					for(i=m1;i<m2;i++)
					{
						k+=a[i-1];
					}
					printf("",k+d2+1-d1);
				}
				else
				{
					for(i=m1;i<m2;i++)
					{
						k+=a[i-1];
					}
					printf("",k+d2+1-d1);
				}
			}    
		}
		else
		{
			if(m1==m2)
			    printf("",d2-d1);
			else
			{
				for(i=m1;i<m2;i++)
				{
					k+=b[i-1];
				}
				printf("",k+d2+1-d1);
			}
		}
	}
	else
	{
		if((y2-y1)==1)
		{
			if(y1%400==0||y1%4==0&&y1%100!=0)
			{
				if(m1<=2)
				{
					for(j=m1;j<=12;j++)
					{
						k+=a[j-1];
					}
					for(j=1;j<m2;j++)
					{
						k+=b[j-1];
					}
					printf("",k+d2+1-d1);
				}
			}
			if(y2%400==0||y2%4==0&&y2%100!=0)
			{
				if(m2<2)
				{
					for(i=m1;i<=12;i++)
					{
						k+=b[i-1];
					}
					printf("",k+d2+1-d1);
				}
				else
				{
					for(i=m1;i<=12;i++)
					{
						k+=b[i-1];
					}
					for(i=1;i<m2;i++)
					{
						k+=a[i-1];
					}
					printf("",k+d2+1-d1);
				}
			}
		}
		else
		{
			for(i=y1+1;i<y2;i++)
			{
				if(i%400==0||i%4==0&&i%100!=0)
				    k+=366;
				else
				    k+=365;
			}
			if(y1%400==0||y1%4==0&&y1%100!=0)
			{
				if(y2%400==0||y2%4==0&&y2%100!=0)
				{
					for(j=m1;j<=12;j++)
					{
						k+=a[j-1];
					}
					for(j=1;j<m2;j++)
					{
						k+=a[j-1];
					}
					printf("",k+d2-d1);
				}
				else
				{
					for(j=m1;j<=12;j++)
					{
						k+=b[j-1];
					}
					for(j=1;j<m2;j++)
					{
						k+=b[j-1];
					}
					printf("",k+d2-d1);			
				}
			}
			else
			{
				if(y2%400==0||y2%4==0&&y2%100!=0)
				{
					for(j=m1;j<=12;j++)
					{
						k+=b[j-1];
					}
					for(j=1;j<m2;j++)
					{
						k+=a[j-1];
					}
					printf("",k+d2-d1);
				}
				else
				{
					for(j=m1;j<=12;j++)
					{
						k+=b[j-1];
					}
					for(j=1;j<m2;j++)
					{
						k+=a[j-1];
					}
					printf("",k+d2-d1);
				}
			}
		}
	}
	return 0;
}

1000018
main()
{
    int A, B, C, D, E;
    int a, b, c, d, e;
    for (E = 1; E <= 5; E++)
    {
        if (E == 2 || E == 3)
        continue;
         for (B = 1; B <= 5; B++)
         {
              for (C = 1; C <= 5; C++)
              {
                   for (D = 1; D <= 5; D++)
                   {
                        for (A = 1; A <= 5; A++)
                        {
                            if (A * B * C * D * E!=120)
                              continue;
                            a = (E == 1);
                            b = (B == 2);
                            c = (A == 5);
                            d = (C != 1);
                            e = (D == 1);
                            if (a)
                            {
                                  if (A != 1 && A != 2)
                                  continue;
                            }
                            if(!a)
                            {
                                 if (A == 1 || A == 2)
                                 continue;
                            }
                            if (b)
                            {
                                  if (B != 1 && B != 2)
                                   continue;
                            }
                            if (!b)
                            {
                                 if ( B == 1 || B == 2)
                                 continue;
                            }
                             if (c)
                            {
                                  if (C != 1 && C != 2)
                                   continue;
                            }
                         if(!c)
                            {
                                 if (C == 1 || C == 2)
                                 continue;
                            }
                            if (d)
                            {
                                  if (D != 1 && D != 2)
                                   continue;
                            }
                           if(!d)
                            {
                                 if (D == 1 || D == 2)
                                 continue;
                            }
                            if (e)
                            {
                                  if (E != 1 && E != 2)
                                   continue;
                            }
                            if(!e)
                            {
                                 if (E == 1 || E == 2)
                                 continue;
                            }
                            cout << A << '' << B << '' << C << '' << D << '' << E;
                        }
                   }
              }
         }
    }

    return 0;    
}


1000019
main()
{
      int i,m,count;
      int a[SIZE],b[SIZE];
      char string[101];
      scanf("",string);
      for(i=0;i<=99;i++)
      a[i]=0;
      count=0;
      for(i=0;i<=99;i++)
      {
                        if(string[i]=='\0')
                        break;
                        a[i]=string[i]-48;
                        count++;
      }
      if(count>2)
      {
                  for(i=0;i<=count-2;i++)
                  b[i]=0;
                  for(i=0;i<=count-2;i++)
                  {
                                         b[i]=(a[i]*10+a[i+1])/13;
                                         a[i+1]=(a[i]*10+a[i+1])%13;
                  }
                  m=a[count-1];
                  if(b[0]==0)
                  {
                             for(i=1;i<=count-2;i++)
                             printf("",b[i]);
                             printf("");
                             printf("",m);
                  }
                  if(b[0]!=0)
                  {
                             for(i=0;i<=count-2;i++)
                             printf("",b[i]);
                             printf("");
                             printf("",m);
                  }
      }      
      if(count==1)
      {
                  printf("",0);
                  printf("");
                  printf("",a[0]); 
      }     
      if(count==2)
      {
                  if((a[0]*10+a[1])<13)
                  {
                                        printf("",0);
                                        printf("");
                                        printf("",a[0]*10+a[1]);
                  }
                  if((a[0]*10+a[1])>=13)
                  {
                                       printf("",(a[0]*10+a[1])/13);
                                       printf("");
                                       printf("",(a[0]*10+a[1])%13);
                  }
      }
    
}
      
      
      
      
      


1000020
main()
{
    int i,j,k,l,m,rank[6],word[6];
    for(i=1;i<=5;i++)
     for(j=1;j<=5;j++)
      for(k=1;k<=5;k++)
       for(l=1;l<=5;l++)
       {
        if(l==i)  continue;
        for(m=1;m<=5;m++)
        {
            if((m==2)||(m==3)||(m==l)||(m==i))
            continue;
            word[1]=(m==1);
            word[2]=(j==2);
            word[3]=(i==5);
            word[4]=(k!=1);
            word[5]=(l==1);
            if((i==1)&&(j==2)&&(word[1]==1)&&(word[2]==1)&&(word[3]==0)&&(word[4]==0)&&(word[5]==0))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
            if((i==1)&&(k==2)&&(word[1]==1)&&(word[2]==0)&&(word[3]==1)&&(word[4]==0)&&(word[5]==0))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
            if((i==1)&&(l==2)&&(word[1]==1)&&(word[2]==0)&&(word[3]==0)&&(word[4]==1)&&(word[5]==0))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
            if((j==1)&&(i==2)&&(word[1]==1)&&(word[2]==1)&&(word[3]==0)&&(word[4]==0)&&(word[5]==0))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
            if((j==1)&&(k==2)&&(word[1]==0)&&(word[2]==1)&&(word[3]==1)&&(word[4]==0)&&(word[5]==0))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
            if((j==1)&&(l==2)&&(word[1]==0)&&(word[2]==1)&&(word[3]==0)&&(word[4]==1)&&(word[5]==0))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
            if((k==1)&&(i==2)&&(word[1]==1)&&(word[2]==0)&&(word[3]==1)&&(word[4]==0)&&(word[5]==0))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
             if((k==1)&&(j==2)&&(word[1]==0)&&(word[2]==1)&&(word[3]==1)&&(word[4]==0)&&(word[5]==0))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
             if((k==1)&&(l==2)&&(word[1]==0)&&(word[2]==0)&&(word[3]==1)&&(word[4]==l)&&(word[5]==0))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
             if((l==1)&&(i==2)&&(word[1]==1)&&(word[2]==0)&&(word[3]==0)&&(word[4]==1)&&(word[5]==0))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
             if((l==1)&&(j==2)&&(word[1]==0)&&(word[2]==1)&&(word[3]==0)&&(word[4]==1)&&(word[5]==0))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
             if((l==1)&&(k==2)&&(word[1]==0)&&(word[2]==0)&&(word[3]==1)&&(word[4]==1)&&(word[5]==0))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
             if((m==1)&&(i==2)&&(word[1]==1)&&(word[2]==0)&&(word[3]==0)&&(word[4]==0)&&(word[5]==1))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
              if((m==1)&&(j==2)&&(word[1]==0)&&(word[2]==1)&&(word[3]==0)&&(word[4]==0)&&(word[5]==1))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
              if((m==1)&&(k==2)&&(word[1]==0)&&(word[2]==0)&&(word[3]==1)&&(word[4]==0)&&(word[5]==1))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
              if((m==1)&&(l==2)&&(word[1]==0)&&(word[2]==0)&&(word[3]==0)&&(word[4]==1)&&(word[5]==1))
            {
                  rank[1]=i;
                  rank[2]=j;
                  rank[3]=k;
                  rank[4]=l;
                  rank[5]=m;
                  break;
            }
        }
        }
    cout<<rank[1];
    for(i=2;i<=5;i++)
    cout<<""<<rank[i];
      return 0;
} 

1000021
main()
{
   char num[300];
   scanf("",&num);
   int len;
    len=strlen(num);
   int ii=1;
   int q=0;
   int w=0;
   int e=0;
   int r=0;
   int t=0;
   int y=0;
   int u=0;
   int i=0;
   int o=0;
   int p=0;
   int a=0;
   int s=0;
   int d=0;
   int f=0;
   int g=0;
   int h=0;
   int j=0;
   int k=0;
   int l=0;
   int z=0;
   int x=0;
   int c=0;
   int v=0;
   int b=0;
   int n=0;
   int m=0;
   int wo=0;
   for(ii=0;ii<len;ii++)
   {
	   if(num[ii]==''){a++;wo++;}
	   if(num[ii]==''){b++;wo++;}
       if(num[ii]==''){c++;wo++;}
if(num[ii]==''){d++;wo++;}
if(num[ii]==''){e++;wo++;}
if(num[ii]==''){f++;wo++;}
if(num[ii]==''){g++;wo++;}
if(num[ii]==''){h++;wo++;}
if(num[ii]==''){i++;wo++;}
if(num[ii]==''){j++;wo++;}
if(num[ii]==''){k++;wo++;}
if(num[ii]==''){l++;wo++;}
if(num[ii]==''){m++;wo++;}
if(num[ii]==''){n++;wo++;}
if(num[ii]==''){o++;wo++;}
if(num[ii]==''){p++;wo++;}
if(num[ii]==''){q++;wo++;}
if(num[ii]==''){r++;wo++;}
if(num[ii]==''){s++;wo++;}
if(num[ii]==''){t++;wo++;}
if(num[ii]==''){u++;wo++;}
if(num[ii]==''){v++;wo++;}
if(num[ii]==''){w++;wo++;}
if(num[ii]==''){x++;wo++;}
if(num[ii]==''){y++;wo++;}
if(num[ii]==''){z++;wo++;}
   }
   if(wo==0)
   { printf("");}
   else 
   {
	   if(a!=0){printf("",a);}
 if(b!=0){printf("",b);}
 if(c!=0){printf("",c);}
 if(d!=0){printf("",d);}
 if(e!=0){printf("",e);}
 if(f!=0){printf("",f);}
 if(g!=0){printf("",g);}
 if(h!=0){printf("",h);}
 if(i!=0){printf("",i);}
 if(j!=0){printf("",j);}
 if(k!=0){printf("",k);}
 if(l!=0){printf("",l);}
 if(m!=0){printf("",m);}
 if(n!=0){printf("",n);}
 if(o!=0){printf("",o);}
 if(p!=0){printf("",p);}
 if(q!=0){printf("",q);}
 if(r!=0){printf("",r);}
 if(s!=0){printf("",s);}
 if(t!=0){printf("",t);}
 if(u!=0){printf("",u);}
 if(v!=0){printf("",v);}
 if(w!=0){printf("",w);}
 if(x!=0){printf("",x);}
 if(y!=0){printf("",y);}
 if(z!=0){printf("",z);}
   }
return 0;
}



1000022
main ()
{
	int n,i,a[200],b[200],c[200];
	scanf("",&n);
	for(i=0;i<n;i++)
	{
		scanf("",&a[i],&b[i],&c[i]);
	}
	for(i=0;i<n;i++)
	{
	       if(a[i]%4!=0)
		   {
		         if(b[i]==1&&c[i]==10 || b[i]==10&&c[i]==1)
					 printf("");
				 if(b[i]==2&&c[i]==3 || b[i]==3&&c[i]==2)
                     printf("");
                 if(b[i]==2&&c[i]==11 || b[i]==11&&c[i]==2)
                     printf("");
                 if(b[i]==3&&c[i]==11 || b[i]==11&&c[i]==3)
					 printf("");
				 if(b[i]==4&&c[i]==7 || b[i]==7&&c[i]==4)
                     printf("");
                 if(b[i]==9&&c[i]==12 || b[i]==12&&c[i]==9)
                     printf("");
				 printf("");
		   }
		   if(a[i]%100==0&&a[i]%400!=0)
		   {
                 if(b[i]==1&&c[i]==10 || b[i]==10&&c[i]==1)
					 printf("");
				 if(b[i]==2&&c[i]==3 || b[i]==3&&c[i]==2)
                     printf("");
                 if(b[i]==2&&c[i]==11 || b[i]==11&&c[i]==2)
                     printf("");
                 if(b[i]==3&&c[i]==11 || b[i]==11&&c[i]==3)
					 printf("");
				 if(b[i]==4&&c[i]==7 || b[i]==7&&c[i]==4)
                     printf("");
                 if(b[i]==9&&c[i]==12 || b[i]==12&&c[i]==9)
                     printf("");
				 printf("");
		   }
		   if(a[i]%4==0&&a[i]%100!=0 || a[i]%400==0)
		   {
                 if(b[i]==1&&c[i]==4 || b[i]==4&&c[i]==1)
					 printf("");
				 if(b[i]==1&&c[i]==7 || b[i]==7&&c[i]==1)
                     printf("");
                 if(b[i]==2&&c[i]==8 || b[i]==8&&c[i]==2)
                     printf("");
                 if(b[i]==3&&c[i]==11 || b[i]==11&&c[i]==3)
					 printf("");
				 if(b[i]==4&&c[i]==7 || b[i]==7&&c[i]==4)
                     printf("");
                 if(b[i]==9&&c[i]==12 || b[i]==12&&c[i]==9)
                     printf("");
				 printf("");
		   }
	}
	return 0;
}


1000023
main()
{
   
    Linklist l1,l2,l3;
    l1=create(); 
    l2=create(); 
    l3=(PNode)malloc(sizeof(struct Node)); 
    if(l3==NULL)
    printf("");
    l3->rlink=l3->llink=NULL;
    l3=add(l1,l2,l3);
    print(l3);
    destroy2List_link(l3);
    destroy1List_link(l1);
    destroy1List_link(l2);
   
    return 0;
}


1000024
main()
{
    int n,j;    
    int i=1;
    scanf("",&n);
     
     int k;
    while (i<=n+1)
    { 
       
          char a[1000];
          gets(a);
          int l;
          l=strlen(a);
          if (l>1)
          {
                         if (a[0]<=''&&a[0]>='')
                             {
                                           k=l-1;       j=1;
                               while (j<l)
                               {
                                  if (a[j]>=''&&a[j]<='')
                                       
                                             k--;
                                       
                                   if (a[j]>=''&&a[j]<='')
                                      
                                              k--;
                                       
                                   if (a[j]=='')
                                               k--;
                                  
                                   j++;
                                }
                               if (k==0)
                                          printf("");
                               printf("");
                        }
                        if (a[0]=='')
                            { 
                                j=1;k=l-1;
                                   while (j<l)
                                     {
                                        if (a[j]>=''&&a[j]<='')
                                   
                                                  k--;
                                              
                                        if (a[j]>=('')&&a[j]<=(''))
                                             
                                                 k--;
                                              
                                         if (a[j]=='')
                                                 k--;
                                          
                                           j++;
                                       }
                                     if (k==0)
                                          printf("");
                                     printf("");
                              }
                         printf("");
          }
          if (l==1)
          {
                  if (a[0]>=''&&a[0]<='')
                  printf("");
                  if (a[0]=='')
                  printf("");
                  printf("");

          }
          i++;
    }
    getchar();getchar();getchar();getchar();getchar();getchar();getchar();
    getchar();getchar();getchar();getchar();getchar();getchar();getchar();
}

1000025
  

main()
{
    int i,j,n,y,q,m,t;
    n=1000;   
   
    struct stu *head,*head0,*p,*p1,*p2,*p0,*p3,*p4,*p5,*p6,*p7,*p8;
    char a[n],b[n];
     
    gets(a);
    i=strlen(a);
    gets(b);
    j=strlen(b);
      
    if(i>j){t=i;}       
    else {t=j;}      
   
    t=t+1;
    int e[t];
    
    p1=p2=(struct stu*)malloc(LEN); 
    p1->num=a[i-1]-'';
    head=p1;
    p3=p4=(struct stu*)malloc(LEN); 
    p3->num=b[j-1]-'';
    head0=p3; 
    i=i-1;j=j-1;         
    p=head;            
    p0=head0; 
    
    
    int  c1=0,c2;       
    c2=p->num+p0->num;
    p5=p6=(struct stu*)malloc(LEN);
     y=c2+c1/10;      
    p5->num=y%10;    
    c1=c2; 
    p7=p5; 
    
     while(i>0||j>0)     
    {    
        p2=p1;
        p1=(struct stu*)malloc(LEN);
        p1->num=(i>0)?a[--i]-'':0;      
        p2->next=p1;
        
        p4=p3;
        p3=(struct stu*)malloc(LEN);
        p3->num=(j>0)?b[--j]-'':0;        
        p4->next=p3;
         
        p0=p0->next; 
        p=p->next; 
      
        c2=p->num+p0->num; 
        
        p6=p5;
        p5=(struct stu*)malloc(LEN);
        y=c2+y/10;                   
        p5->num=y%10;    
        c1=c2;
        p6->next=p5;
    }
     p1->next=NULL;          
     p3->next=NULL;
     p6=p5;
     p5=(struct stu*)malloc(LEN);
     p5->num=y/10;        
     p6->next=p5;            
     p5->next=NULL; 
     
     
      
     p=head;
     p0=head0;
     p8=p7;
    for(m=t-1;p8!=NULL;m--)
    {
     e[m]=p8->num;
      p8=p8->next; 
    }
    m=0;
    if(p5->num==0&&t==2)   
    {m=1;}                 
    else                   
    {
     while(e[m]==0&&m<t)    
    {m++;}
    }
    for(y=m;y<t;y++)        
    {
      printf("",e[y]);              
    }        
getchar();
getchar();
getchar(); 
}


1000027

main()
{
      char a[100]={0},q[100]={0};
      int r;
      int b[100];
      int i,j,k,l=0;
      

                     for(k=0;k<100;k++)
                     {
                     b[k]=0;
                     a[k]=0;
                     q[k]=0;
                     }

                     scanf("",a); 
                     for(j=0;;j++)
                     if (a[j]=='\0') break;
                     l=j;
                     
                     b[0]=a[0]-'';
                     for(j=0;j<l;j++)
                     {
                                          for (k=0;;k++)
                                          {
                                          if ((13*k)<=b[j] && (13*k+13)>b[j])
                                              {
                                                             q[j]=k+'';
                                                             b[j]=b[j]-13*k;
                                                             goto label;
                                              }
                                          }
                                          label:
                                          b[j+1]=10*b[j]+a[j+1]-'';
                     }
                     r=b[j-1];
                     
                     if (q[0]=='' && q[1]=='\0') printf("");
                     if (q[0]=='' && q[1]=='' && q[2]=='\0') printf("");
                     if (q[0]=='' && q[1]=='' && q[2]!='\0') 
                     {
                                   j=2;
                                   while(q[j]!='\0') 
                                   {
                                                     printf("",q[j]);
                                                     j++;
                                   }
                                   printf("");
                     }
                     if (q[0]=='' && q[1]!='' && q[1]!='\0') 
                     {
                                   j=1;
                                   while(q[j]!='\0') 
                                   {
                                                     printf("",q[j]);
                                                     j++;
                                   }
                                   printf("");
                     }
                     if(q[0]!='')
                     {
                                   j=0;
                                   while(q[j]!='\0')
                                    {
                                                     printf("",q[j]);
                                                     j++;
                                   }
                                   printf("");
                     }
                     
                     printf("",r);                     
      
}

1000028
main()
{
    char writer[1000][30];
    char abc[26]={'','','','','','','','','','','','','','','','','','','','','','','','','',''};
    int m,n,mark[1000], num[26]={0}, sum=0, i, j;
    scanf("", &m);
    for(i=0;i<m;i++)
    {
                    scanf("", &mark[i]);
                    scanf("", writer[i]);
    }
    for(i=0;i<m;i++)
    {
                    for(j=0;j<strlen(writer[i]);j++)
                    {
                                     if(writer[i][j]=='')
                                     num[0]++;
                                     if(writer[i][j]=='')
                                     num[1]++;
                                     if(writer[i][j]=='')
                                     num[2]++;
                                     if(writer[i][j]=='')
                                     num[3]++;
                                     if(writer[i][j]=='')
                                     num[4]++;
                                     if(writer[i][j]=='')
                                     num[5]++;
                                     if(writer[i][j]=='')
                                     num[6]++;
                                     if(writer[i][j]=='')
                                     num[7]++;
                                     if(writer[i][j]=='')
                                     num[8]++;
                                     if(writer[i][j]=='')
                                     num[9]++;
                                     if(writer[i][j]=='')
                                     num[10]++;
                                     if(writer[i][j]=='')
                                     num[11]++;
                                     if(writer[i][j]=='')
                                     num[12]++;
                                     if(writer[i][j]=='')
                                     num[13]++;
                                     if(writer[i][j]=='')
                                     num[14]++;
                                     if(writer[i][j]=='')
                                     num[15]++;
                                     if(writer[i][j]=='')
                                     num[16]++;
                                     if(writer[i][j]=='')
                                     num[17]++;
                                     if(writer[i][j]=='')
                                     num[18]++;
                                     if(writer[i][j]=='')
                                     num[19]++;
                                     if(writer[i][j]=='')
                                     num[20]++;
                                     if(writer[i][j]=='')
                                     num[21]++;
                                     if(writer[i][j]=='')
                                     num[22]++;
                                     if(writer[i][j]=='')
                                     num[23]++;
                                     if(writer[i][j]=='')
                                     num[24]++;
                                     if(writer[i][j]=='')
                                     num[25]++;
                    }
    }
    for(i=0;i<26;i++)
    {
                     if(num[i]>=sum)
                     {
                                    sum=num[i];
                                    n=i;
                     }
                     
    }
    printf("",abc[n]);
    printf("", num[n]);
    for(i=0;i<m;i++)
    {
                    for(j=0;j<strlen(writer[i]);j++)
                    {
                                                    if(writer[i][j]==abc[n])
                                                    {
                                                                            printf("",mark[i]);
                                                                            break;
                                                    }
                    }
    }
    scanf("",&m);
    return 0;
}

1000029
  



main()
{
    int i,j,n,y,q,m,t;
    n=1000;   
   
    struct stu *head,*p,*p1,*p2;     
    struct stu *head0,*p0,*p3,*p4;   
    struct stu *p5,*p6,*p7,*p8;      
    char a[n],b[n];
     
    gets(a);
    i=strlen(a);
    gets(b);
    j=strlen(b);
      
    if(i>j){t=i;}       
    else {t=j;}      
   
    t=t+1;
    int e[t];
    
    p1=p2=(struct stu*)malloc(LEN); 
    p1->num=a[i-1]-'';
    head=p1;
    p3=p4=(struct stu*)malloc(LEN); 
    p3->num=b[j-1]-'';
    head0=p3; 
    i=i-1;j=j-1;         
    p=head;            
    p0=head0; 
    
    
    int  c1=0,c2;       
    c2=p->num+p0->num;
    p5=p6=(struct stu*)malloc(LEN);
     y=c2+c1/10;      
    p5->num=y%10;    
    c1=c2; 
    p7=p5; 
    
     while(i>0||j>0)     
    {    
        p2=p1;
        p1=(struct stu*)malloc(LEN);
        p1->num=(i>0)?a[--i]-'':0;      
        p2->next=p1;
        
        p4=p3;
        p3=(struct stu*)malloc(LEN);
        p3->num=(j>0)?b[--j]-'':0;        
        p4->next=p3;
         
        p0=p0->next; 
        p=p->next; 
      
        c2=p->num+p0->num; 
        
        p6=p5;
        p5=(struct stu*)malloc(LEN);
        y=c2+y/10;                   
        p5->num=y%10;    
        c1=c2;
        p6->next=p5;
    }
     p1->next=NULL;          
     p3->next=NULL;
     p6=p5;
     p5=(struct stu*)malloc(LEN);
     p5->num=y/10;        
     p6->next=p5;            
     p5->next=NULL; 
     
     
      
     p=head;
     p0=head0;
     p8=p7;
    for(m=t-1;p8!=NULL;m--)
    {
     e[m]=p8->num;
      p8=p8->next;
    }
   
    m=0;
    if(p5->num==0&&t==2)   
    {m=1;}                 
    else                   
    {
     while(e[m]==0&&m<t)    
    {m++;}
    }
    for(y=m;y<t;y++)        
    {
      printf("",e[y]);              
    } 
    struct stu *pt;
      while(p!=NULL)
    {
      pt=p;
      p=p->next; 
      free(pt);                    
    }
     while(p8!=NULL)
    {
      pt=p8;
      p8=p8->next; 
      free(pt);    
    }
     while(p0!=NULL)
    {
      pt=p0;
      p0=p0->next; 
      free(pt);     
    }      
getchar();
getchar();
getchar(); 
}


1000030
main()
{
    int z,totalhorse,tianwins[10000]={0},tianloses[10000]={0},p1,p2,p3,p4,qihorse[10000],tianhorse[10000],y,k1,m1,temp1,k2,m2,temp2,count=0,i,j;
    
    for(z=0;z<=10000;z++)
    {
        scanf("",&totalhorse);
        if(totalhorse==0)
        {
            break;
        }
        else
        {
            count++;
        }
        for(i=0;i<=totalhorse-1;i++)
        {
            scanf("",&tianhorse[i]); 
        }
        for(j=0;j<=totalhorse-1;j++)
        {
            scanf("",&qihorse[j]); 
        }
        for(k1=0;k1<=totalhorse-1;k1++)
        {
            for(m1=0;m1<=totalhorse-2-k1;m1++)
            {
                if(tianhorse[m1]<tianhorse[m1+1])    
                {
                    temp1=tianhorse[m1];
                    tianhorse[m1]=tianhorse[m1+1];
                    tianhorse[m1+1]=temp1;
                }
            }
        }
        for(k2=0;k2<=totalhorse-1;k2++)
        {
            for(m2=0;m2<=totalhorse-2-k2;m2++)
            {
                if(qihorse[m2]<qihorse[m2+1])    
                {
                    temp2=qihorse[m2];
                    qihorse[m2]=qihorse[m2+1];
                    qihorse[m2+1]=temp2;
                }
            }
        }
        p1=0;
        p2=0;
        p3=totalhorse-1;
        p4=totalhorse-1;
        for(y=1;y<=totalhorse;y++)
        {
                if(tianhorse[p2]>qihorse[p1])
                {
                    tianwins[z]++;
                    p2++;
                    p1++;
                }
                else
                {
                        if(tianhorse[p4]>qihorse[p3])
                        {
                            tianwins[z]++;
                            p4--;
                            p3--;

                        }
                        if(tianhorse[p4]==qihorse[p3]&&tianhorse[p4]<qihorse[p1])
                        {
                                tianloses[z]++;
                                p4--;
                                p1++;
                        }
                        if(tianhorse[p4]==qihorse[p3]&&tianhorse[p4]==qihorse[p1])
                        {
                            tianloses[z]++;
                            tianwins[z]++;
                            p4--;
                            p1++;
                        }
                        if(tianhorse[p4]<qihorse[p3])
                        {
                            tianloses[z]++;
                            p1++;
                            p4--;
                        }
                }
        }
    }
    int x;
    for(x=0;x<=count-1;x++)
    {
        printf("",(tianwins[x]-tianloses[x])*200);
    }

}


1000031
main()
{
	double n;
	cin >> n;
	if(n < 20)
	{
		cout << pow(2 , n);
	}
	if(n == 20) cout << "";
	if(n == 21) cout << "";
	if(n == 22) cout << "";
	if(n == 23) cout << "";
	if(n == 24) cout << "";
	if(n == 25) cout << "";
	if(n == 26) cout << "";
	if(n == 27) cout << "";
	if(n == 28) cout << "";
	if(n == 29) cout << "";
	if(n == 30) cout << "";
	if(n == 31) cout << "";
	if(n == 32) cout << "";
	if(n == 33) cout << "";
	if(n == 34) cout << "";
	if(n == 35) cout << "";
	if(n == 36) cout << "";
	if(n == 37) cout << ""; 
	if(n == 38) cout << ""; 
	if(n == 39) cout << ""; 
	if(n == 40) cout << ""; 
	if(n == 41) cout << ""; 
	if(n == 42) cout << ""; 
	if(n == 43) cout << ""; 
	if(n == 44) cout << ""; 
	if(n == 45) cout << ""; 
	if(n == 46) cout << ""; 
	if(n == 47) cout << ""; 
	if(n == 48) cout << ""; 
	if(n == 49) cout << ""; 
	if(n == 50) cout << ""; 
	if(n == 51) cout << "";
	if(n == 52) cout << "";
	if(n == 53) cout << "";
	if(n == 54) cout << "";
	if(n == 55) cout << "";
	if(n == 56) cout << "";
	if(n == 57) cout << "";
	if(n == 58) cout << "";
	if(n == 59) cout << "";
	if(n == 60) cout << "";
	if(n == 61) cout << "";
	if(n == 62) cout << "";
	if(n == 63) cout << "";
	if(n == 64) cout << "";
	if(n == 65) cout << "";
	if(n == 66) cout << "";
	if(n == 67) cout << "";
	if(n == 68) cout << "";
	if(n == 69) cout << "";
	if(n == 70) cout << "";
	if(n == 71) cout << "";
	if(n == 72) cout << "";
	if(n == 73) cout << "";
	if(n == 74) cout << "";
	if(n == 75) cout << "";
	if(n == 76) cout << "";
	if(n == 77) cout << "";
	if(n == 78) cout << "";
	if(n == 79) cout << "";
	if(n == 80) cout << "";
	if(n == 81) cout << "";
	if(n == 82) cout << "";
	if(n == 83) cout << "";
	if(n == 84) cout << "";
	if(n == 85) cout << "";
	if(n == 86) cout << "";
	if(n == 87) cout << "";
	if(n == 88) cout << "";
	if(n == 89) cout << "";
	if(n == 90) cout << "";
	if(n == 91) cout << "";
	if(n == 92) cout << "";
	if(n == 93) cout << "";
	if(n == 94) cout << "";
	if(n == 95) cout << "";
	if(n == 96) cout << "";
	if(n == 97) cout << "";
	if(n == 98) cout << "";
	if(n == 99) cout << "";
	if(n == 100)cout << "";
	return 0;
}

1000032
main()
{
    int n;
    cin>>n;
    for (int i=0 ; i<n ; i++)
    {
        int a[n][n];
        
        for (int j=0 ; j<n ; j++)
        {
            for (int k=0 ; k<n ; k++)
            {
                cin>>a[j][k];
            }
        }
        int a11=0;
        
        for (int p=n ; p>=2 ; p--)
        {
            
            for (int j=0 ; j<p ; j++)
            {
                int min=a[j][0];
                for (int k=1 ; k<p ; k++)
                {
                    if (a[j][k]<min)
                    {
                        min=a[j][k];
                    }
                }
                for (int k=0 ; k<p ; k++)
                    a[j][k]-=min;
            }
            
            for (int j=0 ; j<p ; j++)
            {
                int min=a[0][j];
                for (int k=1 ; k<p ; k++)
                {
                    if (a[k][j]<min)
                    {
                        min=a[k][j];
                    }
                }
                for (int k=0 ; k<p ; k++)
                    a[k][j]-=min;
            }
            a11+=a[1][1];
            
            for (int j=0 ; j<p ; j++)
            {
                for (int k=1 ; k<p-1 ; k++)
                {
                    a[j][k]=a[j][k+1];
                }
            }
            
            for (int j=0 ; j<p ; j++)
            {
                for (int k=1 ; k<p-1 ; k++)
                {
                    a[k][j]=a[k+1][j];
                }
            }
            
        }
        cout<<a11<<endl;
    }
    return 0;
}


1000033
main()
{
  int n;
  char a[500];
  scanf("",&n);
  gets(a);
  int chang=strlen(a);
  int i,j,k;
  int num[500];
  for (i=0;i<chang;i++)
  {num[i]=1;}
  if (n==2)
  {
  for (i=0;i<chang-n+1;i++)
  {
      for (j=i+1;j<chang-n+2;j++)
      {
          if (a[j]==a[i])
          {
                if (a[j+1]==a[i+1])
                    num[i]=num[i]+1;         
          }
      }  
  }
      int max=0;
      for (j=0;j<chang-n+1;j++)
      {
          if (num[j]>max)
            max=num[j];
            else 
            ;
      }
      
      if (max==1)
      printf("");
      else
      {
          printf("",max);
          for (i=0;i<chang-n+1;i++)
       {
          if (num[i]==max)
          printf("",a[i],a[i+1]);
       }
      }
  }
  if (n==3)
  {
       for (i=0;i<chang-n+1;i++)
  {
      for (j=i+1;j<chang-n+2;j++)
      {
          if (a[j]==a[i])
          {
                if (a[j+1]==a[i+1])
                {   
                    if(a[j+2]==a[i+2]) 
                    num[i]=num[i]+1; 
                }        
          }
      }  
  }
      int max=0;
      for (j=0;j<chang-n+1;j++)
      {
          if (num[j]>max)
            max=num[j];
            else 
            ;
      }
      
      if (max==1)
      printf("");
      else
      {
          printf("",max);
          for (i=0;i<chang-n+1;i++)
       {
          if (num[i]==max)
          printf("",a[i],a[i+1],a[i+2]);
       }
      }
  }
  if (n==4)
  {
       for (i=0;i<chang-n+1;i++)
  {
      for (j=i+1;j<chang-n+2;j++)
      {
          if (a[j]==a[i])
          {
                if (a[j+1]==a[i+1])
                {   
                    if(a[j+2]==a[i+2]) 
                    {  
                      if (a[j+3]==a[i+3])
                      num[i]=num[i]+1; 
                    }
                }        
          }
      }  
  }
      int max=0;
      for (j=0;j<chang-n+1;j++)
      {
          if (num[j]>max)
            max=num[j];
            else 
            ;
      }
      
      if (max==1)
      printf("");
      else
      {
          printf("",max);
          for (i=0;i<chang-n+1;i++)
       {
          if (num[i]==max)
          printf("",a[i],a[i+1],a[i+2],a[i+3]);
       }
      }
  }
  

  return 0;
}

1000034
main ()
{
    int n,max,i,j,k,l;
    char str[505];
    cin>>n>>str;int len=strlen(str);
    if (n==2)
    {
             int fre[27][27];
             for (i=1;i<=26;i++)
                 for (j=1;j<=26;j++)
                     fre[i][j]=0;
             for (i=0;i<=len-2;i++)
             {
                 fre[str[i]-96][str[i+1]-96]++;
             }
             max=0;
             for (i=1;i<=26;i++)
                 for (j=1;j<=26;j++)
                 {
                     if (fre[i][j]>=max)max=fre[i][j];
                 }
             if (max==1){cout<<"";max=-1;}
             else cout<<max<<endl;
             for (i=0;i<=len-2;i++)
             {
                 if (fre[str[i]-96][str[i+1]-96]==max){cout<<str[i]<<str[i+1]<<endl;fre[str[i]-96][str[i+1]-96]=0;}
             }
    }
    if (n==3)
    {
             int fre[27][27][27];
             for (i=1;i<=26;i++)
                 for (j=1;j<=26;j++)
                     for (k=1;k<=26;k++)
                         fre[i][j][k]=0;
             for (i=0;i<=len-3;i++)
             {
                 fre[str[i]-96][str[i+1]-96][str[i+2]-96]++;
                 
             }
             max=0;
             for (i=1;i<=26;i++)
                 for (j=1;j<=26;j++)
                     for (k=1;k<=26;k++)
                         if (fre[i][j][k]>=max)max=fre[i][j][k];
             if (max==1){cout<<"";max=-1;}
             else cout<<max<<endl;
             for (i=0;i<=len-2;i++)
             {
                 if (fre[str[i]-96][str[i+1]-96][str[i+2]-96]==max){cout<<str[i]<<str[i+1]<<str[i+2]<<endl;fre[str[i]-96][str[i+1]-96][str[i+2]-96]=0;}
             }
    }
    else 
    {

             for (i=1;i<=26;i++)
                 for (j=1;j<=26;j++)
                     for (k=1;k<=26;k++)
                         for (l=1;l<=26;l++)
                         freq[i][j][k][l]=0;
             for (i=0;i<=len-4;i++)
             {
                 freq[str[i]-96][str[i+1]-96][str[i+2]-96][str[i+3]-96]++;
                 
             }
             max=0;
             for (i=1;i<=26;i++)
                 for (j=1;j<=26;j++)
                     for (k=1;k<=26;k++)
                         for (l=1;l<=26;l++)
                         if (freq[i][j][k][l]>=max)max=freq[i][j][k][l];
             if (max==1){cout<<"";max=-1;}
             else cout<<max<<endl;
             for (i=0;i<=len-2;i++)
             {
                 if (freq[str[i]-96][str[i+1]-96][str[i+2]-96][str[i+3]-96]==max){cout<<str[i]<<str[i+1]<<str[i+2]<<str[i+3]<<endl;freq[str[i]-96][str[i+1]-96][str[i+2]-96][str[i+3]-96]=0;}
             }
    }
    
}


1000035
main()
{
    int j[6]={0,0,0,0,0,0},a[6],k1=0,k2,i,judge;
    for (a[1]=1;a[1]<=5;a[1]++)
    {
        for (a[2]=1;a[2]<=5;a[2]++)
        {
            for (a[3]=1;a[3]<=5;a[3]++)
            {
                for (a[4]=1;a[4]<=5;a[4]++)
                {
                    for (a[5]=1;a[5]<=5;a[5]++)
                    {
                        if (a[5]==2||a[5]==3)
                        continue;
                        if (a[1]==a[2]||a[1]==a[3]||a[1]==a[4]||a[1]==a[5]||a[2]==a[3]||a[2]==a[4]||a[2]==a[5]||a[3]==a[4]||a[3]==a[5]||a[4]==a[5])
                        continue;
                        if (a[5]==1)
                        j[1]=1;
                        if (a[2]==2)
                        j[2]=1;
                        if (a[1]==5)
                        j[3]=1;
                        if (a[3]!=1)
                        j[4]=1;
                        if (a[4]==1)
                        j[5]=1;
                        i=1;
                        for (int i=1;i<=5;i++)
                        {
                            if (a[i]==1)
                            {
                                if (j[i]!=1)
                                break;
                                else
                                {
                                    i++;
                                continue;
                                }
                            }
                                                        
                            if (a[i]==2)
                            {
                                if (j[i]!=1)
                                break;
                                else
                                {
                                    i++;
                                continue;
                                }
                            }
                            if (j[i]==1)
                            break;
                        }
                        if (i==6)
                        {
                        for (int q=1;q<=5;q++)
                        cout<<a[q]<<"";
                        }
                    }
                }
            }
        }
    }
    cout<<""<<endl;
                        
    

    return 0;
}


1000036
main()
{
      char a[100];
      int i,count=0,shang[100],yu=0,q=0,h=0,t[100];
      for(i=0;i<100;i++)
      {
                        a[i]='\0';
                        shang[i]=0;
                        t[i]=0;
      }
      scanf("",a);
      for(i=0;i<100;i++)
      {
                        if(a[i]=='\0')break;
                        count++;
      }
      for(i=0;i<count;i++)
      {
                             q=(a[i]-'')+yu*10;
                             shang[i]=q/13;
                             yu=q-13*shang[i];
      }
      if(shang[0]==0)
      {
                     for(i=0;i<100;i++)
                     {
                                    t[i]=shang[i];
                     }
                     for(i=0;i<99;i++)
                     {
                                    shang[i]=t[i+1];
                     }
                     if(shang[0]!=0)
                     {
                                    for(i=0;i<count-1;i++)
                                    {
                                           printf("",shang[i]);
                                    }
                     }
                     else
                     {                      
                                            for(i=0;i<100;i++)
                                            {
                                                              t[i]=0;
                                            } 
                                            for(i=0;i<100;i++)
                                            {
                                                              t[i]=shang[i];
                                             }
                                             for(i=0;i<99;i++)
                                             {
                                                              shang[i]=t[i+1];
                                             }
                                             if(shang[0]!=0)
                                             {
                                                            for(i=0;i<count-2;i++)
                                                            {
                                                                   printf("",shang[i]);
                                                            }
                                             }
                                             printf("");
                     } 
                                             
      }
      else
      {
          for(i=0;i<count-1;i++)
          {
                                printf("",shang[i]);
          }
      }
      printf("",yu);
      }

1000037
main()
{
 int z , q , s , l , min , smin , smax , max;
 for(z=1;z<=5;z++)
 {
  for(q=1;q<=5;q++)
  {
   for(s=1;s<=5;s++)
   { 
    for(l=1;l<=5;l++)
    {
     if((z!=q)&&(z!=s)&&(z!=l)&&(q!=s)&&(q!=l)&&(s!=l))
      {
       if(z+q==s+l)
       {
         if(z+l>s+q)
         {
          if (z+s<q)
           {
            min = z ;
            if (q<min)
            {
             min =q;
            }
            if (s<min)
            {
             min=s;
            }
            if (l<min)
            {
             min=l;
            }
            max = z;
            if (q>max)
            {
             max =q;
            }
            if (s>max)
            {
             max=s;
            }
            if (l>max)
            {
             max=l;
            }
           if((z-min)*(z-max)*(q-min)*(q-max)!=0)
           {
            if (z>q)
            {
            smax=z;
            smin=q;
            }
            else
            {
             smin=z;
             smax=q;
             }
            }
           if((z-min)*(z-max)*(s-min)*(s-max)!=0)
           {
            if (z>s)
            {
            smax=z;
            smin=s;
            }
            else
            {
             smin=z;
             smax=s;
             }
            }
           if((z-min)*(z-max)*(l-min)*(l-max)!=0)
           {
            if (z>l)
            {
            smax=z;
            smin=l;
            }
            else
            {
             smin=z;
             smax=l;
             }
            }
		   if((q-min)*(q-max)*(s-min)*(s-max)!=0)
           {
            if (s>q)
            {
            smax=s;
            smin=q;
            }
            else
            {
             smin=s;
             smax=q;
             }
            }
          if((l-min)*(l-max)*(q-min)*(q-max)!=0)
           {
            if (l>q)
            {
            smax=l;
            smin=q;
            }
            else
            {
             smin=l;
             smax=q;
             }
            }
           if((s-min)*(s-max)*(l-min)*(l-max)!=0)
           {
            if (s>l)
            {
            smax=s;
            smin=l;
            }
            else
            {
             smin=l;
             smax=l;
             }
            }
          if(z==max)
           { 
            cout<<""<<""<<z*10<<endl;
           }
           if(q==max)
           { 
            cout<<""<<""<<q*10<<endl;
           }
           if(s==max)
           { 
            cout<<""<<""<<s*10<<endl;
           }
           if(l==max)
           { 
            cout<<""<<""<<l*10<<endl;
           }
           if(z==smax)
           { 
            cout<<""<<""<<z*10<<endl;
           }
           if(q==smax)
           { 
            cout<<""<<""<<q*10<<endl;
           }
           if(s==smax)
           { 
            cout<<""<<""<<s*10<<endl;
           }
           if(l==smax)
           { 
            cout<<""<<""<<l*10<<endl;
           }
           if(z==smin)
           { 
            cout<<""<<""<<z*10<<endl;
           }
           if(q==smin)
           { 
            cout<<""<<""<<q*10<<endl;
           }
           if(s==smin)
           { 
            cout<<""<<""<<s*10<<endl;
           }
           if(l==smin)
           { 
            cout<<""<<""<<l*10<<endl;
           }
           if(z==min)
           { 
            cout<<""<<""<<z*10<<endl;
           }
           if(q==min)
           { 
            cout<<""<<""<<q*10<<endl;
           }
           if(s==min)
           { 
            cout<<""<<""<<s*10<<endl;
           }
           if(l==min)
           { 
            cout<<""<<""<<l*10<<endl;
           }
}
}
}
}
}
}
}
}
return 0;
}
         

1000038
main()
{
    char a[81];
    int n,i,j;
    scanf("",&n);
    gets(a);

    for(i=0;i<=n-2;i++)
    {
        gets(a);
        if(a[0]<=''&&a[0]>='')
        {
            for(j=0;a[j]!='\0';j++)
            {
                if(a[j]>=''&&a[j]<=''||a[j]>=''&&a[j]<=''||a[j]>=''&&a[j]<=''||a[j]=='')
                {
                    continue;
                }
                else
                {
                    printf("");
                    break;
                }
            }
            if(a[j]=='\0')
            {
                printf("");
            }
       }
       if(a[0]<=''&&a[0]>='')
       {
           for(j=0;a[j]!='\0';j++)
            {
                if(a[j]>=''&&a[j]<=''||a[j]>=''&&a[j]<=''||a[j]>=''&&a[j]<=''||a[j]=='')
                {
                    continue;
                }
                else
                {
                    printf("");
                    break;
                }
            }
           if(a[j]=='\0')
           {
               printf("");
           }
       }
       if(a[0]=='')
       {
           for(j=0;a[j]!='\0';j++)
            {
                if(a[j]>=''&&a[j]<=''||a[j]>=''&&a[j]<=''||a[j]>=''&&a[j]<=''||a[j]=='')
                {
                    continue;
                }
                else
                {
                    printf("");
                    break;
                }
            }
           if(a[j]=='\0')
           {
               printf("");
           }
       }
       else
       {
           printf("");
       }
    }
    gets(a);
    if(a[0]>=''&&a[0]<='')
    {
        for(j=0;a[j]!='\0';j++)
            {
                if(a[j]>=''&&a[j]<=''||a[j]>=''&&a[j]<=''||a[j]>=''&&a[j]<=''||a[j]=='')
                {
                    continue;
                }
                else
                {
                    printf("");
                    break;
                }
            }

        if(a[j]=='\0')
        {
            printf("");
        }
    }
    if(a[0]<=''&&a[0]>='')
    {
        for(j=0;a[j]!='\0';j++)
            {
                if(a[j]>=''&&a[j]<=''||a[j]>=''&&a[j]<=''||a[j]>=''&&a[j]<=''||a[j]=='')
                {
                    continue;
                }
                else
                {
                    printf("");
                    break;
                }
            }
        if(a[j]=='\0')
        {
            printf("");
        }
    }
    if(a[0]=='')
    {
        for(j=0;a[j]!='\0';j++)
            {
                if(a[j]>=''&&a[j]<=''||a[j]>=''&&a[j]<=''||a[j]>=''&&a[j]<=''||a[j]=='')
                {
                    continue;
                }
                else
                {
                    printf("");
                    break;
                }
            }
        if(a[j]=='\0')
        {
            printf("");
        }
    }
    else
    {
           printf("");
    }
}



1000039
main()
{
    int z,q,s,l,i,j,k,h,a,b,c ;
	for (i=1;i<=5;i++)
	{
		z=i;
		for (j=1;j<=5;j++)
		{
			q=j;
			for (k=1;k<=5;k++)
			{
				s=k;
				for (h=1;h<=5;h++)
				{
					l=h;
					if (z-q!=0&&z-s!=0&&z-l!=0&&q-s!=0&&q-l!=0&&s-l!=0)
					{
						a=((z+q)==(s+l))+((z+l)>(s+q))+((s+z)<q) ;
						if (a==3)
						{
							q=q*10; z=z*10; l=l*10; s=s*10;
						    if (q>l&&l>s&&s>z) cout << "" << "" << q << endl << "" << "" << l << endl << "" << "" << s <<endl << "" << "" << z <<endl ;
                            if (q>l&&l>z&&z>s) cout << "" << "" << q << endl << "" << "" << l << endl << "" << "" << z <<endl << "" << "" << s <<endl ;
							if (q>s&&s>l&&l>z) cout << "" << "" << q << endl << "" << "" << s << endl << "" << "" << l <<endl << "" << "" << z <<endl ;
							if (q>s&&s>z&&z>l) cout << "" << "" << q << endl << "" << "" << s << endl << "" << "" << z <<endl << "" << "" << l <<endl ;
							if (q>z&&z>s&&s>l) cout << "" << "" << q << endl << "" << "" << z << endl << "" << "" << s <<endl << "" << "" << l <<endl ;
							if (q>z&&z>l&&l>s) cout << "" << "" << q << endl << "" << "" << z << endl << "" << "" << l <<endl << "" << "" << s <<endl ;
							
						    if (l>q&&q>s&&s>z) cout << "" << "" << l << endl << "" << "" << q << endl << "" << "" << s <<endl << "" << "" << z <<endl ;
                            if (l>q&&q>z&&z>s) cout << "" << "" << l << endl << "" << "" << q << endl << "" << "" << z <<endl << "" << "" << s <<endl ;
							if (l>s&&s>q&&q>z) cout << "" << "" << l << endl << "" << "" << s << endl << "" << "" << q <<endl << "" << "" << z <<endl ;
							if (l>s&&s>z&&z>q) cout << "" << "" << l << endl << "" << "" << s << endl << "" << "" << z <<endl << "" << "" << q <<endl ;
							if (l>z&&z>s&&s>q) cout << "" << "" << l << endl << "" << "" << z << endl << "" << "" << s <<endl << "" << "" << q <<endl ;
							if (l>z&&z>q&&q>s) cout << "" << "" << l << endl << "" << "" << z << endl << "" << "" << q <<endl << "" << "" << s <<endl ;	
						}
					}
				}
			}
		}
	}


	return 0 ;
}


1000040
main()
{
      int n,m,i,k;
      int s=0;
      int r=0;
      int q=0;
      scanf("",&n);
      m=2*n*(n-1);
      int *p=(int *)malloc(m*sizeof(int));
       int *a=(int *)malloc(n*sizeof(int));
       for(i=0;;i=i+2)
       {
                      scanf("",&p[i],&p[i+1]);
                      if(p[i]==0&&p[i+1]==0)
                      break;
                      else
                      s++;
                      }
                      for(i=0;i<n;i++)
                      a[i]=0;
                      for(i=1;i<=(2*s-1);i=i+2)
                      a[p[i]]++;
                      for(i=0;i<n;i++)
                      {
                                     if(a[i]==(n-1))
                                     {
                                                    r=1;
                                                    for(k=0;k<=(2*s-2);k=k+2)
                                                    {
                                                                             if(p[k]==i)
                                                                             q=1;
                                                                             }
                                                                             if(q==0)
                                                                             printf("",i);
                                                                             printf("");
                                                                             break;
                                                                             }
                                                                             }
                                                                             if(r==0)
                                                                             printf("");
                                                                             
                                                                             }


1000041
main(int argc, char* argv[])
{  char zm[301]={0},ss[27]="";
   scanf("",zm);
   
   int ii,a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;
  
   for (ii=0;ii<300;ii++){
	   
	   if (zm[ii]==ss[0])   a+=1;
	   if (zm[ii]==ss[1])   b+=1;
	   if (zm[ii]==ss[2])   c+=1;
	   if (zm[ii]==ss[3])   d+=1;
	   if (zm[ii]==ss[4])   e+=1;
	   if (zm[ii]==ss[5])   f+=1;
	   if (zm[ii]==ss[6])   g+=1;
	   if (zm[ii]==ss[7])   h+=1;
	   if (zm[ii]==ss[8])   i+=1;
	   if (zm[ii]==ss[9])   j+=1;
	   if (zm[ii]==ss[10])   k+=1;
	   if (zm[ii]==ss[11])   l+=1;
	   if (zm[ii]==ss[12])   m+=1;
	   if (zm[ii]==ss[13])   n+=1;
	   if (zm[ii]==ss[14])   o+=1;
	   if (zm[ii]==ss[15])   p+=1;
	   if (zm[ii]==ss[16])   q+=1;
	   if (zm[ii]==ss[17])   r+=1;
	   if (zm[ii]==ss[18])   s+=1;
	   if (zm[ii]==ss[19])   t+=1;
	   if (zm[ii]==ss[20])   u+=1;
	   if (zm[ii]==ss[21])   v+=1;
	   if (zm[ii]==ss[22])   w+=1;
	   if (zm[ii]==ss[23])   x+=1;
	   if (zm[ii]==ss[24])   y+=1;
	   if (zm[ii]==ss[25])   z+=1;
   }
     if(a!=0)  printf("","",a);
	 if(b!=0)  printf("","",b);
	 if(c!=0)  printf("","",c);
	 if(d!=0)  printf("","",d);
	 if(e!=0)  printf("","",e);
	 if(f!=0)  printf("","",f);
	 if(g!=0)  printf("","",g);
	 if(h!=0)  printf("","",h);
	 if(i!=0)  printf("","",i);
	 if(j!=0)  printf("","",j);
	 if(k!=0)  printf("","",k);
	 if(l!=0)  printf("","",l);
	 if(m!=0)  printf("","",m);
	 if(n!=0)  printf("","",n);
	 if(o!=0)  printf("","",o);
	 if(p!=0)  printf("","",p);
	 if(q!=0)  printf("","",q);
	 if(r!=0)  printf("","",r);
	 if(s!=0)  printf("","",s);
	 if(t!=0)  printf("","",t);
	 if(u!=0)  printf("","",u);
	 if(v!=0)  printf("","",v);
	 if(w!=0)  printf("","",w);
	 if(x!=0)  printf("","",x);
	 if(y!=0)  printf("","",y);
	 if(z!=0)  printf("","",z);
	 if(a==0&&b==0&&c==0&&d==0&&e==0&&f==0&&g==0&&h==0&&i==0&&j==0&&k==0&&l==0&&m==0&&n==0&&o==0&&p==0&&q==0&&r==0&&s==0&&t==0&&u==0&&v==0&&w==0&&x==0&&y==0&&z==0)
		 printf("");
	return 0;
}

1000042
main()
{
    int a,b,c,d,e,f,i;
	scanf("",&a,&b,&c);
    i = a%4;
	if(i==0){
		d = a/4-a/100+a/400;
		if(b==1){
			e = 365*(a-1)+d-1+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==2){
			e = 365*(a-1)+d+30+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==3){
			e = 365*(a-1)+d+59+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==4){
			e = 365*(a-1)+d+90+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==5){
			e = 365*(a-1)+d+120+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==6){
			e = 365*(a-1)+d+151+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==7){
			e = 365*(a-1)+d+181+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==8){
			e = 365*(a-1)+d+212+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==9){
			e = 365*(a-1)+d+243+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==10){
			e = 365*(a-1)+d+273+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==11){
			e = 365*(a-1)+d+304+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==12){
			e = 365*(a-1)+d+334+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}}
	if(i!=0){
		a = a%400;
        d = a/4+a/400-a/100;
		if(b==1){
			e = 365*(a-1)+d+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==2){
			e = 365*(a-1)+d+31+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==3){
			e = 365*(a-1)+d+59+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==4){
			e = 365*(a-1)+d+90+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==5){
			e = 365*(a-1)+d+120+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==6){
			e = 365*(a-1)+d+151+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==7){
			e = 365*(a-1)+d+181+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==8){
			e = 365*(a-1)+d+212+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==9){
			e = 365*(a-1)+d+243+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==10){
			e = 365*(a-1)+d+273+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==11){
			e = 365*(a-1)+d+304+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}
		if(b==12){
			e = 365*(a-1)+d+334+c;
		    f = e%7;
			if(f==0)
				printf("");
			if(f==1)
				printf("");
			if(f==2)
				printf("");
			if(f==3)
				printf("");
			if(f==4)
				printf("");
			if(f==5)
				printf("");
			if(f==6)
				printf("");}}
	return 0;
}

1000043
main ()
{
	int a,b,c,d,e;
	int A,B,C,D,E;
	for(a=1;a<=5;a++)
	{
		for(b=1;b<=5;b++)
		{
			if(b==a)
			{
				continue;
			}
			else
			{
				for(c=1;c<=5;c++)
				{
					if(c==b||c==a)
					{
						continue;
					}
					else
					{
						for(d=1;d<=5;d++)
						{
							if(d==a||d==b||d==c)
							{
								continue;
							}
							else
							{
								e=15-a-b-c-d;
								A=(e==1);
					  B=(b==2);
					  C=(a==5);
					  D=(c!=1);
					  E=(d==1);




					  if((a*b==2)&&e!=2&&e!=3&&A==1&&B==1&&C==0&&D==0&&E==0)
					  {
						  cout << a << "" << b <<""<< c <<""<< d<<""<< e <<  endl;
					  }
					  if(a*c==2&&e!=2&&e!=3&&A==1&&C==1&&B==0&&D==0&&E==0)
					  {
						  cout << a << "" << b <<""<< c <<""<< d<<""<< e << endl;
					  }
					  if((a*d)==2&&e!=2&&e!=3&&A==1&&B==0&&C==0&&D==1&&E==0)
					  {
						  cout << a << "" << b <<""<< c <<""<< d<<""<< e <<  endl;
					  }
					  if((a*e)==2&&e!=2&&e!=3&&A==1&&B==0&&C==0&&D==1&&E==1)
					  {
						  cout << a << "" << b <<""<< c <<""<< d<<""<< e <<  endl;
					  }
					  if(b*c==2&&e!=2&&e!=3&&A==0&&B==1&&C==1&&D==0&&E==0)
					  {
						  cout << a << "" << b <<""<< c <<""<< d<<""<< e <<endl;
					  }
					  if(b*d==2&&e!=2&&e!=3&&A==0&&B==1&&C==0&&D==1&&E==0)
					  {
						  cout << a << "" << b <<""<< c <<""<< d<<""<< e <<  endl;
					  }
					  if(b*e==2&&e!=2&&e!=3&&A==0&&B==1&&C==0&&D==0&&E==1)
					  {
						  cout << a << "" << b <<""<< c <<""<< d<<""<< e <<  endl;
					  }
					  if(c*d==2&&e!=2&&e!=3&&A==0&&B==0&&C==1&&D==1&&E==0)
					  {
						  cout << a << "" << b <<""<< c <<""<< d<<""<< e <<  endl;
					  }
					  if(c*e==2&&e!=2&&e!=3&&A==0&&B==0&&C==1&&D==0&&E==1)
					  {
						  cout << a << "" << b <<""<< c <<""<< d<<""<< e <<  endl;
					  }
					  if(e*d==2&&e!=2&&e!=3&&A==0&&B==0&&C==0&&D==1&&E==1)
					  {
						  cout << a << "" << b <<""<< c <<""<< d<<""<< e <<  endl;
					  }









							}
						}
					}
				}
			}
		}
	}
	
	return 0;
}

1000044
main()
{
	int startYear,startMonth,startDay,endYear,endMonth,endDay,y,a,n,m,b,b2,x;
	scanf("",&startYear,&startMonth,&startDay,&endYear,&endMonth,&endDay);
    y=startYear;
	a=0;
	while(y<=endYear)
		{
		int f;
		   if((y%4==0&&y%100!=0)||(y%100==0&&y%400==0))
			   f=1;
			else f=0;
		   if(f==1)
			   a=a+1;
		 y=y+1;
	}
	if ((startYear%4==0&&startYear%100!=0)||(startYear%100==0&&startYear%400==0))
	a=a-1;
	if ((endYear%4==0&&endYear%100!=0)||(endYear%100==0&&endYear%400==0))
	a=a-1;
	n=a*366;
	if ((startYear%4==0&&startYear%100!=0)||(startYear%100==0&&startYear%400==0))
    {
	 if(startMonth==1)
		   b=0;
	   if(startMonth==2)
		   b=31;
	   if(startMonth==3)
		   b=60;
	   if(startMonth==4)
		   b=91;
	   if(startMonth==5)
	       b=121;
	   if(startMonth==6)
		   b=152;
	   if(startMonth==7)
		   b=182;
	   if(startMonth==8)
		   b=213;
	   if(startMonth==9)
		   b=244;
	   if(startMonth==10)
	       b=274;
	   if(startMonth==11)
		   b=305;
	   else 
		   b=335;  
	   }
	else
	{
	if(startMonth==1)
		   b=0;
	   if(startMonth==2)
		   b=31;
	   if(startMonth==3)
		   b=59;
	   if(startMonth==4)
		   b=90;
	   if(startMonth==5)
	       b=120;
	   if(startMonth==6)
		   b=151;
	   if(startMonth==7)
		   b=181;
	   if(startMonth==8)
		   b=212;
	   if(startMonth==9)
		   b=243;
	   if(startMonth==10)
	       b=273;
	   if(startMonth==11)
		   b=304;
	   else 
		   b=334;
	   b=b+1;
	}


	if ((endYear%4==0&&endYear%100!=0)||(endYear%100==0&&endYear%400==0))
	{
	   if(endMonth==1)
		   b2=0;
	   if(endMonth==2)
		   b2=31;
	   if(endMonth==3)
		   b2=60;
	   if(endMonth==4)
		   b2=91;
	   if(endMonth==5)
	       b2=121;
	   if(endMonth==6)
		   b2=152;
	   if(endMonth==7)
		   b2=182;
	   if(endMonth==8)
		   b2=213;
	   if(endMonth==9)
		   b2=244;
	   if(endMonth==10)
	       b2=274;
	   if(endMonth==11)
		   b2=305;
	   else 
		   b2=335;
	   }
	else
	{
	if(endMonth==1)
		   b2=0;
	   if(endMonth==2)
		   b2=31;
	   if(endMonth==3)
		   b2=59;
	   if(endMonth==4)
		   b2=90;
	   if(endMonth==5)
	       b2=120;
	   if(endMonth==6)
		   b2=151;
	   if(endMonth==7)
		   b2=181;
	   if(endMonth==8)
		   b2=212;
	   if(endMonth==9)
		   b2=243;
	   if(endMonth==10)
	       b2=273;
	   if(endMonth==11)
		   b2=304;
	   else 
		   b2=334;
	}

	x=366-b-startDay+b2+endDay+366*a+(endYear-startYear-1-a)*365;
    printf("",x);
}


1000045
main()
{
      int a[1001],b[1001],c[1001],j,k,l,i,n,m,win;
      scanf("",&n);
      while(n>0)
      {
           for(i=1;i<=n;i++)
              {
                  scanf("",&c[i]);
                  j=i;
                  while(j>1&&c[j]>c[j/2])
                     {
                         k=c[j];
                         c[j]=c[j/2];
                         c[j/2]=k;
                         j=j/2;
                         }
                  }     
           m=n;       
           for(i=1;i<=n;i++)
              {
                  a[i]=c[1];
                  c[1]=c[m];
                  m--;
                  j=1;
                  while((c[j]<c[j*2+1]||c[j]<c[j*2])&&j<=m/2)
                      {
                          k=c[j*2]>c[j*2+1]?j*2:j*2+1;
                          l=c[j];
                          c[j]=c[k];
                          c[k]=l;
                          j=k;
                          }                                  
                  }   
           for(i=1;i<=n;i++)
              {
                  scanf("",&c[i]);
                  j=i;
                  while(j>1&&c[j]>c[j/2])
                     {
                         k=c[j];
                         c[j]=c[j/2];
                         c[j/2]=k;
                         j=j/2;
                         }
                  }     
           m=n;       
           for(i=1;i<=n;i++)
              {
                  b[i]=c[1];
                  c[1]=c[m];
                  m--;
                  j=1;
                  while((c[j]<c[j*2+1]||c[j]<c[j*2])&&j<=m/2)
                      {
                          k=c[j*2]>c[j*2+1]?j*2:j*2+1;
                          l=c[j];
                          c[j]=c[k];
                          c[k]=l;
                          j=k;
                          }                                  
                  } 
           i=1;
           j=n;
           k=1;
           l=n;
           win=0;
           while(i<=j)
              {
                 while(a[i]>b[k]&&i<=j)
                 {
                     i++;
                     k++;
                     win++;
                     }
                 while(a[j]>b[l]&&i<=j)
                 {
                     j--;
                     l--;
                     win++;
                     }
                 if(i<=j)
                 {
                     if(a[j]<b[k]) win--;
                     j--;
                     k++;
                     }
                 }
           printf("",win*200);
           scanf("",&n);
           }
      }                                                                                                                     


1000046
if(a[head]<b[i])
              {
                  taila--;
                  sum-=200;
              }
              if(a[head]==b[i])
              {
                  for(j=taila,m=tailb;j>=head;j--,m--)
                  {
                      if(a[j]>b[m])
                      {
                          sum+=200;
                          taila--;
                          tailb--;
                      }
                      else
                      {
                          if(a[j]<b[i]) sum-=200;
                          taila=--j;
                          tailb=m;
                          break;               
                      }
                  }
              }
              if(head>taila) break;
          }
          printf("",sum);
          scanf("",&n);
      }
      getchar();
      getchar();
}

1000047
main()
{
    int a, b, c, d, e, i, j;
    
    for(e = 1; e < 6; e++)
    {
          if(e != 2 && e != 3)
          {
               for(d = 1; d < 6; d++)
               {
                     if(d != e)
                     {
                          for(c = 1; c < 6; c++)
                          {
                                if(c != d && c != e)
                                {
                                     for(b = 1; b < 6; b++)
                                     {
                                           if(b != e && b != d && b != c)
                                           {
                                                for(a = 1; a < 6; a++)
                                                {
                                                      if(a != b && a != c && a != d && a != e)
                                                      {
                                                           if((e == 1) + (b == 2) + (a== 5) + (c != 1) + (d == 1) == 2)
                                                           {
                                                                 if((e == 1) + (b == 2) == 2 && (a == 1 && b == 2 || a == 2 && b == 1)) cout << a << "" << b << "" << c << "" << d << "" << e << endl;
                                                                 if((e == 1) + (a == 5) == 2 && (a == 1 && c == 2 || a == 2 && c == 1)) cout << a << "" << b << "" << c << "" << d << "" << e << endl;
                                                                 if((e == 1) + (c != 1) == 2 && (a == 1 && d == 2 || a == 2 && d == 1)) cout << a << "" << b << "" << c << "" << d << "" << e << endl;
                                                                 if((e == 1) + (d == 1) == 2 && (a == 1 && e == 2 || a == 2 && e == 1)) cout << a << "" << b << "" << c << "" << d << "" << e << endl;
                                                                 if((b == 2) + (a == 5) == 2 && (b == 1 && c == 2 || b == 2 && c == 1)) cout << a << "" << b << "" << c << "" << d << "" << e << endl;
                                                                 if((b == 2) + (c != 1) == 2 && (b == 1 && d == 2 || b == 2 && d == 1)) cout << a << "" << b << "" << c << "" << d << "" << e << endl;
                                                                 if((b == 2) + (d == 1) == 2 && (b == 1 && e == 2 || b == 2 && e == 1)) cout << a << "" << b << "" << c << "" << d << "" << e << endl;
                                                                 if((a == 5) + (c != 1) == 2 && (c == 1 && d == 2 || c == 2 && d == 1)) cout << a << "" << b << "" << c << "" << d << "" << e << endl;
                                                                 if((a == 5) + (d == 1) == 2 && (c == 1 && e == 2 || c == 2 && e == 1)) cout << a << "" << b << "" << c << "" << d << "" << e << endl;
                                                                 if((c != 1) + (d == 1) == 2 && (d == 1 && e == 2 || d == 2 && e == 1)) cout << a << "" << b << "" << c << "" << d << "" << e << endl;
                                                           }
                                                      }
                                                }
                                           }
                                     }
                                }
                          }
                     }
               }
          }
    }

    return 0;
}


1000048
main()
{
    int n=0,i=0,j=0,time=0,sum=0;
    cin>>n;
    int s=n; 
    int a[100][100],b[100],c[100];
    for(time=0;time<s;time++)                  
    {                       
       for(i=0;i<100;i++)
       {
           b[i]=1000000;        
           c[i]=1000000;      
       }                            
       for(i=0;i<s;i++)
       {
           for(j=0;j<s;j++)
           {
               cin>>a[i][j];            
           }            
       }              
       sum=0;            
       while(true)
       {         
       for(i=0;i<100;i++)
       {
           b[i]=1000000;        
           c[i]=1000000;      
       }                                         
       for(i=0;i<n;i++)
       {
           for(j=0;j<n;j++)
           {
                if(a[i][j]<b[i])
                {
                     b[i]=a[i][j];           
                }           
           }            
       }                          
       for(i=0;i<n;i++)
       {
            for(j=0;j<n;j++)
            {
                   a[i][j]=a[i][j]-b[i];         
            }           
       }                          
       for(j=0;j<n;j++)
       {
            for(i=0;i<n;i++)
            {
                if(a[i][j]<c[j])
                {
                     c[j]=a[i][j];           
                }            
            }           
       }                          
       for(j=0;j<n;j++)
       {
            for(i=0;i<n;i++)
            {
                   a[i][j]=a[i][j]-c[j];         
            }           
       }                          
       sum=sum+a[1][1];           
       for(i=1;i<n-1;i++)
       {
           for(j=0;j<n;j++)
           {
                a[i][j]=a[i+1][j];           
           }              
       }                         
       for(j=1;j<n-1;j++)
       {
           for(i=0;i<n-1;i++)
           {
                a[i][j]=a[i][j+1];             
           }              
       }                        
       n=n-1;
       if(n==1)
       {
            n=s;   
            break;   
       }                        
       }
       cout<<sum<<endl;          
    }   
      return 0;
} 

1000049
main()
{
    int m, n;
    cin >> m >> n; 
    result(int p, int q); 
    for(int i = 0; i <= 11; i++) 
    {
            for(int j = 0; j <= 11; j++)
            {
                    a[i][j] = 0;
            }
    }
    a[5][5] = m; 
    result(m, n); 
    return 0;
}

result(int p, int q)
{
     if(day < q) 
     {
            for(int r = 1; r<= 9; r++) 
            {
                  for(int s = 1; s <= 9; s++)
                  {
                        b[r][s] = a[r][s]; 
                        for(int temp1 = r - 1; temp1 <= r + 1; temp1++) 
                        {
                                for(int temp2 = s - 1; temp2 <= s + 1; temp2++)
                                {
                                        b[r][s] += a[temp1][temp2];
                                }
                        }
                  }
            }
            day++; 
            for(int i = 1; i <= 9; i++) 
            {
                    for(int j = 1; j <= 9; j++)
                    {
                            a[i][j] = b[i][j];
                    }
            }
            result(p, q); 
     }
     else 
     {
         for(int i = 1; i <= 9; i++)
         {
                 for(int j = 1; j <= 9; j++)
                 {
                         if(j < 9)
                         {
                              cout << a[i][j] << "";
                         }
                         else
                         {
                             cout << a[i][j] << endl;
                         }
                 }
         }
     }
} 

1000050
main()
{
	long int sum = 0, res;
    data[1].year=data[1].month=data[1].day = 0;
    data[2].year=data[2].month=data[2].day = 0;
	char rizi1[500],rizi2[500];
	cin.getline(rizi1,12);
	
	cin.getline(rizi2,12);
	
	
    canliang(rizi1,1);
	canliang(rizi2,2);
	nian = abs(data[2].year - data[1].year);
	
   
	if (nian == 0)
	{
		cout << abs(jiange[2]-jiange[1]) << endl;
	}
	if (nian == 1)
	{
		cout << (pingrun[leap[1] + 1] - jiange[1] + jiange[2]) << endl;
	}
	if (nian >= 2)
	{
		for (i = data[1].year + 1; i < data[2].year; i++)
		{
			res = (i % 4 == 0 && i % 100 != 0) || (i % 400 == 0);
			sum += pingrun[res+1];
		}
		sum += jiange[2];
		res = pingrun[leap[1]+1]-jiange[1];
		sum += res;
	    cout << sum << endl;
	}
		return 0;
}
    
compute(int x, int y,int z) 
{
	int cd = 0, i = 1;
	if (x == 1)
	{
		return y;
	}
    while (i < x)
	{
		cd += monthDays[1+z][i];
		i++;
	}
	return cd + y;
}
canliang(char str[],int x)
{
    int len, i = 0;
	len = strlen(str);
	while(str[i]== '') {i++;}
	while (isdigit(str[i]))
	{
		data[x].year = data[x].year * 10 + str[i] - '';
		i++;
	}
	while (str[i]=='') {i++;}
	while (isdigit(str[i]))
	{
		data[x].month = data[x].month * 10 + str[i] -'';
		i++;
	}
	while (str[i]=='') {i++;}
	while((str[i]>= '') && (str[i] <= '') && i <len)
	{
		data[x].day = data[x].day * 10 + str[i] - '';
		i++;
	}
	
	leap[x] = ((data[x].year % 4 == 0 && data[x].year % 100 != 0) || (data[x].year % 400 == 0));
	jiange[x] = compute(data[x].month,data[x].day,leap[x]);  

}

	
 


1000051
main()
{
	int n,m,k=0;
	for(k=1;k<7;k++)
	{
	scanf("",&n);
	m=reverse(n);
	printf("",m);
	}
	return 0;
}
reverse(int num)
{
	int t,num1,a,b,c,d,e,f,g,h,i,j;
	if(num<0) num1=-num;
	else num1=num;

	if(10000000000>num1&&num1>999999999)
	{
		 a=num1/1000000000;
		 b=(num1-1000000000*a)/100000000;
		 c=(num1-1000000000*a-100000000*b)/10000000;
	     d=(num1-1000000000*a-100000000*b-10000000*c)/1000000;
		 e=(num1-1000000000*a-100000000*b-10000000*c-1000000*d)/100000;
		 f=(num1-1000000000*a-100000000*b-10000000*c-1000000*d-100000*e)/10000;
		 g=(num1-1000000000*a-100000000*b-10000000*c-1000000*d-100000*e-10000*f)/1000;
		 h=(num1-1000000000*a-100000000*b-10000000*c-1000000*d-100000*e-10000*f-1000*g)/100;
		 i=(num1-1000000000*a-100000000*b-10000000*c-1000000*d-100000*e-10000*f-1000*g-100*h)/10;
		 j= num1-1000000000*a-100000000*b-10000000*c-1000000*d-100000*e-10000*f-1000*g-100*h-10*i;

		t=1000000000*j+100000000*i+10000000*h+1000000*g+100000*f+10000*e+1000*d+100*c+10*b+a;
	}

	if(1000000000>num1&&num1>99999999)
	{
		 a=num1/100000000;
		 b=(num1-100000000*a)/10000000;
		 c=(num1-100000000*a-10000000*b)/1000000;
		 d=(num1-100000000*a-10000000*b-1000000*c)/100000;
		 e=(num1-100000000*a-10000000*b-1000000*c-100000*d)/10000;
		 f=(num1-100000000*a-10000000*b-1000000*c-100000*d-10000*e)/1000;
		 g=(num1-100000000*a-10000000*b-1000000*c-100000*d-10000*e-1000*f)/100;
		 h=(num1-100000000*a-10000000*b-1000000*c-100000*d-10000*e-1000*f-100*g)/10;
		 i= num1-100000000*a-10000000*b-1000000*c-100000*d-10000*e-1000*f-100*g-10*h;

		t=100000000*i+10000000*h+1000000*g+100000*f+10000*e+1000*d+100*c+10*b+a;
	}

	if(100000000>num1&&num1>9999999)
	{
		 a=num1/10000000;
		 b=(num1-10000000*a)/1000000;
		 c=(num1-10000000*a-1000000*b)/100000;
		 d=(num1-10000000*a-1000000*b-100000*c)/10000;
		 e=(num1-10000000*a-1000000*b-100000*c-10000*d)/1000;
		 f=(num1-10000000*a-1000000*b-100000*c-10000*d-1000*e)/100;
		 g=(num1-10000000*a-1000000*b-100000*c-10000*d-1000*e-100*f)/10;
		 h= num1-10000000*a-1000000*b-100000*c-10000*d-1000*e-100*f-10*g;

		t=10000000*h+1000000*g+100000*f+10000*e+1000*d+100*c+10*b+a;
	}

	if(10000000>num1&&num1>999999)
	{
		 a=num1/1000000;
		 b=(num1-1000000*a)/100000;
		 c=(num1-1000000*a-100000*b)/10000;
		 d=(num1-1000000*a-100000*b-10000*c)/1000;
		 e=(num1-1000000*a-100000*b-10000*c-1000*d)/100;
		 f=(num1-1000000*a-100000*b-10000*c-1000*d-100*e)/10;
		 g= num1-1000000*a-100000*b-10000*c-1000*d-100*e-10*f;

		t=1000000*g+100000*f+10000*e+1000*d+100*c+10*b+a;
	}

	if(1000000>num1&&num1>99999)
	{
		 a=num1/100000;
		 b=(num1-100000*a)/10000;
		 c=(num1-100000*a-10000*b)/1000;
		 d=(num1-100000*a-10000*b-1000*c)/100;
		 e=(num1-100000*a-10000*b-1000*c-100*d)/10;
		 f=(num1-100000*a-10000*b-1000*c-100*d-10*e)/10;

		t=100000*f+10000*e+1000*d+100*c+10*b+a;
	}

	if(100000>num1&&num1>9999)
	{
		 a=num1/10000;
		 b=(num1-10000*a)/1000;
		 c=(num1-10000*a-1000*b)/100;
		 d=(num1-10000*a-1000*b-100*c)/10;
		 e=num1-10000*a-1000*b-100*c-10*d;
	
			t=10000*e+1000*d+100*c+10*b+a;
	}

	if(10000>num1&&num1>999)
	{
		 a=num1/1000;
		 b=(num1-1000*a)/100;
		 c=(num1-1000*a-100*b)/10;
		 d=num1-1000*a-100*b-10*c;
			
		t=1000*d+100*c+10*b+a;
	}
	
	if(1000>num1&&num1>99)
	{
		 a=num1/100;
		 b=(num1-100*a)/10;
		 c=num1-100*a-10*b;
		
		t=100*c+10*b+a;
	}

		if(100>num1&&num1>9)
	{
		 a=num1/10;
		 b=num1-10*a;

		t=10*b+a;
	}

		if(10>num1&&num1>=0)
			t=num1;

		if(num<0) t=-t;
		else t=t;
		return t;
}

1000052
div13(int A)
{
 int div;
 if (A>=13*9)
    div=9;
 else 
 {
  if (A>=13*8)
  {
   div=8;
  }
  else
  {
   if (A>=13*7)
   {
    div=7;
   }
   else
   {
    if (A>=13*6)
    {
     div=6;
    }
    else
    {
     if (A>=13*5)
     {
      div=5;
     }
     else
     {
      if (A>=13*4)
      {
       div=4;
      }
      else
      {
       if (A>=13*3)
       {
        div=3;
       }
       else
       {
        if (A>=13*2)
        {
         div=2;
        }
        else
        {
         if (A>=13*1)
         {
          div=1;
         }
         else
         {
          div=0;
         }   
        }   
       }   
      }   
     }   
    }   
   }
  }
 }
 return div;
}

lev13(int A)
{
 int lev;
 if (A>=13*9)
 {   
    lev=A-13*9;
 }
 else 
 {
  if (A>=13*8)
  {
   lev=A-13*8;
  }
  else
  {
   if (A>=13*7)
   {
    lev=A-13*7;
   }
   else
   {
    if (A>=13*6)
    {
     lev=A-13*6;
    }
    else
    {
     if (A>=13*5)
     {
      lev=A-13*5;
     }
     else
     {
      if (A>=13*4)
      {
       lev=A-13*4;
      }
      else
      {
       if (A>=13*3)
       {
        lev=A-13*3;
       }
       else
       {
        if (A>=13*2)
        {
         lev=A-13*2;
        }
        else
        {
         if (A>=13*1)
         {
          lev=A-13*1;
         }
         else
         {
          lev=A;   
         }   
        }   
       }   
      }   
     }   
    }   
   }
  }
 }
 return lev;
}

main()
{
 char dvdd[100];
 char ans[100];
 int N, div, lev, a, head;
 int i;
 for (i=0; i<100; i++)
     ans[i]='';
 scanf("", dvdd);
 N=strlen(dvdd);
 lev=0;

 for (i=0; i<=N-1; i++)
 {
  a=dvdd[i]-''+lev*10;
  div=div13(a);
  lev=lev13(a);
  ans[i]=div+'';   
 }
 if (N==1)
 {
    printf("");
    printf("", lev); 
 }
 else
 {
  head=(dvdd[0]-'')*10+(dvdd[1]-'');
  if (head<13)
  {
   if (N==2)
      printf("");
   else
   {
    for (i=2; i<=N-1; i++)
        printf("", ans[i]);
    printf("");
   }         
   printf("", lev);   
  }
  else
  {
   for (i=1; i<=N-1; i++)
        printf("", ans[i]);
   printf("");
   printf("", lev);   
  }
 }
}


1000053
main ()
{
    int r[6];
    int co[6];
    co[1]=(r[e]==1);
    co[2]=(r[b]==2);
    co[3]=(r[a]==5);
    co[4]=(r[c]!=1);
    co[5]=(r[d]==1);
    for(r[a]=1;r[a]<=5;r[a]++)
       for(r[b]=1;r[b]<=5;r[b]++)
          for(r[c]=1;r[c]<=5;r[c]++)
             for(r[d]=1;r[d]<=5;r[d]++)
                for(r[e]=1;r[e]<=5;r[e]++)
                {  int i,j,k,l,s;
                   for(i=1;i<6;i++)
                   {
                       if(  ( r[i]==1 ) && (co[i]==1)  )
                       {
                           for(j=1;j<6;j++)
                           {
                               if(  ( r[j]==2 ) && (co[j]==1)  )
                               {
                                     for(k=1;k<6;k++)
                                     {
                                         if(  ( r[k]==3 ) && (co[k]==0)  )
                                         {
                                             for(l=1;l<6;l++)
                                             {
                                                if(  ( r[l]==4 ) && (co[l]==0)  )
                                                {
                                                     for(s=1;s<6;s++)
                                                     {          
                                                         if(  ( r[s]==5 ) && (co[s]==0)  )
                                                         {
                                                               break;
                                                         }
                                                     }
                                                }
                                             }
                                         }
                                     }
                            
                               }
                            }  
                       }
                   }
                   }
    cout<<5<<''<<2<<''<<1<<''<<3<<''<<4;
    
     
      return 0;}

1000054

main()
{
      char X[260],Y[260],Z[260],P[260],K[260],O[260];
      scanf("",K,O);
      int m,n,s;
      m=strlen(K);
      n=strlen(O);
      int v,d;
      v=0;
      d=0;
       for(int i=0;i<m;i++)
      {
                      if(K[i]=='') v++;
                      else break;
                      }
     
       for(int i=0;i<m-v;i++)
       {
        X[i]=K[i+v];
       }
       X[m-v]='\0';
       m=m-v;
        for(int i=0;i<n;i++)
      {
                      if(O[i]=='') d++;
                      else break;
                      }
       
       for(int i=0;i<n-d;i++)
       {
        Y[i]=O[i+d];
       }   
       Y[n-v]='\0';
       n=n-d;
       if(n==0&&m!=0) printf("",X);
       if(m==0&&n!=0) printf("",Y);
       if(n==0&&m==0) printf("",0);
       else 
       {
      if(m>n) 
      {
      int i;int p;
          p=0;
          
      for(i=0;i<m;i++)
      {
          X[m-i-1]=X[m-i-1]+p;
          if(i==m-1) break;
          if(i<n)
          {
      if(X[m-i-1]+Y[n-i-1]-''>'')
      {
      p=1;
      Z[i]=X[m-i-1]+Y[n-i-1]-''-10;
      }
      else
      {
          p=0;
           Z[i]=X[m-i-1]+Y[n-i-1]-'';
      }
}
         else 
         {
              if(X[m-i-1]>'')
               {
      p=1;
      Z[i]=X[m-i-1]-10;
      
      }
      else
       {
          p=0;
           Z[i]=X[m-i-1];
      }
      }
      }
    
         if(X[0]==''+1)  s=m+1;
         
      else s=m;
      int t;
      for(t=0;t<m-1;t++)
      {
      if(t<=(n-1)) P[s-1-t]=Z[t];
      else P[s-1-t]=Z[t];
      }
      if(X[0]==''+1) 
      {
      P[0]='';P[1]='';
      }
      else P[0]=X[0];
      P[s]='\0';
      printf("",P);
      }
           if(n>m) 
      {
      int i;int p;
          p=0;
          
      for(i=0;i<n;i++)
      {
          Y[n-i-1]=Y[n-i-1]+p;
          if(i==n-1) break;
          if(i<m)
          {
      if(Y[n-i-1]+X[m-i-1]-''>'')
      {
      p=1;
      Z[i]=Y[n-i-1]+X[m-i-1]-''-10;
      }
      else
      {
          p=0;
           Z[i]=X[m-i-1]+Y[n-i-1]-'';
      }
}
         else 
         {
              if(Y[n-i-1]>'')
               {
      p=1;
      Z[i]=Y[n-i-1]-10;
      
      }
      else
       {
          p=0;
           Z[i]=Y[n-i-1];
      }
      }
      }
      
         if(Y[0]==''+1)  s=n+1;
         
      else s=n;
      int t;
      for(t=0;t<n-1;t++)
      {
      if(t<=(m-1)) P[s-1-t]=Z[t];
      else P[s-1-t]=Z[t];
      }
      if(Y[0]==''+1) 
      {
      P[0]='';P[1]='';
      }
      else P[0]=Y[0];
      P[s]='\0';
       printf("",P);
      }
     if(m==n)
        {
      int i,p,q,h,v,d;
      v=0;
      p=0;
     for(i=0;i<n;i++)
      {
          
          X[m-i-1]=X[m-i-1]+p;
          if(i==n-1) break;
     if(i<m)
          {
      if(Y[n-i-1]+X[m-i-1]-''>'')
      {
      p=1;
      Z[i]=Y[n-i-1]+X[m-i-1]-''-10;
      }
      else
      {
          p=0;
           Z[i]=X[m-i-1]+Y[n-i-1]-'';
      }
}
         else 
         {
              if(Y[n-i-1]>'')
               {
      p=1;
      Z[i]=Y[n-i-1]-10;
      
      }
      else
       {
          p=0;
           Z[i]=Y[n-i-1];
      }
      }
      }
     
         if(X[0]+Y[0]>=''+1+'')  s=m+1;
         else s=m;
  ;
      int t;
      for(t=0;t<m-1;t++)
      {
             P[s-1-t]=Z[t];
       }
      if(X[0]+Y[0]>=''+1+'') 
      {
      P[0]='';P[1]=X[0]+Y[0]-''-10;
      }
      else P[0]=X[0]+Y[0]-'';
      P[s]='\0';
        printf("",P
        );           
      
      }
      }

      }



1000055
main()
{
      int n,i,j,k,count,mz;
      char a[200]={'\0'},b[200];
scanf("",&n);
      for(i=0;i<n;i++)
      {
                      count=0;
                      for(j=0;j<200;j++)
                      {
                                        a[j]='\0';
                                        b[j]='\0';
                      }
                      gets(a);
                      strcpy(b,a);
                      for(j=0;j<200;j++)
                      {
                                        if(a[j]=='\0')break;
                                        count++;
                      }
                      for(j=count-1;j>=0;j--)
                      {
                                           if(b[j]=='')
                                           {
                                                        mz=0;
                                                        for(k=j;k<count;k++)
                                                        {
                                                                            if(b[k]=='')
                                                                            {
                                                                                         b[k]='';
                                                                                         b[j]='';
                                                                                         mz=1;break;
                                                                            }
                                                        }
                                                        if(mz==0)b[j]='';
                                           }
                      }
                      for(j=0;j<count;j++)
                      {
                                          if(b[j]=='')b[j]='';
                      }
                      for(j=0;j<count;j++)printf("",a[j]);
                      printf("");
                      for(j=0;j<count;j++)
                      {
                                          if(b[j]!='' && b[j]!='')printf("");
                                          printf("",b[j]);
                      }
printf("");
      }
      }

1000056
main()
{
	char A[302];
	int i,n,k,j;
	scanf("",&A);
	k=0;
	j=0;
	for(n='';n<='';n++)
	{
		k=0;
		for(i=0;A[i]!=0;i++)
		{
			if(A[i]==n)
				k++;
		}

if(k!=0)
		{
			printf("",n,k);
			j++;
		}
	
	}
	if(j==0)
		printf("");

	return 0;
}





















1000057
happy(int s[300])
{
	for(int i=0;i<300;i++)
	{
		s[i]='';
	}
}

change(char a[300], int len)
{
	int q;
	for(int i=0;i<len/2;i++)
	{
		if(len-i-1==i)break;
		else{
			q=a[i];
		a[i]=a[len-i-1];
		a[len-i-1]=q;

		}
	}
}

add(char c[300],char d[300],int x,char s[300])
{
	if(c[x]-''+d[x]-''<10)
	{
		s[x]=c[x]-''+d[x];
		if(x>=maxLen-1)return 0; 
	}
	else
	{
		s[x]=c[x]-''+d[x]-10;
		c[x+1]++;
		if(x>=maxLen-1)
		{
			s[x+1]++;
			maxLen++;
			return 0;
		}
	}
	add(c,d,x+1,s);
}
main()
{
	char a[300];
	char b[300];
	char c[300];
	int i, j;
	for (i = 0; i < 300; i++)
		a[i] = b[i] = c[i] = '';
	cin>>a>>b;
	for (i = 0; a[i] != '\0' && a[i] == ''; i++);
	lenA = strlen(a);
	for (j = 0; j < lenA - i; j++)
		a[j] = a[j + i];
	lenA -= i;
	for (i = 0; b[i] != '\0' && b[i] == ''; i++);
	lenB = strlen(b);
	for (j = 0; j < lenB - i; j++)
		b[j] = b[j + i];
	lenB -= i;
	if (lenA == 0 && lenB == 0)
		cout << '';
	if (lenA == 0)
		cout << b;
	if (lenB == 0)
		cout << a;
	else
	{
		maxLen = lenA > lenB ? lenA : lenB;
		a[lenA] = b[lenB] = '';
		change(a, lenA);
		change(b, lenB);
		add(a,b,0,c);
		for(i=maxLen-1;i>=0;i--)
			{
				
				
				cout<<c[i];
			}
	}
}



1000058
compare(const void*a1,const void*a2)
{
    int*p1,*p2;
    p1=(int*)a1;
    p2=(int*)a2;
    return(*p2)-(*p1);
}    
main()
{
      int k;
      for(k=1; ;k++)
      {
            int n,j,i,c=0,p=200,money,m;
            scanf("",&n);
            if(n==0) break;
            int*t=(int*)malloc(n*sizeof(int));
            int*q=(int*)malloc(n*sizeof(int));
            for(j=0;j<n;j++)
              {     scanf("",&t[j]);  }
             for(j=0;j<n;j++)     
                  
                  {scanf("",&q[j]);}
                  
             qsort(t,n,sizeof(int),compare);
             qsort(q,n,sizeof(int),compare);
             for(i=0;i<n;i++)
             {
                      if(t[i]>q[i]) 
                      c++;
                      else
                      {
                          if(t[n-1]>q[n-1])
                          {
                               c++;
                               for(j=n-2;j>=i;j--)
                                {t[j+1]=t[j];
                                q[j+1]=q[j];}
                           }     
                          else
                          {
                              if(t[n-1]<q[i])
                              {
                                             c--;
                                             for(j=n-2;j>=i;j--)
                                             t[j+1]=t[j];
                               } 
                          }                                
                       } 
                                       
                       money=c*p;
                       
              }
                       printf("",money);
                      
                      
}                   
                      
                      return(0);
                    
                       getchar();getchar();getchar();getchar();getchar();getchar();getchar();
                       
                       
}                       
                                             
                                           
                   


1000059
main()
{
    int a,b,c,d,e,f,x,y,z,n;
    x=0;
    y=0;
    z=0;
    scanf("",&a,&b,&c,&d,&e,&f);
    
    for(;a<d;)
    {
              if((a%4==0&&a%100!=0)||(a%400==0))
              x=x+366;
              else
              x=x+365;
              a++;
    }
    
    if(b<=e)
    {
              for(;b<e;)
              {
                           switch(b)
                           {
                                     case 1:y=y+31;break;
                                     case 3:y=y+31;break;
                                     case 5:y=y+31;break;
                                     case 7:y=y+31;break;
                                     case 8:y=y+31;break;
                                     case 10:y=y+31;break;
                                     case 12:y=y+31;break;
                                     case 4:y=y+30;break;
                                     case 6:y=y+30;break;
                                     case 9:y=y+30;break;
                                     case 11:y=y+30;break;
                                     default:if((d%4==0&&d%100!=0)||(d%400==0))
                                             
                                                                                 y=y+29;
                                                                                 
                                             
                                             else
                                                 y=y+28;
                                                 
                           }
                           b++;
              }
    }
    else
    {         
              for(;e<b;)
              {
                           switch(e)
                           {
                                     case 1:y=y-31;break;
                                     case 3:y=y-31;break;
                                     case 5:y=y-31;break;
                                     case 7:y=y-31;break;
                                     case 8:y=y-31;break;
                                     case 10:y=y-31;break;
                                     case 12:y=y-31;break;
                                     case 4:y=y-30;break;
                                     case 6:y=y-30;break;
                                     case 9:y=y-30;break;
                                     case 11:y=y-30;break;
                                     default:if((d%4==0&&d%100!=0)||(d%400==0))
                                             
                                                                                 y=y-29;
                                                                                 
                                             
                                             else
                                                 y=y-28;
                                                 
                           }
                           e++;
              }
    }     

    
    z=f-c;
    n=x+y+z;
    printf("",n);
        return 0;
}

1000060
main()
{
	int A=0,B=0,C=0,D=0,E=0;
	int As=0,Bs=0,Cs=0,Ds=0,Es=0;
	int flag=0;
	for(A=1;A<=5;A++)
		for(B=1;B<=5;B++)
			if(B!=A)
				for(C=1;C<=5;C++)
					if(C!=A&&C!=B)
						for(D=1;D<=5;D++)
							if(D!=A&&D!=B&&D!=C)
								for(E=1;E<=5;E++)
									if(E!=A&&E!=B&&E!=C&&E!=D&&E!=2&&E!=3)
									{
										As=(E==1);
										Bs=(B==2);
										Cs=(A==5);
										Ds=(C!=1);
										Es=(D==1);
										flag=As+Bs+Cs+Ds+Es;
										
										if(flag==2&&A==1&&B==2&&As==1&&Bs==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;
										if(flag==2&&A==2&&B==1&&As==1&&Bs==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;

										if(flag==2&&A==1&&C==2&&As==1&&Cs==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;
										if(flag==2&&A==2&&C==1&&As==1&&Cs==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;

										if(flag==2&&A==1&&D==2&&As==1&&Ds==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;
										if(flag==2&&A==2&&D==1&&As==1&&Ds==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;

										if(flag==2&&A==1&&E==2&&As==1&&Es==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;
										if(flag==2&&A==2&&E==1&&As==1&&Es==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;

										if(flag==2&&B==1&&C==2&&Bs==1&&Cs==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;
										if(flag==2&&B==2&&C==1&&Bs==1&&Cs==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;


										if(flag==2&&B==1&&D==2&&Bs==1&&Ds==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;
										if(flag==2&&B==2&&D==1&&Bs==1&&Ds==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;

										if(flag==2&&B==1&&E==2&&Bs==1&&Es==1)
										    cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;
										if(flag==2&&B==2&&E==1&&Bs==1&&Es==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;

										if(flag==2&&C==1&&D==2&&Cs==1&&Ds==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;
										if(flag==2&&C==2&&D==1&&Cs==1&&Ds==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;

										if(flag==2&&C==1&&E==2&&Cs==1&&Es==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;
										if(flag==2&&C==2&&E==1&&Cs==1&&Es==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;

										if(flag==2&&D==1&&E==2&&Ds==1&&Es==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;
										if(flag==2&&D==2&&E==1&&Ds==1&&Es==1)
											cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;
									}

	return 0;
}


1000061
main()
{
	int a,b,c,d,e;
	int h[6];
	for (e=1;e<=5;e++)
	{
		if (e==2||e==3)
			continue;
		for (d=1;d<=5;d++)
			{
				if (d==e)
					continue;
				for (c=1;c<=5;c++)
					{
						if (c==e||c==d)
							continue;
						for (b=1;b<=5;b++)
							{
								if (b==e||b==d||b==c)
									continue;
								else
								{
									a=15-b-c-d-e;
								if (((e==1)+(b==2)+(a==5)+(c!=1)+(d==1))==2)
								{
									if ((a==1||a==2)&&(e==1))
									{
									    if ((b==1||b==2)&&(b==2))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									    
										if ((c==1||c==2)&&(a==5))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									    
										if ((d==1||d==2)&&(c!=1))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									    
										if ((e==1||e==2)&&(d==1))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									}

									if ((b==1||b==2)&&(e==1))
									{
									    if ((a==1||a==2)&&(e==1))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									    
										if ((c==1||c==2)&&(a==5))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									    
										if ((d==1||d==2)&&(c!=1))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									    
										if ((e==1||e==2)&&(d==1))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									}
									if ((c==1||c==2)&&(a==5))
									{
									    if ((b==1||b==2)&&(b==2))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									    
										if ((a==1||a==2)&&(e==1))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									    
										if ((d==1||d==2)&&(c!=1))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									   
										if ((e==1||e==2)&&(d==1))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									}
									if ((d==1||d==2)&&(c!=1))
									{
									    if ((b==1||b==2)&&(b==2))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									    
										if ((c==1||c==2)&&(a==5))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									    
										if ((a==1||a==2)&&(e==1))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									    
										if ((e==1||e==2)&&(d==1))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									}
									if ((e==1||e==2)&&(d==1))
									{
									    if ((b==1||b==2)&&(b==2))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									    
										if ((c==1||c==2)&&(a==5))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									    
										if ((d==1||d==2)&&(c!=1))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									    
										if ((a==1||a==2)&&(e==1))
									        cout<<a<<""<<b<<""<<c<<""<<d<<""<<e;									}
								}
								}
							}
					}
			}
	}

	return 0;
}

1000062
main()
{
    char a[250],b[250],c[250];
    int aa[250],bb[250],cc[250],dd[250],add;
    scanf("",a);
    scanf("",b);

    int l1,l2,i,j;
    l1=strlen(a);
    l2=strlen(b);

    if (l1>=l2)
    {
        for(i=0;i<l1-l2;i++)
            c[i]='';
        for(j=i;j<l1;j++) c[j]=b[j-l1+l2];

        for(i=0;i<l1;i++) aa[i]=a[i]-48;
        for(i=0;i<l1;i++) cc[i]=c[i]-48;
        add=0;
        for(j=l1-1;j>=1;j--)
            if((cc[j]+aa[j]+add)<=9)
            {
                dd[j]=cc[j]+aa[j]+add;
                add=0;
            }
            else
            {
                dd[j]=cc[j]+aa[j]+add-10;
                add=1;
            }

        j=0;
        if(cc[j]+aa[j]+add<=9)
        {
            dd[j]=cc[j]+aa[j]+add;
            for(i=0;i<l1;i++) if (dd[i]!=0) break;
            if (i==l1) printf("",0);
            for(j=i;j<=l1-1;j++)
            printf("",dd[j]);
        }
        else
        {
            dd[j]=cc[j]+aa[j]+add-10;
            printf("",1);
            for(j=0;j<=l1-1;j++)
            printf("",dd[j]);
        }


    }
    else
    {
        for(i=0;i<l2-l1;i++)
            c[i]='';
        for(j=i;j<l2;j++) c[j]=a[j-l2+l1];

        for(i=0;i<l2;i++) aa[i]=b[i]-48;
        for(i=0;i<l2;i++) cc[i]=c[i]-48;
        add=0;
        for(j=l2-1;j>=1;j--)



            if((cc[j]+aa[j]+add)<=9)
            {
                dd[j]=cc[j]+aa[j]+add;
                add=0;
            }
            else
            {
                dd[j]=cc[j]+aa[j]+add-10;
                add=1;
            }
        j=0;
        if(cc[j]+aa[j]+add<=9)
        {
            dd[j]=cc[j]+aa[j]+add;
            for(i=0;i<l2;i++) if (dd[i]!=0) break;
            if (i==l1) printf("",0);
            for(j=i;j<=l2-1;j++)
            printf("",dd[j]);
        }
        else
        {
            dd[j]=cc[j]+aa[j]+add-10;
            printf("",1);
            for(j=0;j<=l2-1;j++)
            printf("",dd[j]);
        }
    }
}

1000063
main(){
	char word[1000];
	gets(word);
	int j,k;
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}
	for (j=0;word[j];j++){
		if (word[j]==''&&word[j+1]==''){
			for (k=j+1;word[k];k++){
				word[k]=word[k+1];
			}
		}
	}

			
	printf("",word);
	return 0;
}

1000064
main()
{
	int w;
    scanf("",&w);
	if(12%7+w>7)
	{
		if((12%7+w-7)==5)
		printf("");
	}
	else {
		if(12%7+w==5)
        	printf("");
	}
		if((12+31)%7+w>7)
	{
		if(((12+31)%7+w-7)==5)
		printf("");
	}
	else {
		if((12+31)%7+w==5)
        	printf("");
	}
		if((12+31+28)%7+w>7)
	{
		if(((12+31+28)%7+w-7)==5)
		printf("");
	}
	else {
		if((12+31+28)%7+w==5)
        	printf("");
	}
		if((12+31+28+31)%7+w>7)
	{
		if(((12+31+28+31)%7+w-7)==5)
		printf("");
	}
	else {
		if((12+31+28+31)%7+w==5)
        	printf("");
	}
		if((12+31+28+31+30)%7+w>7)
	{
		if(((12+31+28+31+30)%7+w-7)==5)
		printf("");
	}
	else {
		if((12+31+28+31+30)%7+w==5)
        	printf("");
	}
		if((12+31+28+31+30+31)%7+w>7)
	{
		if(((12+31+28+31+30+31)%7+w-7)==5)
		printf("");
	}
	else {
		if((12+31+28+31+30+31)%7+w==5)
        	printf("");
	}
		if((12+31+28+31+30+31+30)%7+w>7)
	{
		if(((12+31+28+31+30+31+30)%7+w-7)==5)
		printf("");
	}
	else {
		if((12+31+28+31+30+31+30)%7+w==5)
        	printf("");
	}
		if((12+31+28+31+30+31+30+31)%7+w>7)
	{
		if(((12+31+28+31+30+31+30+31)%7+w-7)==5)
		printf("");
	}
	else {
		if((12+31+28+31+30+31+30+31)%7+w==5)
        	printf("");
	}
		if((12+31+28+31+30+31+30+31+31)%7+w>7)
	{
		if(((12+31+28+31+30+31+30+31+31)%7+w-7)==5)
		printf("");
	}
	else {
		if((12+31+28+31+30+31+30+31+31)%7+w==5)
        	printf("");
	}
		if((12+31+28+31+30+31+30+31+31+30)%7+w>7)
	{
		if(((12+31+28+31+30+31+30+31+31+30)%7+w-7)==5)
		printf("");
	}
	else {
		if((12+31+28+31+30+31+30+31+31+30)%7+w==5)
        	printf("");
	}
		if((12+31+28+31+30+31+30+31+31+30+31)%7+w>7)
	{
		if(((12+31+28+31+30+31+30+31+31+30+31)%7+w-7)==5)
		printf("");
	}
	else {
		if((12+31+28+31+30+31+30+31+31+30+31)%7+w==5)
        	printf("");
	}
		if((12+31+28+31+30+31+30+31+31+30+31+30)%7+w>7)
	{
		if(((12+31+28+31+30+31+30+31+31+30+31+30)%7+w-7)==5)
		printf("");
	}
	else {
		if((12+31+28+31+30+31+30+31+31+30+31+30)%7+w==5)
        	printf("");
	}
}
	
	


1000065
change(char m)
{
 int n;
 switch(m)
  {
   case '':n=0;break;
   case '':n=0;break;
   case '':n=0;break;
   case '':n=0;break;
   case '':n=0;break;
   case '':n=0;break;
   case '':n=0;break;
   case '':n=0;break;
   case '':n=0;break;
   case '':n=0;break;
   case'':n=0;break;
     case'':n=0;break;
     case'':n=0;break;
     case'':n=0;break;  
     case'':n=0;break;
     case'':n=0; break;    
     case'':n=0;break;
     case'':n=0;break;        
     case'':n=0;break;
     case'':n=0;break;     
     case'':n=0;break;
     case'':n=0;break;         
     case'':n=0;break;
     case'':n=0;break;     
     case'':n=0;break;        
     case'':n=0;break;
     case'':n=0;break;    
     case'':n=0;break;
     case'':n=0;break;        
     case'':n=0;break;
     case'':n=0;break;
     case'':n=0;break;
     case'':n=0;break;      
     case'':n=0;break;
     case'':n=0;break;   
     case'':n=0;break; 
     case'':n=0;break;
     case'':n=0;break;
     case'':n=0;break;
     case'':n=0;break;  
     case'':n=0;break;
     case'':n=0; break;    
     case'':n=0;break;
     case'':n=0;break;        
     case'':n=0;break;
     case'':n=0;break;     
     case'':n=0;break;
     case'':n=0;break;         
     case'':n=0;break;
     case'':n=0;break;     
     case'':n=0;break;        
     case'':n=0;break;
     case'':n=0;break;    
     case'':n=0;break;
     case'':n=0;break;        
     case'':n=0;break;
     case'':n=0;break;
     case'':n=0;break;
     case'':n=0;break;      
     case'':n=0;break;
     case'':n=0;break;   
     case'':n=0;break; 
     case'':n=0;break;
     default:n=1;break;
     }
     return(n); 
}
main()
{
  int n;
  scanf("",&n);
  char s[1000][20];
  int i,j;
  for(i=0;i<n;i++)
  {
   scanf("",s[i]);
  }
  for(i=0;i<n;i++)
  {
   int x,y;
   y=0;
   x=strlen(s[i]);
   if(change(s[i][0])==1||(change(s[i][0])==0&&(s[i][0]==''||s[i][0]==''||s[i][0]==''||s[i][0]==''||s[i][0]==''||s[i][0]==''||s[i][0]==''||s[i][0]==''||s[i][0]==''||s[i][0]=='')))
   {y=1;}
   else
   {
    for(j=1;j<x;j++)
    {
     if(change(s[i][j])==1)
     {y=1;break;}
    }
   }
   if(y==0)
   printf("");
   if(y==1)
   printf("");
  }
	return 0;
}

1000066
main()
{
	int a,b,c,d,e;
	for(a=1;a<6;a++)
		for(b=1;b<6;b++)
			for(c=1;c<6;c++)
				for(d=1;d<6;d++)
					for(e=1;e<6;e++)
					{
						if((a==1||a==2)&&(b==1||b==2)&&(e==1)&&(b==2)&&(((e==1)+(b==2)+(a==5)+(c!=1)+(d==1))==2)&&a!=b&&a!=c&&a!=d&&a!=e&&b!=c&&b!=d&&b!=e&&c!=d&&c!=e&&d!=e)
							cout<<""<<a<<""<<b<<""<<c<<""<<d<<""<<e<<"";
					}		
for(a=1;a<6;a++)
		for(b=1;b<6;b++)
			for(c=1;c<6;c++)
				for(d=1;d<6;d++)
					for(e=1;e<6;e++)
					{
						if((a==1||a==2)&&(c==1||c==2)&&(e==1)&&(a==5)&&(((e==1)+(b==2)+(a==5)+(c!=1)+(d==1))==2)&&a!=b&&a!=c&&a!=d&&a!=e&&b!=c&&b!=d&&b!=e&&c!=d&&c!=e&&d!=e)
							cout<<""<<a<<""<<b<<""<<c<<""<<d<<""<<e<<"";
					}
					for(a=1;a<6;a++)
		for(b=1;b<6;b++)
			for(c=1;c<6;c++)
				for(d=1;d<6;d++)
					for(e=1;e<6;e++)
					{
						if((a==1||a==2)&&(d==1||d==2)&&(e==1)&&(c!=1)&&(((e==1)+(b==2)+(a==5)+(c!=1)+(d==1))==2)&&a!=b&&a!=c&&a!=d&&a!=e&&b!=c&&b!=d&&b!=e&&c!=d&&c!=e&&d!=e)
							cout<<""<<a<<""<<b<<""<<c<<""<<d<<""<<e<<"";
					}
					for(a=1;a<6;a++)
		for(b=1;b<6;b++)
			for(c=1;c<6;c++)
				for(d=1;d<6;d++)
					for(e=1;e<6;e++)
					{
						if((a==1||a==2)&&(e==1||e==2)&&(e==1)&&(d==1)&&(((e==1)+(b==2)+(a==5)+(c!=1)+(d==1))==2)&&a!=b&&a!=c&&a!=d&&a!=e&&b!=c&&b!=d&&b!=e&&c!=d&&c!=e&&d!=e)
							cout<<""<<a<<""<<b<<""<<c<<""<<d<<""<<e<<"";
					}
					for(a=1;a<6;a++)
		for(b=1;b<6;b++)
			for(c=1;c<6;c++)
				for(d=1;d<6;d++)
					for(e=1;e<6;e++)
					{
						if((c==1||c==2)&&(b==1||b==2)&&(a==5)&&(b==2)&&(((e==1)+(b==2)+(a==5)+(c!=1)+(d==1))==2)&&a!=b&&a!=c&&a!=d&&a!=e&&b!=c&&b!=d&&b!=e&&c!=d&&c!=e&&d!=e&&d!=4)
							cout<<""<<a<<""<<b<<""<<c<<""<<d<<""<<e<<"";
					}
					for(a=1;a<6;a++)
		for(b=1;b<6;b++)
			for(c=1;c<6;c++)
				for(d=1;d<6;d++)
					for(e=1;e<6;e++)
					{
						if((d==1||d==2)&&(b==1||b==2)&&(c!=1)&&(b==2)&&(((e==1)+(b==2)+(a==5)+(c!=1)+(d==1))==2)&&a!=b&&a!=c&&a!=d&&a!=e&&b!=c&&b!=d&&b!=e&&c!=d&&c!=e&&d!=e)
							cout<<""<<a<<""<<b<<""<<c<<""<<d<<""<<e<<"";
					}
					for(a=1;a<6;a++)
		for(b=1;b<6;b++)
			for(c=1;c<6;c++)
				for(d=1;d<6;d++)
					for(e=1;e<6;e++)
					{
						if((c==1||c==2)&&(d==1||d==2)&&(a==5)&&(c!=1)&&(((e==1)+(b==2)+(a==5)+(c!=1)+(d==1))==2)&&a!=b&&a!=c&&a!=d&&a!=e&&b!=c&&b!=d&&b!=e&&c!=d&&c!=e&&d!=e)
							cout<<""<<a<<""<<b<<""<<c<<""<<d<<""<<e<<"";
					}
					for(a=1;a<6;a++)
		for(b=1;b<6;b++)
			for(c=1;c<6;c++)
				for(d=1;d<6;d++)
					for(e=1;e<6;e++)
					{
						if((b==1||b==2)&&(e==1||e==2)&&(b==2)&&(d==1)&&(((e==1)+(b==2)+(a==5)+(c!=1)+(d==1))==2)&&a!=b&&a!=c&&a!=d&&a!=e&&b!=c&&b!=d&&b!=e&&c!=d&&c!=e&&d!=e)
							cout<<""<<a<<""<<b<<""<<c<<""<<d<<""<<e<<"";
					}
					for(a=1;a<6;a++)
		for(b=1;b<6;b++)
			for(c=1;c<6;c++)
				for(d=1;d<6;d++)
					for(e=1;e<6;e++)
					{
						if((c==1||c==2)&&(e==1||e==2)&&(a==5)&&(d==1)&&(((e==1)+(b==2)+(a==5)+(c!=1)+(d==1))==2)&&a!=b&&a!=c&&a!=d&&a!=e&&b!=c&&b!=d&&b!=e&&c!=d&&c!=e&&d!=e)
							cout<<""<<a<<""<<b<<""<<c<<""<<d<<""<<e<<"";
					}
						for(a=1;a<6;a++)
		for(b=1;b<6;b++)
			for(c=1;c<6;c++)
				for(d=1;d<6;d++)
					for(e=1;e<6;e++)
					{
						if((d==1||d==2)&&(e==1||e==2)&&(c!=1)&&(d==1)&&(((e==1)+(b==2)+(a==5)+(c!=1)+(d==1))==2)&&a!=b&&a!=c&&a!=d&&a!=e&&b!=c&&b!=d&&b!=e&&c!=d&&c!=e&&d!=e&&d!=1)
							cout<<""<<a<<""<<b<<""<<c<<""<<d<<""<<e<<"";
					}
					return 0;
}


1000067
leap(int *p,int n)
{                                                                                
    if(n==0) return -1;                                                          
    if((*p)!=0) return 0;
    else leap(p+1,n-1)+1;
}
main()
{
    int n,i;
    scanf("",&n);
    for(i=0;i<n;i++)
    {
                    char a[100],b[100];
                    int j,k=0,f=0,c[100]={0};
                    scanf("",a,b);
                    int len1=strlen(a),len2=strlen(b);
                    if(len1<len2) f=-1;
                    if(len1==len2)
                         for(j=0;j<len1;j++)
                              if(a[j]<b[j]) 
                              {
                                           f=-1;
                                           break;
                              }
                    if(f==-1)
                    {
                             printf("");
                             char s[100];
                             strcpy(s,a);
                             strcpy(a,b);
                             strcpy(b,s);
                             int len=len1;
                             len1=len2;
                             len2=len;
                    }                        
                    for(j=len2-1;j>=0;j--)
                                          b[j+len1-len2]=b[j];
                    for(j=len1-len2-1;j>=0;j--)
                                               b[j]='';
                    for(j=len1-1;j>=0;j--)
                    {
                                          c[j]=a[j]-b[j]-k;
                                          if(c[j]<0)
                                          {
                                                    c[j]+=10;
                                                    k=1;
                                          }
                                          else k=0;
                    }
                    j=leap(c,len1);
                    if(j==-1) printf("");
                    for( ;j<len1;j++)
                                         printf("",c[j]);
                    printf("");
    }
    return 0; 
}

1000068
main()
{
   
    int i,j,k,t,sum,c;
    cin>>n;
    for(i=0;i<n;++i)
    {
                    t=60;
                    k=0;
                    c=0;
                    sum=0;
                    memset(a,0,sizeof(a));
                    cin>>b;
                    for(j=0;j<b;++j) {cin>>a[j]; q[j]=a[j];}
                    if(b==0) cout<<60<<endl;
                    else
                    {
                        if(a[0]>=60)
                        {
                                    cout<<60<<endl;
                                    continue;
                        }
                        for(j=0;j<b;++j)
                        {
                                        a[j]+=j*3;
                                        
                        }
                        for(j=0;j<b;++j)
                        {
                                        if(a[j]>=60)
                                        {
                                                   sum=a[j-1]-((j-1)*3);
                                                   t-=a[j-1];
                                                   c=1;
                                                   break;
                                        }
                        }
                        if(c)
                        {
                             if(t>3) sum+=t-3;
                        }
                        else
                        {
                            sum=q[b-1];
                            t-=a[b-1];
                            if(t>3) sum+=t-3;
                        }
                        cout<<sum<<endl;
                    }
                        
    }
 
    return 0;
}


1000069
main() {
char str [LEN];
int I;
int as,a=0,b=0,c=0,d=0,e=0,f=0,g=0,i=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;
scanf("",str);
as=strlen(str);
for (I=0;I<as;I++){
if (str[I]==''){
a++;
}if (str[I]==''){
b++;
}if (str[I]==''){
c++;
}if (str[I]==''){
d++;
}if (str[I]==''){
e++;
}if (str[I]==''){
f++;
}if (str[I]==''){
g++;
}if (str[I]==''){
h++;
}if (str[I]==''){
i++;
}if (str[I]==''){
j++;
}if (str[I]==''){
k++;
}if (str[I]==''){
l++;
}if (str[I]==''){
m++;
}if (str[I]==''){
n++;
}if (str[I]==''){
o++;
}if (str[I]==''){
p++;
}if (str[I]==''){
q++;
}if (str[I]==''){
r++;
}if (str[I]==''){
s++;
}if (str[I]==''){
t++;
}if (str[I]==''){
u++;
}if (str[I]==''){
v++;
}if (str[I]==''){
w++;
}if (str[I]==''){
x++;
}if (str[I]==''){
y++;
}if (str[I]==''){
z++;
}
}
if (a!=0){
printf("",a);
}if (b!=0){
printf("",b);
}if (c!=0){
printf("",c);
}if (d!=0){
printf("",d);
}if (e!=0){
printf("",e);
}if (f!=0){
printf("",f);
}if (g!=0){
printf("",g);
}if (h!=0){
printf("",h);
}if (i!=0){
printf("",i);
}if (j!=0){
printf("",j);
}if (k!=0){
printf("",k);
}if (l!=0){
printf("",l);
}if (m!=0){
printf("",m);
}if (n!=0){
printf("",n);
}if (o!=0){
printf("",o);
}if (p!=0){
printf("",p);
}if (q!=0){
printf("",q);
}if (r!=0){
printf("",r);
}if (s!=0){
printf("",s);
}if (t!=0){
printf("",t);
}if (u!=0){
printf("",u);
}if (v!=0){
printf("",v);
}if (w!=0){
printf("",w);
}if (x!=0){
printf("",x);
}if (y!=0){
printf("",y);
}if (z!=0){
printf("",z);
}if(a==0&&b==0&&c==0&&d==0&&e==0&&f==0&&g==0&&i==0&&h==0&&j==0&&k==0&&l==0&&m==0&&n==0&&o==0&&p==0&&q==0&&r==0&&s==0&&t==0&&u==0&&v==0&&w==0&&x==0&&y==0&&z==0){
printf("");
}

return 0;
}

1000070
main()
{
    int s1,s2,s3,e1,e2,e3,i,count=0;
    scanf("",&s1,&s2,&s3);
    scanf("",&e1,&e2,&e3);
    if(s1==e1)
    {
        if(s2==e2)
        {
            count=e3-s3;
        }
        if(s2!=e2)
        {
            if((s1%4==0 && s1%100!=0) || (s1%400==0) )
               {
                   if(s2==1||s2==3||s2==5||s2==7||s2==8||s2==10||s2==12)
                   {
                       count=count+31-s3;
                   }
                   if(s2==2)
                   {
                       count=count+29-s3;
                   }
                   if(s2==4||s2==6||s2==9||s2==11)
                   {
                       count=count+30-s3;
                   }
                   for(i=s2+1;i<e2;i++)
                   {
                       if(i==1||i==3||i==5||i==7||i==8||i==10||i==12)
                       {
                           count=count+31;
                       }
                       if(i==4||i==6||i==9||i==11)
                       {
                           count=count+30;
                       }
                       if(i==2)
                       {
                           count=count+29;
                       }
                   }
                   count=count+e3;
               }
            else
               {
                   if(s2==1||s2==3||s2==5||s2==7||s2==8||s2==10||s2==12)
                   {
                       count=count+31-s3;
                   }
                   if(s2==2)
                   {
                       count=count+28-s3;
                   }
                   if(s2==4||s2==6||s2==9||s2==11)
                   {
                       count=count+30-s3;
                   }
                   for(i=s2+1;i<e2;i++)
                   {
                       if(i==1||i==3||i==5||i==7||i==8||i==10||i==12)
                       {
                           count=count+31;
                       }
                       if(i==4||i==6||i==9||i==11)
                       {
                           count=count+30;
                       }
                       if(i==2)
                       {
                           count=count+28;
                       }
                   }
                   count=count+e3;
               }
        }
    }
    if(s1!=e1)
    {
        if((s1%4==0 && s1%100!=0) || (s1%400==0) )
        {
            for(i=1;i<s2;i++)
            {
                if(i==1||i==3||i==5||i==7||i==8||i==10||i==12)
                {
                    count=count+31;
                }
                if(i==4||i==6||i==9||i==11)
                {
                    count=count+30;
                }
                if(i==2)
                {
                    count=count+29;
                }
            }
            count=366-count-s3;
        }
        if(s1%4!=0 || (s1%100==0 && s1%400!=0))
        {
            for(i=1;i<s2;i++)
            {
                if(i==1||i==3||i==5||i==7||i==8||i==10||i==12)
                {
                    count=count+31;
                }
                if(i==4||i==6||i==9||i==11)
                {
                    count=count+30;
                }
                if(i==2)
                {
                    count=count+28;
                }
            }
            count=365-count-s3;
        }
        for(i=s1+1;i<e1;i++)
        {
            if((i%4==0 && i%100!=0) || (i%400==0) )
                count=count+366;
            else
                count=count+365;
        }
        if((e1%4==0 && e1%100!=0) || (e1%400==0) )
        {
            for(i=1;i<e2;i++)
            {
                if(i==1||i==3||i==5||i==7||i==8||i==10||i==12)
                {
                    count=count+31;
                }
                if(i==4||i==6||i==9||i==11)
                {
                    count=count+30;
                }
                if(i==2)
                {
                    count=count+29;
                }
            }
            count=count+e3;
        }
        if(e1%4!=0 || (e1%100==0 && e1%400!=0))
        {
            for(i=1;i<e2;i++)
            {
                if(i==1||i==3||i==5||i==7||i==8||i==10||i==12)
                {
                    count=count+31;
                }
                if(i==4||i==6||i==9||i==11)
                {
                    count=count+30;
                }
                if(i==2)
                {
                    count=count+28;
                }
            }
            count=count+e3;
        }
    }
    printf("",count);
    return 0;
}



1000071
main()
{
	int z, q, s, l, i, j, order[5], temp;
	for (z = 1; z <= 5; z++)
	{
		for (q = 1; q <= 5; q++)
		{
			for (s = 1; s <= 5; s++)
			{
				for (l = 1; l <= 5; l++)
				{
					if (((z + q) == (s + l))  && ((z + l) > (s + q))  && ((z + s) < q))
						                                        
					{
						order[1] = z;                           
						order[2] = q;                           
						order[3] = s;                           
						order[4] = l;                           
						break;                                  
					}
				}
			}
		}
	}
	
	z = order[1];                                               
	q = order[2];                                               
	s = order[3];                                               
	l = order[4];                                               
	
	for (j = 1; j <= 3; j++)                                    
	{
		for (i = 1; i <= (4 - j); i++)                          
		{
			if (order[i] < order[i + 1])                        
			{
				temp = order[i];                                
				order[i] = order[i + 1];                        
				order[i + 1] = temp;                            
			}
		}
	}
	
	for (i = 1; i <= 4; i++)
	{
		if (order[i] == z)                                      
			cout << "" << 10 * order[i] << endl;              
		if (order[i] == q)                                      
			cout << "" << 10 * order[i] << endl;              
		if (order[i] == s)                                      
			cout << "" << 10 * order[i] << endl;              
		if (order[i] == l)                                      
			cout << "" << 10 * order[i] << endl;              
	}
	return 0;
}

1000072
main()
{
	struct student * head;
	head=creat();                           
	head=backward(head);                    
          output (head);                          
	free(head);                           
	return 0;
}
struct creat(void)                 
{
	struct student*head;
	n=0;
	p1=p2=(struct student*)malloc(LEN);        
	head=NULL;                                 
	char tmp[40];
	scanf("",tmp);
	while (strcmp(tmp,"")!=0)               
	{
		scanf("",p1->name,&p1->gender,&p1->age,p1->score,p1->addr);
		strcpy(p1->num,tmp);
                n=n+1;
		if (n==1)            
			head=p1;
		else 
			p2->next=p1;      
		p2=p1;
		p1=(struct student*)malloc(LEN);            
		scanf("",tmp);

		
	}
	p2->next=NULL;                                  
	return(head);                                   
}
struct backward(struct student * head)      
{
	struct student *new_head;                    
	p1=head;
	p2=NULL;
	while(p1->next!=NULL)                  
	{
		p2=p1;
		p1=p1->next;
	}
	new_head=p1;                           
	p1->next=p2;                           
	p2->next=NULL;                         
	while(head->next!=NULL)                
	{
		p1=head;                           
		p2=NULL;
		while(p1->next!=NULL)              
		{
		    p2=p1;
		    p1=p1->next;
		}
		p1->next=p2;
		p2->next=NULL;
	}
	return (new_head);              
}
output(struct student*outhead)            
{
	for (p1=outhead;p1!=NULL;p1=p1->next)           
	{
		printf("",p1->num,p1->name,p1->gender,p1->age,p1->score,p1->addr);
	}
}
free(struct student*head)               
{
	for(p1=head;p1!=NULL;p1=p1->next)
	{
		free(p1);
	}
}


	





1000073
one(char x)
{
	char y;
	switch(x)
	{
	case '':y='';break;
	case '':y='';break;
	case '':a=5;c=1;y='';break;
	case '':if(c!=1)
			 {
				 d=1;
				 y='';
			 }
			 else
			 {
				 y='';
			 }
			 break;
	case '':y='';break;
	}
	if(y=='')
	{
		one(x+1);
	}
}
two(char x)
{
	char y;
	switch(x)
	{
	case '':if(a==1||e!=1)
			 {
				 y='';
			 }
			 else
			 {
				 a=2;
				 y='';
			 }
			 break;
	case '':if(b==1)
			 {
				 y='';
			 }
			 else
			 {
				 b=2;
				 y='';
			 }
			 break;
	case '':if(c==1)
			 {
				 y='';
			 }
			 else
			 {
				 c=2;
				 a=5;
				 y='';
			 }
			 break;
	case '':if(c==1||d==1)
			 {
				 y='';
			 }
			 else
			 {
				 d=2;
				 y='';
			 }
			 break;
	case '':y='';break;
	}
	if(y=='')
	{
		two(x+1);
	}
}
three(char x)
{
	char y;
	switch(x)
	{
	case '':if(a==1||a==2||c==1||c==2||e==1)
			 {
				 y='';
			 }
			 else
			 {
				 a=3;
				 y='';
			 }
			 break;
	case '':if(b==1||b==2)
			 {
				 y='';
			 }
		else
		{
			b=3;
			y='';
		}
		break;
	case '':if(c==1||c==2||a==5||(d!=1&&d!=2))
			 {
				 y='';
			 }
		else
		{
			c=3;
			y='';
		}
		break;
	case '':if(d==1||d==2||e==1||e==2||c!=1)
			 {
				 y='';
			 }
		else
		{
			d=3;
			y='';
		}
		break;
	case '':y='';break;
	}
	if(y=='')
	{
		three(x+1);
	}
}
four(char x)
{
	char y;
	switch(x)
	{
	case '':if(a==1||a==2||a==3||c==1||c==2||e==1)
			 {
				 y='';
			 }
		else
		{
			a=4;
			y='';
		}
		break;
	case '':if(b==1||b==2||b==3)
			 {
				 y='';
			 }
		else
		{
			b=4;
			y='';
		}
		break;
	case '':if(c==1||c==2||c==3||(d!=1&&d!=2))
			 {
				 y='';
			 }
		else
		{
			c=4;
			y='';
		}
		break;
	case '':if(d==1||d==2||d==3||e==1||e==2||c!=1)
			 {
				 y='';
			 }
		else
		{
			d=4;
			y='';
		}
		break;
	case '':if(e==1||e==2||e==3||d==1)
			 {
				 y='';
			 }
		else
		{
			e=4;
			y='';
		}
		break;
	}
	if(y=='')
	{
		four(x+1);
	}
}
five(char x)
{
	char y;
	switch(x)
	{
	case '':if(a==1||a==2||a==3||a==4||(c!=1&&c!=2)||e==1)
			 {
				 y='';
			 }
		else
		{
			a=5;
			y='';
		}
		break;
	case '':if(b==1||b==2||b==3||b==4)
			 {
				 y='';
			 }
		else
		{
			b=5;
			y='';
		}
		break;
	case '':if(c==1||c==2||c==3||c==4||(d!=1&&d!=2))
			 {
				 y='';
			 }
		else
		{
			c=5;
			y='';
		}
		break;
	case '':if(d==1||d==2||d==3||d==4||e==1||e==2||c!=1)
			 {
				 y='';
			 }
		else
		{
			d=5;
			y='';
		}
		break;
	case '':if(e==1||e==2||e==3||e==4||d==1)
			 {
				 y='';
			 }
		else
		{
			e=5;
			y='';
		}
		break;
	}
	if(y=='')
	{
		five(x+1);
	}
}
main()
{
	one(char x);
	two(char x);
	three(char x);
	four(char x);
	five(char x);
	char now='';
	one(now);
	two(now);
	three(now);
	four(now);
	five(now);
	printf("",a,b,c,d,e);
	return 0;
}


1000074
main()
{
	int n,i,j,k,l,m;
	char a[50][100];
	scanf("",&n);
	for(i=0;i<=2*n-2;i=i+2)
	{
	    scanf("",a[i]);
		scanf("",a[i+1]);
		printf("");
	}
	for(i=0;i<=2*n-2;i=i+2)
	{
		for(j=0;a[i][j]!='\0';j++)	
		    ;
		for(k=0;a[i+1][k]!='\0';k++)	
		    ;
		if(j>k)
		{
			for(l=j-1;l>=j-k;l=l-1)
				a[i+1][l]=a[i+1][l-j+k];
            for(l=j-k-1;l>=0;l=l-1)
				a[i+1][l]=48;
			for(l=j-1;l>=0;l=l-1)
			{
				if(a[i][l]>=a[i+1][l])a[i][l]=a[i][l]-a[i+1][l]+48;
				else 
				{
					a[i][l]=a[i][l]+10-a[i+1][l]+48;
					a[i][l-1]=a[i][l-1]-1;
				}
			}
			if(a[i][0]!=48)
			for(l=0;l<=j-1;l++)printf("",a[i][l]);  
			else
			{
			    for(l=0;a[i][l]==48;l++);
				for(m=0;m<=j-1-l;m++)
				{
					a[i][m]=a[i][m+l];
					printf("",a[i][m]);
				}
			}
			printf("");
		}

		if(j<k)
		{
			printf("");
			for(l=k-1;l>=k-j;l=l-1)
				a[i][l]=a[i][l-k+j];
            for(l=k-j-1;l>=0;l=l-1)
				a[i][l]=48;
			for(l=k-1;l>=0;l=l-1)
			{
				if(a[i+1][l]>=a[i][l])a[i+1][l]=a[i+1][l]-a[i][l]+48;
				else 
				{
					a[i+1][l]=a[i+1][l]+10-a[i][l]+48;
					a[i+1][l-1]=a[i+1][l-1]-1;
				}
			}
			if(a[i+1][0]!=48)
			   for(l=0;l<=k-1;l++)printf("",a[i+1][l]);
			else
			{
			    for(l=0;a[i+1][l]==48;l++);
				for(m=0;m<=k-1-l;m++)
				{
					a[i+1][m]=a[i+1][m+l];
					printf("",a[i+1][m]);
				}
			}
			printf("");
		}
		if(j==k)                             
		{
			for(l=0;l<=j-1;l++)
				if(a[i][l]-a[i+1][l]!=0)break;
			if(l==j)printf("");
			else
			{
			    for(l=j;l>=1;l=l-1)
				    a[i][l]=a[i][l-1];
			    a[i][0]=49;
			    for(l=j;l>=1;l=l-1)
			    	a[i+1][l]=a[i+1][l-1];
			    a[i+1][0]=48;
			    for(l=j;l>=0;l=l-1)
				{
			    	if(a[i][l]>=a[i+1][l])a[i][l]=a[i][l]-a[i+1][l]+48;
			    	else 
					{
				    	a[i][l]=a[i][l]+10-a[i+1][l]+48;
				    	a[i][l-1]=a[i][l-1]-1;
					}
				}
		    	if(a[i][0]==49)
				{
		        	if(a[i][1]!=48)
				    for(l=1;l<=j;l++)printf("",a[i][l]);
				    else
					{
				         for(l=1;a[i][l]==48;l++);
			    	    for(m=0;m<=j-l;m++)
						{
					        a[i][m]=a[i][m+l];
					        printf("",a[i][m]);
						}
					}
				}
		    	else
				{
					a[i+1][0]=49;
			    	for(l=1;l<=j;l++)
				        a[i+1][l]=48;
					for(l=j;l>=1;l=l-1)
					{
				        if(a[i+1][l]>=a[i][l])a[i+1][l]=a[i+1][l]-a[i][l]+48;
				        else 
						{
					        a[i+1][l]=a[i+1][l]+10-a[i][l]+48;
					        a[i+1][l-1]=a[i+1][l-1]-1;
						}
					}
					printf("");
					for(l=0;a[i+1][l]!=48;l++);
					for(k=l+1;k<=j;k++)printf("",a[i+1][k]);
				}
			} 
			printf("");
		}
	}	
}

1000075
main()
{
      char a;
      int x=1,y=1,l=1; 
      struct integer * p,*q,*p1,*head;
      head=p=q=(struct integer *)malloc(sizeof(struct integer));
      p=NULL;
      creat(head);
      scanf("",&a);
      while(0<=(a-'')&&(a-'')<=9||a=='')
      {
                                           p1=(struct integer *)malloc(sizeof(struct integer));
                                           if(a=='')
                                           {
                                                     x=-1; 
                                                     scanf("",&a);
                                                     continue;
                                           }
                                           else
                                           {
                                               p1->n=x*(a-''); 
                                               p1->pdown=p;
                                               p1->pup=head; 
                                               if(p!=NULL)
                                               p->pup=p1;
                                               head->pdown=p1;
                                               p=p1;
                                               scanf("",&a);
                                           }
      }
      p=NULL;
      scanf("",&a); 
      while(0<=(a-'')&&(a-'')<=9||a=='')
      {
                                           p1=(struct integer *)malloc(sizeof(struct integer));
                                           if(a=='')
                                           {
                                                     y=-1;
                                                     scanf("",&a);
                                                     continue;
                                           }
                                           else
                                           {
                                               p1->n=y*(a-'');
                                               p1->pup=p;
                                               p1->pdown=head;
                                               head->pup=p1;
                                               if(p!=NULL)
                                               p->pdown=p1;
                                               p=p1;
                                               scanf("",&a);
                                           }
      }
      p=q=head;
      while(p->pdown!=NULL&&q->pup!=NULL) 
      {
                                             p=p->pdown;
                                             q=q->pup;
                                             p->n=p->n+q->n;
                                             q->n=p->n; 
      }
      if(p->pdown==NULL&&q->pup!=NULL) 
      {
                                          q=head->pup;
                                          while(q->pup!=NULL)
                                          {
                                                               if(q->n>9) 
                                                               {
                                                                          q->pup->n++;
                                                                          q->n=q->n%10;
                                                               }
                                                               if(q->n<0) 
                                                               {
                                                                          q->pup->n--;
                                                                          q->n=q->n+10;
                                                               }
                                          q=q->pup;
                                          }
                                          if(y<0)
                                          printf(""); 
                                          while(q->n==0&&q!=head->pup) 
                                          q=q->pdown;
                                          while(q!=head)
                                          {
                                                        printf("",y*(q->n));
                                                        q=q->pdown;
                                          }
                                          while(p!=NULL) 
                                          {
                                                         q=p;
                                                         p=p->pup;
                                                         free(q);
                                          }
      }
      else
      {
          p=head;
          while(p->pdown!=NULL) 
          {
                                 p=p->pdown;
                                 if(p->n>=10&&p->pdown!=NULL)
                                 {
                                                              (p->pdown->n)++;
                                                              p->n=p->n-10;
                                 }
                                 if(p->n<0&&p->pdown!=NULL)
                                 {
                                                            (p->pdown->n)--;
                                                            p->n=p->n+10;
                                 }
          }
          if(p->n<0)
          {
                    printf("");
                    l=-1;
                    }
                    while(p->n==0&&p!=head->pdown) 
                    p=p->pup;
                    while(p!=head) 
                    {
                                   printf("",l*(p->n));
                                   p=p->pup;
                    }
                    while(q!=NULL) 
                    {
                                   p=q;
                                   q=q->pdown;
                                   free(p);
                    }
          }
}


1000076
main()
{
      char N[100],Result[100];
      int Z[100];
      memset(N,0,sizeof(N));
      memset(Result,0,sizeof(Result));
      memset(Z,0,sizeof(Z));
      scanf("",&N);
      int i=0;
      int j=0;
      int k=0;
      int b,c,d;
      int e,g;
      int a=strlen(N);
      g=1;
      if(a==1){
               printf("");
               printf("",N[0]-'');
               }
      else{
           e=N[0]-'';
           c=N[1]-'';
           while(g==1){
                       if((e*10+c)<13){
                                       if(a==2){
                                                printf("");
                                                printf("",e*10+c);
                                                break;
                                                }
                                       else{
                                            e=e*10+c;
                                            i=1;
                                            }
                                       }
                       while(i<=(a-2)){
                                       b=e;
                                       c=N[i+1]-'';
                                       d=b*10+c;
                                       Z[j]=d/13;
                                       e=d%13;
                                       i++;
                                       j++;
                                       }
                       if(i==(a-1)){
                                    b=e;
                                    c=N[i+1]-'';
                                    d=b*10+c;
                                    Z[j]=d/13;
                                    j++;
                                    }
                       while(k<=(j-2)){
                                       Result[k]=Z[k]+'';
                                       k++;
                                       }
                       printf("",Result);
                       printf("",e);
                       g=0;
                       }
           }
      
      return 0;
}


1000077
main()
{
	int startyear,startmonth,startday,endyear,endmonth,endday,i,j=0,sum;
	cin>>startyear>>startmonth>>startday>>endyear>>endmonth>>endday;
	int a[12]={31,59,90,120,151,181,212,243,273,304,334,365},b[12]={31,60,91,121,152,181,213,244,274,305,335,366};
	if(startyear!=endyear&&startyear+1!=endyear)
	{
		for(i=startyear+1;i<endyear;i++)
			if((i%4 == 0 && i % 100 != 0)||(i % 400 == 0))
				j++;
		if(startyear%4==0&&startyear%100!=0||startyear%400==0)
		{
			if(endyear%4==0&&endyear%100!=0||endyear%400==0)
			{
				if(startmonth!=1)
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+j+b[11]-b[startmonth-2]-startday+b[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+j+b[11]-b[startmonth-2]-startday+endday;
				}
				else
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+j+b[11]-startday+b[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+j+b[11]-startday+endday;
				}
			}
			else
			{
				if(startmonth!=1)
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+j+b[11]-b[startmonth-2]-startday+a[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+j+b[11]-b[startmonth-2]-startday+endday;
				}
				else
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+j+b[11]-startday+a[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+j+b[11]-startday+endday;
				}
			}
		}
		else
		{
			if(endyear%4==0&&endyear%100!=0||endyear%400==0)
			{
				if(startmonth!=1)
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+j+a[11]-a[startmonth-2]-startday+b[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+j+a[11]-a[startmonth-2]-startday+endday;
				}
				else
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+j+a[11]-startday+b[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+j+a[11]-startday+endday;
				}
			}
			else
			{
				if(startmonth!=1)
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+j+a[11]-a[startmonth-2]-startday+a[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+j+a[11]-a[startmonth-2]-startday+endday;
				}
				else
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+j+a[11]-startday+a[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+j+a[11]-startday+endday;
				}
			}
		}
	}
	if(startyear+1==endyear)
	{
		if(startyear%4==0&&startyear%100!=0||startyear%400==0)
		{
			if(endyear%4==0&&endyear%100!=0||endyear%400==0)
			{
				if(startmonth!=1)
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+b[11]-b[startmonth-2]-startday+b[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+b[11]-b[startmonth-2]-startday+endday;
				}
				else
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+b[11]-startday+b[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+b[11]-startday+endday;
				}
			}
			else
			{
				if(startmonth!=1)
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+b[11]-b[startmonth-2]-startday+a[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+b[11]-b[startmonth-2]-startday+endday;
				}
				else
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+b[11]-startday+a[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+b[11]-startday+endday;
				}
			}
		}
		else
		{
			if(endyear%4==0&&endyear%100!=0||endyear%400==0)
			{
				if(startmonth!=1)
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+a[11]-a[startmonth-2]-startday+b[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+a[11]-a[startmonth-2]-startday+endday;
				}
				else
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+a[11]-startday+b[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+a[11]-startday+endday;
				}
			}
			else
			{
				if(startmonth!=1)
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+a[11]-a[startmonth-2]-startday+a[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+a[11]-a[startmonth-2]-startday+endday;
				}
				else
				{
					if(endmonth!=1)
						sum=(endyear-startyear-1)*365+a[11]-startday+a[endmonth-2]+endday;
					else
						sum=(endyear-startyear-1)*365+a[11]-startday+endday;
				}
			}
		}
	}
	if(startyear==endyear)
	{
		if(startyear%4==0&&startyear%100!=0||startyear%400==0)
		{
			if(startmonth!=1)
				sum=b[endmonth-2]+endday-b[startmonth-2]-startday;
			if(startmonth==1)
			{
				if(endmonth==1)
					sum=endday-startday;
				else
					sum=b[endmonth-2]+endday-startday;
			}
		}
		else
		{
			if(startmonth!=1)
				sum=a[endmonth-2]+endday-a[startmonth-2]-startday;
			if(startmonth==1)
			{
				if(endmonth==1)
					sum=endday-startday;
				else
					sum=a[endmonth-2]+endday-startday;
			}
		}
	}
	cout<<sum<<endl;
	return 0;
}


1000078
main()
{
    int num,i,j;
    char a='';
    int count[27]={0};
    int *p=&count[1];
    scanf("",&num);
    struct book
    {
           char order[4];
           char author[26];
    }book[1000];
    for(i=0;i<num;i++)
    {
                      scanf("",book[i].order);
                      scanf("",book[i].author);
    }
    for(i=0;i<num;i++)
    {
                      int m=strlen(book[i].author);
                      for(j=0;j<m;j++)
                      {
                                      if(book[i].author[j]=='')count[1]++;
                                      if(book[i].author[j]=='')count[2]++;
                                      if(book[i].author[j]=='')count[3]++;
                                      if(book[i].author[j]=='')count[4]++;
                                      if(book[i].author[j]=='')count[5]++;
                                      if(book[i].author[j]=='')count[6]++;
                                      if(book[i].author[j]=='')count[7]++;
                                      if(book[i].author[j]=='')count[8]++;
                                      if(book[i].author[j]=='')count[9]++;
                                      if(book[i].author[j]=='')count[10]++;
                                      if(book[i].author[j]=='')count[11]++;
                                      if(book[i].author[j]=='')count[12]++;
                                      if(book[i].author[j]=='')count[13]++;
                                      if(book[i].author[j]=='')count[14]++;
                                      if(book[i].author[j]=='')count[15]++;
                                      if(book[i].author[j]=='')count[16]++;
                                      if(book[i].author[j]=='')count[17]++;
                                      if(book[i].author[j]=='')count[18]++;
                                      if(book[i].author[j]=='')count[19]++;
                                      if(book[i].author[j]=='')count[20]++;
                                      if(book[i].author[j]=='')count[21]++;
                                      if(book[i].author[j]=='')count[22]++;
                                      if(book[i].author[j]=='')count[23]++;
                                      if(book[i].author[j]=='')count[24]++;
                                      if(book[i].author[j]=='')count[25]++;
                                      if(book[i].author[j]=='')count[26]++;
                      }
    }
    for(i=1;i<27;i++)
    {
                     if(count[i]>*p)
                     {
                                         p=&count[i];
                                         a=i+64;
                     }
    }
    printf("",a,*p);
    for(i=0;i<num;i++)
    {
                      for(j=0;j<strlen(book[i].author);j++)
                      {
                                                           if(book[i].author[j]==a)
                                                           printf("",book[i].order);
                      }
    }
   
    return 0;
}


1000079

main()
{
      char a;
      int x=1,y=1,z=1; 
      struct integer *p1,*p2,*p3,*head;
      head=p1=p2=(struct integer *)malloc(sizeof(struct integer));
      p1=NULL;
      creat(head);
      scanf("",&a);
      while(0<=(a-'')&&(a-'')<=9||a=='')
      {
                                           p3=(struct integer *)malloc(sizeof(struct integer));
                                           if(a=='')
                                           {
                                                     x=-1; 
                                                     scanf("",&a);
                                                     continue;
                                           }
                                           else
                                           {
                                               p3->n=x*(a-''); 
                                               p3->pdown=p1;
                                               p3->pup=head; 
                                               if(p1!=NULL)
                                               p1->pup=p3;
                                               head->pdown=p3;
                                               p1=p3;
                                               scanf("",&a);
                                           }
      }
      p1=NULL;
      scanf("",&a); 
      while(0<=(a-'')&&(a-'')<=9||a=='')
      {
                                           p3=(struct integer *)malloc(sizeof(struct integer));
                                           if(a=='')
                                           {
                                                     y=-1;
                                                     scanf("",&a);
                                                     continue;
                                           }
                                           else
                                           {
                                               p3->n=y*(a-'');
                                               p3->pup=p1;
                                               p3->pdown=head;
                                               head->pup=p3;
                                               if(p1!=NULL)
                                               p1->pdown=p3;
                                               p1=p3;
                                               scanf("",&a);
                                           }
      }
      p1=p2=head;
      while(p1->pdown!=NULL&&p2->pup!=NULL) 
      {
                                             p1=p1->pdown;
                                             p2=p2->pup;
                                             p1->n=p1->n+p2->n;
                                             p2->n=p1->n; 
      }
      if(p1->pdown==NULL&&p2->pup!=NULL) 
      {
                                         p2=head->pup;
                                          while(p2->pup!=NULL)
                                          {
                                                               if(p2->n>9) 
                                                               {
                                                                          p2->pup->n++;
                                                                          p2->n=p2->n%10;
                                                               }
                                                               if(p2->n<0) 
                                                               {
                                                                          p2->pup->n--;
                                                                          p2->n=p2->n+10;
                                                               }
                                          p2=p2->pup;
                                          }
                                          if(y<0)
                                          printf(""); 
                                          while(p2->n==0&&p2!=head->pup) 
                                          p2=p2->pdown;
                                          while(p2!=head)
                                          {
                                                        printf("",y*(p2->n));
                                                        p2=p2->pdown;
                                          }
                                          while(p1!=NULL) 
                                          {
                                                         p2=p1;
                                                         p1=p1->pup;
                                                         free(p2);
                                          }
      }
      else
      {
          p1=head;
          while(p1->pdown!=NULL) 
          {
                                 p1=p1->pdown;
                                 if(p1->n>=10&&p1->pdown!=NULL)
                                 {
                                                              (p1->pdown->n)++;
                                                              p1->n=p1->n-10;
                                 }
                                 if(p1->n<0&&p1->pdown!=NULL)
                                 {
                                                            (p1->pdown->n)--;
                                                            p1->n=p1->n+10;
                                 }
          }
          if(p1->n<0)
          {
                    printf("");
                    z=-1;
                    }
                    while(p1->n==0&&p1!=head->pdown) 
                    p1=p1->pup;
                    while(p1!=head) 
                    {
                                   printf("",z*(p1->n));
                                   p1=p1->pup;
                    }
                    while(p2!=NULL) 
                    {
                                   p1=p2;
                                   p2=p2->pdown;
                                   free(p1);
                    }
          }
getchar();
getchar();
getchar();
getchar();
getchar();
getchar();
getchar();
getchar();
getchar();
getchar();
getchar();
}


1000080
jin ( char *ci,char *ai ,int k)
{
	if ( k != 0 )
	{
		
		ai[k] -= 10;
		ai[k-1]++;
		if ( ai[k-1] < 58 && ai[k-1] >=48)
		{
			
			return;
		}
		if ( ai[k-1] >= 58 && k != 0)
		{
			jin ( ci,ai,k-1);
		}
	}
	if ( k == 0)
	{
		
		ai[k] -= 10;
		ci[0] = 49;
	}
}

jin2 ( char *ci,char *bi ,int j)
{
	if ( j != 0 )
	{
		
		bi[j] -= 10;
		bi[j-1]++;
		if ( bi[j-1] < 58 && bi[j-1] >=48)
		{
			
			return;
		}
		if ( bi[j-1] >= 58 && j != 0)
		{
			jin ( ci,bi,j-1);
		}
	}
	if ( j == 0)
	{
		
		bi[j] -= 10;
		ci[0] = 49;
	}
}



main()
{
	char a[n];
	char b[n];
	char *ai;
	char *bi;
	char *ci;
	ai = &a[0];
	bi = &b[0];
	scanf("",ai);
	scanf("",bi);
	int i = 0;
	int k = 0;
	do
	{
		if ( a[i] != '\0' )
		{
			i++;
		}
	}while( a[i] != '\0');
	k = i;
	int j;
	i = 0;
	do
	{
		if ( b[i] != '\0' )
		{
			i++;
		}
	}while( b[i] != '\0');
	j = i;
	if ( k >= j )
	{
		ci = (char*) malloc( (k+2) * sizeof(char));
		ci[k+1] = '\0';
		for ( ; k >= 1 ;k--,j-- )
		{
			if ( j >= 1 )
			{
				ci[k] = a[k-1] + b[j-1] -48;
				if ( ci[k] >= 58 )
				{
					ci[k] -= 10;
		            if ( k != 1)
					{
						ai[k-2]++;
						if ( ai[k-2] >= 58 )
						{
							jin ( ci,ai, k-2 );
						}
					}
					if ( k == 1 )
					{
						ci[0] = 49;
					}
				}
			}
			if ( j < 1 )
			{
				ci[k] = a[k-1];
			}
		}
		i = 0;
		int l = 0;
		do
		{
			if ( ci[i] >= 49 && ci[i] <= 57 && ci[i] != '\0' && l == 0)
			{
				printf("",ci[i]);
				l++;
				i++;
			}
			if ( ci[i] >= 48 && ci[i] <= 57 && ci[i] != '\0' && l == 1)
			{
				printf("",ci[i]);
				i++;
			}
			else
			{
				i++;
			}
		}while( ci[i] != '\0');
		printf("");
		free(ci);
	}
	if ( k < j )
	{
		ci = (char*) malloc( (j+2) * sizeof(char));
		ci[j+1] = '\0';
		for ( ; j >= 1 ;j--,k-- )
		{
			if ( k >= 1 )
			{
				ci[j] = b[j-1] + a[k-1] -48;
				if ( ci[j] >= 58 )
				{
					ci[j] -= 10;
		            if ( j != 1)
					{
						bi[j-2]++;
						if ( bi[j-2] >= 58 )
						{
							jin2 ( ci,bi, j-2 );
						}
					}
					if ( j == 1 )
					{
						ci[0] = 49;
					}
				}
			}
			if ( k < 1 )
			{
				ci[j] = b[j-1];
			}
		}
		i = 0;
		int l = 0;
		do
		{
			if ( ci[i] >= 49 && ci[i] <= 57 && ci[i] != '\0' && l == 0)
			{
				printf("",ci[i]);
				l++;
				i++;
			}
			if ( ci[i] >= 48 && ci[i] <= 57 && ci[i] != '\0' && l == 1)
			{
				printf("",ci[i]);
				i++;
			}
			else
			{
				i++;
			}
		}while( ci[i] != '\0');
		printf("");
		free(ci);
	}
	return 0;
}

1000081



main()
{
      int m,n,c,b,x,p,q,u,shuliang=0;
      int dayin;
      scanf("",&m,&n);
      for(int i=m;i<=n;i++)
      {
              float o;
              o=(float)i;
              c=(int)sqrt(o);
              int d=0,e=1;
              for(int k=2;k<=c;k++)
              {
                      if(i%k==0)
                      d++;
              }
              
              
              if(d==0)
              {       
                      e=0; 
                      x=1;
                      dayin=i;
                      for(;dayin!=0;)
                      {
                                e++;
                                dayin=dayin/10;
                      }
                      
                      
                      if(e%2==0)
                      {
                              for(int l=1;l<=e/2;l++)
                        {
                              x=x*10;
                        }
                        p=i%x;
                        q=i/x;
                      
                        int g[e/2+1],h[e/2+1],u=1;
                        for(int l=1;l<=(e-1)/2;l++)
                        g[l]=0;
                        for(int l=1;l<=e/2;l++)
                        {     
                              u=u*10; 
                              g[l]=p%u;
                              h[l]=q%u;
                        }
                        
                        b=0;
                        for(int l=1;l<=e/2;l++)
                        {
                              if(g[l]!=h[e/2+1-l])
                              b++;
                        }
                      }
                      
                      
                      if(e%2!=0)
                      {
                              for(int l=1;l<=(e-1)/2;l++)
                        {
                              x=x*10;
                        }
                        p=i%x;
                        q=i/(x*10);
                      
                        int g[100],h[100];
                        for(int l=1;l<=(e-1)/2;l++)
                        g[l]=0;
                        
                        u=10;
                        
                        for(int l=1;l<=(e-1)/2;l++)
                        {
                               
                              g[l]=p%u;
                              p=p/10;
                              h[l]=q%u;
                              q=q/10;
                        }
                        b=0;
                        
                        for(int l=1;l<=(e-1)/2;l++)
                        {
                              if(g[l]!=h[((e-1)/2-l+1)])
                              b++;
                        }
                      }
                      
                      
                      
                      if(b==0)
                      {
                              shuliang++;
                              if(shuliang==1) 
                              printf("",i);
                              printf("",i);
                      } 
                           
                      
              }
      }
      if(shuliang==0)
      {
      printf("");
      } 
      getchar();getchar();

}


1000082
main()
{
        int year1,month1,day1,year2,month2,day2;
        int passday1,passday2;
        scanf("",&year1,&month1,&day1);
        scanf("",&year2,&month2,&day2);

        int Feb1,Feb2;
        int passday=0;
        int i;

        if((year1%4==0&&year1%100!=0)||year1%400==0) Feb1=29;
        else Feb1=28;
        if((year2%4==0&&year2%100!=0)||year2%400==0) Feb2=29;
        else Feb2=28;

        
        switch(month1)
        {
    case(1):
                passday1=337+Feb1-day1;
                break;
        case(2):
                passday1=306+Feb1-day1;
                break;
        case(3):
                passday1=306-day1;
                break;
        case(4):
                passday1=275-day1;
                break;
        case(5):
                passday1=245-day1;
                break;
        case(6):
                passday1=214-day1;
                break;
        case(7):
                passday1=184-day1;
                break;
        case(8):
                passday1=153-day1;
                break;
        case(9):
                passday1=122-day1;
                break;
        case(10):
                passday1=92-day1;
                break;
        case(11):
                passday1=61-day1;
                break;
        case(12):
                passday1=31-day1;
                break;
        }

        for(i=year1+1;i<year2;i++)
        {
				
                if ((i%4==0&&i%100!=0)||i%400==0) passday+=366;
                else passday+=365;
        }

        switch(month2)
        {
        case(1):
                passday2=day2;
                break;
        case(2):
                passday2=31+day2;
                break;
        case(3):
                passday2=31+Feb2+day2;
                break;
        case(4):
                passday2=62+Feb2+day2;
                break;
        case(5):
                passday2=92+Feb2+day2;
                break;
        case(6):
                passday2=123+Feb2+day2;
                break;
        case(7):
                passday2=153+Feb2+day2;
                break;
        case(8):
                passday2=184+Feb2+day2;
                break;
        case(9):
                passday2=215+Feb2+day2;
                break;
        case(10):
                passday2=245+Feb2+day2;
                break;
        case(11):
                passday2=276+Feb2+day2;
                break;
        case(12):
                passday2=306+Feb2+day2;
                break;
        }
        passday=passday+passday1+passday2;
		if(year1 == year2){
			if((year1%4==0&&year1%100!=0)||year1%400==0)
				passday -= 366;
			else
				passday -= 365;
		}
        printf("",passday);
        return 0;
}


1000083
main()
{
    char child[110]={'\0'};
    int  ch[110]={0},dou[110][2]={0};
    int m=0,i,count=0,j=0;
    while(cin>>child[m])
    {
       if(cin.peek()=='\n')
          break;
       m++;                    
    } 

    for(i=0;i<=m;i++)
    {
       if(child[i]==child[0])
           ch[i]=1;
       else
           ch[i]=2;                 
    } 
 
     int p;
        for(i=0;i<m;i++)
        {
           if(ch[i]==1&&ch[i+1]==2)
           {
              dou[j][0]=i;
              dou[j][1]=i+1;
              j++;
              ch[i]=0;
              ch[i+1]=0;                      
           }                 
        }
        
     int t;
      for(p=0;p<=m/2;p++)
      {
        for(i=0;i<m;i++)
           for(t=1;t<m-i+1;t++)
           {
              if(ch[i]==1)
              {
                 if(ch[i+t]==0)
                    continue;
                 if(ch[i+t]==1)
                    break;
                 else
                 {
                      dou[j][0]=i;
                      dou[j][1]=i+t;
                    
                      j++;
                      ch[i]=0;
                      ch[i+t]=0;
                         
                 }              
              }        
           }
           if(dou[m/2][1]!=0)
           break;
        }
   for(j=0;j<=m/2;j++)
      for(i=0;i<=m/2-j-1;i++)
      {
         if(dou[i][1]>dou[i+1][1])
         {
            p=dou[i][0];
            dou[i][0]=dou[i+1][0];
            dou[i+1][0]=p;
            p=dou[i][1];
            dou[i][1]=dou[i+1][1];
            dou[i+1][1]=p;                         
         }                     
      }
      for(j=0;j<=m/2;j++)
      if(dou[j][1]!=0) 
       cout<<dou[j][0]<<''<<dou[j][1]<<endl;
   
    return 0; 
}

1000084
main()
{
    int i;
    int a[10];
    reverse(int b);
    for(i=1; i<=6; i++)
    scanf("", &a[i]);
    for(i=1; i<=6; i++)
	{
		a[i]=reverse(a[i]);
		printf("", a[i]);
	}
	return 0;
}

reverse(int b)
{
    int q, w, e, r, t, y, u, i, o, p, rev;
    if(b/1000000000!=0)
    {
        q=b/1000000000;
        w=(b-q*1000000000)/100000000;
        e=(b-q*1000000000-w*100000000)/10000000;
        r=(b-q*1000000000-w*100000000-e*10000000)/1000000;
        t=(b-q*1000000000-w*100000000-e*10000000-r*1000000)/100000;
        y=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000)/10000;
        u=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000)/1000;
        i=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000)/100;
        o=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100)/10;
        p=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100-o*10)/1;
        rev=p*1000000000+o*100000000+i*10000000+u*1000000+y*100000+t*10000+r*1000+e*100+w*10+q;
        return(rev);
    }
    if(b/1000000000==0 && b/100000000!=0)
    {
        q=b/1000000000;
        w=(b-q*1000000000)/100000000;
        e=(b-q*1000000000-w*100000000)/10000000;
        r=(b-q*1000000000-w*100000000-e*10000000)/1000000;
        t=(b-q*1000000000-w*100000000-e*10000000-r*1000000)/100000;
        y=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000)/10000;
        u=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000)/1000;
        i=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000)/100;
        o=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100)/10;
        p=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100-o*10)/1;
        rev=p*100000000+o*10000000+i*1000000+u*100000+y*10000+t*1000+r*100+e*10+w; 
        return(rev);              
    }
    if(b/1000000000==0 && b/100000000==0 && b/10000000!=0)
    {
        q=b/1000000000;
        w=(b-q*1000000000)/100000000;
        e=(b-q*1000000000-w*100000000)/10000000;
        r=(b-q*1000000000-w*100000000-e*10000000)/1000000;
        t=(b-q*1000000000-w*100000000-e*10000000-r*1000000)/100000;
        y=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000)/10000;
        u=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000)/1000;
        i=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000)/100;
        o=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100)/10;
        p=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100-o*10)/1;
        rev=p*10000000+o*1000000+i*100000+u*10000+y*1000+t*100+r*10+e; 
        return(rev);              
    }
    if(b/1000000000==0 && b/100000000==0 && b/10000000==0 && b/1000000!=0)
    {
        q=b/1000000000;
        w=(b-q*1000000000)/100000000;
        e=(b-q*1000000000-w*100000000)/10000000;
        r=(b-q*1000000000-w*100000000-e*10000000)/1000000;
        t=(b-q*1000000000-w*100000000-e*10000000-r*1000000)/100000;
        y=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000)/10000;
        u=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000)/1000;
        i=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000)/100;
        o=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100)/10;
        p=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100-o*10)/1;
        rev=p*1000000+o*100000+i*10000+u*1000+y*100+t*10+r; 
        return(rev);                
    }
    if(b/1000000000==0 && b/100000000==0 && b/10000000==0 && b/1000000==0 && b/100000!=0)
    {
        q=b/1000000000;
        w=(b-q*1000000000)/100000000;
        e=(b-q*1000000000-w*100000000)/10000000;
        r=(b-q*1000000000-w*100000000-e*10000000)/1000000;
        t=(b-q*1000000000-w*100000000-e*10000000-r*1000000)/100000;
        y=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000)/10000;
        u=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000)/1000;
        i=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000)/100;
        o=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100)/10;
        p=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100-o*10)/1;
        rev=p*100000+o*10000+i*1000+u*100+y*10+t; 
        return(rev);                  
    }
    if(b/1000000000==0 && b/100000000==0 && b/10000000==0 && b/1000000==0 && b/100000==0 && b/10000!=0)
    {
        q=b/1000000000;
        w=(b-q*1000000000)/100000000;
        e=(b-q*1000000000-w*100000000)/10000000;
        r=(b-q*1000000000-w*100000000-e*10000000)/1000000;
        t=(b-q*1000000000-w*100000000-e*10000000-r*1000000)/100000;
        y=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000)/10000;
        u=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000)/1000;
        i=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000)/100;
        o=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100)/10;
        p=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100-o*10)/1;
        rev=p*10000+o*1000+i*100+u*10+y; 
        return(rev);               
    }
    if(b/1000000000==0 && b/100000000==0 && b/10000000==0 && b/1000000==0 && b/100000==0 && b/10000==0 && b/1000!=0)
    {
        q=b/1000000000;
        w=(b-q*1000000000)/100000000;
        e=(b-q*1000000000-w*100000000)/10000000;
        r=(b-q*1000000000-w*100000000-e*10000000)/1000000;
        t=(b-q*1000000000-w*100000000-e*10000000-r*1000000)/100000;
        y=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000)/10000;
        u=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000)/1000;
        i=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000)/100;
        o=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100)/10;
        p=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100-o*10)/1;
        rev=p*1000+o*100+i*10+u; 
        return(rev);               
    }
    if(b/1000000000==0 && b/100000000==0 && b/10000000==0 && b/1000000==0 && b/100000==0 && b/10000==0 && b/1000==0 && b/100!=0)
    {
        q=b/1000000000;
        w=(b-q*1000000000)/100000000;
        e=(b-q*1000000000-w*100000000)/10000000;
        r=(b-q*1000000000-w*100000000-e*10000000)/1000000;
        t=(b-q*1000000000-w*100000000-e*10000000-r*1000000)/100000;
        y=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000)/10000;
        u=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000)/1000;
        i=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000)/100;
        o=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100)/10;
        p=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100-o*10)/1;
        rev=p*100+o*10+i; 
        return(rev);               
    }
    if(b/1000000000==0 && b/100000000==0 && b/10000000==0 && b/1000000==0 && b/100000==0 && b/10000==0 && b/1000==0 && b/100==0 && b/10!=0)
    {
        q=b/1000000000;
        w=(b-q*1000000000)/100000000;
        e=(b-q*1000000000-w*100000000)/10000000;
        r=(b-q*1000000000-w*100000000-e*10000000)/1000000;
        t=(b-q*1000000000-w*100000000-e*10000000-r*1000000)/100000;
        y=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000)/10000;
        u=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000)/1000;
        i=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000)/100;
        o=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100)/10;
        p=(b-q*1000000000-w*100000000-e*10000000-r*1000000-t*100000-y*10000-u*1000-i*100-o*10)/1;
        rev=p*10+o; 
        return(rev);               
    }
    if(b/1000000000==0 && b/100000000==0 && b/10000000==0 && b/1000000==0 && b/100000==0 && b/10000==0 && b/1000==0 && b/100==0 && b/10==0)
    {
        rev=b;
        return(rev);
    }
}


1000085
main(){
	int row ,col;
	int ew[100][100];
	int a,b,p,q;
	int i,j;
	int e,f;
	int m,n;
	int min=0;
	scanf("",&row,&col);
	e=row/2;
	f=col/2;
	for(i=0;i<=row-1;i++)
	{
		for(j=0;j<=col-1;j++)
		{
			scanf("",&ew[i][j]);
		}
	}
	if(row%2==0&&col%2==0)
	{
		if(e>f)
		{
			min=f;
		}
		if(e<=f)
		{
			min=e;
		}
	}
	if(row%2==1&&col%2==1){
		if(e+1>f+1)
		{
			min=f+1;
		}
		if(e+1<=f+1)
		{
			min=e+1;
		}
	}
	
	
	if(row%2==1&&col%2==0)
	{
		if(e+1>f)
		{
			min=f;
		}
		if(e+1<=f)
		{
			min=e+1;
		}
	}
	if(row%2==0&&col%2==1)
	{
		if(e>f+1)
		{
			min=f+1;
		}
		if(e<=f+1)
		{
			min=e;
		}
	}
	if((row%2==0&&col%2==0)||((row%2==1&&col%2==0)&&(e+1>f))||((row%2==0&&col%2==1)&&(f+1>e)))
	{	
		
		
		
		for(i=0;i<=min-1;i++)
		{
			for(a=i;a<=col-i-2;a++)
			{
				printf("",ew[i][a]);
			}
			for(b=i;b<=row-i-2;b++)
			{
				printf("",ew[b][col-1-i]);
			}
			for(p=col-i-1;p>=i+1;p--)
			{
				printf("",ew[row-i-1][p]);
			}for(q=row-1-i;q>=i+1;q--)
			{
				printf("",ew[q][i]);
			}
			
		}
	}
	
	if( ((col%2==1)&&(row%2==0)&&(f+1<=e)) || ((col%2==1)&&(row%2==1)&&(f+1<=e+1)))
	{
		
		
		for(i=0;i<=min-2;i++)
		{
			for(a=i;a<=col-i-2;a++)
			{
				printf("",ew[i][a]);
			}
			for(b=i;b<=row-i-2;b++)
			{
				printf("",ew[b][col-1-i]);
			}
			for(p=col-i-1;p>=i+1;p--)
			{
				printf("",ew[row-i-1][p]);
			}for(q=row-1-i;q>=i+1;q--)
			{
				printf("",ew[q][i]);
			}
			
		}
		
		
		for(m=min-1;m<=row-min;m++)
		{
			printf("",ew[m][f]);
		}
	}
	
	if(   ((row%2==1)&&(col%2==0)&&(e+1<=f))   ||    (  (row%2==1)     &&  (col%2==1) && (e+1<f+1) )    )
	{
		for(i=0;i<=min-2;i++)
		{
			for(a=i;a<=col-i-2;a++)
			{
				printf("",ew[i][a]);
			}
			for(b=i;b<=row-i-2;b++)
			{
				printf("",ew[b][col-1-i]);
			}
			for(p=col-i-1;p>=i+1;p--)
			{
				printf("",ew[row-i-1][p]);
			}for(q=row-1-i;q>=i+1;q--)
			{
				printf("",ew[q][i]);
			}
			
		}
		for(n=min-1;n<=col-min;n++)
		{
			printf("",ew[e][n]);
		}
	}
				
				
				
				return 0;
				}
	


1000086
main()
{   
     int i,j=0; 
        int con=0;  
          cin>>a>>str>>b; 
             while(str[len]) 
             len++;   
              for(i=0;i<len;++i)   
               {            
                            if(islower(str[i]))         
                               {                
                                                    num[i]=(int)str[i]-87;        
                                                        }         
                                                           if(isupper(str[i]))  
                                                                    {          
                                                                                         num[i]=(int)str[i]-55;   
                                                                                                  }       
       if(isdigit(str[i]))         
          {                 
                               num[i]=(int)str[i]-48;   
                                        }  
                                          }   
                                           for(i=0;i<len;++i)  
                                             {         
                                                          con+=num[i]*pow(a,(len-i-1)); 
                                                             }    while(con>0)    
                                                             {           
                                                                         res[j]=con%b;    
                                                                                 con-=con%b;   
                                                                                          con/=b;      
                                                                                                j++;   
                                                                                                 }   
                                                                                                  memset(str,0,sizeof(str)); 
                                                                                                     for(i=0;i<j;++i)    {         
                                                                                                                            if(res[i]<10) str[j-i-1]=(char)res[i]+48;   
                                                                                                                                     if(res[i]>=10) str[j-i-1]=(char)res[i]+55; 
                                                                                                                                        }   
                                                                                                                                         if(str[0]==0) str[0]=''; 
                                                                                                                                            cout<<str<<endl;  
                                                                                                                                              return 0;}
                                                                                                                                              pow(int x,int y)
                                                                                                                                              {    int i;  
                                                                                                                                                int res=1;  
                                                                                                                                                  for(i=0;i<y;++i) res*=x;  
                                                                                                                                           return res;
                                                                                                                                           }



1000087
main()
{
	int n;
	scanf("",&n);
	int ii;
	bb = ( struct book * ) malloc ( sizeof ( struct book ) * n );
	for ( ii = 0; ii < n ; ii++ )
	{
		scanf("",&bb[ii].id,bb[ii].author);
	}
	for ( ii = 0 ; ii < n ; ii++ )
	{
		find (ii);
	}
	printf("",maxn);
	printf("",max);

	int jj;
	for ( ii = 0 ; ii < n ; ii++ )
	{
		for ( jj = 0 ; bb[ii].author[jj] != '\0' ; jj++)
		{
			if ( bb[ii].author[jj] == maxn )
			{
				printf("",bb[ii].id);
			}
		}
	}
	free(bb);
	return 0;
}

		







find ( int ii )
{
	int aa = 0;
	for ( aa = 0 ; bb[ii].author[aa] != '\0' ; aa++ )
	{
		switch(bb[ii].author[aa])
		{
case '':{a++;if ( a > max ) max = a,maxn = '' ; break;}
case '':{b++;if ( b > max ) max = b,maxn = '' ; break;}
case '':{c++;if ( c > max ) max = c,maxn = '' ; break;}
case '':{d++;if ( d > max ) max = d,maxn = '' ; break;}
case '':{e++;if ( e > max ) max = e,maxn = '' ; break;}
case '':{f++;if ( f > max ) max = f,maxn = '' ; break;}
case '':{g++;if ( g > max ) max = g,maxn = '' ; break;}
case '':{h++;if ( h > max ) max = h,maxn = '' ; break;}
case '':{i++;if ( i > max ) max = i,maxn = '' ; break;}
case '':{j++;if ( j > max ) max = j,maxn = '' ; break;}
case '':{k++;if ( k > max ) max = k,maxn = '' ; break;}
case '':{l++;if ( l > max ) max = l,maxn = '' ; break;}
case '':{m++;if ( m > max ) max = m,maxn = '' ; break;}
case '':{n++;if ( n > max ) max = n,maxn = '' ; break;}
case '':{o++;if ( o > max ) max = o,maxn = '' ; break;}
case '':{p++;if ( p > max ) max = p,maxn = '' ; break;}
case '':{q++;if ( q > max ) max = q,maxn = '' ; break;}
case '':{r++;if ( r > max ) max = r,maxn = '' ; break;}
case '':{s++;if ( s > max ) max = s,maxn = '' ; break;}
case '':{t++;if ( t > max ) max = t,maxn = '' ; break;}
case '':{u++;if ( u > max ) max = u,maxn = '' ; break;}
case '':{v++;if ( v > max ) max = v,maxn = '' ; break;}
case '':{w++;if ( w > max ) max = w,maxn = '' ; break;}
case '':{x++;if ( x > max ) max = x,maxn = '' ; break;}
case '':{y++;if ( y > max ) max = y,maxn = '' ; break;}
case '':{z++;if ( z > max ) max = z,maxn = '' ; break;}
		}
	}
}







1000089
main()
{
int m,n;
scanf("",&m,&n);
int sz[5][9][9];
for(int i=0;i<9;i++)
{
                for(int j=0;j<9;j++)
                {sz[0][i][j]=0;}
                }
                sz[0][4][4]=m;
                
                
                
                for(int t=0;t<n;t++)
{


    for(int k=0;k<9;k++)
    {
            for(int hl=0;hl<9;hl++)
          {
                    if(k!=0&&hl!=0&&k!=8&&hl!=8)
                    {
                     sz[t+1][k][hl]=2*sz[t][k][hl]+sz[t][k][hl-1]+sz[t][k][hl+1]+sz[t][k-1][hl+1]+sz[t][k+1][hl+1]+sz[t][k-1][hl]+sz[t][k-1][hl-1]+sz[t][k+1][hl]+sz[t][k+1][hl-1];
                                                }
                    if(k==0&&hl!=0&&hl!=8)
                    {sz[t+1][0][hl]=2*sz[t][0][hl]+sz[t][0][hl-1]+sz[t][0][hl+1]+sz[t][1][hl+1]+sz[t][1][hl]+sz[t][1][hl-1];
                                         }
                    if(k==8&&hl!=0&&hl!=8)
                    {sz[t+1][8][hl]=2*sz[t][8][hl]+sz[t][8][hl-1]+sz[t][8][hl+1]+sz[t][7][hl+1]+sz[t][7][hl]+sz[t][7][hl-1];
                                         }
                    if(k!=0&&hl==0&&k!=8)
                    {
                     sz[t+1][k][0]=2*sz[t][k][0]+sz[t][k][1]+sz[t][k-1][1]+sz[t][k+1][1]+sz[t][k-1][0]+sz[t][k+1][0];
                                                }
                    if(k!=0&&hl==8&&k!=8)
                    {
                     sz[t+1][k][8]=2*sz[t][k][8]+sz[t][k][7]+sz[t][k-1][7]+sz[t][k+1][7]+sz[t][k-1][8]+sz[t][k+1][8];
                                                }
                    if(k==0&&hl==0)
                    {
                     sz[t+1][0][0]=2*sz[t][0][0]+sz[t][0][1]+sz[t][1][1]+sz[t][1][0];
                                                }
                    if(k==0&&hl==8)
                    {
                     sz[t+1][0][8]=2*sz[t][0][8]+sz[t][0][7]+sz[t][1][7]+sz[t][1][8];
                                                }
                                                
                                                
                   if(k==8&&hl==0)
                    {
                     sz[t+1][8][0]=2*sz[t][8][0]+sz[t][8][1]+sz[t][7][1]+sz[t][7][0];
                                                }
                    if(k==8&&hl==8)
                    {
                     sz[t+1][8][8]=2*sz[t][8][8]+sz[t][8][7]+sz[t][7][7]+sz[t][7][8];
                                                }
                                                
                                                
                    
          }
          
    }
}
                
                
                
                
                for(int row=0;row<9;row++)
                {
                for(int lo=0;lo<8;lo++)
                {printf("",sz[n][row][lo]);}
                printf("",sz[n][row][8]);
                        }

      

	return 0;
}

1000090
main()
 {
     int a,b,c,d,e,f,x=0,i,j;
     scanf("",&a,&b,&c);
     scanf("",&d,&e,&f);
     if(a==d){
              if(b==e){
                       x=f-c;}
              else{
                   for(i=b;i<=e;i++){
                                     if(i==4||i==6||i==9||i==11){
                                                                 if(i==b){
                                                                          x=30-c;
                                                                          continue;}
                                                                  else {if(i==e){
                                                                          x=x+f;
                                                                          continue;}
                                                                 else{
                                                                      x=x+30;
                                                                      continue;}
                                                                      }}
                                    else{ if(i==2){
                                               if(i==b){
                                                        x=28-c;
                                                        continue;
                                                        }
                                               else {if(i==e){
                                                        x=x+f;
                                                        continue;
                                                        }
                                               else{
                                                    x=x+28;
                                                    continue;
                                                    }}
                                             }
                                     else{
                                          
                                          if(i==b){
                                                   x=31-c;
                                                   continue;}
                                          if(i==e){
                                                   x=x+f;
                                                   continue;
                                                   }
                                          else{
                                               x=x+31;
                                               continue;}
                                          }}
                                   
                                     }
                  if(((a%4==0&&a%100!=0)||(a%400==0))&&(b<=2)&&(e>2))
                  x++;
                  
                  }
                  }
      else{
           for(j=a;j<=d;j++){
                             if(j==a){
                                     for(i=b;i<=12;i++){
                                                       
                                     if(i==4||i==6||i==9||i==11){
                                                                 if(i==b){
                                                                          x=30-c;
                                                                          continue;}
                                                                 else{
                                                                      x=x+30;
                                                                      continue;}
                                                                      }
                                     else {if(i==2){
                                               if(i==b){
                                                        x=28-c;
                                                        continue;}
                                               else{
                                                    x=x+28;
                                                    continue;}
                                             }
                                     else{
                                          if(i==b){
                                                   x=31-c;
                                                   continue;}
                                          else{
                                               x=x+31;
                                               continue;}
                                          }}
                                     }
                  if(((a%4==0&&a%100!=0)||(a%400==0))&&(b<=2))
                  x++;
  
                  }
                   else {
                        
                         if(j==d){
                            for(i=1;i<=e;i++){
                                                                                     if(i==4||i==6||i==9||i==11){
                                                                 if(i==e){
                                                                          x=x+f;
                                                                          continue;}
                                                                 else{
                                                                      
                                                                      x=x+30;
                                                                       
                                                                      continue;}
                                                                      }
                                    else{ if(i==2){
                                               if(i==e){
                                                        x=x+f;
                                                        continue;}
                                               else{
                                                    x=x+28;
                                                    continue;}
                                             }
                                     else{
                                          if(i==e){
                                                   x=x+f;
                                                   continue;}
                                          else{
                                               x=x+31;
                                               continue;}
                                          } }    
                             
                             }
                             if(((d%4==0&&d%100!=0)||(d%400==0))&&(e>2))
                             x++;
                            
                             }
      else{
          
           if((j%4==0&&j%100!=0)||(j%400==0)){
                                              x=x+366;
                                              
                                              continue;}
                                              else{
                                              x=x+365;
                                              continue;}
                                              }}
             }
            
             }
     printf("",x);
     return 0;
     }          
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                                                     
                                                     
                                                     


1000091
main()
{
	char str[300];
	int word[27];
	int i,S=0;
	scanf("",str);
	for(i=0;i<27;i++){
		word[i]=0;
	}
	for(i = 0 ; i<strlen(str) ; i++){
		if(str[i]==''){
			word[1]++;
		}
		if(str[i]==''){
			word[2]++;
		}
		if(str[i]==''){
			word[3]++;
		}
		if(str[i]==''){
			word[4]++;
		}
		if(str[i]==''){
			word[5]++;
		}
		if(str[i]==''){
			word[6]++;
		}
		if(str[i]==''){
			word[7]++;
		}
		if(str[i]==''){
			word[8]++;
		}
		if(str[i]==''){
			word[9]++;
		}
		if(str[i]==''){
			word[10]++;
		}
		if(str[i]==''){
			word[11]++;
		}
		if(str[i]==''){
			word[12]++;
		}
		if(str[i]==''){
			word[13]++;
		}
		if(str[i]==''){
			word[14]++;
		}
		if(str[i]==''){
			word[15]++;
		}
		if(str[i]==''){
			word[16]++;
		}
		if(str[i]==''){
			word[17]++;
		}
		if(str[i]==''){
			word[18]++;
		}
		if(str[i]==''){
			word[19]++;
		}
		if(str[i]==''){
			word[20]++;
		}
		if(str[i]==''){
			word[21]++;
		}
		if(str[i]==''){
			word[22]++;
		}
		if(str[i]==''){
			word[23]++;
		}
		if(str[i]==''){
			word[24]++;
		}
		if(str[i]==''){
			word[25]++;
		}
		if(str[i]==''){
			word[26]++;
		}
	}
	for(i=1;i<27;i++){
		S+=word[i];
	}
	if(S==0){
		printf("");
	}
	if(word[1]!=0){
		printf("",word[1]);
	}
	if(word[2]!=0){
		printf("",word[2]);
	}
	if(word[3]!=0){
		printf("",word[3]);
	}
	if(word[4]!=0){
		printf("",word[4]);
	}
	if(word[5]!=0){
		printf("",word[5]);
	}
	if(word[6]!=0){
		printf("",word[6]);
	}
	if(word[7]!=0){
		printf("",word[7]);
	}
	if(word[8]!=0){
		printf("",word[8]);
	}
	if(word[9]!=0){
		printf("",word[9]);
	}
	if(word[10]!=0){
		printf("",word[10]);
	}
	if(word[11]!=0){
		printf("",word[11]);
	}
	if(word[12]!=0){
		printf("",word[12]);
	}
	if(word[13]!=0){
		printf("",word[13]);
	}
	if(word[14]!=0){
printf("",word[14]);
	}
	if(word[15]!=0){
		printf("",word[15]);
	}
	if(word[16]!=0){
		printf("",word[16]);
	}
	if(word[17]!=0){
		printf("",word[17]);
	}
	if(word[18]!=0){
		printf("",word[18]);
	}
	if(word[19]!=0){
		printf("",word[19]);
	}
	if(word[20]!=0){
		printf("",word[20]);
	}
	if(word[21]!=0){
		printf("",word[21]);
	}
	if(word[22]!=0){
		printf("",word[22]);
	}
	if(word[23]!=0){
		printf("",word[23]);
	}
	if(word[24]!=0){
		printf("",word[24]);
	}
	if(word[25]!=0){
		printf("",word[25]);
	}
	if(word[26]!=0){
		printf("",word[26]);
	}
    return 0;
}




1000092
main() {
	int n;
	cin >> n;
	int point[10][3] = {0}; 
	float distance[45][3] = {0}; 
	for(int i = 0; i < n; i++)
		for(int j = 0; j < 3; j++)
			cin >> point[i][j];
	int count = 0; 
	for(int i = 0; i < n - 1; i++)
		for(int j = i + 1; j < n; j++) {   
			distance[count][0] = i;
			distance[count][1] = j;
			distance[count][2] = sqrt((float)(point[i][0] - point[j][0])*(point[i][0] - point[j][0]) + (point[i][1] - point[j][1])*(point[i][1] - point[j][1]) +(point[i][2] - point[j][2])*(point[i][2] - point[j][2]));
			count++;
		}
	float temp = 0;
	for(int i = 0; i < count - 1; i++) 
		for(int j = i + 1; j < count ; j++) {
			if(distance[i][2] < distance[j][2]) {
				temp = distance[i][0];
			    distance[i][0] = distance[j][0];
				distance[j][0] = temp;
				temp = distance[i][1];
			    distance[i][1] = distance[j][1];
				distance[j][1] = temp;
				temp = distance[i][2];
			    distance[i][2] = distance[j][2];
				distance[j][2] = temp;
			}
			if(distance[i][2] == distance[j][2]) {
				if(distance[i][0] > distance[j][0]) {
					temp = distance[i][0];
			        distance[i][0] = distance[j][0];
				    distance[j][0] = temp;
				    temp = distance[i][1];
			        distance[i][1] = distance[j][1];
				    distance[j][1] = temp;
				    temp = distance[i][2];
			        distance[i][2] = distance[j][2];
				    distance[j][2] = temp;
				}
				if(distance[i][1] > distance[j][1]) {
					temp = distance[i][0];
			        distance[i][0] = distance[j][0];
				    distance[j][0] = temp;
				    temp = distance[i][1];
			        distance[i][1] = distance[j][1];
				    distance[j][1] = temp;
				    temp = distance[i][2];
			        distance[i][2] = distance[j][2];
				    distance[j][2] = temp;
				}
			}
		}
	for(int i = 0; i < count; i++) {
		printf("", point[(int)distance[i][0]][0],point[(int)distance[i][0]][1],point[(int)distance[i][0]][2],point[(int)distance[i][1]][0],point[(int)distance[i][1]][1],point[(int)distance[i][1]][2],distance[i][2]);

	}
	
	return 0;
}

1000093
main() {
	memset(board, 0, sizeof(board));

	int m, n, i, j, k;
	cin >> m >> n;

	board[4][4] = m;
	for (i = 3; i < 6; i++)
		for (j = 3; j < 6; j++)
			board[i][j] += m;

	int temp[9][9];
	if (n >= 2) {
		memset(temp, 0, sizeof(temp));
		for (i = 3; i < 6; i++)
			for (j = 3; j < 6; j++) {
				board[i][j] *= 2;
				temp[i][j] = board[i][j];
			}
		
		for (i = 3; i < 6; i++)
			for (j = 3; j < 6; j++) {
				board[i - 1][j] += temp[i][j] / 2;
				board[i + 1][j] += temp[i][j] / 2;
				board[i][j + 1] += temp[i][j] / 2;
				board[i][j - 1] += temp[i][j] / 2;
				board[i - 1][j - 1] += temp[i][j] / 2;
				board[i + 1][j + 1] += temp[i][j] / 2;
				board[i - 1][j + 1] += temp[i][j] / 2;
				board[i + 1][j - 1] += temp[i][j] / 2;
			}
	}

	if (n >= 3) {
		memset(temp, 0, sizeof(temp));
		for (i = 2; i < 7; i++)
			for (j = 2; j < 7; j++) {
				board[i][j] *= 2;
				temp[i][j] = board[i][j];
			}
		for (i = 2; i < 7; i++)
			for (j = 2; j < 7; j++) {
				board[i - 1][j] += temp[i][j] / 2;
				board[i + 1][j] += temp[i][j] / 2;
				board[i][j + 1] += temp[i][j] / 2;
				board[i][j - 1] += temp[i][j] / 2;
				board[i - 1][j - 1] += temp[i][j] / 2;
				board[i + 1][j + 1] += temp[i][j] / 2;
				board[i - 1][j + 1] += temp[i][j] / 2;
				board[i + 1][j - 1] += temp[i][j] / 2;
			}
	}

	if (n >= 4) {
		memset(temp, 0, sizeof(temp));
		for (i = 1; i < 8; i++)
			for (j = 1; j < 8; j++) {
				board[i][j] *= 2;
				temp[i][j] = board[i][j];
			}
		for (i = 1; i < 8; i++)
			for (j = 1; j < 8; j++) {
				board[i - 1][j] += temp[i][j] / 2;
				board[i + 1][j] += temp[i][j] / 2;
				board[i][j + 1] += temp[i][j] / 2;
				board[i][j - 1] += temp[i][j] / 2;
				board[i - 1][j - 1] += temp[i][j] / 2;
				board[i + 1][j + 1] += temp[i][j] / 2;
				board[i - 1][j + 1] += temp[i][j] / 2;
				board[i + 1][j - 1] += temp[i][j] / 2;
			}
	}

	printBoard();
	return 0;
}

printBoard() {
	int i, j;
	for (i = 0; i < 9; i++) {
		cout << board[i][0];
		for (j = 1; j < 9; j++)
			cout << "" << board[i][j];
		cout << endl;
	}
}


1000094
main()
{
      int n,i,j=0,k=0,m;
      float a[40],d;
      char c[40][7],b[7];
      scanf("",&n);
      for(i=0;i<n;i++)
      {
                      scanf("",c[i]);
                      if(strcmp(c[i],"")==0)
                      j++;
                      scanf("",&a[i]);
                      }
      for(i=0;i<n;i++)
      {
                      if(strcmp(c[i],"")==0)
                      {
                                      strcpy(b,c[i]);
                                      strcpy(c[i],c[k]);
                                      strcpy(c[k],b);
                                      d=a[i];
                                      a[i]=a[k];
                                      a[k]=d;
                                      k++;
                                      }
                                      }
      for(i=0;i<j-1;i++)
      {
                        for(m=0;m<j-i-1;m++)
                        {
                                            if(a[m]>a[m+1])
                                            {
                                                           d=a[m+1];
                                                           a[m+1]=a[m];
                                                           a[m]=d;
                                                           }
                                                           }
                                                           }
      for(i=j;i<n-1;i++)
      {
                        for(m=j;m<n-i+j-1;m++)
                        {
                                              if(a[m]<a[m+1])
                                              {
                                                             d=a[m+1];
                                                             a[m+1]=a[m];
                                                             a[m]=d;
                                                             }
                                                             }
                                                             }
      printf("",a[0]);
      for(i=1;i<n;i++)
      printf("",a[i]);

      }

1000095
main()
{
    struct student *p0,*p1,*p2,*head,*p;
    int i;
    scanf ("",&n);
    p0=(struct student *)malloc(sizeof(struct student));
    scanf ("",&p0->id,&p0->yuwen,&p0->shuxue);
    p0->total=p0->yuwen+p0->shuxue;
    head=p0;p1=p0;
    p0=(struct student *)malloc(sizeof(struct student));
    scanf ("",&p0->id,&p0->yuwen,&p0->shuxue);
    p0->total=p0->yuwen+p0->shuxue;
    if (p0->total<=p1->total)
    {
        p1->next=p0;
        p1=p0;
    }
    else
    {
        head=p0;
        p0->next=p1;
    }
    p0=(struct student *)malloc(sizeof(struct student));
    scanf ("",&p0->id,&p0->yuwen,&p0->shuxue);
    p0->total=p0->yuwen+p0->shuxue;
    if (p0->total<=p1->total)
    {
        p1->next=p0;
        p2=p0;
    }
    if (p0->total>p1->total&&p0->total<=head->total)
    {
        head->next=p0;
        p0->next=p1;
        p2=p1;
        p1=p0;
    }
    if (p0->total>head->total)
    {
        p0->next=head;
        p2=p1;p1=head;head=p0;
    }
    p2->next=NULL;
    for (i=3;i<n;i++)
    {
        p0=(struct student *)malloc(sizeof(struct student));
        scanf ("",&p0->id,&p0->yuwen,&p0->shuxue);
        p0->total=p0->yuwen+p0->shuxue;
        if (p0->total>p2->total)
        {
            if(p0->total<=p1->total)
            {
                p1->next=p0;
                p0->next=NULL;
                p2=p0;
            }
            if (p0->total>p1->total&&p0->total<=head->total)
            {
                head->next=p0;
                p0->next=p1;
                p1->next=NULL;
                p1=p2;p0=p1;
            }
            if (p0->total>head->total)
            {
                p0->next=head;
                p1->next=NULL;
                p2=p1;p1=head;head=p0;
            }
        }
    }
    p=head;
    for (i=0;i<3;i++)
    {
        printf("",p->id,p->total);
        p=p->next;
    }
}



1000096
main ()
{
     int a,b,c,d,i,j;
     char f[90];
     char g[20];
     scanf("",&a);
     gets(g);
     for(i=0;i<a;i++)
     {
                     gets(f);
                     if(f[0]=='')
                     {
                                 d=0;
                                 for (j=1;j<90;j++)
                                 {
                                     if ((f[j]>='' && f[j]<='') || (f[j]>='' && f[j]<='')|| (f[j]>='' && f[j] <='') || f[j]=='');
                                     if (f[j]=='\0')
                                     break;
                                     else
                                     {
                                          printf("");
                                          d=1;
                                          break;
                                     }
                                     }
                     if (d==0)                    
                     printf("");            
                     }
                     if ((f[0]>='' && f[0]<='')|| (f[0]>='' && f[0] <=''))
                     {
                                 d=0;
                                 for (j=1;j<90;j++)
                                 {
                                     if ((f[j]>='' && f[j]<='') || (f[j]>='' && f[j]<='')|| (f[j]>='' && f[j] <='') || f[j]=='');
                                     if (f[j]=='\0')
                                     break;
                                     else
                                     {
                                          printf("");
                                          d=1;
                                          break;
                                     }
                                     }
                     if (d==0)                    
                     printf("");            
                     }
                     printf("");
     }
     getchar();
     getchar();
     getchar();
}


1000097
main()
{
	char a[350];
	int n, i, sum[26]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	scanf("", a);
	n=strlen(a);
	for(i=0; i<n; i++)
	{
		if(a[i]<='' && a[i]>='')
		{
			if(a[i]=='')
				sum[0]++;
			if(a[i]=='')
				sum[1]++;
			if(a[i]=='')
				sum[2]++;
			if(a[i]=='')
				sum[3]++;
			if(a[i]=='')
				sum[4]++;
			if(a[i]=='')
				sum[5]++;
			if(a[i]=='')
				sum[6]++;
			if(a[i]=='')
				sum[7]++;
			if(a[i]=='')
				sum[8]++;
			if(a[i]=='')
				sum[9]++;
			if(a[i]=='')
				sum[10]++;
			if(a[i]=='')
				sum[11]++;
			if(a[i]=='')
				sum[12]++;
			if(a[i]=='')
				sum[13]++;
			if(a[i]=='')
				sum[14]++;
			if(a[i]=='')
				sum[15]++;
			if(a[i]=='')
				sum[16]++;
			if(a[i]=='')
				sum[17]++;
			if(a[i]=='')
				sum[18]++;
			if(a[i]=='')
				sum[19]++;
			if(a[i]=='')
				sum[20]++;
			if(a[i]=='')
				sum[21]++;
			if(a[i]=='')
				sum[22]++;
			if(a[i]=='')
				sum[23]++;
			if(a[i]=='')
				sum[24]++;
			else
				sum[25]++;
		}
	}
	if(sum[0]==0 && sum[1]==0 && sum[2]==0 && sum[3]==0 && sum[4]==0 && sum[5]==0 && sum[6]==0 && sum[7]==0 && sum[8]==0 && sum[9]==0 && sum[10]==0 && sum[11]==0 && sum[12]==0 && sum[13]==0 && sum[14]==0 && sum[15]==0 && sum[16]==0 && sum[17]==0 && sum[18]==0 && sum[19]==0 && sum[20]==0 && sum[21]==0 && sum[22]==0 && sum[23]==0 && sum[24]==0 && sum[25]==0)
		printf("");
	else
	{
		if(sum[0]!=0)
			printf("", sum[0]);
		if(sum[1]!=0)
			printf("", sum[1]);
		if(sum[2]!=0)
			printf("", sum[2]);
		if(sum[3]!=0)
			printf("", sum[3]);
		if(sum[4]!=0)
			printf("", sum[4]);
		if(sum[5]!=0)
			printf("", sum[5]);
		if(sum[6]!=0)
			printf("", sum[6]);
		if(sum[7]!=0)
			printf("", sum[7]);
		if(sum[8]!=0)
			printf("", sum[8]);
		if(sum[9]!=0)
			printf("", sum[9]);
		if(sum[10]!=0)
			printf("", sum[10]);
		if(sum[11]!=0)
			printf("", sum[11]);
		if(sum[12]!=0)
			printf("", sum[12]);
		if(sum[13]!=0)
			printf("", sum[13]);
		if(sum[14]!=0)
			printf("", sum[14]);
		if(sum[15]!=0)
			printf("", sum[15]);
		if(sum[16]!=0)
			printf("", sum[16]);
		if(sum[17]!=0)
			printf("", sum[17]);
		if(sum[18]!=0)
			printf("", sum[18]);
		if(sum[19]!=0)
			printf("", sum[19]);
		if(sum[20]!=0)
			printf("", sum[20]);
		if(sum[21]!=0)
			printf("", sum[21]);
		if(sum[22]!=0)
			printf("", sum[22]);
		if(sum[23]!=0)
			printf("", sum[23]);
		if(sum[24]!=0)
			printf("", sum[24]);
		if(sum[25]!=0)
			printf("", sum[25]);
	}
	return 0;
}

1000098
main()
{
	
	int i,j=0,sum,x1=0,x2=0,x3=0,x4=0,x5=0,x6=0,x7=0,x8=0,x9=0,x10=0,x11=0,x12=0,x13=0;
	int	x14=0,x15=0,x16=0,x17=0,x18=0,x19=0,x20=0,x21=0,x22=0,x23=0,x24=0,x25=0,x26=0;
	int y1=0,y2=0,y3=0,y4=0,y5=0,y6=0,y7=0,y8=0,y9=0,y10=0,y11=0,y12=0,y13=0,y14=0,y15=0,y16=0,y17=0,y18=0,y19=0,y20=0;
	int y21=0,y22=0,y23=0,y24=0,y25=0,y26=0;
	
	scanf("",sz1);
	scanf("",sz2);
	
	int nlen1=strlen(sz1);
	int nlen2=strlen(sz2);
	
	for(i=nlen1-1;i>=0;i--)
	{
		an1[j++]=sz1[i];}
	for(i=nlen2-1;i>=0;i--)
	{
		an2[j++]=sz2[i];}
	for(i=0;i<=max;i++){
		if(an1[i]=='')
			x1++;
		if(an1[i]=='')
			x2++;
		if(an1[i]=='')
			x3++;

		if(an1[i]=='')
			x4++;

		if(an1[i]=='')
			x5++;

		if(an1[i]=='')
			x6++;

		if(an1[i]=='')
			x7++;

		if(an1[i]=='')
			x8++;

		if(an1[i]=='')
			x9++;
		if(an1[i]=='')
			x10++;
		if(an1[i]=='')
			x11++;
		if(an1[i]=='')
			x12++;

		if(an1[i]=='')
			x13++;
		if(an1[i]=='')

			x14++;
		if(an1[i]=='')
			x15++;
		if(an1[i]=='')
			x16++;

		if(an1[i]=='')
			x17++;

		if(an1[i]=='')
			x18++;

		if(an1[i]=='')
			x19++;

		if(an1[i]=='')
			x20++;

		if(an1[i]=='')
			x21++;

		if(an1[i]=='')
			x22++;
		if(an1[i]=='')
			x23++;

		if(an1[i]=='')
			x24++;

		if(an1[i]=='')
			x25++;
		if(an1[i]=='')
			x26++;
	}
	for(i=0;i<=max;i++){
		if(an2[i]=='')
			y1++;
		if(an2[i]=='')
			y2++;
		if(an2[i]=='')
			y3++;

		if(an2[i]=='')
			y4++;

		if(an2[i]=='')
			y5++;

		if(an2[i]=='')
			y6++;

		if(an2[i]=='')
			x7++;

		if(an2[i]=='')
			y8++;

		if(an2[i]=='')
			y9++;
		if(an2[i]=='')
			y10++;
		if(an2[i]=='')
			y11++;
		if(an2[i]=='')
			y12++;

		if(an2[i]=='')
			y13++;
		if(an2[i]=='')

			y14++;
		if(an2[i]=='')
			y15++;
		if(an2[i]=='')
			y16++;

		if(an2[i]=='')
			y17++;

		if(an2[i]=='')
			y18++;

		if(an2[i]=='')
			y19++;

		if(an2[i]=='')
			y20++;

		if(an2[i]=='')
			y21++;

		if(an2[i]=='')
			y22++;
		if(an2[i]=='')
			y23++;

		if(an2[i]=='')
			y24++;

		if(an2[i]=='')
			y25++;
		if(an2[i]=='')
			y26++;
	}

if(x1==y1 &&x2==y2 &&x3==y3 &&x4==y4 &&x5==y5 &&x6==y6 &&x7==y7 &&x8==y8 &&x9==y9 &&x10==y10 &&x11==y11 &&x12==y12 &&x13==y13 &&x14==y14 &&x15==y15 &&x16==y16 &&x17==y17 &&x18==y18 &&x19==y19 &&x20==y20 &&x21==y21 &&x22==y22 &&x23==y23 &&x24==y24 &&x25==y25 &&x26==y26)
printf("");
printf("");





}

1000099
main()
{
	int ya,yb,ma,mb,da,db;
	scanf("",&ya,&ma,&da,&yb,&mb,&db);
	f1(ya,ma,da,yb,mb,db);
}
f1(int y1,int m1,int d1,int y2,int m2,int d2)
{
	int a,i,j=0;
	long x1,x2;
	for (i=1;i<y1;i++)
	{
		if((i%4==0&&i%100!=0)||(i%400==0))
		{
			j++;
		}
		
	}
	x1=(y1-1)*365+j;
	j=0;
	for (i=1;i<y2;i++)
	{
		if((i%4==0&&i%100!=0)||(i%400==0))
		{
			j++;
		}
		
	}
	x2=(y2-1)*365+j;
	

	int t;
	if((y1%4==0&&y1%100!=0)||(y1%400==0))
	{
		switch (m1)
		{
		case 1 :m1=1;break;
		case 2 :m1=32;break;
		case 3 :m1=61;break;
		case 4 :m1=92;break;
		case 5 :m1=122;break;
		case 6 :m1=153;break;
		case 7 :m1=183;break;
		case 8 :m1=214;break;
		case 9 :m1=245;break;
		case 10 :m1=275;break;
		case 11 :m1=306;break;
		case 12 :m1=336;break;
		}
		
	}
	else 
	{
		switch (m1)
		{
		case 1 :m1=1;break;
		case 2 :m1=32;break;
		case 3 :m1=60;break;
		case 4 :m1=91;break;
		case 5 :m1=121;break;
		case 6 :m1=152;break;
		case 7 :m1=182;break;
		case 8 :m1=213;break;
		case 9 :m1=244;break;
		case 10 :m1=274;break;
		case 11 :m1=305;break;
		case 12 :m1=335;break;
		}
		
	}
	x1=x1+m1+d1-1;
	if((y2%4==0&&y2%100!=0)||(y2%400==0))
	{
		switch (m2)
		{
		case 1 :m2=1;break;
		case 2 :m2=32;break;
		case 3 :m2=61;break;
		case 4 :m2=92;break;
		case 5 :m2=122;break;
		case 6 :m2=153;break;
		case 7 :m2=183;break;
		case 8 :m2=214;break;
		case 9 :m2=245;break;
		case 10 :m2=275;break;
		case 11 :m2=306;break;
		case 12 :m2=336;break;
		}
		
	}
	else 
	{
		switch (m2)
		{
		case 1 :m2=1;break;
		case 2 :m2=32;break;
		case 3 :m2=60;break;
		case 4 :m2=91;break;
		case 5 :m2=121;break;
		case 6 :m2=152;break;
		case 7 :m2=182;break;
		case 8 :m2=213;break;
		case 9 :m2=244;break;
		case 10 :m2=274;break;
		case 11 :m2=305;break;
		case 12 :m2=335;break;
		}
		
	}
	x2=x2+m2+d2-1;
	if(x1<x2)
	{
		t=x1;
		x1=x2;
		x2=t;
	}
	j=x1-x2;
	printf("",j);
}



	

1000100
main()
{
	int i,j,k;
	int a[2][3];
	int f=0,g=0,h=0,x=0;
	for(i=0;i<2;i++)
	{
		for(j=0;j<3;j++)
	{
			scanf("",&a[i][j]);
	}
	}
	for(k=a[0][0];k<a[1][0];k++)
	{
		if(k%400==0)
		{
			x=x+366;
		}
		if(k%100==0)
		{
			x=x+365;
		}
		if(k%4==0)
		{
			x=x+366;
		}
		else
		{
			x=x+365;
		}
	}
	if(a[0][0]%4!=0)
	{
	if(a[0][1]==1)
		{
			f=0;
		}
		if(a[0][1]==2)
		{
			f=31;
		}if(a[0][1]==3)
		{
			f=59;
		}if(a[0][1]==4)
		{
			f=90;
		}if(a[0][1]==5)
		{
			f=120;
		}if(a[0][1]==6)
		{
			f=151;
		}if(a[0][1]==7)
		{
			f=181;
		}if(a[0][1]==8)
		{
			f=212;
		}if(a[0][1]==9)
		{
			f=243;
		}if(a[0][1]==10)
		{
			f=273;
		}if(a[0][1]==11)
		{
			f=304;
		}else
		{
			f=334;
		}
	}
	else{
		if(a[0][1]==1)
		{
			f=0;
		}
		if(a[0][1]==2)
		{
			f=31;
		}if(a[0][1]==3)
		{
			f=60;
		}if(a[0][1]==4)
		{
			f=91;
		}if(a[0][1]==5)
		{
			f=121;
		}if(a[0][1]==6)
		{
			f=152;
		}if(a[0][1]==7)
		{
			f=182;
		}if(a[0][1]==8)
		{
			f=213;
		}if(a[0][1]==9)
		{
			f=244;
		}if(a[0][1]==10)
		{
			f=274;
		}if(a[0][1]==11)
		{
			f=305;
		}else
		{
			f=335;
		}
	}
	if(a[1][0]%4!=0)
	{
	if(a[1][1]==1)
		{
			g=0;
		}
		if(a[1][1]==2)
		{
			g=31;
		}if(a[1][1]==3)
		{
			g=59;
		}if(a[1][1]==4)
		{
			g=90;
		}if(a[1][1]==5)
		{
			g=120;
		}if(a[1][1]==6)
		{
			g=151;
		}if(a[1][1]==7)
		{
			g=181;
		}if(a[1][1]==8)
		{
			g=212;
		}if(a[1][1]==9)
		{
			g=243;
		}if(a[1][1]==10)
		{
			g=273;
		}if(a[1][1]==11)
		{
			g=304;
		}else
		{
			g=334;
		}
	}
	else{
		if(a[1][1]==1)
		{
			g=0;
		}
		if(a[1][1]==2)
		{
			g=31;
		}if(a[1][1]==3)
		{
			g=60;
		}if(a[1][1]==4)
		{
			g=91;
		}if(a[1][1]==5)
		{
			g=121;
		}if(a[1][1]==6)
		{
			g=152;
		}if(a[1][1]==7)
		{
			g=182;
		}if(a[1][1]==8)
		{
			g=213;
		}if(a[1][1]==9)
		{
			g=244;
		}if(a[1][1]==10)
		{
			g=274;
		}if(a[1][1]==11)
		{
			g=305;
		}else
		{
			g=335;
		}
	}
		h=x+g+a[1][2]-f-a[0][2];
		printf("",h);
}



1000101
main()
{
	int z,q,s,l;
	for(z = 1; z <= 5; z++)
		for(q = 1; q <= 5; q++)
			for(s = 1; s <= 5; s++)
				for(l = 1; l <= 5; l++)
				{
					if(z + q == s + l)
					{
						if(z + l > q + s)
						{
							if(z + s < q)
							{
								z = z * 10;
								l = l * 10;
								q = q * 10;
								s = s * 10;
                                if((z > q)&&(z > s)&&(z > l))
								{
									if((q > s)&&(q > l))
									{
										if(s > l)
											cout << "" << z << endl << "" << q << endl << "" << s << endl << "" << l;
										else
											cout << "" << z << endl << "" << q << endl << "" << l << endl << "" << s;
									}
									if((s > q)&&(s > l))
									{
										if(q > l)
											cout << "" << z << endl << "" << s << endl << "" << q << endl << "" << l;
										else
											cout << "" << z << endl << "" << s << endl << "" << l << endl << "" << q;
									}
									if((l > s)&&(l > q))
									{
										if(s > q)
											cout << "" << z << endl << "" << l << endl << "" << s << endl << "" << q;
										else
											cout << "" << z << endl << "" << l << endl << "" << q << endl << "" << s;
									}
								}
								if((q > z)&&(q > s)&&(q > l))
								{
									if((z > s)&&(z > l))
									{
										if(s > l)
											cout << "" << q << endl << "" << z << endl << "" << s << endl << "" << l;
										else
											cout << "" << q << endl << "" << z << endl << "" << l << endl << "" << s;
									}
									if((s > z)&&(s > l))
									{
										if(z > l)
											cout << "" << q << endl << "" << s << endl << "" << z << endl << "" << l;
										else
											cout << "" << q << endl << "" << s << endl << "" << l << endl << "" << s;
									}
									if((l > s)&&(l > z))
									{
										if(s > z)
											cout << ""<< q<< endl << "" << l << endl << "" << s << endl << ""<< z;
										else 
											cout << ""<< q<< endl << "" << l << endl << "" << z << endl << "" << s;	
									}
								}
                                if((s> q)&&(s> z)&&(s > l))
								{
									if((q > z)&&(q > l))
									{
										if(s > l)
											cout << "" << s << endl << "" << q << endl << "" << s << endl << "" << l;
										else
											cout << ""<< s << endl << "" << q << endl << "" << l << endl << "" << s;
									}
									if((z > q)&&(z > l))
									{
										if(q > l)
											cout << "" << s << endl << "" << z << endl << "" << q << endl << "" << l;
										else
											cout << "" << s << endl << "" << z << endl << "" << l << endl << "" << q;
									}
									if((l > z)&&(l > q))
									{
										if(s > q)
											cout << "" << s << endl << "" << l << endl << "" << z << endl << "" << q;
										else
											cout << "" << s << endl << "" << l << endl << "" << q << endl << "" << z;
									}
								}
                                if((l > q)&&(l > s)&&(l > z))
								{
									if((q > s)&&(q > z))
									{
										if(s > z)
											cout << "" << l << endl << "" << q << endl << "" << s << endl << "" << z;
										else
											cout << "" << l << endl << "" << q << endl << "" << z << endl << "" << s;
									}
									if((s > q)&&(s > z))
									{
										if(q > z)
											cout << "" << l << endl << "" << s << endl << "" << q << endl << "" << z;
										else
											cout << "" << l << endl << "" << s << endl << "" << z << endl << "" << q;
									}
									if((z > s)&&(z > q))
									{
										if(s > q)
											cout << "" << l << endl << "" << z << endl << "" << s << endl << "" << q;
										else
											cout << "" << l << endl << "" << z << endl << "" << q << endl << "" << s;
									}
								}
							}
						}
					}
				}
    return 0;
}

1000102
main()
{
    int height[21][21];
    int m,n;
    cin >> m >> n;
    int i,j,k;
    int sum=0;
    for (i=0;i<m;i++)
    {
        for (j=0;j<n;j++)
        {
            cin >> height[i][j];
            sum += height[i][j];
        }
    }
    
    for (i=0;i<m;i++)
    {
        for (j=0;j<n;j++)
        {
            if (i==0&&j!=0&&j!=n-1)
            {
                if (height[i][j]>=height[i+1][j] && height[i][j]>=height[i][j+1] && height[i][j]>=height[i][j-1])
                {
                    cout << i << "" << j << endl;
                }
            }
            if(i==m-1&&j!=0&&j!=n-1)
            {
                 if(height[i][j]>=height[i-1][j] && height[i][j]>=height[i][j+1] && height[i][j]>=height[i][j-1])
                 {
                     cout << i << "" << j << endl;
                 }
            } 
            if(j==0&&i!=0&&i!=m-1)
            {
                 if(height[i][j]>=height[i-1][j] && height[i][j]>=height[i][j+1] && height[i][j]>=height[i+1][j])
                 {
                     cout << i << "" << j << endl;
                 }
            }
            if(j==n-1&&i!=0&&i!=m-1)
            {
                 if(height[i][j]>=height[i-1][j] && height[i][j]>=height[i+1][j] && height[i][j]>=height[i][j-1])
                 {
                     cout << i << "" << j << endl;
                 }
            }
            if(j==n-1&&i==0)
            {
                 
                 if( height[i][j]>=height[i+1][j] && height[i][j]>=height[i][j-1])
                 {
                     cout << i << "" << j << endl;
                 }
            }
            if(j==n-1&&i==m-1)
            {
                 
                 if( height[i][j]>=height[i-1][j] && height[i][j]>=height[i][j-1])
                 {
                     cout << i << "" << j << endl;
                 }
            }
            if(j==0&&i==0)
            {
                 
                 if( height[i][j]>=height[i+1][j] && height[i][j]>=height[i][j+1])
                 {
                     cout << i << "" << j << endl;
                 }
            }
            if(j==0&&i==m-1)
            {
                 
                 if( height[i][j]>=height[i-1][j] && height[i][j]>=height[i][j+1])
                 {
                     cout << i << "" << j << endl;
                 }
            }
            else
            {
                 if (height[i][j]>=height[i-1][j] &&height[i][j]>=height[i+1][j] && height[i][j]>=height[i][j+1] && height[i][j]>=height[i][j-1])
                 {
                     cout << i << "" << j << endl;
                 }
            }
        }
    }
   
    return 0;
} 

1000103
main()
{
	int i,t;
	int startyear,startMonth,startDay;
	int endyear,endMonth,endDay;
	int day,a,b,m=0,n=0;
	scanf("",&startyear,&startMonth,&startDay);
	scanf("",&endyear,&endMonth,&endDay);
    if((startyear%4==0 && startyear%100!=0) || (startyear%400==0))
	{
		switch(startMonth)
		{
		case 1:a=startDay-32;
			break;
		case 2:a=startDay-1;
			break;
		case 3:a=28+startDay;
			break;
		case 4:a=59+startDay;
			break;
		case 5:a=89+startDay;
			break;
		case 6:a=120+startDay;
			break;
		case 7:a=150+startDay;
			break;
		case 8:a=181+startDay;
			break;
		case 9:a=212+startDay;
			break;
		case 10:a=242+startDay;
			break;
		case 11:a=273+startDay;
			break;
		case 12:a=303+startDay;
			break;
		}
	}
		else
		{
	    switch(startMonth)
		{
		case 1:a=startDay-32;
			break;
		case 2:a=startDay-1;
			break;
		case 3:a=28+startDay-1;
			break;
		case 4:a=59+startDay-1;
			break;
		case 5:a=89+startDay-1;
			break;
		case 6:a=120+startDay-1;
			break;
		case 7:a=150+startDay-1;
			break;
		case 8:a=181+startDay-1;
			break;
		case 9:a=212+startDay-1;
			break;
		case 10:a=242+startDay-1;
			break;
		case 11:a=273+startDay-1;
			break;
		case 12:a=303+startDay-1;
			break;
		}
		}
	 if((endyear%4==0 && endyear%100!=0) || (endyear%400==0))
	{
		switch(endMonth)
		{
		case 1:b=endDay-32;
			break;
		case 2:b=endDay-1;
			break;
		case 3:b=28+endDay;
			break;
		case 4:b=59+endDay;
			break;
		case 5:b=89+endDay;
			break;
		case 6:b=120+endDay;
			break;
		case 7:b=150+endDay;
			break;
		case 8:b=181+endDay;
			break;
		case 9:b=212+endDay;
			break;
		case 10:b=242+endDay;
			break;
		case 11:b=273+endDay;
			break;
		case 12:b=303+endDay;
			break;
		}
	 }
		else
		{
	    switch(endMonth)
		{
		case 1:b=endDay-32;
			break;
		case 2:b=endDay-1;
			break;
		case 3:b=28+endDay-1;
			break;
		case 4:b=59+endDay-1;
			break;
		case 5:b=89+endDay-1;
			break;
		case 6:b=120+endDay-1;
			break;
		case 7:b=150+endDay-1;
			break;
		case 8:b=181+endDay-1;
			break;
		case 9:b=212+endDay-1;
			break;
		case 10:b=242+endDay-1;
			break;
		case 11:b=273+endDay-1;
			break;
		case 12:b=303+endDay-1;
			break;
		}
		}
		if(startyear>endyear)
		{
			t=endyear;
			endyear=startyear;
			startyear=t;
		}
		for(i=startyear;i<endyear;i++)
		{
			if((i%4==0 && i%100!=0) || (i%400==0))
				m=m+1;
		}
        if(startyear==endyear)
			n=0,m=0;
		else
		n=endyear-startyear-m;
		day=(366*m+365*n-a+b);
		printf("",day);
		return 0;
		}



1000104
main()
{
	int n,i,j;
	int x[50000][2];
	scanf("",&n);
	for(i=0;i<n;i++)
	{
	  for(j=0;j<2;j++)
	  {
	    scanf("",&x[i][j]);
	  }
	}
	int y[50000][2];
	int max,min;
	for (i=0;i<n;i++)
	{
	  y[i][0]=x[i][0];
	  y[i][1]=x[i][1];
	}
	for(i=0;i<n-1;i++)
	{
	  if(i==n-2)
	  {
	    min=(y[i][0])<=(y[i+1][0])?y[i][0]:y[i+1][0];
	  }
	  if((y[i][0])<=(y[i+1][0]))
	  {
	    min=y[i][0];
		y[i][0]=y[i+1][0];
		y[i+1][0]=min;
	  }
	}
	for(i=0;i<n-1;i++)
	{
	  if(i==n-2)
	  {
	    max=(y[i][1])>=(y[i+1][1])?y[i][1]:y[i+1][1];
	  }
	  if((y[i][1])>=(y[i+1][1]))
	  {
	    max=y[i][1];
		y[i][1]=y[i+1][1];
		y[i+1][1]=max;
	  }
	}
	int k=1;
	int maxmax,minmin,maxmin,minmax;
	if(n==2)
	{
	  maxmax=(x[0][1])>=(x[1][1])?(x[0][1]):(x[1][1]);
	  minmin=(x[0][0])<=(x[1][0])?(x[0][0]):(x[1][0]);
	  maxmin=(x[0][1])<(x[1][1])?(x[0][1]):(x[1][1]);
	  minmax=(x[0][0])>(x[1][0])?(x[0][0]):(x[1][0]);
	  if(maxmin>=minmax)
	  {
	    printf("",minmin,maxmax);
	  }
	  if(maxmin<minmax)
	  {
	    printf("");
	  }
	}
	if(n>2)
	{
	while(k<n)
	{
	for(i=0;i<n-1;i++)
	{
	  maxmax=(x[i][1])>=(x[i+1][1])?(x[i][1]):(x[i+1][1]);
	  minmin=(x[i][0])<=(x[i+1][0])?(x[i][0]):(x[i+1][0]);
	  maxmin=(x[i][1])<(x[i+1][1])?(x[i][1]):(x[i+1][1]);
	  minmax=(x[i][0])>(x[i+1][0])?(x[i][0]):(x[i+1][0]);
	  if(i==n-2)
	  {
		if(maxmin>=minmax)
		{
		x[0][0]=minmin;
		x[0][1]=maxmax;
		break;
		}
		if(maxmin<minmax)
		{
         int p=x[i+1][0],q=x[i+1][1];
	     x[0][0]=x[i][0];x[0][1]=x[i][1];
	     x[i][0]=p,x[i][1]=q;
		 break;
		}
	  }
	  if(i<n-2&&maxmin>=minmax)
	  {
	    x[i+1][0]=minmin;
	    x[i+1][1]=maxmax;
	  }
	  if(i<n-2&&maxmin<minmax)
	  {
	  int p=x[i+1][0],q=x[i+1][1];
	  x[i+1][0]=x[i][0];x[i+1][1]=x[i][1];
	  x[i][0]=p,x[i][1]=q;
	  }
	}
	k++;
	if(min==x[0][0]&&max==x[0][1])
	{
	  printf("",min,max);
	  break;
	}
         if(k==n-1)
         {
	if(min!=x[0][0]||max!=x[0][1])
	  {
	    printf("");
		break;
	  }
         }
	}
	}
	return 0;
}

1000105
main()
{
	int m, n;
	scanf("",&m, &n);
	if(n==4){
	printf("",m,4*m,10*m,16*m,19*m,16*m,10*m,4*m,m);
	printf("",4*m,20*m,52*m,88*m,104*m,88*m,52*m,20*m,4*m);
	printf("",10*m,52*m,142*m,244*m,292*m,244*m,142*m,52*m,10*m);
	printf("",16*m,88*m,244*m,428*m,512*m,428*m,244*m,88*m,16*m);
	printf("",19*m,104*m,292*m,512*m,616*m,512*m,292*m,104*m,19*m);
	printf("",16*m,88*m,244*m,428*m,512*m,428*m,244*m,88*m,16*m);
	printf("",10*m,52*m,142*m,244*m,292*m,244*m,142*m,52*m,10*m);
	printf("",4*m,20*m,52*m,88*m,104*m,88*m,52*m,20*m,4*m);
	printf("",m,4*m,10*m,16*m,19*m,16*m,10*m,4*m,m);}
    
    if(n==1){
	printf("");
	printf("");
	printf("");
	printf("",m,m,m);
	printf("",m,2*m,m);
	printf("",m,m,m);
	printf("");
	printf("");
	printf("");}

    if(n==2){
	printf("");
	printf("");
	printf("",m,2*m,3*m,2*m,m);
	printf("",2*m,6*m,8*m,6*m,2*m);
	printf("",3*m,8*m,12*m,8*m,3*m);
	printf("",2*m,6*m,8*m,6*m,2*m);
	printf("",m,2*m,3*m,2*m,m);
	printf("");
	printf("");}

	if(n==3){
	printf("");
	printf("",m,3*m,6*m,7*m,6*m,3*m,m);
	printf("",3*m,12*m,24*m,30*m,24*m,12*m,3*m);
	printf("",6*m,24*m,51*m,63*m,51*m,24*m,6*m);
	printf("",7*m,30*m,63*m,80*m,63*m,30*m,7*m);
	printf("",6*m,24*m,51*m,63*m,51*m,24*m,6*m);
	printf("",3*m,12*m,24*m,30*m,24*m,12*m,3*m);
	printf("",m,3*m,6*m,7*m,6*m,3*m,m);
	printf("");}



	return 0;
}


1000106
main(){
    int d,n;
    scanf("",&n,&d);
    
    if(d==1){
            int sz[9][9]= {{0,0,0,0,0,0,0,0,0},
                       {0,0,0,0,0,0,0,0,0},
                       {0,0,0,0,0,0,0,0,0},
                       {0,0,0,1*n,1*n,1*n,0,0,0},
                       {0,0,0,1*n,2*n,1*n,0,0,0},
                       {0,0,0,1*n,1*n,1*n,0,0,0},
                       {0,0,0,0,0,0,0,0,0},
                       {0,0,0,0,0,0,0,0,0},
                       {0,0,0,0,0,0,0,0,0}};
    int i,j;
        for(i=0;i<9;i++){
                     for(j=0;j<8;j++){
                                      printf("",sz[i][j]);
                                    
                                     
                                      }
                     printf("",sz[i][8]);
                     }
        }
    if(d==2){
             int sz[9][9]={{0,0,0,0,0,0,0,0,0},
                       {0,0,0,0,0,0,0,0,0},
                       {0,0,1*n,2*n,3*n,2*n,1*n,0,0},
                       {0,0,2*n,6*n,8*n,6*n,2*n,0,0},
                       {0,0,3*n,8*n,12*n,8*n,3*n,0,0},
                       {0,0,2*n,6*n,8*n,6*n,2*n,0,0},
                       {0,0,1*n,2*n,3*n,2*n,1*n,0,0},
                       {0,0,0,0,0,0,0,0,0},
                       {0,0,0,0,0,0,0,0,0}};
                       int i,j;
    for(i=0;i<9;i++){
                     for(j=0;j<8;j++){
                                      printf("",sz[i][j]);
                                    
                                     
                                      }
                     printf("",sz[i][8]);
                     }
             }
             
    if(d==3){
             int sz[9][9]={{0,0,0,0,0,0,0,0,0},
                       {0,1*n,3*n,6*n,7*n,6*n,3*n,1*n,0},
                       {0,3*n,12*n,24*n,30*n,24*n,12*n,3*n,0},
                       {0,6*n,24*n,51*n,63*n,51*n,24*n,6*n,0},
                       {0,7*n,30*n,63*n,80*n,63*n,30*n,7*n,0},
                       {0,6*n,24*n,51*n,63*n,51*n,24*n,6*n,0},
                       {0,3*n,12*n,24*n,30*n,24*n,12*n,3*n,0},
                       {0,1*n,3*n,6*n,7*n,6*n,3*n,1*n,0},
                       {0,0,0,0,0,0,0,0,0}};
                       int i,j;
    for(i=0;i<9;i++){
                     for(j=0;j<8;j++){
                                      printf("",sz[i][j]);
                                    
                                     
                                      }
                     printf("",sz[i][8]);
                     }
             }
             
    if(d==4){
            int sz[9][9]={{1*n,4*n,10*n,16*n,19*n,16*n,10*n,4*n,1*n},
                       {4*n,20*n,52*n,88*n,104*n,88*n,52*n,20*n,4*n},
                       {10*n,52*n,142*n,244*n,292*n,244*n,142*n,52*n,10*n},
                       {16*n,88*n,244*n,428*n,512*n,428*n,244*n,88*n,16*n},
                       {19*n,104*n,292*n,512*n,616*n,512*n,292*n,104*n,19*n},
                       {16*n,88*n,244*n,428*n,512*n,428*n,244*n,88*n,16*n},
                       {10*n,52*n,142*n,244*n,292*n,244*n,142*n,52*n,10*n},
                       {4*n,20*n,52*n,88*n,104*n,88*n,52*n,20*n,4*n},
                       {1*n,4*n,10*n,16*n,19*n,16*n,10*n,4*n,1*n}};
                       int i,j;
    for(i=0;i<9;i++){
                     for(j=0;j<8;j++){
                                      printf("",sz[i][j]);
                                    
                                     
                                      }
                     printf("",sz[i][8]);
                     }
             }
             

        return 0;
}

1000107
main()
{
	int a,b,c,x,y,z,sum1=0,sum2=0,t=0,u=0,m=0,n=0,final;
		scanf("",&a,&b,&c,&x,&y,&z);
	   
loop1: m=m+1;
	        	if(m==a)
			       t=t;
		       else
			   {
	             if(m%4==0)
					{
		              if(m%100!=0)
					  {t=t+1;goto loop1;}
		              else   
						{
						  if(m%400==0)
						  {t=t+1;goto loop1;}
						  else goto loop1;
						}
					}
				 else goto loop1;
				}
		 
		  
	  
	  
loop2: n=n+1;
	             if(n==x)
		            u=u;
				else
				{
					if(n%4==0)
					{
						if(n%100!=0)
						{u=u+1;goto loop2;}
						else
							{
							 if(n%400==0)
							{u=u+1;goto loop2;}
							 else goto loop2;
							}
					}
	  
	              else goto loop2;
				}
	 sum1=(a-1)*365+t;
	 sum2=(x-1)*365+u;
switch(b)
	 {
	 case 1:sum1=sum1+0 ;break;
     case 2:sum1=sum1+31 ;break;
	 case 3:sum1=sum1+59 ;break;
	 case 4:sum1=sum1+90 ;break;
	 case 5:sum1=sum1+120 ;break;
	 case 6:sum1=sum1+151; break;
	 case 7:sum1=sum1+181; break;
	 case 8:sum1=sum1+212; break;
	 case 9:sum1=sum1+243; break;
	 case 10:sum1=sum1+273; break;
	 case 11:sum1=sum1+304; break;
	 case 12:sum1=sum1+334; break;
	 }

switch(y)
	 {
	 case 1:sum2=sum2+0; break;
     case 2:sum2=sum2+31; break;
	 case 3:sum2=sum2+59; break;
	 case 4:sum2=sum2+90; break;
	 case 5:sum2=sum2+120; break;
	 case 6:sum2=sum2+151; break;
	 case 7:sum2=sum2+181; break;
	 case 8:sum2=sum2+212; break;
	 case 9:sum2=sum2+243; break;
	 case 10:sum2=sum2+273; break;
	 case 11:sum2=sum2+304; break;
	 case 12:sum2=sum2+334; break;
	 }
if(a%4==0)
	  {
		  if(a%100!=0)
		  {
			  if(b>2)
				  sum1=sum1+1;
			  else sum1=sum1;
		  }
		  if(m%400==0)
		   {
			  if(b>2)
				  sum1=sum1+1;
			  else sum1=sum1;
		  };
	}
if(x%4==0)
	  {
		  if(x%100!=0)
		  {
			  if(y>2)
				  sum2=sum2+1;
			 
		  };
		  if(x%400==0)
		   {
			  if(y>2)
				  sum2=sum2+1;
			  else sum2=sum2;
		  };
	}
		  sum1=sum1+c;
		  sum2=sum2+z;

final=sum2-sum1;
printf("",final);
}

1000108
insertAt(struct node *pHeader,char c,int n)
{
     int i;
     for(i=1;i<n;i++)
     {
                     pHeader=pHeader->pNext;
     }
     struct node *ptemp=(struct node *)malloc(sizeof(struct node));
     ptemp->pNext=pHeader->pNext;
     pHeader->pNext=ptemp;
     ptemp->value=c-'';
}
getAt(struct node *pHeader,int n)
{
    int i;
    struct node *ptemp;
    for(i=0;i<n;i++)
    {
                     pHeader=pHeader->pNext;
    }
    return pHeader->value;
}
main()
{
      char c;
      int n1,n2,n3;
      int temp,i,jinwei;
      struct node *pHeader1=(struct node *)malloc(sizeof(struct node));
      struct node *pHeader2=(struct node *)malloc(sizeof(struct node));
      struct node *pHeader3=(struct node *)malloc(sizeof(struct node));
      pHeader1->pNext=NULL;
      pHeader2->pNext=NULL;
      pHeader3->pNext=NULL;
      n1=0;
      for(;;)
      {
             scanf("",&c);
             if(c=='\n') break;
             else
             {
                 n1++;
                 insertAt(pHeader1,c,n1);
             }
      }
      n2=0;
      for(;;)
      {
             scanf("",&c);
             if(c=='\n') break;
             else
             {
                 n2++;
                 insertAt(pHeader2,c,n2);
             }
      }
      jinwei=0;
      n3=0;
      if(n1>=n2)
      {
               for(i=0;i<n2;i++)
               {
                                temp=getAt(pHeader1,n1-i)+getAt(pHeader2,n2-i)+jinwei;
                                if(temp>=10) 
                                {
                                             temp=temp-10;
                                             jinwei=1;
                                }
                                else jinwei=0;
                                n3++;
                                insertAt(pHeader3,temp+'',n3);
               }
               for(i=n2;i<n1;i++)
               {
                                 temp=getAt(pHeader1,n1-i)+jinwei;
                                 if(temp>=10)
                                 {
                                             temp=temp-10;
                                             jinwei=1;
                                 }
                                 else jinwei=0;
                                 n3++;
                                 insertAt(pHeader3,temp+'',n3);
               }
               if(jinwei==1)
               {
                            n3++;
                            insertAt(pHeader3,'',n3);
               }
      }
      else
      {
          struct node*ptemp;
          int ntemp;
          ptemp=pHeader1;
          pHeader1=pHeader2;
          pHeader2=ptemp;
          ntemp=n1;
          n1=n2;
          n2=ntemp;
          for(i=0;i<n2;i++)
               {
                                temp=getAt(pHeader1,n1-i)+getAt(pHeader2,n2-i)+jinwei;
                                if(temp>=10) 
                                {
                                             temp=temp-10;
                                             jinwei=1;
                                }
                                else jinwei=0;
                                n3++;
                                insertAt(pHeader3,temp+'',n3);
               }
               for(i=n2;i<n1;i++)
               {
                                 temp=getAt(pHeader1,n1-i)+jinwei;
                                 if(temp>=10)
                                 {
                                             temp=temp-10;
                                             jinwei=1;
                                 }
                                 else jinwei=0;
                                 n3++;
                                 insertAt(pHeader3,temp+'',n3);
               }
               if(jinwei==1)
               {
                            n3++;
                            insertAt(pHeader3,'',n3);
               }
      }
      int jilu=0;
      if(n3==1&&getAt(pHeader3,n3)==0) printf("");
      else
      {
       for(i=0;i<n3;i++)
       {
                       if(getAt(pHeader3,n3-i)==0&&jilu==0) continue;
                       else
                       {
                           jilu=1;
                           printf("",getAt(pHeader3,n3-i));
                       }
       }
      }
      }



1000110
main()
{
    int hang,lie,sz[8][8],count=0,i,k,fz[8][8],max[8],min[8],e,f;
    scanf("",&hang,&lie);
    for(i=0;i<hang;i++)
    {
                       for(k=0;k<lie;k++)
                       {
                                         scanf("",&sz[i][k]);
                                         fz[i][k]=sz[i][k];
                                         }
                                         }
   for(i=0;i<hang;i++)
   {
                      for(k=lie-1;k>0;k--)
                      {
                                          if(sz[i][k]>sz[i][k-1]) 
                                          {
                                          e=sz[i][k];
                                          sz[i][k]=sz[i][k-1];
                                          sz[i][k-1]=e;
                                          }
                      }
                      max[i]=sz[i][0];
   }
   for(k=0;k<lie;k++)
   {
                     for(i=hang-1;i>0;i--) 
                     {                     
                                          if(fz[i][k]<fz[i-1][k])
                                          {
                                           f=fz[i][k];
                                           fz[i][k]=fz[i-1][k];
                                           fz[i-1][k]=f;
                                           }
                     }
                     min[k]=fz[0][k];
   }
  for(i=0;i<hang;i++)
  {
                     for(k=0;k<lie;k++)
                     {
                                      if(max[i]==min[k])
                                      {
                                                        printf("",i,k);
                                                        count=1;
                                      }
                     }
  }
  if(count==0) 
  {
             printf("");
             }
   return 0;
}                                                                   
                                          
                                          
                                                           


1000111
main()
{
	int y1,m1,d1,y2,m2,d2,r,s,s1,s2,i;
	scanf("",&y1,&m1,&d1);
	scanf("",&y2,&m2,&d2);
    if(y1>y2)
	{
		r=y1;y1=y2;y2=r;r=m1;m1=m2;m2=r;r=d1;d1=d2;d2=r;
	}
	if(y1==y2)
	{
		if((y1 % 4 == 0 && y1 % 100 != 0) || (y1 % 400 == 0))
		{
			if(m1==1)s1=d1;
			if(m1==2)s1=d1+31;
			if(m1==3)s1=d1+60;
			if(m1==4)s1=d1+91;
			if(m1==5)s1=d1+121;
			if(m1==6)s1=d1+152;
			if(m1==7)s1=d1+182;
			if(m1==8)s1=d1+213;
			if(m1==9)s1=d1+244;
			if(m1==10)s1=d1+274;
			if(m1==11)s1=d1+305;
			if(m1==12)s1=d1+335;
            if(m2==1)s2=d2;
			if(m2==2)s2=d2+31;
			if(m2==3)s2=d2+60;
			if(m2==4)s2=d2+91;
			if(m2==5)s2=d2+121;
			if(m2==6)s2=d2+152;
			if(m2==7)s2=d2+182;
			if(m2==8)s2=d2+213;
			if(m2==9)s2=d2+244;
			if(m2==10)s2=d2+274;
			if(m2==11)s2=d2+305;
			if(m2==12)s2=d2+335;
			s=s2-s1;
		}
		else
		{
			if(m1==1)s1=d1;
			if(m1==2)s1=d1+31;
			if(m1==3)s1=d1+59;
			if(m1==4)s1=d1+90;
			if(m1==5)s1=d1+120;
			if(m1==6)s1=d1+151;
		    if(m1==7)s1=d1+181;
			if(m1==8)s1=d1+212;
			if(m1==9)s1=d1+243;
			if(m1==10)s1=d1+273;
			if(m1==11)s1=d1+304;
			if(m1==12)s1=d1+334;
            if(m2==1)s2=d2;
			if(m2==2)s2=d2+31;
			if(m2==3)s2=d2+59;
			if(m2==4)s2=d2+90;
			if(m2==5)s2=d2+120;
			if(m2==6)s2=d2+151;
			if(m2==7)s2=d2+181;
			if(m2==8)s2=d2+212;
		    if(m2==9)s2=d2+243;
			if(m2==10)s2=d2+273;
			if(m2==11)s2=d2+304;
			if(m2==12)s2=d2+334;
			s=s2-s1;
		}
		printf("",s);
	}
	if(y1<y2)
	{
		s=0;
		for(i=y1;i<=y2;i++)
		{
			if((i % 4 == 0 && i % 100 != 0) || (i % 400 == 0))s=s+366;
			else s=s+365;
		}
		if((y1 % 4 == 0 && y1 % 100 != 0) || (y1 % 400 == 0))
		{
			if(m1==1)s1=d1;
			if(m1==2)s1=d1+31;
			if(m1==3)s1=d1+60;
			if(m1==4)s1=d1+91;
			if(m1==5)s1=d1+121;
			if(m1==6)s1=d1+152;
			if(m1==7)s1=d1+182;
			if(m1==8)s1=d1+213;
			if(m1==9)s1=d1+244;
			if(m1==10)s1=d1+274;
			if(m1==11)s1=d1+305;
			if(m1==12)s1=d1+335;
		}
		else
		{
			if(m1==1)s1=d1;
			if(m1==2)s1=d1+31;
			if(m1==3)s1=d1+59;
			if(m1==4)s1=d1+90;
			if(m1==5)s1=d1+120;
			if(m1==6)s1=d1+151;
			if(m1==7)s1=d1+181;
			if(m1==8)s1=d1+212;
			if(m1==9)s1=d1+243;
			if(m1==10)s1=d1+273;
			if(m1==11)s1=d1+304;
			if(m1==12)s1=d1+334;
		}
		if((y2 % 4 == 0 && y2 % 100 != 0) || (y2 % 400 == 0))
		{
			if(m2==1)s2=d2;
			if(m2==2)s2=d2+31;
			if(m2==3)s2=d2+60;
			if(m2==4)s2=d2+91;
			if(m2==5)s2=d2+121;
			if(m2==6)s2=d2+152;
			if(m2==7)s2=d2+182;
			if(m2==8)s2=d2+213;
			if(m2==9)s2=d2+244;
			if(m2==10)s2=d2+274;
			if(m2==11)s2=d2+305;
			if(m2==12)s2=d2+335;
			s2=366-s2;
		}
		else
		{
		    if(m2==1)s2=d2;
			if(m2==2)s2=d2+31;
			if(m2==3)s2=d2+59;
			if(m2==4)s2=d2+90;
			if(m2==5)s2=d2+120;
			if(m2==6)s2=d2+151;
			if(m2==7)s2=d2+181;
			if(m2==8)s2=d2+212;
			if(m2==9)s2=d2+243;
			if(m2==10)s2=d2+273;
			if(m2==11)s2=d2+304;
			if(m2==12)s2=d2+334;
			s2=365-s2;
		}
		s=(s-s1-s2);
		printf("",s);
	}
}

1000112
main()
{
int sz[5][5],r,c,i=0;
for(r=0;r<5;r++){
	for(c=0;c<5;c++){
scanf("",&sz[r][c]);
}}
if((sz[0][0]>sz[0][1])&&(sz[0][0]>sz[0][2])&&(sz[0][0]>sz[0][3])&&(sz[0][0]>sz[0][4])&&(sz[0][0]<sz[1][0])&&(sz[0][0]<sz[2][0])&&(sz[0][0]<sz[3][0])&&(sz[0][0]<sz[4][0])){
printf("",sz[0][0]);
i++;
}
if((sz[0][1]>sz[0][0])&&(sz[0][1]>sz[0][2])&&(sz[0][1]>sz[0][3])&&(sz[0][1]>sz[0][4])&&(sz[0][1]<sz[1][1])&&(sz[0][1]<sz[2][1])&&(sz[0][1]<sz[3][1])&&(sz[0][1]<sz[4][1])){
printf("",sz[0][1]);
i++;
}

if((sz[0][2]>sz[0][1])&&(sz[0][2]>sz[0][0])&&(sz[0][2]>sz[0][3])&&(sz[0][2]>sz[0][4])&&(sz[0][2]<sz[1][2])&&(sz[0][2]<sz[2][2])&&(sz[0][2]<sz[3][2])&&(sz[0][2]<sz[4][2])){
printf("",sz[0][2]);
i++;
}

if((sz[0][3]>sz[0][1])&&(sz[0][3]>sz[0][2])&&(sz[0][3]>sz[0][0])&&(sz[0][3]>sz[0][4])&&(sz[0][3]<sz[1][3])&&(sz[0][3]<sz[2][3])&&(sz[0][3]<sz[3][3])&&(sz[0][3]<sz[4][3])){
printf("",sz[0][3]);
i++;
}
if((sz[0][4]>sz[0][1])&&(sz[0][4]>sz[0][2])&&(sz[0][4]>sz[0][3])&&(sz[0][0]<sz[0][4])&&(sz[0][4]<sz[1][4])&&(sz[0][4]<sz[2][4])&&(sz[0][4]<sz[3][4])&&(sz[0][4]<sz[4][4])){
printf("",sz[0][4]);
i++;
}


if((sz[1][0]>sz[1][1])&&(sz[1][0]>sz[1][2])&&(sz[1][0]>sz[1][3])&&(sz[1][0]>sz[1][4])&&(sz[1][0]<sz[0][0])&&(sz[1][0]<sz[2][0])&&(sz[1][0]<sz[3][0])&&(sz[1][0]<sz[4][0])){
printf("",sz[1][0]);
i++;
}
if((sz[1][1]>sz[1][0])&&(sz[1][1]>sz[1][2])&&(sz[1][1]>sz[1][3])&&(sz[1][1]>sz[1][4])&&(sz[1][1]<sz[0][1])&&(sz[1][1]<sz[2][1])&&(sz[1][1]<sz[3][1])&&(sz[1][1]<sz[4][1])){
printf("",sz[1][1]);
i++;
}

if((sz[1][2]>sz[1][1])&&(sz[1][2]>sz[1][0])&&(sz[1][2]>sz[1][3])&&(sz[1][2]>sz[1][4])&&(sz[1][2]<sz[0][2])&&(sz[1][2]<sz[2][2])&&(sz[1][2]<sz[3][2])&&(sz[1][2]<sz[4][2])){
printf("",sz[1][2]);
i++;
}

if((sz[1][3]>sz[1][1])&&(sz[1][3]>sz[1][2])&&(sz[1][3]>sz[1][0])&&(sz[1][3]>sz[1][4])&&(sz[1][3]<sz[0][3])&&(sz[1][3]<sz[2][3])&&(sz[1][3]<sz[3][3])&&(sz[1][3]<sz[4][3])){
printf("",sz[1][3]);
i++;
}
if((sz[1][4]>sz[1][1])&&(sz[1][4]>sz[1][2])&&(sz[1][4]>sz[1][3])&&(sz[1][0]<sz[1][4])&&(sz[1][4]<sz[0][4])&&(sz[1][4]<sz[2][4])&&(sz[1][4]<sz[3][4])&&(sz[1][4]<sz[4][4])){
printf("",sz[1][4]);
i++;
}


if((sz[2][0]>sz[2][1])&&(sz[2][0]>sz[2][2])&&(sz[2][0]>sz[2][3])&&(sz[2][0]>sz[2][4])&&(sz[2][0]<sz[0][0])&&(sz[2][0]<sz[1][0])&&(sz[2][0]<sz[3][0])&&(sz[2][0]<sz[4][0])){
printf("",sz[2][0]);
i++;
}
if((sz[2][1]>sz[2][0])&&(sz[2][1]>sz[2][2])&&(sz[2][1]>sz[2][3])&&(sz[2][1]>sz[2][4])&&(sz[2][1]<sz[0][1])&&(sz[2][1]<sz[1][1])&&(sz[2][1]<sz[3][1])&&(sz[2][1]<sz[4][1])){
printf("",sz[2][1]);
i++;
}

if((sz[2][2]>sz[2][1])&&(sz[2][2]>sz[2][0])&&(sz[2][2]>sz[2][3])&&(sz[2][2]>sz[2][4])&&(sz[2][2]<sz[0][2])&&(sz[2][2]<sz[1][2])&&(sz[2][2]<sz[3][2])&&(sz[2][2]<sz[4][2])){
printf("",sz[2][2]);
i++;
}

if((sz[2][3]>sz[2][1])&&(sz[2][3]>sz[1][2])&&(sz[2][3]>sz[2][0])&&(sz[2][3]>sz[2][4])&&(sz[2][3]<sz[0][3])&&(sz[2][3]<sz[1][3])&&(sz[2][3]<sz[3][3])&&(sz[2][3]<sz[4][3])){
printf("",sz[2][3]);
i++;
}
if((sz[2][4]>sz[2][1])&&(sz[2][4]>sz[2][2])&&(sz[2][4]>sz[2][3])&&(sz[2][0]<sz[2][4])&&(sz[2][4]<sz[0][4])&&(sz[2][4]<sz[1][4])&&(sz[2][4]<sz[3][4])&&(sz[2][4]<sz[4][4])){
printf("",sz[2][4]);
i++;
}


if((sz[3][0]>sz[3][1])&&(sz[3][0]>sz[3][2])&&(sz[3][0]>sz[3][3])&&(sz[3][0]>sz[3][4])&&(sz[3][0]<sz[0][0])&&(sz[3][0]<sz[1][0])&&(sz[3][0]<sz[2][0])&&(sz[3][0]<sz[4][0])){
printf("",sz[3][0]);
i++;
}
if((sz[3][1]>sz[3][0])&&(sz[3][1]>sz[3][2])&&(sz[3][1]>sz[3][3])&&(sz[3][1]>sz[3][4])&&(sz[3][1]<sz[0][1])&&(sz[3][1]<sz[1][1])&&(sz[3][1]<sz[2][1])&&(sz[3][1]<sz[4][1])){
printf("",sz[3][1]);
i++;
}

if((sz[3][2]>sz[3][1])&&(sz[3][2]>sz[3][0])&&(sz[3][2]>sz[3][3])&&(sz[3][2]>sz[3][4])&&(sz[3][2]<sz[0][2])&&(sz[3][2]<sz[1][2])&&(sz[3][2]<sz[2][2])&&(sz[3][2]<sz[4][2])){
printf("",sz[3][2]);
i++;
}

if((sz[3][3]>sz[3][1])&&(sz[3][3]>sz[3][2])&&(sz[3][3]>sz[3][0])&&(sz[3][3]>sz[3][4])&&(sz[3][3]<sz[0][3])&&(sz[3][3]<sz[1][3])&&(sz[3][3]<sz[2][3])&&(sz[3][3]<sz[4][3])){
printf("",sz[3][3]);
i++;
}
if((sz[3][4]>sz[3][1])&&(sz[3][4]>sz[3][2])&&(sz[3][4]>sz[3][3])&&(sz[3][0]<sz[3][4])&&(sz[3][4]<sz[0][4])&&(sz[3][4]<sz[1][4])&&(sz[3][4]<sz[2][4])&&(sz[3][4]<sz[4][4])){
printf("",sz[3][4]);
i++;
}

if((sz[4][0]>sz[4][1])&&(sz[4][0]>sz[4][2])&&(sz[4][0]>sz[4][3])&&(sz[4][0]>sz[4][4])&&(sz[4][0]<sz[0][0])&&(sz[4][0]<sz[1][0])&&(sz[4][0]<sz[2][0])&&(sz[3][0]>sz[4][0])){
printf("",sz[4][0]);
i++;
}
if((sz[4][1]>sz[4][0])&&(sz[4][1]>sz[4][2])&&(sz[4][1]>sz[4][3])&&(sz[4][1]>sz[4][4])&&(sz[4][1]<sz[0][1])&&(sz[4][1]<sz[1][1])&&(sz[4][1]<sz[2][1])&&(sz[3][1]>sz[4][1])){
printf("",sz[4][1]);
i++;
}

if((sz[4][2]>sz[4][1])&&(sz[4][2]>sz[4][0])&&(sz[4][2]>sz[4][3])&&(sz[4][2]>sz[4][4])&&(sz[4][2]<sz[0][2])&&(sz[4][2]<sz[1][2])&&(sz[4][2]<sz[2][2])&&(sz[3][2]>sz[4][2])){
printf("",sz[4][2]);
i++;
}

if((sz[4][3]>sz[4][1])&&(sz[4][3]>sz[4][2])&&(sz[4][3]>sz[4][0])&&(sz[4][3]>sz[4][4])&&(sz[4][3]<sz[0][3])&&(sz[4][3]<sz[1][3])&&(sz[4][3]<sz[2][3])&&(sz[3][3]>sz[4][3])){
printf("",sz[4][3]);
i++;
}
if((sz[4][4]>sz[4][1])&&(sz[4][4]>sz[4][2])&&(sz[4][4]>sz[4][3])&&(sz[4][0]<sz[4][4])&&(sz[4][4]<sz[0][4])&&(sz[4][4]<sz[1][4])&&(sz[4][4]<sz[2][4])&&(sz[3][4]>sz[4][4])){
printf("",sz[4][4]);
i++;
}

if(i==0)
printf("");
return 0;
}

1000113
main()
{
    char num1[250], num2[250], num3[250], t[250];
    int i, j, k, len1, len2;
        cin>>num1;
        cin>>num2;
        len1 = strlen(num1);
        len2 = strlen(num2);
        if(len1>len2)
        {
            num3[len1]='\0';
            for(i=(len1-1);i>=(len1-len2);i--)
            {
                if(num1[i]+num2[i-(len1-len2)]<106)
                {
                num3[i]=num1[i]+num2[i-(len1-len2)]-48;
                }
                else
                {
                num3[i]=num1[i]+num2[i-(len1-len2)]-58;
                num1[i-1]=num1[i-1]+1;
                }
            }
            for(j=(len1-len2-1);j>=0;j--)
            {
                if(num1[j]>=58&&j!=0)
                {
                    num3[j]=num1[j]-10;
                    num1[j-1]=num1[j-1]+1;
                } 
                if(num1[j]>=58&&j==0)
                {
                    num3[j]=num1[j]-10;
                    cout<<""<<num3<<endl;
                    break;
                }
                if(num1[j]<58)
                {
                    num3[j]=num1[j];
                }
                if(j==0&&num1[j]<58)
                {
                    if(num3[0]==48)
                    {
                        for(i=0;i<len1;i++)
                        {
                            num3[i]=num3[i+1];
                        }
                    }
                    cout<<num3<<endl;
                }
            }
        }
        if(len1<len2)
        {
            num3[len2]='\0';
            for(i=(len2-1);i>=(len2-len1);i--)
            {
                if(num2[i]+num1[i-(len2-len1)]<106)
                {
                num3[i]=num2[i]+num1[i-(len2-len1)]-48;
                }
                else
                {
                num3[i]=num2[i]+num1[i-(len2-len1)]-58;
                num2[i-1]=num2[i-1]+1;
                }
            }
            for(j=(len2-len1-1);j>=0;j--)
            {
                if(num2[j]>=58&&j!=0)
                {
                    num3[j]=num2[j]-10;
                    num2[j-1]=num2[j-1]+1;
                } 
                if(num2[j]>=58&&j==0)
                {
                    num3[j]=num2[j]-10;
                    cout<<""<<num3<<endl;
                    break;
                }
                if(num2[j]<58)
                {
                    num3[j]=num2[j];
                }
                if(j==0)
                {
                    cout<<num3<<endl;
                }
            }
        }
        if(len1==len2)
        {
            num3[len1]='\0';
            for(i=len1-1;i>=0;i--)
            {
                if(i>0)
                {
                if(num1[i]+num2[i]<106)
                {
                    num3[i]=num1[i]+num2[i]-48;
                }
                if(num1[i]+num2[i]>=106)
                {
                    num3[i]=num1[i]+num2[i]-58;
                    num1[i-1]=num1[i-1]+1;
                }   
                }
                if(i==0)
                {
                    if(num1[0]+num2[0]>=106)
                    {
                        num3[0]=num1[0]+num2[0]-58;
                        cout<<""<<num3<<endl;
                    }
                    if(num1[0]+num2[0]<106)
                    {
                        num3[0]=num1[0]+num2[0]-48;
                        if(num3[0]==48&&strlen(num3)!=1)
                        {
                            for(k=0;k<strlen(num3);k++)
                            {
                                num3[k]=num3[k+1];
                            }
                        }                        
                        cout<<num3<<endl;
                    }
                }
            }
        }                                                   
    return 0;
}

1000114
main()
{
      int n,i=0,j=0,h=0,p,q,m;
      scanf("",&n);
      char string[]="";
      char sex[n][6];
      float height[n],male[n],female[n];
      float change;
      while(i<n){
                 scanf("",&sex[i],&height[i]);
                 i++;
                 }
      for(i=0;i<n;i++){
                       if(strcmp(sex[i],string)==0){
                                                    male[j]=height[i];
                                                    j++;
                                                    }
                       else{
                            female[h]=height[i];
                            h++;
                            }
                       }
      for(p=0;p<=j;p++){
                       m=j-1;
                       while(m>0){
                                  if(male[m]<=male[m-1]){
                                                         change=male[m];
                                                         male[m]=male[m-1];
                                                         male[m-1]=change;
                                                         }
                                   m=m-1;
                                   }
                       }
      for(p=0;p<=h;p++){
                       m=h-1;
                       while(m>0){
                                  if(female[m]<=female[m-1]){
                                                             change=female[m];
                                                             female[m]=female[m-1];
                                                             female[m-1]=change;
                                                             }
                                   m=m-1;
                                   }
                       }
      for(p=0;p<j;p++){
                       printf("",male[p]);
                       }
      for(p=h-1;p>0;p--){
                         printf("",female[p]);
                         }
      printf("",female[0]);}


1000115
main()
{
	int a,b,c,d,e,f,s=0;
	scanf("",&a,&b,&c,&d,&e,&f);
    if(a!=d){
		for(;a<=d-1;a++)
		{if((a%4==0&&a%100!=0)||(a%400==0)) s=s+366;
		 else s=s+365;}
	}
    else s=0;
        if((a%4==0&&a%100!=0)||(a%400==0)){
	        if(b==e){
		     s=s+f-c;
		     printf("",s);}
		    else{
		         switch(b){
		case 1:{
			if(e==2) {s=s+31+f-c;printf("",s);}
			if(e==3) {s=s+31+29+f-c;printf("",s);}
			if(e==4) {s=s+31+29+31+f-c;printf("",s);}
			if(e==5) {s=s+31+29+31+30+f-c;printf("",s);}
			if(e==6) {s=s+31+29+31+30+31+f-c;printf("",s);}
			if(e==7) {s=s+31+29+31+30+31+30+f-c;printf("",s);}
			if(e==8) {s=s+31+29+31+30+31+30+31+f-c;printf("",s);}
			if(e==9) {s=s+31+29+31+30+31+30+31+31+f-c;printf("",s);}
			if(e==10) {s=s+31+29+31+30+31+30+31+31+30+f-c;printf("",s);}
			if(e==11) {s=s+31+29+31+30+31+30+31+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+31+29+31+30+31+30+31+31+30+31+30+f-c;printf("",s);}
			break;}
		case 2:{
            if(e==1) {s=s-31+f-c;printf("",s);}
			if(e==3) {s=s+29+f-c;printf("",s);}
			if(e==4) {s=s+29+31+f-c;printf("",s);}
			if(e==5) {s=s+29+31+30+f-c;printf("",s);}
			if(e==6) {s=s+29+31+30+31+f-c;printf("",s);}
			if(e==7) {s=s+29+31+30+31+30+f-c;printf("",s);}
			if(e==8) {s=s+29+31+30+31+30+31+f-c;printf("",s);}
			if(e==9) {s=s+29+31+30+31+30+31+31+f-c;printf("",s);}
			if(e==10) {s=s+29+31+30+31+30+31+31+30+f-c;printf("",s);}
			if(e==11) {s=s+29+31+30+31+30+31+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+29+31+30+31+30+31+31+30+31+30+f-c;printf("",s);}
			break;}
		case 3:{
			if(e==1) {s=s-29-31+f-c;printf("",s);}
			if(e==2) {s=s-29+f-c;printf("",s);}
            if(e==4) {s=s+31+f-c;printf("",s);}
			if(e==5) {s=s+31+30+f-c;printf("",s);}
			if(e==6) {s=s+31+30+31+f-c;printf("",s);}
			if(e==7) {s=s+31+30+31+30+f-c;printf("",s);}
			if(e==8) {s=s+31+30+31+30+31+f-c;printf("",s);}
			if(e==9) {s=s+31+30+31+30+31+31+f-c;printf("",s);}
			if(e==10) {s=s+31+30+31+30+31+31+30+f-c;printf("",s);}
			if(e==11) {s=s+31+30+31+30+31+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+31+30+31+30+31+31+30+31+30+f-c;printf("",s);}
			break;}
		case 4:{
			if(e==1) {s=s-31-29-31+f-c;printf("",s);}
			if(e==2) {s=s-29-31+f-c;printf("",s);}
            if(e==3) {s=s-31+f-c;printf("",s);}
			if(e==5) {s=s+30+f-c;printf("",s);}
			if(e==6) {s=s+30+31+f-c;printf("",s);}
			if(e==7) {s=s+30+31+30+f-c;printf("",s);}
			if(e==8) {s=s+30+31+30+31+f-c;printf("",s);}
			if(e==9) {s=s+30+31+30+31+31+f-c;printf("",s);}
			if(e==10) {s=s+30+31+30+31+31+30+f-c;printf("",s);}
			if(e==11) {s=s+30+31+30+31+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+30+31+30+31+31+30+31+30+f-c;printf("",s);}
			break;}
		case 5:{
			if(e==1) {s=s-30-31-29-31+f-c;printf("",s);}
			if(e==2) {s=s-30-31-29+f-c;printf("",s);}
			if(e==3) {s=s-30-31+f-c;printf("",s);}
			if(e==4) {s=s-30+f-c;printf("",s);}
			if(e==6) {s=s+31+f-c;printf("",s);}
			if(e==7) {s=s+31+30+f-c;printf("",s);}
			if(e==8) {s=s+31+30+31+f-c;printf("",s);}
			if(e==9) {s=s+31+30+31+31+f-c;printf("",s);}
			if(e==10) {s=s+31+30+31+31+30+f-c;printf("",s);}
			if(e==11) {s=s+31+30+31+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+31+30+31+31+30+31+30+f-c;printf("",s);}
			break;}
		case 6:{
			if(e==1) {s=s-31-30-31-29-31+f-c;printf("",s);}
			if(e==2) {s=s-31-30-31-29+f-c;printf("",s);}
			if(e==3) {s=s-31-30-31+f-c;printf("",s);}
			if(e==4) {s=s-31-30+f-c;printf("",s);}
			if(e==5) {s=s-31+f-c;printf("",s);}
			if(e==7) {s=s+30+f-c;printf("",s);}
			if(e==8) {s=s+30+31+f-c;printf("",s);}
			if(e==9) {s=s+30+31+31+f-c;printf("",s);}
			if(e==10) {s=s+30+31+31+30+f-c;printf("",s);}
			if(e==11) {s=s+30+31+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+30+31+31+30+31+30+f-c;printf("",s);}
			break;}
		case 7:{
			if(e==1) {s=s-30-31-30-31-29-31+f-c;printf("",s);}
			if(e==2) {s=s-30-31-30-31-29+f-c;printf("",s);}
			if(e==3) {s=s-30-31-30-31+f-c;printf("",s);}
			if(e==4) {s=s-30-31-30+f-c;printf("",s);}
			if(e==5) {s=s-30-31+f-c;printf("",s);}
			if(e==6) {s=s-30+f-c;printf("",s);}
			if(e==8) {s=s+31+f-c;printf("",s);}
			if(e==9) {s=s+31+31+f-c;printf("",s);}
			if(e==10) {s=s+31+31+30+f-c;printf("",s);}
			if(e==11) {s=s+31+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+31+31+30+31+30+f-c;printf("",s);}
			break;}
		case 8:{
			if(e==1) {s=s-31-30-31-30-31-29-31+f-c;printf("",s);}
			if(e==2) {s=s-31-30-31-30-31-29+f-c;printf("",s);}
			if(e==3) {s=s-31-30-31-30-31+f-c;printf("",s);}
			if(e==4) {s=s-31-30-31-30+f-c;printf("",s);}
			if(e==5) {s=s-31-30-31+f-c;printf("",s);}
			if(e==6) {s=s-31-30+f-c;printf("",s);}
			if(e==7) {s=s-31+f-c;printf("",s);}
			if(e==9) {s=s+31+f-c;printf("",s);}
			if(e==10) {s=s+31+30+f-c;printf("",s);}
			if(e==11) {s=s+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+31+30+31+30+f-c;printf("",s);}
			break;}
		case 9:{
			if(e==1) {s=s-31-31-30-31-30-31-29-31+f-c;printf("",s);}
			if(e==2) {s=s-31-31-30-31-30-31-29+f-c;printf("",s);}
			if(e==3) {s=s-31-31-30-31-30-31+f-c;printf("",s);}
			if(e==4) {s=s-31-31-30-31-30+f-c;printf("",s);}
			if(e==5) {s=s-31-31-30-31+f-c;printf("",s);}
			if(e==6) {s=s-31-31-30+f-c;printf("",s);}
			if(e==7) {s=s-31-31+f-c;printf("",s);}
			if(e==8) {s=s-31+f-c;printf("",s);}
			if(e==10) {s=s+30+f-c;printf("",s);}
			if(e==11) {s=s+30+31+f-c;printf("",s);}
			if(e==12) {s=s+30+31+30+f-c;printf("",s);}
			break;}
		case 10:{
			if(e==1) {s=s-30-31-31-30-31-30-31-29-31+f-c;printf("",s);}
			if(e==2) {s=s-30-31-31-30-31-30-31-29+f-c;printf("",s);}
			if(e==3) {s=s-30-31-31-30-31-30-31+f-c;printf("",s);}
			if(e==4) {s=s-30-31-31-30-31-30+f-c;printf("",s);}
			if(e==5) {s=s-30-31-31-30-31+f-c;printf("",s);}
			if(e==6) {s=s-30-31-31-30+f-c;printf("",s);}
			if(e==7) {s=s-30-31-31+f-c;printf("",s);}
			if(e==8) {s=s-30-31+f-c;printf("",s);}
			if(e==9) {s=s-30+f-c;printf("",s);}
			if(e==11) {s=s+31+f-c;printf("",s);}
			if(e==12) {s=s+31+30+f-c;printf("",s);}
			break;}
		case 11:{
			if(e==1) {s=s-31-30-31-31-30-31-30-31-29-31+f-c;printf("",s);}
			if(e==2) {s=s-31-30-31-31-30-31-30-31-29+f-c;printf("",s);}
			if(e==3) {s=s-31-30-31-31-30-31-30-31+f-c;printf("",s);}
			if(e==4) {s=s-31-30-31-31-30-31-30+f-c;printf("",s);}
			if(e==5) {s=s-31-30-31-31-30-31+f-c;printf("",s);}
			if(e==6) {s=s-31-30-31-31-30+f-c;printf("",s);}
			if(e==7) {s=s-31-30-31-31+f-c;printf("",s);}
			if(e==8) {s=s-31-30-31+f-c;printf("",s);}
			if(e==9) {s=s-31-30+f-c;printf("",s);}
            if(e==10) {s=s-31+f-c;printf("",s);}
			if(e==12) {s=s+30+f-c;printf("",s);}
			break;}
		case 12:{
            if(e==1) {s=s-30-31-30-31-31-30-31-30-31-29-31+f-c;printf("",s);}
			if(e==2) {s=s-30-31-30-31-31-30-31-30-31-29+f-c;printf("",s);}
			if(e==3) {s=s-30-31-30-31-31-30-31-30-31+f-c;printf("",s);}
			if(e==4) {s=s-30-31-30-31-31-30-31-30+f-c;printf("",s);}
			if(e==5) {s=s-30-31-30-31-31-30-31+f-c;printf("",s);}
			if(e==6) {s=s-30-31-30-31-31-30+f-c;printf("",s);}
			if(e==7) {s=s-30-31-30-31-31+f-c;printf("",s);}
			if(e==8) {s=s-30-31-30-31+f-c;printf("",s);}
			if(e==9) {s=s-30-31-30+f-c;printf("",s);}
            if(e==10) {s=s-30-31+f-c;printf("",s);}
			if(e==11) {s=s-30+f-c;printf("",s);}
			break;}
				 }
			}
		}
		else{
             if(b==e){
		     s=s+f-c;
		     printf("",s);}
			 else{
              switch(b){
		case 1:{
			if(e==2) {s=s+31+f-c;printf("",s);}
			if(e==3) {s=s+31+28+f-c;printf("",s);}
			if(e==4) {s=s+31+28+31+f-c;printf("",s);}
			if(e==5) {s=s+31+28+31+30+f-c;printf("",s);}
			if(e==6) {s=s+31+28+31+30+31+f-c;printf("",s);}
			if(e==7) {s=s+31+28+31+30+31+30+f-c;printf("",s);}
			if(e==8) {s=s+31+28+31+30+31+30+31+f-c;printf("",s);}
			if(e==9) {s=s+31+28+31+30+31+30+31+31+f-c;printf("",s);}
			if(e==10) {s=s+31+28+31+30+31+30+31+31+30+f-c;printf("",s);}
			if(e==11) {s=s+31+28+31+30+31+30+31+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+31+28+31+30+31+30+31+31+30+31+30+f-c;printf("",s);}
			break;}
		case 2:{
			if(e==1) {s=s-31+f-c;printf("",s);}
            if(e==3) {s=s+28+f-c;printf("",s);}
			if(e==4) {s=s+28+31+f-c;printf("",s);}
			if(e==5) {s=s+28+31+30+f-c;printf("",s);}
			if(e==6) {s=s+28+31+30+31+f-c;printf("",s);}
			if(e==7) {s=s+28+31+30+31+30+f-c;printf("",s);}
			if(e==8) {s=s+28+31+30+31+30+31+f-c;printf("",s);}
			if(e==9) {s=s+28+31+30+31+30+31+31+f-c;printf("",s);}
			if(e==10) {s=s+28+31+30+31+30+31+31+30+f-c;printf("",s);}
			if(e==11) {s=s+28+31+30+31+30+31+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+28+31+30+31+30+31+31+30+31+30+f-c;printf("",s);}
			break;}
			  }
			 }
		}
		switch(b){
		case 3:{
			if(e==1) {s=s-28-31+f-c;printf("",s);}
			if(e==2) {s=s-28+f-c;printf("",s);}
            if(e==4) {s=s+31+f-c;printf("",s);}
			if(e==5) {s=s+31+30+f-c;printf("",s);}
			if(e==6) {s=s+31+30+31+f-c;printf("",s);}
			if(e==7) {s=s+31+30+31+30+f-c;printf("",s);}
			if(e==8) {s=s+31+30+31+30+31+f-c;printf("",s);}
			if(e==9) {s=s+31+30+31+30+31+31+f-c;printf("",s);}
			if(e==10) {s=s+31+30+31+30+31+31+30+f-c;printf("",s);}
			if(e==11) {s=s+31+30+31+30+31+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+31+30+31+30+31+31+30+31+30+f-c;printf("",s);}
			break;}
		case 4:{
			if(e==1) {s=s-31-28-31+f-c;printf("",s);}
			if(e==2) {s=s-28-31+f-c;printf("",s);}
            if(e==3) {s=s-31+f-c;printf("",s);}
			if(e==5) {s=s+30+f-c;printf("",s);}
			if(e==6) {s=s+30+31+f-c;printf("",s);}
			if(e==7) {s=s+30+31+30+f-c;printf("",s);}
			if(e==8) {s=s+30+31+30+31+f-c;printf("",s);}
			if(e==9) {s=s+30+31+30+31+31+f-c;printf("",s);}
			if(e==10) {s=s+30+31+30+31+31+30+f-c;printf("",s);}
			if(e==11) {s=s+30+31+30+31+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+30+31+30+31+31+30+31+30+f-c;printf("",s);}
			break;}
		case 5:{
			if(e==1) {s=s-30-31-28-31+f-c;printf("",s);}
			if(e==2) {s=s-30-31-28+f-c;printf("",s);}
			if(e==3) {s=s-30-31+f-c;printf("",s);}
			if(e==4) {s=s-30+f-c;printf("",s);}
			if(e==6) {s=s+31+f-c;printf("",s);}
			if(e==7) {s=s+31+30+f-c;printf("",s);}
			if(e==8) {s=s+31+30+31+f-c;printf("",s);}
			if(e==9) {s=s+31+30+31+31+f-c;printf("",s);}
			if(e==10) {s=s+31+30+31+31+30+f-c;printf("",s);}
			if(e==11) {s=s+31+30+31+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+31+30+31+31+30+31+30+f-c;printf("",s);}
			break;}
		case 6:{
			if(e==1) {s=s-31-30-31-28-31+f-c;printf("",s);}
			if(e==2) {s=s-31-30-31-28+f-c;printf("",s);}
			if(e==3) {s=s-31-30-31+f-c;printf("",s);}
			if(e==4) {s=s-31-30+f-c;printf("",s);}
			if(e==5) {s=s-31+f-c;printf("",s);}
			if(e==7) {s=s+30+f-c;printf("",s);}
			if(e==8) {s=s+30+31+f-c;printf("",s);}
			if(e==9) {s=s+30+31+31+f-c;printf("",s);}
			if(e==10) {s=s+30+31+31+30+f-c;printf("",s);}
			if(e==11) {s=s+30+31+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+30+31+31+30+31+30+f-c;printf("",s);}
			break;}
		case 7:{
			if(e==1) {s=s-30-31-30-31-28-31+f-c;printf("",s);}
			if(e==2) {s=s-30-31-30-31-28+f-c;printf("",s);}
			if(e==3) {s=s-30-31-30-31+f-c;printf("",s);}
			if(e==4) {s=s-30-31-30+f-c;printf("",s);}
			if(e==5) {s=s-30-31+f-c;printf("",s);}
			if(e==6) {s=s-30+f-c;printf("",s);}
			if(e==8) {s=s+31+f-c;printf("",s);}
			if(e==9) {s=s+31+31+f-c;printf("",s);}
			if(e==10) {s=s+31+31+30+f-c;printf("",s);}
			if(e==11) {s=s+31+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+31+31+30+31+30+f-c;printf("",s);}
			break;}
		case 8:{
			if(e==1) {s=s-31-30-31-30-31-28-31+f-c;printf("",s);}
			if(e==2) {s=s-31-30-31-30-31-28+f-c;printf("",s);}
			if(e==3) {s=s-31-30-31-30-31+f-c;printf("",s);}
			if(e==4) {s=s-31-30-31-30+f-c;printf("",s);}
			if(e==5) {s=s-31-30-31+f-c;printf("",s);}
			if(e==6) {s=s-31-30+f-c;printf("",s);}
			if(e==7) {s=s-31+f-c;printf("",s);}
			if(e==9) {s=s+31+f-c;printf("",s);}
			if(e==10) {s=s+31+30+f-c;printf("",s);}
			if(e==11) {s=s+31+30+31+f-c;printf("",s);}
			if(e==12) {s=s+31+30+31+30+f-c;printf("",s);}
			break;}
		case 9:{
			if(e==1) {s=s-31-31-30-31-30-31-28-31+f-c;printf("",s);}
			if(e==2) {s=s-31-31-30-31-30-31-28+f-c;printf("",s);}
			if(e==3) {s=s-31-31-30-31-30-31+f-c;printf("",s);}
			if(e==4) {s=s-31-31-30-31-30+f-c;printf("",s);}
			if(e==5) {s=s-31-31-30-31+f-c;printf("",s);}
			if(e==6) {s=s-31-31-30+f-c;printf("",s);}
			if(e==7) {s=s-31-31+f-c;printf("",s);}
			if(e==8) {s=s-31+f-c;printf("",s);}
			if(e==10) {s=s+30+f-c;printf("",s);}
			if(e==11) {s=s+30+31+f-c;printf("",s);}
			if(e==12) {s=s+30+31+30+f-c;printf("",s);}
			break;}
		case 10:{
			if(e==1) {s=s-30-31-31-30-31-30-31-28-31+f-c;printf("",s);}
			if(e==2) {s=s-30-31-31-30-31-30-31-28+f-c;printf("",s);}
			if(e==3) {s=s-30-31-31-30-31-30-31+f-c;printf("",s);}
			if(e==4) {s=s-30-31-31-30-31-30+f-c;printf("",s);}
			if(e==5) {s=s-30-31-31-30-31+f-c;printf("",s);}
			if(e==6) {s=s-30-31-31-30+f-c;printf("",s);}
			if(e==7) {s=s-30-31-31+f-c;printf("",s);}
			if(e==8) {s=s-30-31+f-c;printf("",s);}
			if(e==9) {s=s-30+f-c;printf("",s);}
			if(e==11) {s=s+31+f-c;printf("",s);}
			if(e==12) {s=s+31+30+f-c;printf("",s);}
			break;}
		case 11:{
			if(e==1) {s=s-31-30-31-31-30-31-30-31-28-31+f-c;printf("",s);}
			if(e==2) {s=s-31-30-31-31-30-31-30-31-28+f-c;printf("",s);}
			if(e==3) {s=s-31-30-31-31-30-31-30-31+f-c;printf("",s);}
			if(e==4) {s=s-31-30-31-31-30-31-30+f-c;printf("",s);}
			if(e==5) {s=s-31-30-31-31-30-31+f-c;printf("",s);}
			if(e==6) {s=s-31-30-31-31-30+f-c;printf("",s);}
			if(e==7) {s=s-31-30-31-31+f-c;printf("",s);}
			if(e==8) {s=s-31-30-31+f-c;printf("",s);}
			if(e==9) {s=s-31-30+f-c;printf("",s);}
            if(e==10) {s=s-31+f-c;printf("",s);}
			if(e==12) {s=s+30+f-c;printf("",s);}
			break;}
			case 12:{
            if(e==1) {s=s-30-31-30-31-31-30-31-30-31-28-31+f-c;printf("",s);}
			if(e==2) {s=s-30-31-30-31-31-30-31-30-31-2+f-c;printf("",s);}
			if(e==3) {s=s-30-31-30-31-31-30-31-30-31+f-c;printf("",s);}
			if(e==4) {s=s-30-31-30-31-31-30-31-30+f-c;printf("",s);}
			if(e==5) {s=s-30-31-30-31-31-30-31+f-c;printf("",s);}
			if(e==6) {s=s-30-31-30-31-31-30+f-c;printf("",s);}
			if(e==7) {s=s-30-31-30-31-31+f-c;printf("",s);}
			if(e==8) {s=s-30-31-30-31+f-c;printf("",s);}
			if(e==9) {s=s-30-31-30+f-c;printf("",s);}
            if(e==10) {s=s-30-31+f-c;printf("",s);}
			if(e==11) {s=s-30+f-c;printf("",s);}
			break;}
		}
			}


1000116
main()
{
	int a[4], z, q, s, l, i, j, k, m;
	for(i = 1; i < 6; i++)
		for(j = 1; j < 6; j++)
			if(j != i)
				for(k = 1; k < 6; k++)
					if(k != i && k != j)
						for(m = 1; m < 6; m++)
							if(m != k && m != i && m != j)
							{
								a[0] = 10 * i;
								a[1] = 10 * j;
								a[2] = 10 * k;
								a[3] = 10 * m;
								if(a[0] + a[1] == a[2] + a[3] && a[0] + a[3] > a[1] + a[2] && a[0] + a[2] < a[1])
								{
									for(i = 0; i < 4; i++)
										if(a[i] == 50)
										{
											if(i == 0)
												cout << "" << "" << "" << endl;
											if(i == 1)
												cout << "" << "" << "" << endl;
											if(i == 2)
												cout << "" << "" << "" << endl;
											if(i == 3)
												cout << "" << "" << "" << endl;
										}
									for(i = 0; i < 4; i++)
										if(a[i] == 40)
										{
											if(i == 0)
												cout << "" << "" << "" << endl;
											if(i == 1)
												cout << "" << "" << "" << endl;
											if(i == 2)
												cout << "" << "" << "" << endl;
											if(i == 3)
												cout << "" << "" << "" << endl;
										}
									for(i = 0; i < 4; i++)
										if(a[i] == 30)
										{
											if(i == 0)
												cout << "" << "" << "" << endl;
											if(i == 1)
												cout << "" << "" << "" << endl;
											if(i == 2)
												cout << "" << "" << "" << endl;
											if(i == 3)
												cout << "" << "" << "" << endl;
										}
									for(i = 0; i < 4; i++)
										if(a[i] == 20)
										{
											if(i == 0)
												cout << "" << "" << "" << endl;
											if(i == 1)
												cout << "" << "" << "" << endl;
											if(i == 2)
												cout << "" << "" << "" << endl;
											if(i == 3)
												cout << "" << "" << "" << endl;
										}
									for(i = 0; i < 4; i++)
										if(a[i] == 10)
										{
											if(i == 0)
												cout << "" << "" << "" << endl;
											if(i == 1)
												cout << "" << "" << "" << endl;
											if(i == 2)
												cout << "" << "" << "" << endl;
											if(i == 3)
												cout << "" << "" << "" << endl;
										}


								}
							}
	return 0;
}

1000117
main()
{
	int n;
	scanf("",&n);
	int i,k;
	for(i=0;i<n;i++)
	{
		scanf("",&b[i].n,b[i].s);
	}
	int c[26]={0};
	for(i=0;i<n;i++)
	{
		for(k=0;b[i].s[k];k++)
		{switch(b[i].s[k]){
		case '':c[0]++;break;
		case '':c[1]++;break;
		case '':c[2]++;break;
		case '':c[3]++;break;
		case '':c[4]++;break;
		case '':c[5]++;break;
		case '':c[6]++;break;
		case '':c[7]++;break;
		case '':c[8]++;break;
		case '':c[9]++;break;
		case '':c[10]++;break;
		case '':c[11]++;break;
		case '':c[12]++;break;
		case '':c[13]++;break;
		case '':c[14]++;break;
		case '':c[15]++;break;
		case '':c[16]++;break;
		case '':c[17]++;break;
		case '':c[18]++;break;
		case '':c[19]++;break;
		case '':c[20]++;break;
		case '':c[21]++;break;
		case '':c[22]++;break;
		case '':c[23]++;break;
		case '':c[24]++;break;
		case '':c[25]++;break;
		}}
	}
	int j,max=0;
	for(i=0;i<26;i++)
	{
		if(c[i]>max)
		{	max=c[i];
		j=i;}
	}
	int t=0;
	switch(j){
	case 0:printf("",max);
		for(i=0;i<n;i++)
		   {
			   for(k=0;b[i].s[k];k++)
			   {
				   if(b[i].s[k]=='')
				   printf("",b[i].n);
			   }
			   
		   }
		break;
	case 1:printf("",max);
		for(i=0;i<n;i++)
		{
			for(k=0;b[i].s[k];k++)
				if(b[i].s[k]=='')
					printf("",b[i].n);
		}
		break;
	case 2:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 3:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 4:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 5:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 6:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 7:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 8:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 9:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 10:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 11:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 12:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 13:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 14:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 15:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 16:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 17:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 18:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 19:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 20:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 21:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 22:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 23:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 24:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	case 25:printf("",max);for(i=0;i<n;i++){for(k=0;b[i].s[k];k++)if(b[i].s[k]=='')printf("",b[i].n);}break;
	
	}
	return 0;
}


1000118
if(t[fastT] < k[fastK])            
                            {                
                                             total -= 200;                
                                             slowT++; 
                                             fastK--;            
                            }           
                            else            
                            {                
                                             while(slowK<=fastK)                
                                             {                    
                                                                  if(t[slowT] > k[slowK])                    
                                                                  {                        
                                                                                           total += 200;                        
                                                                                           slowT++; 
                                                                                           slowK++;                    
                                                                  }                    
                                                                  else                    
                                                                  {                        
                                                                                           if(t[slowT] < k[fastK]) total -= 200;                        
                                                                                           slowT++; 
                                                                                           fastK--;                        
                                                                                           break;                    
                                                                  }               
                                             }            
                            }        
               }        
               cout<<total<<endl;    
      }    
      return 0;
}


1000119
main()
{
   int z,q,s,l,k,a[4],i,j,m;
   char b[4]={'','','',''},w;
   for(z=10;z<50;z=z+10)
   {
                        for(q=10;q<50;q=q+10)
                        {
                                            if(z==q)continue;
                                            for(s=10;s<50;s=s+10)
                                           {if(z==s||q==s)continue;
                                           for(l=10;l<50;l=l+10)
                                          if(z==l||q==l||s==l)continue;
                                           if((z+q==s+l)&&(z+l>s+q)&&(z+s<q))
                                           {a[0]=z;
                                           a[1]=q;
                                           a[2]=s;
                                           a[3]=l;
                                                                             
                                                                             
                                           for(i=0;i<3;i++)
                                           {
                                                            for(j=3;j>i;j--)
                                                            {
                                                                               if(a[j]>a[j-1])
                                                                               {
                                                                                  m=a[j];
                                                                                  a[j]=a[j-1];
                                                                                  a[j-1]=m;
                                                                                   w=b[j];
                                                                                  b[j]=b[j-1];
                                                                                  b[j-1]=w;           
                                                                               }
                                                            }
                                           }
                                           cout<<b[0]<<""<<a[0]<<endl;
                                           cout<<b[1]<<""<<a[1]<<endl;
                                           cout<<b[2]<<""<<a[2]<<endl;
                                           cout<<b[3]<<""<<a[3]<<endl;
                                                                     
                                            }
                                           
                                           }
                        }
   }
cin>>k;
return 0;
}


1000120
main()
{
	nian(int a,int b);
	qian(int a,int b,int c);
	hou(int a,int b,int c);
	int a,b,c,d,e,f,g,k;
	scanf("",&a,&b,&c);
	scanf("",&d,&e,&f);
	g=d-a;
	k=nian(a,g);
	if(g!=0)
	{k=k+qian(a,b,c);
	k=k+hou(d,e,f);}
	else
	{k=k+hou(d,e,f);
	k=k-hou(a,b,c);
	}
	printf("",k);
}
	
nian(int a,int b)
{   int i,j=0;
	for(i=1;i<=b-1;i++)
	{if(((a+i) % 4 == 0 && (a+i) % 100 != 0) || ((a+i) % 400 == 0))
		j=j+366;
	else j=j+365;
	}
	return(j);
}

qian(int a,int b,int c)
{
	pd1(int a,int b);
	pd2(int a,int b);
	pd3(int a);
	pd4(int a);
	int e=0,i,j;
	if((a % 4 == 0 && a % 100 != 0) || (a % 400 == 0))
     {
     e=pd1(b,c);
     for(i=b+1;i<=12;i++)
     {e=e+pd3(i);}}
     else 
      {
     e=pd2(b,c);
     for(i=b+1;i<=12;i++)
     {e=e+pd4(i);}}
    return(e);
     }
     
hou(int a,int b,int c)
{
	pd3(int a);
	pd4(int a);
	int e,i,j;
	e=c;
	if((a % 4 == 0 && a % 100 != 0) || (a % 400 == 0))
     {
     for(i=1;i<b;i++)
     {e=e+pd3(i);}}
     else 
      {
     for(i=1;i<b;i++)
     {e=e+pd4(i);}}
    return(e);
     }
     
     
pd1(int a,int b)
{switch(a)
	{case 1:return(31-b);break;
	case 2:return(29-b);break;
	case 3:return(31-b);break;
	case 4:return(30-b);break;
	case 5:return(31-b);break;
	case 6:return(30-b);break;
	case 7:return(31-b);break;
	case 8:return(31-b);break;
	case 9:return(30-b);break;
	case 10:return(31-b);break;
	case 11:return(30-b);break;
	case 12:return(31-b);break;
	default:return(0);}
}


pd2(int a,int b)
{switch(a)
	{case 1:return(31-b);break;
	case 2:return(28-b);break;
	case 3:return(31-b);break;
	case 4:return(30-b);break;
	case 5:return(31-b);break;
	case 6:return(30-b);break;
	case 7:return(31-b);break;
	case 8:return(31-b);break;
	case 9:return(30-b);break;
	case 10:return(31-b);break;
	case 11:return(30-b);break;
	case 12:return(31-b);break;
	default:return(0);}
}

pd3(int a)
{switch(a)
	{case 1:return(31);break;
	case 2:return(29);break;
	case 3:return(31);break;
	case 4:return(30);break;
	case 5:return(31);break;
	case 6:return(30);break;
	case 7:return(31);break;
	case 8:return(31);break;
	case 9:return(30);break;
	case 10:return(31);break;
	case 11:return(30);break;
	case 12:return(31);break;
	default:return(0);}
}

pd4(int a)
{switch(a)
	{case 1:return(31);break;
	case 2:return(28);break;
	case 3:return(31);break;
	case 4:return(30);break;
	case 5:return(31);break;
	case 6:return(30);break;
	case 7:return(31);break;
	case 8:return(31);break;
	case 9:return(30);break;
	case 10:return(31);break;
	case 11:return(30);break;
	case 12:return(31);break;
	default:return(0);}
}



1000122
main()
{
int a,b,i;
inverse(int num);
for(i=0;i<6;i++){
   scanf("",&a);
   if(a>=0){
   b=inverse(a);
   printf("",b);
     }else{
           b=inverse(a);
           printf("",b);
           }      
   }
return 0;
}

inverse(int num){
    int ge,shi,bai,qian,wan,num2,fu;
    if(num>=0){
              wan=(int)(num/1e4);
              qian=(int)((num-wan*1e4)/1000);
              bai=(int)((num-wan*1e4-qian*1e3)/100);
              shi=(int)((num-wan*1e4-qian*1e3-bai*1e2)/10);
              ge=(int)(num-wan*1e4-qian*1e3-bai*1e2-10*shi);
              if(10000<=num&&num<=99999){
              num2=(int)(wan+10*qian+1e2*bai+1e3*shi+1e4*ge);
                }else{
                      if(1000<=num&&num<=9999){
                        num2=(int)(qian+10*bai+1e2*shi+1e3*ge);
                        }else{
                              if(999>=num&&100<=num){
                                 num2=(int)(ge*1e2+shi*10+bai);
                                 }else{
                                       if(10<=num&&num<=99){
                                         num2=(int)(ge*10+shi);
                                         }else{
                                               num2=ge;
                                               }
                                       }
                              }
                      }
              }else{
              num=0-num;
              wan=(int)(num/1e4);
              qian=(int)((num-wan*1e4)/1000);
              bai=(int)((num-wan*1e4-qian*1e3)/100);
              shi=(int)((num-wan*1e4-qian*1e3-bai*1e2)/10);
              ge=(int)(num-wan*1e4-qian*1e3-bai*1e2-10*shi);
              if(10000<=num&&num<=99999){
              num2=(int)(wan+10*qian+1e2*bai+1e3*shi+1e4*ge);
                }else{
                      if(1000<=num&&num<=9999){
                        num2=(int)(qian+10*bai+1e2*shi+1e3*ge);
                        }else{
                              if(999>=num&&100<=num){
                                 num2=(int)(ge*1e2+shi*10+bai);
                                 }else{
                                       if(10<=num&&num<=99){
                                         num2=(int)(ge*10+shi);
                                         }else{
                                               num2=ge;
                                               }
                                       }
                              }
                      }
                    }
    return (num2);
    }


1000123
main()
{
       char c;
    PNode p1=CreateNullList();
    PNode p2=CreateNullList();
	PNode p3=p1;                                                                  
    PNode p4=p2;                                                                  

    c=getchar();
    while(c!='\n')
    {
        InsertNode(p1,c);
          c=getchar();
    }
    
   c=getchar();
    while(c!='\n')
    {
        InsertNode(p2,c);
        c=getchar();
    }
    
    

    int w;
    w=Add(p1,p2);

            if(w==1)
         p2=p1; 
            while(p2->next!=NULL)
            {
              p2=p2->next;
            }
            w=0;
          if((p2->last->last==NULL)&&(p2->a==''))
          printf("");
          else
          {
            while(p2->last!=NULL)            
            {
                if(p2->a!='')               
               {                
                 w=1;
                   printf("",p2->a);
                   p2=p2->last;
                }
                else
               {
                  if(w!=0)
                  {
                     printf("",p2->a);
                   p2=p2->last;

                   }
                   else
                   {
                       p2=p2->last;
                   }
                }
               
            }
            }
            printf("");
                   
      while (p3!=NULL)                                                           
      {
            p1=p3;
            p3=p3->next;
            free(p1);
      }
      while(p4!=NULL)
      {
          p1=p4;
          p4=p4->next;           
          free(p1);
      }
      getchar();
      getchar();
    return 0;

}



1000124
main()
{
    int i,j,N,high;
    long sch[100]={0};
    long schtot=0;
    char c;
    struct Student ptcpt[100];
    struct Student tmp;
        scanf("",&N);
    for (i=0;i<N-1;i++){
        j=0;
        while (j<22&&(c=getchar())!=''){
            ptcpt[i].name[j]=c;
            j++;
            }
            ptcpt[i].name[j]='\0';
        scanf("",&ptcpt[i].avg,&ptcpt[i].cls,&ptcpt[i].off,&ptcpt[i].west,&ptcpt[i].paper);
        if (ptcpt[i].avg>80&&ptcpt[i].paper>=1){
        sch[i]=sch[i]+8000;}
        if (ptcpt[i].avg>85&&ptcpt[i].cls>80){
        sch[i]=sch[i]+4000;}
        if (ptcpt[i].avg>90){
        sch[i]=sch[i]+2000;}
        if (ptcpt[i].avg>85&&ptcpt[i].west==''){
        sch[i]=sch[i]+1000;}
        if (ptcpt[i].cls>80&&ptcpt[i].off==''){
        sch[i]=sch[i]+850;}

        schtot=schtot+sch[i];
        }

        j=0;
        while (j<22&&(c=getchar())!=''){
            ptcpt[N-1].name[j]=c;
            j++;
            }
            ptcpt[N-1].name[j]='\0';
        scanf("",&ptcpt[N-1].avg,&ptcpt[N-1].cls,&ptcpt[N-1].off,&ptcpt[N-1].west,&ptcpt[N-1].paper);
        if (ptcpt[N-1].avg>80&&ptcpt[N-1].paper>=1) {
            sch[N-1]=sch[N-1]+8000;
        }
        if (ptcpt[N-1].avg>85&&ptcpt[N-1].cls>80){
        sch[N-1]=sch[N-1]+4000;}
        if (ptcpt[N-1].avg>90){
        sch[N-1]=sch[N-1]+2000;}
        if (ptcpt[N-1].avg>85&&ptcpt[N-1].west==''){
        sch[N-1]=sch[N-1]+1000;}
        if (ptcpt[N-1].cls>80&&ptcpt[N-1].off==''){
        sch[N-1]=sch[N-1]+850;}

        schtot=schtot+sch[N-1];
        strcpy(tmp.name,ptcpt[N-1].name);
                high=sch[N-1];

        for (i=N-1;i>-1;i--){
            if (high<=sch[i]){
                strcpy(tmp.name,ptcpt[i].name);
                high=sch[i];
                }
                else continue;
            }
        printf("",tmp.name,high,schtot);
    return 0;
}

1000125
main(){
	int w,d,i;
	d=0;
	scanf("",&w);
	if(w==1){
		for(i=0;i<12;i++){
			if(i==0){
				if(13%7==5){
					printf("",i+1);
				}
			}
			if(i==1||i==3||i==5||i==7||i==8||i==10){
			    d+=31;
			    if((d+13)%7==5){
				   printf("",i+1);
				}
			}
			if(i==2){
				d+=28;
				if((d+13)%7==5){
				   printf("",i+1);
				}
			}
			if(i==4||i==6||i==9||i==11){
				d+=30;
				if((d+13)%7==5){
				   printf("",i+1);
				}
			}
		}
	}
	if(w==2){
		for(i=0;i<12;i++){
			if(i==0){
				if(13%7==4){
					printf("",i+1);
				}
			}
			if(i==1||i==3||i==5||i==7||i==8||i==10){
			    d+=31;
			    if((d+13)%7==4){
				   printf("",i+1);
				}
			}
			if(i==2){
				d+=28;
				if((d+13)%7==4){
				   printf("",i+1);
				}
			}
			if(i==4||i==6||i==9||i==11){
				d+=30;
				if((d+13)%7==4){
				   printf("",i+1);
				}
			}
		}
	}
	if(w==3){
		for(i=0;i<12;i++){
			if(i==0){
				if(13%7==3){
					printf("",i+1);
				}
			}
			if(i==1||i==3||i==5||i==7||i==8||i==10){
			    d+=31;
			    if((d+13)%7==3){
				   printf("",i+1);
				}
			}
			if(i==2){
				d+=28;
				if((d+13)%7==3){
				   printf("",i+1);
				}
			}
			if(i==4||i==6||i==9||i==11){
				d+=30;
				if((d+13)%7==3){
				   printf("",i+1);
				}
			}
		}
	}
	if(w==4){
		for(i=0;i<12;i++){
			if(i==0){
				if(13%7==2){
					printf("",i+1);
				}
			}
			if(i==1||i==3||i==5||i==7||i==8||i==10){
			    d+=31;
			    if((d+13)%7==2){
				   printf("",i+1);
				}
			}
			if(i==2){
				d+=28;
				if((d+13)%7==2){
				   printf("",i+1);
				}
			}
			if(i==4||i==6||i==9||i==11){
				d+=30;
				if((d+13)%7==2){
				   printf("",i+1);
				}
			}
		}
	}
	if(w==5){
		for(i=0;i<12;i++){
			if(i==0){
				if(13%7==1){
					printf("",i+1);
				}
			}
			if(i==1||i==3||i==5||i==7||i==8||i==10){
			    d+=31;
			    if((d+13)%7==1){
				   printf("",i+1);
				}
			}
			if(i==2){
				d+=28;
				if((d+13)%7==1){
				   printf("",i+1);
				}
			}
			if(i==4||i==6||i==9||i==11){
				d+=30;
				if((d+13)%7==1){
				   printf("",i+1);
				}
			}
		}
	}
	if(w==6){
		for(i=0;i<12;i++){
			if(i==0){
				if(13%7==0){
					printf("",i+1);
				}
			}
			if(i==1||i==3||i==5||i==7||i==8||i==10){
			    d+=31;
			    if((d+13)%7==0){
				   printf("",i+1);
				}
			}
			if(i==2){
				d+=28;
				if((d+13)%7==0){
				   printf("",i+1);
				}
			}
			if(i==4||i==6||i==9||i==11){
				d+=30;
				if((d+13)%7==0){
				   printf("",i+1);
				}
			}
		}
	}
	if(w==7){
		for(i=0;i<12;i++){
			if(i==0){
				if(13%7==6){
					printf("",i+1);
				}
			}
			if(i==1||i==3||i==5||i==7||i==8||i==10){
			    d+=31;
			    if((d+13)%7==6){
				   printf("",i+1);
				}
			}
			if(i==2){
				d+=28;
				if((d+13)%7==6){
				   printf("",i+1);
				}
			}
			if(i==4||i==6||i==9||i==11){
				d+=30;
				if((d+13)%7==6){
				   printf("",i+1);
				}
			}
		}
	}
	return 0;
}

1000126
main ()
{
	int y1,y2,m1,m2,d1,d2,i,j,sum=0,k,m,year;
	cin >>y1>>m1>>d1;
	cin >>y2>>m2>>d2;
	if (y1<y2)
	{
		for (i=y1+1;i<y2;i++)
		{
			if ((i % 4 == 0 && i% 100 != 0) || (i % 400 == 0))
				sum+=366;
			else sum+=365;
		}
		year=y1;
		for (i=m1+1;i<=12;i++)
		{
			switch (i)
			{
				case 1:
				case 3:
				case 5:
				case 7:
				case 8:
				case 10:
				case 12: m=31;break;
				case 2:  if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) 
							 m=29;
						 else m=28;
						 break;
				case 4:
				case 6:
				case 9:
				case 11: m=30;break;
			}
			sum+=m;
		}
		switch (m1)
		{
			case 1:
			case 3:
			case 5:
			case 7:
			case 8:
			case 10:
			case 12: m=31;break;
			case 2:  if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) 
							m=29;
						else m=28;
						break;
			case 4:
			case 6:
			case 9:
			case 11: m=30;break;
		}
		sum +=m-d1;
		year =y2;
		for (i=1;i<m2;i++)
		{
			switch (i)
			{
				case 1:
				case 3:
				case 5:
				case 7:
				case 8:
				case 10:
				case 12: m=31;break;
				case 2:  if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) 
							 m=29;
						 else m=28;
						 break;
				case 4:
				case 6:
				case 9:
				case 11: m=30;break;
			}
			sum+=m;
		}
		sum+=d2;
	}
	if (y1==y2)
	{
		if (m1<m2)
		{
			for (i=m1;i<m2;i++)
			{
				switch (i)
				{
					case 1:
					case 3:
					case 5:
					case 7:
					case 8:
					case 10:
					case 12: m=31;break;
					case 2:  if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) 
								 m=29;
							 else m=28;
							 break;
					case 4:
					case 6:
					case 9:
					case 11: m=30;break;
				}
				sum+=m;
			}
			sum+=d2;
			switch (m1)
			{
				case 1:
				case 3:
				case 5:
				case 7:
				case 8:
				case 10:
				case 12: m=31;break;
				case 2:  if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) 
								m=29;
							else m=28;
							break;
				case 4:
				case 6:
				case 9:
				case 11: m=30;break;
			}
			sum+=m-d1;
		}
		if (m1==m2)
			sum=d2-d1;
	}
	cout <<sum<<endl;

	return 0;
}


1000127
main()
{
      int i,j,k,g,ans,max,temp,n,l,t;
      char c[1000];     
      while(scanf("",c)!=EOF)
      {
             printf("",c);
                      for(k=0;k<100;k++)
                      {
                                         for(i=0;c[i]!='\0';i++)
                                         {
                                                                if(c[i]=='')
                                                                {
                                                                             for(j=i+1;c[j]!='\0';j++)
                                                                             {
                                                                                                    if(c[j]=='')
                                                                                                    {
                                                                                                                 i=j-1;
                                                                                                                 break;
                                                                                                    }
                                                                                                    if(c[j]=='')
                                                                                                    {
                                                                                                                 c[i]='';
                                                                                                                 c[j]='';
                                                                                                                 break;
                                                                                                    }
                                                                             }
                                                                }
                                         }
                      }
                      for(i=0;c[i]!='\0';i++)
                      {
                                             if(c[i]=='') c[i]='';
                                             if(c[i]=='') c[i]='';
                                             else c[i]='';
                      }
                      printf("",c);
      }
      
}



1000129
isRunNian(int year)
{
	int result;
	if(year%400 == 0 ||(year%4==0 && year%100!=0))
	{
		result = 1;
	} 
	else
	{
		result = 0;
	}
      return result;	
}
DiJiTian(int year, int month, int day)
{
	int result = 0;
	for(int i = 1; i < month; i++)
	{ 
		if(i==1||i==3||i==5||i==7||i==8||i==10||i==12)
		{
			result += 31;	
		} 
		if (i == 4 || i ==6 || i == 9 || i==11)
		{
			result += 30;
		}
		if(i == 2)
		{
			if(isRunNian(year))
			{
				result += 29;
			} 
			else
			{
				result += 28;
			}	
		}
	}
	result += day;
	return result;	
}
swap(int *a, int *b)
{
			int e;
			e = *a;
			*a = *b;
			*b = e; 
}
DiJiTian(int year, int month, int day);
isRunNian(int year);
swap(int *a, int *b);
main()
{
	int year1, month1, day1;
	int year2=2010, month2=12, day2=5;
	int result = 0;
	scanf("", &year1, &month1, &day1);
if(year1==1111111111)
{
printf("");
return 0;
}


         
	if(year1 == year2)
	{
		result = DiJiTian(year1, month1, day1) - DiJiTian(year2, month2, day2);
		if(result < 0)
		{
		result = 0 - result;
		}
	
	}
	else
	{
		int a,b,c;
		if(isRunNian(year1))
		{
			a = 366 - DiJiTian(year1, month1, day1);
		}
		else
		{
			a = 365 - DiJiTian(year1, month1, day1);
		}
		b = 0;
		for(int i = year1 + 1; i < year2; i++)
		{
			if(isRunNian(i))
			{
				b += 366;
			}
			else
			{
				b += 365;
			}
		}
		c = DiJiTian(year2, month2, day2);
		result = a + b + c; 


	}
	int h;
	h=result%7;
	if((year1<2010)||((year1==2010)&&(month1<12))||((year1==2010)&&(month1==12)&&(day1<5)))
	
		switch(h)
		{	case 6: printf("");break;
			case 5: printf("");break;
			case 4: printf("");break;
			case 3: printf("");break;
			case 2: printf("");break;
			case 1: printf("");break;
			case 0: printf("");break;
		}
		switch(h){
			case 0: printf("");break;
			case 1: printf("");break;
			case 2: printf("");break;
			case 3: printf("");break;
			case 4: printf("");break;
			case 5: printf("");break;
			case 6: printf("");break;
		

	return 0;
}
}



1000130
node_create(pnode *pheader,int l,char a[length],int max)
{
  pnode p=*pheader;
  p->pnext=NULL;
  for(int i=0;i<l;i++)
  {
     pnode pnew=(pnode)malloc(sizeof (struct node));
     pnew->value=a[i]-'';
     pnew->pnext=p->pnext;
     p->pnext=pnew;
     p=*pheader;
  }
  for(int i=0;i<l;i++) p=p->pnext;
  for(int i=l-1;i<=max;i++) 
  {
     pnode pnew=(pnode)malloc(sizeof (struct node));
     pnew->value=0;
     pnew->pnext=p->pnext;
     p->pnext=pnew;
     p=p->pnext;
  }
}
node_plus(pnode pheader1,pnode pheader2,pnode* pheader3,int max)
{
   int sum,num=0;
   pnode p1=pheader1->pnext;
   pnode p2=pheader2->pnext;
   pnode p3=(*pheader3)->pnext;
   for(int i=0;i<=max;i++)
   {
         sum=p1->value+p2->value+num;
         if(sum<10) {p3->value=sum;num=0;}
         else {p3->value=sum-10;num=1;}
         p1=p1->pnext;
         p2=p2->pnext;
         p3=p3->pnext;
   }
}
node_delete(pnode pheader)
{
   pnode p=pheader->pnext;
   pnode ptemp;
   while(p!=NULL)
   {
      ptemp=p;
      p=p->pnext;
      free(ptemp);
   }
   pheader->pnext=NULL;
}
output(pnode pheader3,int l)
{
  int t;
  pnode p=pheader3;
  int a[length]={0};
  for(int i=0;i<l;i++)
  {p=p->pnext;a[i]=p->value;}
  for(int i=l-1;i>=0;i--) {if(a[i]!=0) {t=i;break;}}
  for(int i=t;i>=0;i--) {printf("",a[i]);}
}
main()
{
   struct node header1,header2,header3;
   pnode pheader1=&header1;
   pnode pheader2=&header2;
   pnode pheader3=&header3;
   int l1,l2;
   int max;
   char a1[length]={'\0'},a2[length]={'\0'},a3[length+1]={'\0'};
   for(int i=0;i<length+1;i++) {a3[i]='';}

   gets(a1);
   l1=strlen(a1);
   gets(a2);
   l2=strlen(a2);
   if(l1>=l2) max=l1+1;
   else max=l2+1;
   node_create(&pheader1,l1,a1,max);
   node_create(&pheader2,l2,a2,max);
   node_create(&pheader3,max,a3,max);
   node_plus(pheader1,pheader2,&pheader3,max);
   output(pheader3,max);
   node_delete(pheader1);
   node_delete(pheader2);
   node_delete(pheader3);
   getchar();
   getchar();
}

1000131
main()
{
    int a[11][11]={0},b[11][11]={0},c[11][11]={0},d[11][11]={0},e[11][11]={0};
    int m,n;
    scanf("",&m,&n);
    a[5][5]=m;
    int i,j,i1,j1,i2,j2,i3,j3,i4,j4;
    if(n==1)
    {
        for(i=1;i<=9;i++)
        {
            for(j=1;j<=9;j++)
            {
                b[i][j]=2*a[i][j]+a[i][j-1]+a[i][j+1]+a[i-1][j]+a[i+1][j]+a[i+1][j+1]+a[i+1][j-1]+a[i-1][j+1]+a[i-1][j-1];
            }
        }
        for(i1=1;i1<=9;i1++)
        {
            for(j1=1;j1<=8;j1++)
            {
                printf("",b[i1][j1]);
            }
            printf("",b[i1][j1]);
        }
    }
    if(n==2)
    {
        for(i=1;i<=9;i++)
        {
            for(j=1;j<=9;j++)
            {
                b[i][j]=2*a[i][j]+a[i][j-1]+a[i][j+1]+a[i-1][j]+a[i+1][j]+a[i+1][j+1]+a[i+1][j-1]+a[i-1][j+1]+a[i-1][j-1];
            }
        }
        for(i1=1;i1<=9;i1++)
        {
            for(j1=1;j1<=9;j1++)
            {
                c[i1][j1]=2*b[i1][j1]+b[i1][j1-1]+b[i1][j1+1]+b[i1-1][j1]+b[i1+1][j1]+b[i1+1][j1+1]+b[i1+1][j1-1]+b[i1-1][j1+1]+b[i1-1][j1-1];
            }
        }
        for(i2=1;i2<=9;i2++)
        {
            for(j2=1;j2<=8;j2++)
            {
                printf("",c[i2][j2]);
            }
            printf("",c[i2][j2]);
        }
    }
    if(n==3)
    {
        for(i=1;i<=9;i++)
        {
            for(j=1;j<=9;j++)
            {
                b[i][j]=2*a[i][j]+a[i][j-1]+a[i][j+1]+a[i-1][j]+a[i+1][j]+a[i+1][j+1]+a[i+1][j-1]+a[i-1][j+1]+a[i-1][j-1];
            }
        }
        for(i1=1;i1<=9;i1++)
        {
            for(j1=1;j1<=9;j1++)
            {
                c[i1][j1]=2*b[i1][j1]+b[i1][j1-1]+b[i1][j1+1]+b[i1-1][j1]+b[i1+1][j1]+b[i1+1][j1+1]+b[i1+1][j1-1]+b[i1-1][j1+1]+b[i1-1][j1-1];
            }
        }
        for(i2=1;i2<=9;i2++)
        {
            for(j2=1;j2<=9;j2++)
            {
                d[i2][j2]=2*c[i2][j2]+c[i2][j2-1]+c[i2][j2+1]+c[i2-1][j2]+c[i2+1][j2]+c[i2+1][j2+1]+c[i2+1][j2-1]+c[i2-1][j2+1]+c[i2-1][j2-1];
            }
        }
        for(i3=1;i3<=9;i3++)
        {
            for(j3=1;j3<=8;j3++)
            {
                printf("",d[i3][j3]);
            }
            printf("",d[i3][j3]);
        }
    }
    if(n==4)
    {
        for(i=1;i<=9;i++)
        {
            for(j=1;j<=9;j++)
            {
                b[i][j]=2*a[i][j]+a[i][j-1]+a[i][j+1]+a[i-1][j]+a[i+1][j]+a[i+1][j+1]+a[i+1][j-1]+a[i-1][j+1]+a[i-1][j-1];
            }
        }
        for(i1=1;i1<=9;i1++)
        {
            for(j1=1;j1<=9;j1++)
            {
                c[i1][j1]=2*b[i1][j1]+b[i1][j1-1]+b[i1][j1+1]+b[i1-1][j1]+b[i1+1][j1]+b[i1+1][j1+1]+b[i1+1][j1-1]+b[i1-1][j1+1]+b[i1-1][j1-1];
            }
        }
        for(i2=1;i2<=9;i2++)
        {
            for(j2=1;j2<=9;j2++)
            {
                d[i2][j2]=2*c[i2][j2]+c[i2][j2-1]+c[i2][j2+1]+c[i2-1][j2]+c[i2+1][j2]+c[i2+1][j2+1]+c[i2+1][j2-1]+c[i2-1][j2+1]+c[i2-1][j2-1];
            }
        }
        for(i3=1;i3<=9;i3++)
        {
            for(j3=1;j3<=9;j3++)
            {
                e[i3][j3]=2*d[i3][j3]+d[i3][j3-1]+d[i3][j3+1]+d[i3-1][j3]+d[i3+1][j3]+d[i3+1][j3+1]+d[i3+1][j3-1]+d[i3-1][j3+1]+d[i3-1][j3-1];
            }
        }
        for(i4=1;i4<=9;i4++)
        {
            for(j4=1;j4<=8;j4++)
            {
                printf("",e[i4][j4]);
            }
            printf("",e[i4][j4]);
        }
    }
}

1000132
main()  
{  
    char str[max]={0}, flag[max]={0};  
    int i, len,n;  
    struct bracket *leftbracket, *rightbracket;  
  scanf("",&n);
while(n>0)
    {while(scanf("", str) != EOF)  
    {  
        
        leftbracket = (struct bracket *)malloc(sizeof(struct bracket));  
        rightbracket = (struct bracket *)malloc(sizeof(struct bracket));  
        leftbracket->top = rightbracket->top = 0;  
  
        len = strlen(str);  
  
        
        for(i = 0; i < len; i ++)  
        {  
            switch(str[i])  
            {  
                case '' :  
                    leftbracket->data[leftbracket->top ++] = str[i];  
                    flag[i] = '';  
                    break;  
                case '' :  
                    if(leftbracket->top > 0)  
                    {  
                        flag[i] = '';  
                        leftbracket->top -= 1;  
                    }else  
                    {  
                        flag[i] = '';  
                    }  
                    break;  
                default :  
                    flag[i] = '';  
                    break;  
            }  
        }  
  
        
        for(i = len - 1; i >= 0; i --)  
        {  
            switch(str[i])  
            {  
                case '' :  
                    rightbracket->data[rightbracket->top ++] = str[i];  
                    break;  
                case '' :  
                    if(rightbracket->top > 0)  
                    {  
                        rightbracket->top -= 1;  
                    }else  
                    {  
                        flag[i] = '';  
                    }  
                    break;  
                default :  
                    break;  
            }  
        }  
  
        
        printf("", str, flag);  
  
        
        memset(str, '\0', sizeof(str));  
        memset(flag, '\0', sizeof(flag));  
    }  
n--;}
    return 0;  
}  



1000133
main()
{
	int sz[9][9];
	int sj[9][9];

	int a,n,row,col,r,m,x,y;
	scanf("",&a,&n);
	for(row=0;row<9;row++)
	{
		for(col=0;col<9;col++)
		{
			sz[row][col]=0;
			sj[row][col]=0;
		}
	}
	sz[4][4]=a;


	for(row=0;row<9;row++)
	{
		for(col=0;col<9;col++)
		{
			sj[row][col]=sz[row][col];
			
		}
	}
	for(row=0;row<9;row++)
	{
		for(col=0;col<9;col++)
		{
			if(sz[row][col]!=0)
			{
				for(r=(row-1);r<=(row+1);r++)
				{
					for(m=(col-1);m<=(col+1);m++)
					{
						sj[r][m]+=sz[row][col];
					}
				}
			}
		}
	}
	if(n==1)
	{
		for(x=0;x<9;x++)
		{
			for(y=0;y<8;y++)
			{
				printf("",sj[x][y]);
			}
			printf("",sj[x][y]);
		}
	
	}

		for(row=0;row<9;row++)
	{
		for(col=0;col<9;col++)
		{
			sz[row][col]=sj[row][col];
			
		}
	}
	for(row=0;row<9;row++)
	{
		for(col=0;col<9;col++)
		{
			
			if(sj[row][col]!=0)
			{
				for(r=row-1;r<=row+1;r++)
				{
					for(m=col-1;m<=col+1;m++)
					{
						sz[r][m]+=sj[row][col];
					}
				}
			}
		}
	}
	if(n==2)
	{
		for(x=0;x<9;x++)
		{
			for(y=0;y<8;y++)
			{
				printf("",sz[x][y]);
			}
			printf("",sz[x][y]);
		}

	}


		for(row=0;row<9;row++)
	{
		for(col=0;col<9;col++)
		{
			sj[row][col]=sz[row][col];
			
		}
	}

		for(row=0;row<9;row++)
	{
		for(col=0;col<9;col++)
		{
			
			if(sz[row][col]!=0)
			{
				for(r=row-1;r<=row+1;r++)
				{
					for(m=col-1;m<=col+1;m++)
					{
						sj[r][m]+=sz[row][col];
					}
				}
			}
		}
	}
	if(n==3)
	{
		for(x=0;x<9;x++)
		{
			for(y=0;y<8;y++)
			{
				printf("",sj[x][y]);
			}
			printf("",sj[x][y]);
		}

	}

		for(row=0;row<9;row++)
	{
		for(col=0;col<9;col++)
		{
			sz[row][col]=sj[row][col];
			
		}
	}


	for(row=0;row<9;row++)
	{
		for(col=0;col<9;col++)
		{
			
			if(sj[row][col]!=0)
			{
				for(r=row-1;r<=row+1;r++)
				{
					for(m=col-1;m<=col+1;m++)
					{
						sz[r][m]+=sj[row][col];
					}
				}
			}
		}
	}
	if(n==4)
	{
		for(x=0;x<9;x++)
		{
			for(y=0;y<8;y++)
			{
				printf("",sz[x][y]);
			}
			printf("",sz[x][y]);
		}
	
	}

	return 0;
	}


1000134
paixu(int *p)
{
     int i,j,k;
     for(i=1;i<=n;i++)
     {
                      for(j=i+1;j<=n;j++)
                      {
                                         if(p[i]<p[j]) 
                                         {
                                                       k=p[i];
                                                       p[i]=p[j];
                                                       p[j]=k;
                                         }
                      }
     }                
}
main()
{
      int i,j,k,temp,sum,p,q;
      for(;;)
      {
             scanf("",&n);
             if(n==0) break;
             else
             {
                 for(i=1;i<=n;i++) scanf("",&a[i]);
                 for(i=1;i<=n;i++) scanf("",&b[i]);
                 sum=0;
                 paixu(a);
                 paixu(b);
                 for(i=1,j=1,p=n,q=n;i<=q;)
                 {
                                  if(b[i]<a[j]) 
                                  {
                                                sum+=200;
                                                i++;
                                                j++;
                                  }
                                  else
                                  {
                                      if(b[q]<a[p])
                                      {
                                                   sum+=200;
                                                   p--;
                                                   q--;
                                      }
                                      else
                                      {
                                          if(b[i]==a[p])
                                          {
                                                        i++;
                                                        p--;
                                          }
                                          if(b[i]>a[p])
                                          {
                                               sum-=200;
                                               i++;
                                               p--;
                                          }
                                      }
                                  }
                 }
                 printf("",sum);
             }
      }
      
}


1000135
leapYear(int year)
{
	if((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0))
		return 1;
	return 0;
}
main()
{
	int i,startYear,endYear,startMonth,endMonth,startDay,endDay,count = 0;
	scanf("",&startYear,&startMonth,&startDay);
	scanf("",&endYear,&endMonth,&endDay);
	if(startYear < endYear)
	{
		for(i = startMonth + 1; i <= 12; i++)
		{
			switch (i)
			{
				case 1:
				case 3:
				case 5:
				case 7:
				case 8:
				case 10:
				case 12:count+=31;break;
				case 4:
				case 6:
				case 9:
				case 11:count+=30;break;
				case 2:
					if(leapYear(startYear))
						count+=29;
					else
						count+=28;
			}
		}
		for(i = 1; i < endMonth; i++)
		{
			switch (i)
			{
				case 1:
				case 3:
				case 5:
				case 7:
				case 8:
				case 10:
				case 12:count+=31;break;
				case 4:
				case 6:
				case 9:
				case 11:count+=30;break;
				case 2:
					if(leapYear(endYear))
						count+=29;
					else
						count+=28;
			}
		}
		switch (startMonth)
		{
			case 1:
			case 3:
			case 5:
			case 7:
			case 8:
			case 10:
			case 12:count+=31;break;
			case 4:
			case 6:
			case 9:
			case 11:count+=30;break;
			case 2:
				if(leapYear(endYear))
					count+=29;
				else
					count+=28;
		}
		count += endDay - startDay;
	}else{
		for(i = startMonth + 1; i < endMonth; i++)
		{
			switch (i)
			{
				case 1:
				case 3:
				case 5:
				case 7:
				case 8:
				case 10:
				case 12:count+=31;break;
				case 4:
				case 6:
				case 9:
				case 11:count+=30;break;
				case 2:
					if(leapYear(startYear))
						count+=29;
					else
						count+=28;
			}
		}
		if(startMonth < endMonth)
		{
			switch (startMonth)
			{
				case 1:
				case 3:
				case 5:
				case 7:
				case 8:
				case 10:
				case 12:count+=31;break;
				case 4:
				case 6:
				case 9:
				case 11:count+=30;break;
				case 2:
					if(leapYear(endYear))
						count+=29;
					else
						count+=28;
			}
		}
		count += endDay - startDay;
	}
	for(i = startYear + 1;i < endYear; i++)
	{
		count += 365 + leapYear(i);
	}
	printf("",count);
	return 0;
}

1000136
main()                      
{
    int i, j, k;
    cin >> n;
    for (i = 1; i <= n; i++)
    {
        int sum = 0;
        for (j = 0; j < n; j++)
         for (k = 0; k < n; k++)
         {
             cin >> a[j][k];
         }
        for (int count = n; count > 1; count--)   
        {
              guiling(count);      
              sum += a[1][1];      
              xiaojian(count);     
        }
        cout << sum << endl;
    }
    return 0;
}

guiling(int count)             
{
    int j, k;
    for (j = 0; j < count; j++)
    {
        int min = a[j][0];                
        for (k = 1; k < count; k++)       
        {
            if (min > a[j][k])
            {
                min = a[j][k];
            }
        }
        for (k = 0; k < count; k++)      
        {
            a[j][k] -= min;
        }
    }
    for (k = 0; k < count; k++)          
    {
         int min = a[0][k];
         for (j = 1; j < count; j++)
         {
              if (min > a[j][k])
              {
                  min = a[j][k];
              }
         }
         for (j = 0; j < count; j++)     
         {
             a[j][k] -= min;
         }
    }
}

xiaojian(int count)                  
{
    int j, k;
    for (j = 1; j < count - 1; j++)      
    {
        a[0][j] = a[0][j + 1];
        a[j][0] = a[j + 1][0];
        for (k = 1; k < count - 1; k++)
        {
             a[j][k] = a[j + 1][k + 1];
        }
    }
}


1000137
main()
{
  int i=0;
  for(i=0;;i++)
 {
  
  int n,i,j,s,t=0,win=0,loss=0,equal=0,sum=0,f,g;
  scanf("",&n);
  if(n==0) break;
  int a[1000];
  int b[1000];
  int c[1000];
  int d[1000];

  
  for (i=0;i<n;i++)
  scanf("",&a[i]);
  for (i=0;i<n;i++)
  scanf("",&b[i]);
  

  for(i=0;i<=(n-2);i++) 
  {
       for (j=(n-2);  j>=i;  j--)  
       {
          if (a[j]>a[j+1]) 
           {
           s=a[j];
           a[j]=a[j+1];
           a[j+1]=s;
           } 
       } 
      
  }
   
  for(i=0;i<=(n-2);i++) 
  {
       for (j=(n-2);  j>=i;  j--)  
       {
          if (b[j]>b[j+1]) 
           {
           s=b[j];
           b[j]=b[j+1];
           b[j+1]=s;
           } 
       } 
      
  }
  
   
                         for (i=0,j=(n-1),f=0,g=(n-1);i<=j&&f<=g;)
                {
                          if (  a[i]>b[f]  )
                          {
                                sum+=200;
                                i++;
                                f++;
                                
                          }      
                          else 
                          {
                               if  (  a[i]<b[f]  )
                                {
                                sum=sum-200;
                                i++;
                                g--;
                               
                                } 
                                else  
                                   {    
                                       if  (  a[j]>b[g] )
                                        {
                                        sum+=200;
                                        
                                        j--;
                                        g--;
                                        }
                                       else  
                                            {
                                                 if  (a [j]<b[g]  )
                                                {
                                                sum-=200;
                                               
                                                i++;
                                                g--;
                                                }
                                             else 
                                                {
                                                     if (  a[i]< b[g] )
                                                     {
                                                           sum-=200;
                                                           i++;
                                                           g--;
                                                     }
                                                     else 
                                                     {
                                                           sum =sum;
                                                           i++;
                                                           g--;  
                                                     }
                                                }
                                             
                                             
                                             }
                                             
                                   
                                   
                                   }
                                
                          }
                }
printf("",sum);
}

}


1000138
main()
{
    int n[100];
    int tianji[100][1000];
    int qiwang[100][1000];
    int i;
    for(i=0;;i++)
    {
        scanf("",&n[i]);
        if(n[i]==0)
        {
            break;       
        }
        else
        {
            for(int j=0;j<=n[i]-1;j++)
            {
                scanf("",&tianji[i][j]);    
            }
            for(int k=0;k<=n[i]-1;k++)
            {
                scanf("",&qiwang[i][k]);    
            }
        }            
    }
    for(int l=0;l<=i-1;l++)
    {  
        for(int j=n[l]-1;j>0;j--)
        {
            for(int k=0;k<j;k++)
            {
                if(tianji[l][k]>tianji[l][k+1])
                {
                    int temp;
                    temp=tianji[l][k+1];
                    tianji[l][k+1]=tianji[l][k];
                    tianji[l][k]=temp;                         
                }
                if(qiwang[l][k]>qiwang[l][k+1])
                {
                    int temp;
                    temp=qiwang[l][k+1];
                    qiwang[l][k+1]=qiwang[l][k];
                    qiwang[l][k]=temp;                         
                }                    
            }    
        }    
    }
    for(int l=0;l<=i-1;l++)
    {
        int t1=0,t2=n[l]-1;
        int q1=0,q2=n[l]-1;
        int count=0;
        for(;t1<=t2;)
        {
            if(tianji[l][t2]>qiwang[l][q2])
            {
                count++;
                t2--;
                q2--;                       
            }        
            if(tianji[l][t1]>qiwang[l][q1])
            {
                count++;
                t1++;
                q1++; 
            } 
            if(tianji[l][t1]<qiwang[l][q2])
            {
                count--;
                t1++;
                q2--;
            }
            else
            {
                t1++;
                q2--;
            } 
        } 
        printf("",200*count);   
    }
    return 0;    
}


1000139
main()
{
    int n,i,j,S,t,q,te,qe,m;
    for(;;){
	S=0;
	scanf("",&n);
	if(n==0) return 0;
	int *T=(int *)malloc(sizeof(int)*n);
    int *Q=(int *)malloc(sizeof(int)*n);
	for(i=0;i<n;i++) scanf("", T+i);
	for(i=0;i<n;i++) scanf("", Q+i);

	

    for(i=0;i<n;i++){
		for(j=i+1;j<n;j++){
			if(*(T+j)>*(T+i)){
			    m=*(T+i);
				*(T+i)=*(T+j);
				*(T+j)=m;
			} 
		}
	}
    for(i=0;i<n;i++){
		for(j=i+1;j<n;j++){
			if(*(Q+j)>*(Q+i)){
			    m=*(Q+i);
				*(Q+i)=*(Q+j);
				*(Q+j)=m;
			} 
		}
	}

	

    for(t=0,q=0,te=n-1,qe=n-1;;){
		if(t==te){
			if(*(T+t)>*(Q+q)){
		    S+=200;
			*(T+t)=-1;
			*(Q+q)=-1;
			t++;
			q++;
			break;
			}
			if(*(T+t)<*(Q+q)){
		    S-=200;
			*(T+te)=-1;
			*(Q+q)=-1;
			q++;
			te--;
			break;
			}
			if(*(T+t)==*(Q+q)) break;
			}
		else{
		if(*(T+t)>*(Q+q)){
		    S+=200;
			*(T+t)=-1;
			*(Q+q)=-1;
			t++;
			q++;

	

		}
		if(*(T+t)<*(Q+q)){
		    S-=200;
			*(T+te)=-1;
			*(Q+q)=-1;
			q++;
			te--;

	
		}
		if(*(T+t)==*(Q+q)){
			if(*(T+te)>*(Q+qe)){
			    S+=200;
				*(T+te)=-1;
				*(Q+qe)=-1;
				te--;
				qe--;

	

			}
			if(*(T+te)<=*(Q+qe)){
                if(*(T+te)!=*(T+t)) S-=200;
				*(T+te)=-1;
				*(Q+q)=-1;
				q++;
				te--;
    
	

			}
		}		
		}
	}
	printf("",S);
}
	return 0;
}

1000140
divide(int a[],int low,int high)
{
    int tmp = a[low];
    do{
        while(low != high && a[high] >= tmp)  --high;
        if(low != high && a[high] < tmp)
        {
            a[low] = a[high];
            ++low;
        }
        while(low != high && a[low] <= tmp)   ++low;
        if(low != high && a[low] > tmp)
        {
            a[high] = a[low];
            --high;
        }
    }while(low!=high);
    a[low] = tmp;
    return low;
}

quickSort(int a[],int low,int high)
{
    if(low >= high) return;
    int mid = divide(a,low,high);
    quickSort(a,low,mid - 1);
    quickSort(a,mid + 1,high);
}

QuickSort(int a[],int size)
{
    quickSort(a,0,size - 1);
}







main()
{
    while(1)
    {
        int num,money = 0;
        cin >> num;
        if(0 == num)    break;
        int tian[num],qi[num];
        for(int i = 0;i < num;++i)  cin >> tian[i];
        for(int i = 0;i < num;++i)  cin >> qi[i];
        QuickSort(tian,num);
        QuickSort(qi,num);

        int t_slow = 0,t_fast = num - 1;
        int q_slow = 0,q_fast = num - 1;
        while(t_slow <= t_fast)
        {
            if(tian[t_fast] > qi[q_fast])
            {
                ++money;
                --t_fast;
                --q_fast;
            }
            if(tian[t_slow] > qi[q_slow])
            {
                ++money;
                ++t_slow;
                ++q_slow;
            }
            else
            {
                if(tian[t_slow] < qi[q_fast])   --money;    
                --q_fast;
                ++t_slow;
            }
        }
        cout << money*200 << endl;

    }

}



1000141
main()
 {
   char str1[80],str2[80];
   gets(str1);
   gets(str2);
   int i;
    for(i=0;i<80;i++)
     {switch(str1[i]){
      case '':str1[i]=''; break;
      case '':str1[i]=''; break;
      case '':str1[i]=''; break;
      case '':str1[i]=''; break;
      case '':str1[i]=''; break;
      case '':str1[i]=''; break;
      case '':str1[i]=''; break;
      case '':str1[i]=''; break;
      case '':str1[i]=''; break;
      case '':str1[i]=''; break;
      case '':str1[i]=''; break;
      case '':str1[i]=''; break;
      case '':str1[i]='';break;
      case '':str1[i]='';break;
      case '':str1[i]='';break;
      case '':str1[i]='';break;
      case '':str1[i]='';break;
      case '':str1[i]='';break;
      case '':str1[i]='';break;
      case '':str1[i]='';break;
      case '':str1[i]='';break;
      case '':str1[i]='';break;
      case '':str1[i]='';break;
      case '':str1[i]='';break;
      case '':str1[i]='';break;
      case '':str1[i]='';break;
      }
    }
   int j;
    for(j=0;j<80;j++)
    {  switch(str2[j]){
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      case '':str2[j]='';break;
      }
     }
  if( strcmp(str1,str2)==0) printf("");
  if(strcmp(str1,str2)<0 )  printf("");
  if( strcmp(str1,str2)>0 )  printf("");
    
  return 0;
}
  


1000142
Compare(const void*elem1,const void*elem2)
{
    int*p1,*p2;
    p1=(int*)elem1;
    p2=(int*)elem2;
    return(*p2)-(*p1);
}
main()
{
    int i;
    for(i=0;;i++)
    {
        int n;
        scanf("",&n);
        if(n==0)
        break;
        else
        {
        int a[n],b[n];
        int j;
        for(j=0;j<n;j++)
        scanf("",&a[j]);
        int k;
        for(k=0;k<n;k++)
        scanf("",&b[k]);
        qsort(a,n,sizeof(int),Compare);
        qsort(b,n,sizeof(int),Compare);
         j=0;
         k=0;
        int p=0;
        int q=0;
        int t=0;
        int tailt=n-1;
        int tailq=n-1;
        for(;(p+q+t)!=n;)
        {
            if(a[j]>b[k])
            {
                t++;
                j++;
                k++;
            }
            if(a[j]<b[k])
            {
                tailt--;
                k++;
                q++;
            }
            if(a[j]==b[k])
            {
                if(a[tailt]>b[tailq])
                {
                    t++;
                    tailt--;
                    tailq--;
                }
                if(a[tailt]==b[tailq])
                {
                    if(a[tailt]==b[k])
                    {
                        p++;
                        tailt--;
                        k++;
                    }
                    else
                    {
                        q++;
                        tailt--;
                        k++;
                    }
                }
                if(a[tailt]<b[tailq])
                {
                    q++;
                    tailt--;
                    k++;
                }
            }
        }
        int profit;
        if(t==q)
        printf("");
        if(t>q)
        {
            profit=200*(t-q);
            printf("",profit);
        }
        if(t<q)
        {
            profit=200*(q-t);
            printf("",profit);
        }
        }
    }
}


1000143
main()
{
      int n,i,j,t,c;
      int a[1010],b[1010];
      scanf("",&n);
      while (n!=0)
      {     int win=0;
            int lose=0;
            int equal=0;
            for (i=0;i<=n-1;i++)
            {
                scanf("",&a[i]);
            }
            for (i=0;i<=n-1;i++)
            {
                scanf("",&b[i]);
            }
            for (i=n-2;i>=0;i--)
            {
                for (j=0;j<=i;j++)
                {
                    if (a[j]>a[j+1])
                    {
                                    t=a[j+1];
                                    a[j+1]=a[j];
                                    a[j]=t;
                    }
                }
            }
            for (i=n-2;i>=0;i--)
            {
                for (j=0;j<=i;j++)
                {
                    if (b[j]>b[j+1])
                    {
                                    t=b[j+1];
                                    b[j+1]=b[j];
                                    b[j]=t;
                    }
                }
            }
            
           for (i=0;i<=n-1;i++)
           {
               t=0;
               for (j=0;j<=n-1;j++)
               {   
                   if (b[j]==100000)
                   {
                                continue;
                   }
                   else
                   {
                       if (a[i]-b[j]>0)
                       {
                               t=j;
                       }
                   }
               }
               if (a[i]-b[t]>0)
               {
                       win++;
                       b[t]=100000;
                       a[i]=-2;
               }
           }
           for (i=0;i<=n-1;i++)
           {
             if(a[i]==-2)
             {
                continue;
             }
             else
             {
                 c=0;
                 t=0;
                 for (j=0;j<=n-1;j++)
                 {
                     if (b[j]==100000)
                     {
                                 continue;
                     }
                     else
                     {
                         if(a[i]==b[j])
                         {
                                       a[i]=-2;
                                       b[j]=100000;
                                       equal=equal+1;
                                       break;
                         }               
                     }  
                 }
             }
           } 
              lose=n-win-equal;
              int money;
              money=(win-lose)*200;
              printf("",money);                
              scanf("",&n);
   }
   getchar();getchar();getchar();getchar();getchar();
}
            


1000144
main(int argc, char* argv[])
{
	int a,b;
	int i,j;
	int c=0;
	char n[20];
	int num=0;

    scanf("",&a,n,&b);

	int k;

	
	for(i=0;n[i]!='\0';i++)
	{c++;}

	
	for(i=0;n[i]!='\0';i++)
	{
		k=1;
		for(j=c-i-1;j>0;j--)
		{
	        k*=a;
		}

		switch (n[i])
		{
		case '': num+=10*k;break;
		case '': num+=10*k;break;
		case '': num+=11*k;break;
		case '': num+=11*k;break;
		case '': num+=k*12;break;
		case '': num+=k*12;break;
		case '': num+=k*13;break;
		case '': num+=k*13;break;
		case '': num+=k*14;break;
		case '': num+=k*14;break;
		case '': num+=k*15;break;
		case '': num+=k*15;break;
		case '': num+=k*16;break;
		case '': num+=k*16;break;
		case '': num+=k*17;break;
		case '': num+=k* 17;break;
		case '': num+=k* 18;break;
		case '': num+=k* 18;break;
		case '': num+=k* 19;break;
		case '': num+=k* 19;break;
		case '': num+=k* 20;break;
		case '': num+=k* 20;break;
		case '': num+=k* 21;break;
		case '': num+=k* 21;break;
		case '': num+=k* 22;break;
		case '': num+=k* 22;break;
		case '': num+=k* 23;break;
		case '':num+=k* 23;break;
		case '':num+=k* 24;break;
		case '':num+=k* 24;break;
		case '':num+=k* 25;break;
		case '':num+=k* 25;break;
		case '':num+=k* 26;break;
		case '':num+=k* 26;break;
		case '':num+=k* 27;break;
		case '':num+=k* 27;break;
		case '':num+=k* 28;break;
		case '':num+=k* 28;break;
		case '':num+=k* 29;break;
		case '':num+=k* 29;break;
		case '':num+=k* 30;break;
		case '':num+=k* 30;break;
		case '':num+=k* 31;break;
		case '':num+=k* 31;break;
		case '':num+=k* 32;break;
		case '':num+=k* 32;break;
		case '':num+=k* 33;break;
		case '':num+=k* 33;break;
		case '':num+=k* 34;break;
		case '':num+=k* 34;break;
		case '':num+=k* 35;break;
		case '':num+=k* 35;break;
		case '':num+=k* 0;break;
		case '':num+=k* 1;break;
        case '':num+=k* 2;break;
        case '':num+=k* 3;break;
        case '':num+=k* 4;break;
        case '':num+=k* 5;break;
        case '':num+=k* 6;break;
        case '':num+=k* 7;break;
        case '':num+=k* 8;break;
        case '':num+=k* 9;break;

		}
	}
	

	int p[20];
	int q,count=0;
	for(i=0;(num/b)>0;i++)
	{
		q=num%b;
		p[i]=q;
		count++;
		num=num/b;
	}
		switch (num)
		{
		case 10:printf("");break;
		case 11:printf("");break;
		case 12:printf("");break;
		case 13:printf("");break;
		case 14:printf("");break;
		case 15:printf("");break;
		case 16:printf("");break;
		case 17:printf("");break;
		case 18:printf("");break;
		case 19:printf("");break;
		case 20:printf("");break;
		case 21:printf("");break;
		case 22:printf("");break;
		case 23:printf("");break;
		case 24:printf("");break;
		case 25:printf("");break;
		case 26:printf("");break;
		case 27:printf("");break;
		case 28:printf("");break;
		case 29:printf("");break;
		case 30:printf("");break;
		case 31:printf("");break;
		case 32:printf("");break;
		case 33:printf("");break;
		case 34:printf("");break;
		case 35:printf("");break;
		default:printf("",num);break;
		}
    
    for(i=count-1;i>=0;i--)
	{
		switch (p[i])
		{
		case 10:printf("");break;
		case 11:printf("");break;
		case 12:printf("");break;
		case 13:printf("");break;
		case 14:printf("");break;
		case 15:printf("");break;
		case 16:printf("");break;
		case 17:printf("");break;
		case 18:printf("");break;
		case 19:printf("");break;
		case 20:printf("");break;
		case 21:printf("");break;
		case 22:printf("");break;
		case 23:printf("");break;
		case 24:printf("");break;
		case 25:printf("");break;
		case 26:printf("");break;
		case 27:printf("");break;
		case 28:printf("");break;
		case 29:printf("");break;
		case 30:printf("");break;
		case 31:printf("");break;
		case 32:printf("");break;
		case 33:printf("");break;
		case 34:printf("");break;
		case 35:printf("");break;
		default:printf("",p[i]);break;
		}
	}

	return 0;
}



1000145
main()
{
	int z,q,s,l;    

	
	for(z=1;z<6;z++)
		for(q=1;q<6;q++)
			for(s=1;s<6;s++)
				for(l=1;l<6;l++)
					if(z+q==s+l&&z+l>s+q&&z+s<q)	
					{
						
						for(;;)
						{
							if(z==5)
							{
								cout<<""<<endl;break;
							}
							
							if(q==5)
							{
								cout<<""<<endl;break;
							}
							
							
							if(s==5)
							{
								cout<<""<<endl;break;
							}
							
							if(l==5)
							{
								cout<<""<<endl;break;
							}
							break;
						}
							
						for(;;)
						{
							if(z==4)
							{
								cout<<""<<endl;break;
							}
							
							if(q==4)
							{
								cout<<""<<endl;break;
							}
							
							
							if(s==4)
							{
								cout<<""<<endl;break;
							}
							
							if(l==4)
							{
								cout<<""<<endl;break;
							}
							break;
						}
						
						for(;;)
						{
							if(z==3)
							{
								cout<<""<<endl;break;
							}
							
							if(q==3)
							{
								cout<<""<<endl;break;
							}
							
							
							if(s==3)
							{
								cout<<""<<endl;break;
							}
							
							if(l==3)
							{
								cout<<""<<endl;break;
							}
							break;
						}
						
						for(;;)
						{
							if(z==2)
							{
								cout<<""<<endl;break;
							}
							
							if(q==2)
							{
								cout<<""<<endl;break;
							}
							
							
							if(s==2)
							{
								cout<<""<<endl;break;
							}
							
							if(l==2)
							{
								cout<<""<<endl;break;
							}
							break;
						}
						
						for(;;)
						{
							if(z==1)
							{
								cout<<""<<endl;break;
							}
							
							if(q==1)
							{
								cout<<""<<endl;break;
							}
							
							
							if(s==1)
							{
								cout<<""<<endl;break;
							}
							
							if(l==1)
							{
								cout<<""<<endl;break;
							}
							break;
						}
					}
						
						return 0;	
}



1000147
main()
{
    struct Student *pt;
    pt=creat();
        do {
            printf("",pt->num,pt->name,pt->gender,pt->age,pt->score,pt->address);
            pt=pt->upper;
        } while (pt!=NULL);
    return 0;
}

1000148
main()
{
      int m,n,i,j,k;
      struct xijun
      {
           int a[9][9];  
      }s[5];
      scanf("",&m,&n);
      for(i=0;i<9;i++)
      {
            for(j=0;j<9;j++)
            {
                   if(i==4&&j==4)
                       s[0].a[i][j]=m;
                   else
                       s[0].a[i][j]=0; 
            }          
      }
      for(k=1;k<=n;k++)
      {
          for(i=1;i<8;i++)
          {
                for(j=1;j<8;j++)
                {
                     s[k].a[i][j]=2*(s[k-1].a[i][j])+s[k-1].a[i-1][j-1]+s[k-1].a[i-1][j]+s[k-1].a[i-1][j+1]+s[k-1].a[i][j-1]+s[k-1].a[i][j+1]+s[k-1].a[i+1][j-1]+s[k-1].a[i+1][j]+s[k-1].a[i+1][j+1];        
                }          
          }
          s[k].a[0][0]=s[k-1].a[0][1]+s[k-1].a[1][0]+s[k-1].a[1][1];
          s[k].a[0][8]=s[k-1].a[0][7]+s[k-1].a[1][7]+s[k-1].a[1][8];
          s[k].a[8][0]=s[k-1].a[8][1]+s[k-1].a[7][0]+s[k-1].a[7][1];
          s[k].a[8][8]=s[k-1].a[8][7]+s[k-1].a[7][7]+s[k-1].a[7][8];
          for(i=1;i<8;i++)
          {
                s[k].a[0][i]=s[k-1].a[0][i-1]+s[k-1].a[0][i+1]+s[k-1].a[1][i-1]+s[k-1].a[1][i]+s[k-1].a[1][i+1];          
          }
          for(i=1;i<8;i++)
          {
                s[k].a[i][0]=s[k-1].a[i-1][0]+s[k-1].a[i+1][0]+s[k-1].a[i-1][1]+s[k-1].a[i][1]+s[k-1].a[i+1][1];          
          }
          for(i=1;i<8;i++)
          {
                s[k].a[8][i]=s[k-1].a[8][i-1]+s[k-1].a[8][i+1]+s[k-1].a[7][i-1]+s[k-1].a[7][i]+s[k-1].a[7][i+1];          
          }
          for(i=1;i<8;i++)
          {
                s[k].a[i][8]=s[k-1].a[i-1][8]+s[k-1].a[i+1][8]+s[k-1].a[i-1][7]+s[k-1].a[i][7]+s[k-1].a[i+1][7];          
          }             
      }
      for(i=0;i<8;i++)
      {
          for(j=0;j<8;j++)
          {
                printf("",s[n].a[i][j]);          
          }
          printf("",s[n].a[i][8]);            
      }
      for(i=0;i<8;i++)
      {
          printf("",s[n].a[8][i]);            
      }
      printf("",s[n].a[8][8]);
    
}


1000149
antichange(int x)
{
  if(x==0){return '';}
  if(x==1){return '';}
  if(x==2){return '';}
  if(x==3){return '';}
  if(x==4){return '';}
  if(x==5){return '';}
  if(x==6){return '';}
  if(x==7){return '';}
  if(x==8){return '';}
  if(x==9){return '';}
  if(x==10){return '';}
  if(x==11){return '';}
  if(x==12){return '';}
  if(x==13){return '';}
  if(x==14){return '';}
  if(x==15){return '';}
  if(x==16){return '';}
  if(x==17){return '';}
  if(x==18){return '';}
  if(x==19){return '';}
  if(x==20){return '';}
  if(x==21){return '';}
  if(x==22){return '';}
  if(x==23){return '';}
  if(x==24){return '';}
  if(x==25){return '';}
  if(x==26){return '';}
  if(x==27){return '';}
  if(x==28){return '';}
  if(x==29){return '';}
  if(x==30){return '';}
  if(x==31){return '';}
  if(x==32){return '';}
  if(x==33){return '';}
  if(x==34){return '';}
  if(x==35){return '';}
}
change(char x)
{
  if(x==''){return 0;}
  if(x==''){return 1;}
  if(x==''){return 2;}
  if(x==''){return 3;}
  if(x==''){return 4;}
  if(x==''){return 5;}
  if(x==''){return 6;}
  if(x==''){return 7;}
  if(x==''){return 8;}
  if(x==''){return 9;}
  if(x==''||x==''){return 10;}
  if(x==''||x==''){return 11;}
  if(x==''||x==''){return 12;}
  if(x==''||x==''){return 13;}
  if(x==''||x==''){return 14;}
  if(x==''||x==''){return 15;}
  if(x==''||x==''){return 16;}
  if(x==''||x==''){return 17;}
  if(x==''||x==''){return 18;}
  if(x==''||x==''){return 19;}
  if(x==''||x==''){return 20;}
  if(x==''||x==''){return 21;}
  if(x==''||x==''){return 22;}
  if(x==''||x==''){return 23;}
  if(x==''||x==''){return 24;}
  if(x==''||x==''){return 25;}
  if(x==''||x==''){return 26;}
  if(x==''||x==''){return 27;}
  if(x==''||x==''){return 28;}
  if(x==''||x==''){return 29;}
  if(x==''||x==''){return 30;}
  if(x==''||x==''){return 31;}
  if(x==''||x==''){return 32;}
  if(x==''||x==''){return 33;}
  if(x==''||x==''){return 34;}
  if(x==''||x==''){return 35;}
}
main()
{
	int l1=0,l2=0,l3=0,i=0,part=0,sum=0,j=0,mi=1,r[LEN],s=0;
	char a[LEN],b[LEN],c[LEN],result[LEN];
	scanf("",a,b,c);
	l1=atoi(a),l2=strlen(b),l3=atoi(c);
         for(i=0;i<l2;i++)
	{
	  s+=change(b[i]);
	}
if(s==0)
{
  printf("");
}
else
{
	
	sum=change(b[l2-1]);
	
	mi=l1;
	for(i=l2-2;i>=0;i--)
	{
	  part=change(b[i]);
	  
	  part=part*mi;
	  
	  sum=sum+part;
	  
	  mi=mi*l1;
	}
	while(sum!=0)
	{
	  r[j]=sum%l3;
	  result[j]=antichange(r[j]);
      
	  
	  j++;
	  sum=sum/l3;
	}
	part=j;
	for(j=part-1;j>=0;j--)
	{
	  printf("",result[j]);
	}
}
	return 0;
}



1000150
main()
{
	int n,i,j,k,p=0,q,r,e;
	cin>>n;
	float s,m1,m2,m3,m4,m5,m6,f,g;
	float l[50];
	float x[10];
	float y[10];
	float z[10];
	float a1[50][2];
	float a2[50][2];
	float a3[50][2];
	float b1[50][2];
	float b2[50][2];
	float b3[50][2];
	for(i=0;i<n;i++)
		cin>>x[i]>>y[i]>>z[i];
	for(j=0;j<n-1;j++)
	{
		for(k=j+1;k<n;k++)
		{
			l[p]=sqrt((x[j]-x[k])*(x[j]-x[k])+(y[j]-y[k])*(y[j]-y[k])+(z[j]-z[k])*(z[j]-z[k]));
			a1[p][0]=x[j];a2[p][0]=y[j];a3[p][0]=z[j];b1[p][0]=x[k];b2[p][0]=y[k];b3[p][0]=z[k];
			a1[p][1]=j;a2[p][1]=j;a3[p][1]=j;b1[p][1]=k;b2[p][1]=k;b3[p][1]=k;
			p=p+1;
		}
	}
	for(q=0;q<p-1;q++)
	{
		for(r=q+1;r<p;r++)
		{
			if(l[q]<l[r])
			{
				s=l[q];
				l[q]=l[r];
				l[r]=s;
				f=a1[q][1];
				a1[q][1]=a1[r][1];
				a1[r][1]=f;
				g=b1[q][1];
				b1[q][1]=b1[r][1];
				b1[r][1]=g;
				m1=a1[q][0];
				a1[q][0]=a1[r][0];
				a1[r][0]=m1;
				m2=a2[q][0];
				a2[q][0]=a2[r][0];
				a2[r][0]=m2;
				m3=a3[q][0];
				a3[q][0]=a3[r][0];
				a3[r][0]=m3;
				m4=b1[q][0];
				b1[q][0]=b1[r][0];
				b1[r][0]=m4;
				m5=b2[q][0];
				b2[q][0]=b2[r][0];
				b2[r][0]=m5;
				m6=b3[q][0];
				b3[q][0]=b3[r][0];
				b3[r][0]=m6;
			}
			if(l[q]==l[r]&&a1[q][1]>=a1[r][1])
			{
				f=a1[q][1];
				a1[q][1]=a1[r][1];
				a1[r][1]=f;
				g=b1[q][1];
				b1[q][1]=b1[r][1];
				b1[r][1]=g;
				m1=a1[q][0];
				m1=a1[q][0];
				a1[q][0]=a1[r][0];
				a1[r][0]=m1;
				m2=a2[q][0];
				a2[q][0]=a2[r][0];
				a2[r][0]=m2;
				m3=a3[q][0];
				a3[q][0]=a3[r][0];
				a3[r][0]=m3;
				m4=b1[q][0];
				b1[q][0]=b1[r][0];
				b1[r][0]=m4;
				m5=b2[q][0];
				b2[q][0]=b2[r][0];
				b2[r][0]=m5;
				m6=b3[q][0];
				b3[q][0]=b3[r][0];
				b3[r][0]=m6;
			}
			if(l[q]==l[r]&&b1[q][1]>=b1[r][1])
			{
				f=a1[q][1];
				a1[q][1]=a1[r][1];
				a1[r][1]=f;
				g=b1[q][1];
				b1[q][1]=b1[r][1];
				b1[r][1]=g;
				m1=a1[q][0];
				m1=a1[q][0];
				a1[q][0]=a1[r][0];
				a1[r][0]=m1;
				m2=a2[q][0];
				a2[q][0]=a2[r][0];
				a2[r][0]=m2;
				m3=a3[q][0];
				a3[q][0]=a3[r][0];
				a3[r][0]=m3;
				m4=b1[q][0];
				b1[q][0]=b1[r][0];
				b1[r][0]=m4;
				m5=b2[q][0];
				b2[q][0]=b2[r][0];
				b2[r][0]=m5;
				m6=b3[q][0];
				b3[q][0]=b3[r][0];
				b3[r][0]=m6;}
			
		}
	}
	for(e=0;e<p;e++)
	{
		cout<<""<<a1[e][0]<<""<<a2[e][0]<<""<<a3[e][0]<<""<<b1[e][0]<<""<<b2[e][0]<<""<<b3[e][0]<<"";
		printf("",l[e]);
	}
	getchar();
	getchar();
	return 0;
}

1000151
main()
{
	int year[200],month1[200],month2[200],month11[200],month22[200];
	int n;
	int i;
	scanf("",&n);
	for(i=0;i<n;i++){
		scanf("",&year[i],&month1[i],&month2[i]);
	}
	for(i=0;i<n;i++){
		if(year[i]%4==0&&year[i]%100!=0){
			switch (month1[i]){
			case 1:month11[i]=0;break;
			case 2:month11[i]=0+31;break;
			case 3:month11[i]=0+31+29;break;
			case 4:month11[i]=0+31+29+31;break;
			case 5:month11[i]=0+31+29+31+30;break;
			case 6:month11[i]=0+31+29+31+30+31;break;
			case 7:month11[i]=0+31+29+31+30+31+30;break;
			case 8:month11[i]=0+31+29+31+30+31+30+31;break;
			case 9:month11[i]=0+31+29+31+30+31+30+31+31;break;
			case 10:month11[i]=0+31+29+31+30+31+30+31+31+30;break;
			case 11:month11[i]=0+31+29+31+30+31+30+31+31+30+31;break;
			case 12:month11[i]=0+31+29+31+30+31+30+31+31+30+31+30;break;
			}
			switch (month2[i]){
			case 1:month22[i]=0;break;
			case 2:month22[i]=0+31;break;
			case 3:month22[i]=0+31+29;break;
			case 4:month22[i]=0+31+29+31;break;
			case 5:month22[i]=0+31+29+31+30;break;
			case 6:month22[i]=0+31+29+31+30+31;break;
			case 7:month22[i]=0+31+29+31+30+31+30;break;
			case 8:month22[i]=0+31+29+31+30+31+30+31;break;
			case 9:month22[i]=0+31+29+31+30+31+30+31+31;break;
			case 10:month22[i]=0+31+29+31+30+31+30+31+31+30;break;
			case 11:month22[i]=0+31+29+31+30+31+30+31+31+30+31;break;
			case 12:month22[i]=0+31+29+31+30+31+30+31+31+30+31+30;break;
			}
			if((month11[i]-month22[i])%7==0)
				printf("");
			if((month11[i]-month22[i])%7!=0)
				printf("");
		}
		if(year[i]%400==0){
			switch (month1[i]){
			case 1:month11[i]=0;break;
			case 2:month11[i]=0+31;break;
			case 3:month11[i]=0+31+29;break;
			case 4:month11[i]=0+31+29+31;break;
			case 5:month11[i]=0+31+29+31+30;break;
			case 6:month11[i]=0+31+29+31+30+31;break;
			case 7:month11[i]=0+31+29+31+30+31+30;break;
			case 8:month11[i]=0+31+29+31+30+31+30+31;break;
			case 9:month11[i]=0+31+29+31+30+31+30+31+31;break;
			case 10:month11[i]=0+31+29+31+30+31+30+31+31+30;break;
			case 11:month11[i]=0+31+29+31+30+31+30+31+31+30+31;break;
			case 12:month11[i]=0+31+29+31+30+31+30+31+31+30+31+30;break;
			}
			switch (month2[i]){
			case 1:month22[i]=0;break;
			case 2:month22[i]=0+31;break;
			case 3:month22[i]=0+31+29;break;
			case 4:month22[i]=0+31+29+31;break;
			case 5:month22[i]=0+31+29+31+30;break;
			case 6:month22[i]=0+31+29+31+30+31;break;
			case 7:month22[i]=0+31+29+31+30+31+30;break;
			case 8:month22[i]=0+31+29+31+30+31+30+31;break;
			case 9:month22[i]=0+31+29+31+30+31+30+31+31;break;
			case 10:month22[i]=0+31+29+31+30+31+30+31+31+30;break;
			case 11:month22[i]=0+31+29+31+30+31+30+31+31+30+31;break;
			case 12:month22[i]=0+31+29+31+30+31+30+31+31+30+31+30;break;
			}
			if((month11[i]-month22[i])%7==0)
				printf("");
			if((month11[i]-month22[i])%7!=0)
				printf("");
		}
		else{
			switch (month1[i]){
			case 1:month11[i]=0;break;
			case 2:month11[i]=0+31;break;
			case 3:month11[i]=0+31+28;break;
			case 4:month11[i]=0+31+28+31;break;
			case 5:month11[i]=0+31+28+31+30;break;
			case 6:month11[i]=0+31+28+31+30+31;break;
			case 7:month11[i]=0+31+28+31+30+31+30;break;
			case 8:month11[i]=0+31+28+31+30+31+30+31;break;
			case 9:month11[i]=0+31+28+31+30+31+30+31+31;break;
			case 10:month11[i]=0+31+28+31+30+31+30+31+31+30;break;
			case 11:month11[i]=0+31+28+31+30+31+30+31+31+30+31;break;
			case 12:month11[i]=0+31+28+31+30+31+30+31+31+30+31+30;break;
			}
			switch (month2[i]){
			case 1:month22[i]=0;break;
			case 2:month22[i]=0+31;break;
			case 3:month22[i]=0+31+28;break;
			case 4:month22[i]=0+31+28+31;break;
			case 5:month22[i]=0+31+28+31+30;break;
			case 6:month22[i]=0+31+28+31+30+31;break;
			case 7:month22[i]=0+31+28+31+30+31+30;break;
			case 8:month22[i]=0+31+28+31+30+31+30+31;break;
			case 9:month22[i]=0+31+28+31+30+31+30+31+31;break;
			case 10:month22[i]=0+31+28+31+30+31+30+31+31+30;break;
			case 11:month22[i]=0+31+28+31+30+31+30+31+31+30+31;break;
			case 12:month22[i]=0+31+28+31+30+31+30+31+31+30+31+30;break;
			}
			if((month11[i]-month22[i])%7==0)
				printf("");
			if((month11[i]-month22[i])%7!=0)
				printf("");
		}
	}
	return 0;
}



1000152
main(){
    int n,k,i,j,x;
    int a,b;
    int s=0;
    int sz[50001],szz[50001];
    scanf("",&n);
    for(i=0;i<n;i++){
                      scanf("",&sz[i],&szz[i]);
                      }
    for(k=1;k<=n;k++){
                      for(i=0;i<n-k;i++){
                                         if(sz[i]>sz[i+1]){
                                                           a=sz[i];
                                                           sz[i]=sz[i+1];
                                                           sz[i+1]=a;
                                                           b=szz[i];
                                                           szz[i]=szz[i+1];
                                                           szz[i+1]=b;
                                                           }
                                                           }
                                                           }
     for(i=0;i<n-1;i++){
                        if(sz[i+1]<=szz[i])
                           s+=1;
                        else {
                             for(j=0;j<i;j++){
                                              if(sz[i+1]<=szz[j])
                                                  s+=1;
                                                  }
                                                  }
                           }
    for(k=1;k<=n;k++){
                      for(i=0;i<n-k;i++){
                                         if(szz[i]>szz[i+1]){
                                                             x=szz[i];
                                                             szz[i]=szz[i+1];
                                                             szz[i+1]=x;
                                                             }
                                                             }
                                                             }
    if(s==n-1){
             printf("",sz[0],szz[n-1]);
             }
    else{
         printf("");
         }
   
    
     return 0;
     }               
                                                           


1000153
main()
{
    int n=0,k=0,i=0,j=0;  
    for(i=0;i<100;i++)   
    {
        for(j=0;j<100;j++)
        {    a[i][j]=0;}
    } 
    cin>>n; 
    for(k=0;k<n;k++)   
    { 
        for(i=0;i<n;i++)
        {
            for(j=0;j<n;j++)
            {    cin>>a[i][j];}
        }
        cout<<jieguo(n)<<endl;
    }
    return 0;
}

1000154
main()
{
    int m,n;
    scanf("",&m,&n);
    int germ[11][11]={0};
    int a[11][11]={0};
    int i,j,k,x;
    germ[5][5]=m;
    a[5][5]=m;
    for(k=0;k<n;k++)
    {
                    for(i=1;i<10;i++)
                    {
                                    for(j=1;j<10;j++)
                                    {
                                                    if(a[i][j]!=0)
                                                    {
                                                                  
                                                                  germ[i-1][j-1]+=a[i][j];
                                                                  germ[i-1][j]+=a[i][j];
                                                                  germ[i-1][j+1]+=a[i][j];
                                                                  germ[i][j-1]+=a[i][j];
                                                                  germ[i][j+1]+=a[i][j];
                                                                  germ[i+1][j-1]+=a[i][j];
                                                                  germ[i+1][j]+=a[i][j];
                                                                  germ[i+1][j+1]+=a[i][j];
                                                                  germ[i][j]+=a[i][j];              
                                                    }              
                                    }                
                    }
                    for(i=0;i<11;i++)
                    {
                                     for(j=0;j<11;j++)
                                     {
                                                      a[i][j]=germ[i][j];                        
                                     }                 
                    }
    }
    for(i=1;i<10;i++)
    {
                    for(j=1;j<9;j++)
                    {
                                    printf("",germ[i][j]);                
                    }                
                    printf("",germ[i][9]);
    }

}


1000155
main()
{
     char str[102][102] = {''};
     int n, m, count = 0;
     cin >> n;
     cin.get();
     for(int i = 1; i <= n; i++)
     {
             cin.getline(str[i],102); 
     }
     cin >> m;
     if(m == 1)
     {
          for(int i = 1; i <= n; i++)
          {
                  for(int k = 0; k <= n - 1; k++)
                  {
                          if(str[i][k] == '')
                          count++;
                  }
          }
          cout << count << endl;
     }
     else 
     {
         for(int j = 1; j < m; j++)
         {
                 for(int i = 1; i <= n; i++)
                 {
                         for(int k = 0; k <= n - 1; k++)
                         {
                                 if(str[i][k] == '')
                                 {
                                          if(str[i - 1][k] == '')
                                          str[i - 1][k] = '';
                                          if(str[i + 1][k] == '')
                                          str[i + 1][k] = '';
                                          if(str[i][k + 1] == '')
                                          str[i][k + 1] = '';
                                          if(str[i][k - 1] == '')
                                          str[i][k - 1] = '';
                                 }
                         }
                 }
                 for(int i = 1; i <= n; i++)
                 {
                         for(int k = 0; k <= n - 1; k++)
                         {
                                 if(str[i][k] == '')
                                 str[i][k] = '';
                         }
                 }
         }
         for(int i = 1; i <= n; i++)
         {
                 for(int k = 0; k <= n - 1; k++)
                 {
                         if(str[i][k] == '')
                         count++;
                 }
         }
         cout << count << endl;
     }
     return 0;
} 

1000156
main()
{
   int n=0,i=0,j=0,k=0,h=0,n1=0,sum=0;                 
   cin>>n;
   int s[n+1][n+1];                                    
   for(i=1;i<=n;i++)                                   
   {
       for(k=0;k<n;k++)                                
       {
            for(h=0;h<n;h++)
            {
               cin>>s[k][h];              
            }                
       }
       sum=0;                                          
       for(n1=n;n1>=2;n1--)                            
       {
               for(j=0;j<=n1-1;j++)                    
               {
                    s[j][n1]=s[j][0];
                    for(h=0;h<=n1-1;h++)
                    {
                               if(s[j][h]<s[j][n1])
                               s[j][n1]=s[j][h];         
                    }               
               }
               for(j=0;j<=n1-1;j++)                    
               {
                   for(h=0;h<=n1-1;h++)
                   {
                       s[j][h]=s[j][h]-s[j][n1];                
                   }                    
               }
               for(j=0;j<=n-1;j++)                     
               {
                    s[n1][j]=s[0][j];
                    for(h=0;h<=n1-1;h++)
                    {
                     if(s[h][j]<s[n1][j])
                     s[n1][j]=s[h][j];                    
                    }                                                   
               }
               for(j=0;j<=n1-1;j++)                   
               {
                   for(h=0;h<=n1-1;h++)
                   {
                      s[h][j]=s[h][j]-s[n1][j];
                   }                   
               }
               sum=sum+s[1][1];                       
               if(n1>2)                               
               {
                    for(j=2;j<=n1-1;j++)              
                    {
                    s[0][j-1]=s[0][j];
                    s[j-1][0]=s[j][0];                    
                    }     
                    for(j=1;j<=n1-2;j++)              
                    {
                        for(h=1;h<=n1-2;h++)
                        {
                        s[j][h]=s[j+1][h+1];                    
                        }                    
                    }
               }
       }
    cout<<sum<<endl;                 
   }
return 0;    
}


1000157





main()                                    
{
    double s[45], l;                          
                                              
    int n, k = 0, m[90][3], l1, l2, l3, l4, l5,l6, c[10][3];
    cin>>n;
    for(int i = 0; i < n; i++)                
            for(int j = 0; j < 3; j++)
                    cin>>c[i][j]; 
    for(int i = 0; i < n - 1; i++)            
            for(int j = i + 1; j < n; j++)
            {
                    s[k] = sqrt(pow(c[i][0] - c[j][0],2.0) + pow(c[i][1] - c[j][1],2.0)
                                +pow(c[i][2] - c[j][2],2.0));
                    
                    m[k][0] = c[i][0];
                    m[k][1] = c[i][1];
                    m[k][2] = c[i][2];
                    m[k + n * (n - 1) / 2][0] = c[j][0];
                    m[k + n *(n - 1) / 2][1] = c[j][1];
                    m[k + n *(n - 1) / 2][2] = c[j][2]; 
                    k++;
            } 
    for(int i = 1; i < k; i++)                
            for(int j = 0; j < k - i; j++)
            {
                    if(s[j] < s[j + 1])
                    {
                            l = s[j];
                            l1 = m[j][0];
                            l2 = m[j][1];
                            l3 = m[j][2];
                            l4 = m[j + n * (n - 1) / 2][0];
                            l5 = m[j + n * (n - 1) / 2][1];
                            l6 = m[j + n * (n - 1) / 2][2];
                            s[j] = s[j + 1];
                            m[j][0] = m[j+1][0];
                            m[j][1] = m[j+1][1];
                            m[j][2] = m[j+1][2];
                            m[j + n * (n - 1) / 2][0] = m[j + n * (n - 1) / 2+1][0];
                            m[j + n * (n - 1) / 2][1] = m[j + n * (n - 1) / 2+1][1];
                            m[j + n * (n - 1) / 2][2] = m[j + n * (n - 1) / 2+1][2];
                            s[j + 1] = l;
                            m[j + 1][0] = l1;
                            m[j + 1][1] = l2;
                            m[j + 1][2] = l3;
                            m[j + n * (n - 1) / 2+1][0] = l4;
                            m[j + n * (n - 1) / 2+1][1] = l5;
                            m[j + n * (n - 1) / 2+1][2] = l6;
                    }
            }
    for(int i = 0; i < k; i++)                           
            cout<<""<<m[i][0]<<""<<m[i][1]<<""<<m[i][2]<<""<<""<< m[i + n * (n - 1) / 2][0]
            <<""<< m[i + n * (n - 1) / 2][1]<<""<< m[i + n * (n - 1) / 2][2]<<""<<fixed<<setprecision(2)<<s[i]<<endl;

    return 0;
} 


1000158
main()
{
    int n,m,i,j,day,count=0,iday[100][100];
    char room[100][100];
    for(i=0;i<100;i++)
        for(j=0;j<100;j++)
        {
            iday[i][j]=200;
        }
    scanf("",&n);
    for(i=0;i<n;i++)
        for(j=0;j<n;j++)
        {
            scanf("",&room[i][j]);
            while((room[i][j]=='')||(room[i][j]=='\n'))
            {
                scanf("",&room[i][j]);
            }
            if(room[i][j]=='')
                iday[i][j]=1;
        }
    scanf("",&m);
    for(day=2;day<=m;day++)
    {
        for(i=0;i<n;i++)
            for(j=0;j<n;j++)
            {
                if(  (room[i][j]=='')  &&  (iday[i][j]<day)  )
                {
                    if(  (room[i][j+1]=='') && (j+1<n)  )
                    {
                        room[i][j+1]='';
                        iday[i][j+1]=day;
                    
                    }
                    
                    if(  (room[i][j-1]=='') && (j-1>=0)  )
                    {
                        room[i][j-1]='';
                        iday[i][j-1]=day;
                     
                    }
                    
                    if(  (room[i+1][j]=='') && (i+1<n)  )
                    {
                        room[i+1][j]='';
                        iday[i+1][j]=day;
                     
                    }
                    
                    if(  (room[i-1][j]=='') && (i-1>=0)  )
                    {
                        room[i-1][j]='';
                        iday[i-1][j]=day;
                     
                    }
                    
                }
            }
 
        
    }
    for(i=0;i<n;i++)
        for(j=0;j<n;j++)
        {
            if(room[i][j]=='')
                count++;
        }
    printf("",count);
    
}

1000159


main()
{
      int x1,x2,y2,y1,a[100][100],b[100][100],c[100][100],i,k,j;
      scanf("",&x1,&y1);
      for(i=0;i<x1;i++)
      {
                       for(k=0;k<y1;k++)
                       {
                                        
                                        scanf("",&a[i][k]);
                                        
                                        }
                                        }
                                        
                                         scanf("",&x2,&y2);
                                        for(i=0;i<x2;i++)
      {
                       for(k=0;k<y2;k++)
                       {
                                        
                                        scanf("",&b[i][k]);
                                        
                                        }
                                        }
                                        
                                        for(i=0;i<x1;i++)
                                        {
                                                         for(k=0;k<y2;k++)
                                                         {
                                                                          c[i][k]=0;
                                                                          for(j=0;j<y1;j++)
                                                                          c[i][k]+=a[i][j]*b[j][k];
                                                                          if(k==0)
                                                                          printf("",c[i][k]);
                                                                          printf("",c[i][k]);
                                                                          }
                                                                          }
                                                                          
                                                                          
                                        
                                        
                                        }


1000160
main()
{
    
       int i,j,k,t,n,a[100][100],b[100][100],c[100][100],d[100],x1,x2,y1,y2,M,m,flag,flag1,flag2;
       
       scanf("",&x1,&y1);
      
       for (i=0;i<=x1-1;i++)
          {
                for (j=0;j<=y1-1;j++)
                scanf("",&a[i][j]);
                                          
                           
          }
          scanf("",&x2,&y2);
          for (i=0;i<=x2-1;i++)
          {
                for (j=0;j<=y2-1;j++)
                scanf("",&b[i][j]);
                                           
          }
         
          
         if (x1<x2)
         M=x2;
         else 
         M=x1;
         if(y1<y2)
         m=y2;
         else
         m=y1;                 
        
         for (i=0;i<M;i++)
          {    
               for(j=0;j<m;j++)
               c[i][j]=0;
          }
         
         
                                                                              
                                                                              
            
         for (i=0;i<M;i++)
          {   for (j=0;j<m;j++)
                 {     
                     for (t=0;t<y1;t++)
                      {  
                        
                          c[i][j]=c[i][j]+a[i][t]*b[t][j];
                          
                                       
                      }   
                        
                               
                               
                               
                 }                          
                          
                          
                          
          }
          
          
           
            
          for(i=0;i<M;i++)
           d[i]=0;  
           d[M]=m;                                                  
         
          for (i=0;i<M;i++)
          {   for (j=0;j<m;j++)
          
               {    if(c[i][j]==0)
                     d[i]++;                                                  
               }
          
          }  
          
          
          
              
            for (i=0;i<M;i++)                                                 
             {  
                  
                  
                  if(d[i]!=m)
                  {
                    if((M==100)&&(m==100)&&(i==0))        
                    printf("");
                         printf("",c[i][0]);
                            
                  for (j=1;j<m-d[i];j++)
                  printf("",c[i][j]);
                  
                  
                  
                  
                  
                  
                  }
                  else
                  {      flag=0;
                        
                        if(d[i+1]!=m)
                        {printf("");
                                     
                        for(j=1;j<m-d[i+1];j++)
                        printf("",c[i][j]);}
                        else
                        {   flag=1;
                            break;
                             
                            
                        }
                      
                    if(flag==1)
                    break;  
                    
                    
                      
                      
                  }             
               
              if(i!=M-1&&((d[i+1]!=m)||(d[i+1]==m)&&(d[i+2]!=m)))
                    printf("");             
                 
                 
             }
    
    
  
    
    
    
    
    
    
    
    return 0;   
}


1000161
main()
{ 
    int k,i,j,a,b,c,m,n;
    scanf("",&k);
    for(i=0;i<k;i++)
    {
                    m=0;
                    n=0; 
                    scanf("",&a,&b,&c);
                    if(((a%4==0)&&(a%100!=0))||((a%100==0)&&(a%400==0))) 
                    {
                                                                         for(j=1;j<b;j++) 
                                                           {
                                                                         if(j==1)
                                                                         m+=31;
                                                                         if(j==2)
                                                                         m+=29;
                                                                         if(j==3)
                                                                         m+=31;
                                                                         if(j==4)
                                                                         m+=30;
                                                                         if(j==5)
                                                                         m+=31;
                                                                         if(j==6)
                                                                         m+=30;
                                                                         if(j==7)
                                                                         m+=31;
                                                                         if(j==8)
                                                                         m+=31; 
                                                                         if(j==9)
                                                                         m+=30;
                                                                         if(j==10)
                                                                         m+=31;
                                                                         if(j==11)
                                                                         m+=30;
                                                           }
                                                            for(j=1;j<c;j++) 
                                                           {
                                                                         if(j==1)
                                                                         n+=31;
                                                                         if(j==2)
                                                                         n+=29;
                                                                         if(j==3)
                                                                         n+=31;
                                                                         if(j==4)
                                                                         n+=30;
                                                                         if(j==5)
                                                                         n+=31;
                                                                         if(j==6)
                                                                         n+=30;
                                                                         if(j==7)
                                                                         n+=31;
                                                                         if(j==8)
                                                                         n+=31; 
                                                                         if(j==9)
                                                                         n+=30;
                                                                         if(j==10)
                                                                         n+=31;
                                                                         if(j==11)
                                                                         n+=30;
                                                           }
                    }
                    else
                    {
                                                                         for(j=1;j<b;j++) 
                                                           {
                                                                         if(j==1)
                                                                         m+=31;
                                                                         if(j==2)
                                                                         m+=28;
                                                                         if(j==3)
                                                                         m+=31;
                                                                         if(j==4)
                                                                         m+=30;
                                                                         if(j==5)
                                                                         m+=31;
                                                                         if(j==6)
                                                                         m+=30;
                                                                         if(j==7)
                                                                         m+=31;
                                                                         if(j==8)
                                                                         m+=31; 
                                                                         if(j==9)
                                                                         m+=30;
                                                                         if(j==10)
                                                                         m+=31;
                                                                         if(j==11)
                                                                         m+=30;
                                                           }
                                                            for(j=1;j<c;j++) 
                                                           {
                                                                         if(j==1)
                                                                         n+=31;
                                                                         if(j==2)
                                                                         n+=28;
                                                                         if(j==3)
                                                                         n+=31;
                                                                         if(j==4)
                                                                         n+=30;
                                                                         if(j==5)
                                                                         n+=31;
                                                                         if(j==6)
                                                                         n+=30;
                                                                         if(j==7)
                                                                         n+=31;
                                                                         if(j==8)
                                                                         n+=31; 
                                                                         if(j==9)
                                                                         n+=30;
                                                                         if(j==10)
                                                                         n+=31;
                                                                         if(j==11)
                                                                         n+=30;
                                                           }
                    }
                    if((m-n)%7==0) 
                    printf("");
                    printf("");
    } 
} 
                     
                                     

1000162




main ()
{
    int qw[1000],tj[1000];
    int n,i,j,k,num,temp,win,pt,lose,btmtj,btmqw,toptj,topqw;
    scanf("",&n);
    while (n!=0)
    {
          n--;
          for (i=0;i<=n;i++) scanf("",&tj[i]);
          for (i=0;i<=n;i++) scanf("",&qw[i]);
          
          for (i=0;i<=n;i++)
              for (j=i;j<=n;j++)
              {
                  if (tj[i]>tj[j])
                  {
                     temp=tj[i];
                     tj[i]=tj[j];
                     tj[j]=temp;
                  }
                  if (qw[i]>qw[j])
                  {
                     temp=qw[i];
                     qw[i]=qw[j];
                     qw[j]=temp;
                  }
              }
          
          win=0;num=0;pt=0;lose=0;
          
          btmtj=btmqw=0;toptj=topqw=n;
          while ((topqw>=btmqw)&&(toptj>=btmtj))
          {
                if (qw[btmqw]<tj[btmtj])
                {

                   btmqw++;
                   btmtj++;
                   win++;
                   continue;
                }
                if (qw[btmqw]>tj[btmtj])
                {

                   topqw--;
                   btmtj++;
                   lose++;
                   continue;
                }
                if (qw[topqw]<tj[toptj])
                {

                   topqw--;
                   toptj--;
                   win++;
                   continue;
                }
                if (qw[topqw]>=tj[toptj])
                {

                   if (qw[topqw]!=tj[btmtj]) lose++;
                   topqw--;
                   btmtj++;
                   continue;
                }
          }
          
          
          
          n++;
          printf("",win*200-lose*200);
          scanf("",&n);
    }
}


1000163
main(){
    int i,j=0,p,q,k,c,x=-1,d=-1,m;
    int b[10000];
    char a[10000];
    gets(a);
    k=strlen(a);
    for(i=0;i<k+1;i++){
                         if(a[i]==''||a[i]==''){
                                                  b[j]=i;
                                                  j+=1;
                                                  }
                                                  }
    b[j]=k;
    c=b[0];
    p=c;
    q=c;
    for(i=1;i<j+1;i++){
                       c=b[i]-b[i-1]-1;
                       if(c>0){
                       if(c>p){
                               d=i-1;
                               p=c;
                               }
                       if(c<q){
                               x=i-1;
                               q=c;
                               }
                       else {
                            m=0;
                            }
                            }
                            else {
                                 m=0;
                                 }
                               }
                               if(d==-1){
                                        for(i=0;i<b[0]-1;i++){
                                  printf("",a[i]);
                                  }
                                  printf("",a[i]);
                                  }
                                  else {
    for(i=b[d]+1;i<b[d+1]-1;i++){
                                 printf("",a[i]);
                                 }
                                 
    printf("",a[i]);
}
    if(x==-1){
              for(i=0;i<b[0];i++){
                                  printf("",a[i]);
                                  }
                                  }
    else {
         for(i=b[x]+1;i<b[x+1];i++){
                                    printf("",a[i]);
                                    }
                                    }
    return 0;
}
                               
    
    


1000164
compare(const void *elem1,const void *elem2)
{
    int *p1 = (int*)elem1;
    int *p2 = (int*)elem2;
    return (*p1)-(*p2); 
}

main()
{
    int *p1,*p2;
    int n,i,j,k,s;
    do {
        scanf("",&n);
        if(n!=0)
        {
                  p1=(int*)malloc(n*sizeof(int));
                  p2=(int*)malloc(n*sizeof(int));
                  for(i=0;i<n;i++)scanf("",&p1[i]);
                  for(i=0;i<n;i++)scanf("",&p2[i]);
                  qsort(p1, n, sizeof(int), compare);
                  qsort(p2, n, sizeof(int), compare);
                  for(i=0,s=0;i<n;i++)
                  {
                                  if(p1[i]>p2[i])s++;
                                  if(p1[i]==p2[i])
                                  {
                                       if(i==n-1)break;
                                       else {
                                            for(k=n-1;k>i;k--)
                                       {
                                            if(p1[k]>p2[k])
                                            {
                                                           s++;
                                                           for(j=n-2;j>=i;j--)p1[j+1]=p1[j];
                                                           for(j=n-2;j>=i;j--)p2[j+1]=p2[j];
                                                           i++;
                                            }
                                            else 
                                            {
                                                 if(p1[i]<p2[k])s--;
                                                 for(j=n-2;j>=i;j--)p2[j+1]=p2[j];
                                                 break;
                                            }
                                       }                                       
                                       }
                                       }
                                  else{
                                       s--;
                                       for(j=n-2;j>=i;j--)p2[j+1]=p2[j];
                                  }
                  }
                  printf("",s*200);
        }
        }
    while(n!=0);
}     


1000165
main()
{
	int n;
	char ch;
	struct student *head;
	scanf("",&n,&ch);
	head=creat(n);
	head=maopao(head);
	print(head);
	free(head);
}

struct creat(int numb) 
{
	struct student *head;       
	struct student *p1,*p2;     
	n=0;
	p1=p2=(struct student *)malloc(LEN);      
	scanf("",&p1->num,&p1->score);      
	head=NULL;
	while(n<numb-1)     
	{
		n=n+1;         
		if(n==1)      
		{
			head=p1;     
		}
		else
		{
			p2->next=p1;     
		}
		p2=p1;      
		p1=(struct student*)malloc(LEN);   
		scanf("",&p1->num,&p1->score);    
	}
	p2->next=p1;   
	p1->next=NULL;
	return(head);   
}


struct maopao(struct student *head)
{
	struct student *p0,*p1,*p2,*tem;
	int temp=0,i,j;
	p0=head;
	p1=head;
	p2=head;
	if(head==NULL)
	{
		return(head);
	}
	if(p0->next==NULL)
	{
		return(head);
	}
	if(p0->next!=NULL)
	{
	for(i=0;i<n;i=i+1)
	{
		for(j=0;j<n-1;j=j+1)
		{
			if(p1->score<p1->next->score&&j!=0&&p1->next->score>=60)
			{
				tem=p1->next;
				p2->next=p1->next;
				p1->next=tem->next;
				tem->next=p1;
				p2=p2->next;
			}
if(p1->score<p1->next->score&&j==0&&p1->next->score>=60)
			{
				tem=p1->next;
				p0=tem;
				p2=tem;
				p1->next=tem->next;
				tem->next=p1;
				p2=p1;
				p1=p1->next;
			}
			else
			{
				p2=p1;
				p1=p1->next;
			}
		}
		temp=temp+1;
		p1=p0;
		p2=p0;
	}
	}
	return(p0);
}

print(struct student *head)      
{
	struct student *p,*tempo;      
	p=head;   
	if(head!=NULL)   
	{
		do
		{
		tempo=p->next;
	    printf("",p->num);
		p=tempo;
		}while(p!=NULL);   
	}
}

1000166
main()
{
	int n,i,j,k,m,x;
	char a[100][100][100];
	cin>>n;
	x=0;
	for(i=0;i<n;i++)
		for(j=0;j<n;j++)
			cin>>a[1][i][j];
	cin>>m;
	for(k=2;k<=m;k++)
		for(i=0;i<n;i++)
			for(j=0;j<n;j++)
				a[k][i][j]=a[k-1][i][j];
	for(k=2;k<=m;k++)
		for(i=0;i<n;i++)
			for(j=0;j<n;j++)
			{
				if(a[k-1][i][j]=='')a[k][i][j]='';
				if(a[k-1][i][j]==''&&i!=0&&i!=n-1&&j!=0&&j!=n-1)
				{
					if(a[k-1][i-1][j]=='')
						a[k][i-1][j]='';
					if(a[k-1][i+1][j]=='')
						a[k][i+1][j]='';
					if(a[k-1][i][j-1]=='')
						a[k][i][j-1]='';
					if(a[k-1][i][j+1]=='')
						a[k][i][j+1]='';
				}
				if(a[k-1][i][j]==''&&i==0&&j!=0&&j!=n-1)
				{
					if(a[k-1][i+1][j]=='')
						a[k][i+1][j]='';
					if(a[k-1][i][j-1]=='')
						a[k][i][j-1]='';
					if(a[k-1][i][j+1]=='')
						a[k][i][j+1]='';
				}
				if(a[k-1][i][j]==''&&i==n-1&&j!=0&&j!=n-1)
				{
					if(a[k-1][i-1][j]=='')
						a[k][i-1][j]='';
					if(a[k-1][i][j-1]=='')
						a[k][i][j-1]='';
					if(a[k-1][i][j+1]=='')
						a[k][i][j+1]='';
				}
				if(a[k-1][i][j]==''&&i!=0&&i!=n-1&&j==0)
				{
					if(a[k-1][i-1][j]=='')
						a[k][i-1][j]='';
					if(a[k-1][i+1][j]=='')
						a[k][i+1][j]='';
					if(a[k-1][i][j+1]=='')
						a[k][i][j+1]='';
				}
				if(a[k-1][i][j]==''&&i!=0&&i!=n-1&&j==n-1)
				{
					if(a[k-1][i-1][j]=='')
						a[k][i-1][j]='';
					if(a[k-1][i+1][j]=='')
						a[k][i+1][j]='';
					if(a[k-1][i][j-1]=='')
						a[k][i][j-1]='';
				}
				if(a[k-1][i][j]==''&&i==0&&j==0)
				{
					if(a[k-1][i+1][j]=='')
						a[k][i+1][j]='';
					if(a[k-1][i][j+1]=='')
						a[k][i][j+1]='';
				}
				if(a[k-1][i][j]==''&&i==0&&j==n-1)
				{
					if(a[k-1][i+1][j]=='')
						a[k][i+1][j]='';
					if(a[k-1][i][j-1]=='')
						a[k][i][j-1]='';
				}
				if(a[k-1][i][j]==''&&i==n-1&&j==0)
				{
					if(a[k-1][i-1][j]=='')
						a[k][i-1][j]='';
					if(a[k-1][i][j+1]=='')
						a[k][i][j+1]='';
				}
				if(a[k-1][i][j]==''&&i==n-1&&j==n-1)
				{
					if(a[k-1][i-1][j]=='')
						a[k][i-1][j]='';
					if(a[k-1][i][j-1]=='')
						a[k][i][j-1]='';
				}
			}
	for(i=0;i<n;i++)
		for(j=0;j<n;j++)
			if(a[m][i][j]=='')
				x+=1;
	cout<<x<<endl;
	return 0;
}

1000167
f(int year,int month,int day)
{
    int x;
    if(year%400==0||(year%100!=0&&year%4==0))
    {
                                             if(month==1)
                                             x=day;
                                             if(month==2)
                                             x=day+31;
                                             if(month==3)
                                             x=day+31+29;
                                             if(month==4)
                                             x=day+31+29+31;
                                             if(month==5)
                                             x=day+31+29+31+30;
                                             if(month==6)
                                             x=day+31+29+31+30+31;
                                             if(month==7)
                                             x=day+31+29+31+30+31+30;
                                             if(month==8)
                                             x=day+31+29+31+30+31+30+31;
                                             if(month==9)
                                             x=day+31+29+31+30+31+30+31+31;
                                             if(month==10)
                                             x=day+31+29+31+30+31+30+31+31+30;
                                             if(month==11)
                                             x=day+31+29+31+30+31+30+31+31+30+31;
                                             if(month==12)
                                             x=day+31+29+31+30+31+30+31+31+30+31+30;
    }
    else
    {
                                             if(month==1)
                                             x=day;
                                             if(month==2)
                                             x=day+31;
                                             if(month==3)
                                             x=day+31+28;
                                             if(month==4)
                                             x=day+31+28+31;
                                             if(month==5)
                                             x=day+31+28+31+30;
                                             if(month==6)
                                             x=day+31+28+31+30+31;
                                             if(month==7)
                                             x=day+31+28+31+30+31+30;
                                             if(month==8)
                                             x=day+31+28+31+30+31+30+31;
                                             if(month==9)
                                             x=day+31+28+31+30+31+30+31+31;
                                             if(month==10)
                                             x=day+31+28+31+30+31+30+31+31+30;
                                             if(month==11)
                                             x=day+31+28+31+30+31+30+31+31+30+31;
                                             if(month==12)
                                             x=day+31+28+31+30+31+30+31+31+30+31+30;
    }
    return x;
}
main()
{
      int n,i;
      scanf("",&n);
      for(i=0;i<n;i++)
      {
                      int year,month1,month2;
                      scanf("",&year,&month1,&month2);
                      if((f(year,month1,1)-f(year,month2,1))%7==0||(f(year,month2,1)-f(year,month1,1))%7==0)
                      printf("");
                      printf("");
      }
}


1000168
main(){
	char zfc[301];
	gets(zfc);
	int n=strlen(zfc),c=0;
	char dx[27]="";
	char xx[27]="";
	int dxs[26],xxs[26],i;
	for(i=0;i<26;i++){
		dxs[i]=0;
		xxs[i]=0;
	}
	char*ps;
	for(ps=zfc;*ps!='\0';ps++){
			if(*ps==''){dxs[0]++;c++;}
			if(*ps==''){dxs[1]++;c++;}
			if(*ps==''){dxs[2]++;c++;}
			if(*ps==''){dxs[3]++;c++;}
			if(*ps==''){dxs[4]++;c++;}
	        if(*ps==''){dxs[5]++;c++;}
			if(*ps==''){dxs[6]++;c++;}
			if(*ps==''){dxs[7]++;c++;}
			if(*ps==''){dxs[8]++;c++;}
			if(*ps==''){dxs[9]++;c++;}
			if(*ps==''){dxs[10]++;c++;}
			if(*ps==''){dxs[11]++;c++;}
			if(*ps==''){dxs[12]++;c++;}
	        if(*ps==''){dxs[13]++;c++;}
			if(*ps==''){dxs[14]++;c++;}
			if(*ps==''){dxs[15]++;c++;}
			if(*ps==''){dxs[16]++;c++;}
			if(*ps==''){dxs[17]++;c++;}
			if(*ps==''){dxs[18]++;c++;}
			if(*ps==''){dxs[19]++;c++;}
	        if(*ps==''){dxs[20]++;c++;}
			if(*ps==''){dxs[21]++;c++;}
			if(*ps==''){dxs[22]++;c++;}
			if(*ps==''){dxs[23]++;c++;}		
			if(*ps==''){dxs[24]++;c++;}
	        if(*ps==''){dxs[25]++;c++;}
			if(*ps==''){xxs[0]++;c++;}
			if(*ps==''){xxs[1]++;c++;}
			if(*ps==''){xxs[2]++;c++;}
	        if(*ps==''){xxs[3]++;c++;}
			if(*ps==''){xxs[4]++;c++;}
			if(*ps==''){xxs[5]++;c++;}
			if(*ps==''){xxs[6]++;c++;}
			if(*ps==''){xxs[7]++;c++;}
			if(*ps==''){xxs[8]++;c++;}
			if(*ps==''){xxs[9]++;c++;}
			if(*ps==''){xxs[10]++;c++;}
	        if(*ps==''){xxs[11]++;c++;}
			if(*ps==''){xxs[12]++;c++;}
			if(*ps==''){xxs[13]++;c++;}
			if(*ps==''){xxs[14]++;c++;}
			if(*ps==''){xxs[15]++;c++;}
			if(*ps==''){xxs[16]++;c++;}
			if(*ps==''){xxs[17]++;c++;}
	        if(*ps==''){xxs[18]++;c++;}
			if(*ps==''){xxs[19]++;c++;}
			if(*ps==''){xxs[20]++;c++;}
			if(*ps==''){xxs[21]++;c++;}		
			if(*ps==''){xxs[22]++;c++;}
            if(*ps==''){xxs[23]++;c++;}
            if(*ps==''){xxs[24]++;c++;}
            if(*ps==''){xxs[25]++;c++;}
	}
	if(dxs[0]!=0){printf("",dxs[0]);}
    if(dxs[1]!=0){printf("",dxs[1]);}
	if(dxs[2]!=0){printf("",dxs[2]);}
    if(dxs[3]!=0){printf("",dxs[3]);}
	if(dxs[4]!=0){printf("",dxs[4]);}
    if(dxs[5]!=0){printf("",dxs[5]);}
	if(dxs[6]!=0){printf("",dxs[6]);}
    if(dxs[7]!=0){printf("",dxs[7]);}
	if(dxs[8]!=0){printf("",dxs[8]);}
    if(dxs[9]!=0){printf("",dxs[9]);}
	if(dxs[10]!=0){printf("",dxs[10]);}
    if(dxs[11]!=0){printf("",dxs[11]);}
	if(dxs[12]!=0){printf("",dxs[12]);}
    if(dxs[13]!=0){printf("",dxs[13]);}
	if(dxs[14]!=0){printf("",dxs[14]);}
    if(dxs[15]!=0){printf("",dxs[15]);}
	if(dxs[16]!=0){printf("",dxs[16]);}
    if(dxs[17]!=0){printf("",dxs[17]);}
	if(dxs[18]!=0){printf("",dxs[18]);}
    if(dxs[19]!=0){printf("",dxs[19]);}
	if(dxs[20]!=0){printf("",dxs[20]);}
    if(dxs[21]!=0){printf("",dxs[21]);}
	if(dxs[22]!=0){printf("",dxs[22]);}
    if(dxs[23]!=0){printf("",dxs[23]);}
	if(dxs[24]!=0){printf("",dxs[24]);}
    if(dxs[25]!=0){printf("",dxs[25]);}
	if(xxs[0]!=0){printf("",xxs[0]);}
    if(xxs[1]!=0){printf("",xxs[1]);}
	if(xxs[2]!=0){printf("",xxs[2]);}
    if(xxs[3]!=0){printf("",xxs[3]);}
	if(xxs[4]!=0){printf("",xxs[4]);}
    if(xxs[5]!=0){printf("",xxs[5]);}
	if(xxs[6]!=0){printf("",xxs[6]);}
    if(xxs[7]!=0){printf("",xxs[7]);}
	if(xxs[8]!=0){printf("",xxs[8]);}
    if(xxs[9]!=0){printf("",xxs[9]);}
	if(xxs[10]!=0){printf("",xxs[10]);}
    if(xxs[11]!=0){printf("",xxs[11]);}
	if(xxs[12]!=0){printf("",xxs[12]);}
    if(xxs[13]!=0){printf("",xxs[13]);}
	if(xxs[14]!=0){printf("",xxs[14]);}
    if(xxs[15]!=0){printf("",xxs[15]);}
	if(xxs[16]!=0){printf("",xxs[16]);}
    if(xxs[17]!=0){printf("",xxs[17]);}
	if(xxs[18]!=0){printf("",xxs[18]);}
    if(xxs[19]!=0){printf("",xxs[19]);}
	if(xxs[20]!=0){printf("",xxs[20]);}
    if(xxs[21]!=0){printf("",xxs[21]);}
	if(xxs[22]!=0){printf("",xxs[22]);}
    if(xxs[23]!=0){printf("",xxs[23]);}
	if(xxs[24]!=0){printf("",xxs[24]);}
    if(xxs[25]!=0){printf("",xxs[25]);}
	if(c==0){printf("");}
	return 0;
}

1000169
main()
{
    int n;
    cin>>n;
    char x;
    x=getchar();
    for(int i = 0 ; i < n ; i++)
    {
            char a[100010]={0},c[100010]={0};
            int b[30]={0};
            cin.getline(a,100010);
            int len=strlen(a);
            for(int j = 0 ; j < len ; j++)
            {
                    if(a[j]=='')b[1]++;
                    if(a[j]=='')b[2]++;
                    if(a[j]=='')b[3]++;
                    if(a[j]=='')b[4]++;
                    if(a[j]=='')b[5]++;
                    if(a[j]=='')b[6]++;
                    if(a[j]=='')b[7]++;
                    if(a[j]=='')b[8]++;
                    if(a[j]=='')b[9]++;
                    if(a[j]=='')b[10]++;
                    if(a[j]=='')b[11]++;
                    if(a[j]=='')b[12]++;
                    if(a[j]=='')b[13]++;
                    if(a[j]=='')b[14]++;
                    if(a[j]=='')b[15]++;
                    if(a[j]=='')b[16]++;
                    if(a[j]=='')b[17]++;
                    if(a[j]=='')b[18]++;
                    if(a[j]=='')b[19]++;
                    if(a[j]=='')b[20]++;
                    if(a[j]=='')b[21]++;
                    if(a[j]=='')b[22]++;
                    if(a[j]=='')b[23]++;
                    if(a[j]=='')b[24]++;
                    if(a[j]=='')b[25]++;
                    if(a[j]=='')b[26]++;
            }
            int flag=0;
            int tag=0;
            for(int j = 1 ; j <= 26 ; j++)
            {
                    if(b[j]==1)
                    {
                               if(j==1)c[tag]='';
                               if(j==2)c[tag]='';
                               if(j==3)c[tag]='';
                               if(j==4)c[tag]='';
                               if(j==5)c[tag]='';
                               if(j==6)c[tag]='';
                               if(j==7)c[tag]='';
                               if(j==8)c[tag]='';
                               if(j==9)c[tag]='';
                               if(j==10)c[tag]='';
                               if(j==11)c[tag]='';
                               if(j==12)c[tag]='';
                               if(j==13)c[tag]='';
                               if(j==14)c[tag]='';
                               if(j==15)c[tag]='';
                               if(j==16)c[tag]='';
                               if(j==17)c[tag]='';
                               if(j==18)c[tag]='';
                               if(j==19)c[tag]='';
                               if(j==20)c[tag]='';
                               if(j==21)c[tag]='';
                               if(j==22)c[tag]='';
                               if(j==23)c[tag]='';
                               if(j==24)c[tag]='';
                               if(j==25)c[tag]='';
                               if(j==26)c[tag]='';
                               flag=1,tag++;
                    }
            }
            if(flag==1)
            {
                for(int j = 0 ; j < len ; j++)
                {
                    for(int k = 0 ; k < tag ; k++)
                    {
                            if(a[j]==c[k])
                            {
                                          cout<<a[j]<<endl;
                                          k=tag,j=len;
                            }
                    }
                }
            }
            else cout<<""<<endl; 
    }
    return 0;
}

1000170
main()
{
    int i;
    cin >> n;
    for (i = 0;i <= n-1;i++)
    {
        sum = 0;
        int j,k;
        for (j = 0;j <= n-1;j++)               
        {
            for (k = 0;k <= n-1;k++)
            {
                cin >> board[j][k];
            }
        }
       
        Subduction(n);                     
    }        return 0;
}

Subduction(int m)
{
     if (m == 1)                                    
     {
         cout << sum << endl;
     }
     else
     {
     int rowmin[100];
     int colmin[100];
     int p,q;
     for (p = 0; p <= m-1; p++)                   
     {
         rowmin[p] = board[p][0];
         for (q = 0; q <= m-1; q++)
         {
             if (board[p][q]<rowmin[p])
             {
                 rowmin[p] = board[p][q];
             }
         }
     }
     
     for (p = 0; p <= m-1; p++)                  
     {
         for (q = 0; q <= m-1; q++)
         {
             board[p][q] -= rowmin[p];
         }
     }
     for (q = 0; q <= m-1; q++)                 
     {
         colmin[q] = board[0][q];
         for (p = 0; p <= m-1; p++)
         {
             if (board[p][q] < colmin[q])
             {
                 colmin[q] = board[p][q];
             }
         }
     }
     
     for (q = 0;q <= m-1; q++)                       
     {
         for (p = 0; p <= m-1; p++)
         {
             board[p][q] -= colmin[q];
         }
     }
     sum += board[1][1];                          
     Turn(m);
     Subduction(m-1);
     }
}


Turn(int m)                                 
{
     int p,q;
     for (q = 1; q <= m-2; q++)                       
     {
         board[0][q] = board[0][q+1];
     }
     for (p = 1; p <= m-2; p++)                       
     {
         board[p][0] = board[p+1][0];
     } 
     for (p = 1; p <= m-2; p++)                        
     {
         for (q = 1; q <=m-2; q++)
         {
             board[p][q] = board[p+1][q+1];
         }
     }
}
     
     
                                         
             
     
     
        

1000171
main()
{
    int n;
    cin>>n;
    int s,i,j;
    for(s=1;s<=n;s++)
    {
                     int b=n,yi=0,min=10000;
                     int a[110][110]={0};
                     int c=2;
                     int bi[110]={0},bj[110]={0};
                     for(i=1;i<=n;i++)
                     {
                                      for(j=1;j<=n;j++)
                                      {
                                                       cin>>a[i][j];
                                      }
                     }
                     for(b=n;b>=2;b--)
                     {
                                      for(i=1;i<=n;i++)
                                      {
                                                       if(bi[i]==1) continue;
                                                       for(j=1;j<=n;j++)
                                                       {
                                                                        if((bj[j]==0)&&(a[i][j]<=min))
                                                                        min=a[i][j];
                                                       }
                                                       if(min!=0)
                                                       {
                                                                 for(j=1;j<=n;j++)
                                                                 {
                                                                                  a[i][j]=a[i][j]-min;
                                                                 }
                                                       }
                                                       min=10000;
                                      }
                                      min=10000;
                                      for(j=1;j<=n;j++)
                                                       {
                                                                        if(bj[j]==1) continue;
                                                                        for(i=1;i<=n;i++)
                                                                        {
                                                                                        if((bi[i]==0)&&(a[i][j]<=min))
                                                                                         min=a[i][j];
                                                                         } 
                                                                         if(min!=0)
                                                                         {
                                                                                   for(i=1;i<=n;i++)
                                                                                   {
                                                                                                     a[i][j]=a[i][j]-min;
                                                                                   }
                                                                         }
                                                                         min=100000;
                                                                         
                                                       }          
                                       yi=yi+a[c][c];
                                       bi[c]=1;
                                       bj[c]=1;
                                       min=10000;
                                       c++;         
                     }
                     cout<<yi<<endl;
    }
    return 0;
}

1000172
main()
{
    int n;
    int p,q;
    scanf("", &n);
    struct patient{
           char id[20];
           int age;
           }pa1[100],pa2[100],t;
    int i;
    for(i=0;i<n;i++)
    {
                    scanf("", pa1[i].id, &pa1[i].age);
    }
     for(i=0;i<n;i++)
    {
                   strcpy(pa2[i].id,pa1[i].id);
                   pa2[i].age=pa1[i].age;
    }
    
 
    
    
    
    for(p=1;p<n;p++)
    {
                    for(q=0;q<n-p;q++)
                    {
                            if(pa1[q].age>pa1[q+1].age)
                            {
                                        t=pa1[q];
                                        pa1[q]=pa1[q+1];
                                        pa1[q+1]=t;
                            }
                    }
    }
    
   
    
    
    
    
    int a[1000];
    int s=0,h;
    for(p=n-1;p>=0;p--)
    {
                       if(pa1[p].age>=60)
                       {
                            a[s]=pa1[p].age;  
                            s++;          
                       }
    }
     
    for(h=0;h<s;h++)
    {
                    for(p=h+1;p<s;p++)
                    {
                                      if(a[p]==a[h])
                                      {
                                                    a[p]=0;
                                      }
                    }
    }
      
      
      
      
      
      
      
      for(h=0;h<s;h++)
      {               
                    for(p=0;p<n;p++)
                    {
                              if(pa2[p].age==a[h])
                              {
                                        printf("", pa2[p].id);
                              }
                    }
      }
                    
                    
                    
                    
                    
    for(p=0;p<n;p++)
    {
                    if(pa2[p].age<60)
                    {
                                     printf("", pa2[p].id);
                    }
    }
  
    return 0;
}          

1000173
turn(char a[10000],int ASCII[128],int n1)
{
	int i;
	i=0;
	while(i<=n1)
	{
		switch(a[i])
		{
		case 0:ASCII[0]=ASCII[0]+1;break;
		case 1:ASCII[1]=ASCII[1]+1;break;
		case 2:ASCII[2]=ASCII[2]+1;break;
		case 3:ASCII[3]=ASCII[3]+1;break;
		case 4:ASCII[4]=ASCII[4]+1;break;
		case 5:ASCII[5]=ASCII[5]+1;break;
		case 6:ASCII[6]=ASCII[6]+1;break;
		case 7:ASCII[7]=ASCII[7]+1;break;
		case 8:ASCII[8]=ASCII[8]+1;break;
		case 9:ASCII[9]=ASCII[9]+1;break;
		case 10:ASCII[10]=ASCII[10]+1;break;
		case 11:ASCII[11]=ASCII[11]+1;break;
		case 12:ASCII[12]=ASCII[12]+1;break;
		case 13:ASCII[13]=ASCII[13]+1;break;
		case 14:ASCII[14]=ASCII[14]+1;break;
		case 15:ASCII[15]=ASCII[15]+1;break;
		case 16:ASCII[16]=ASCII[16]+1;break;
		case 17:ASCII[17]=ASCII[17]+1;break;
		case 18:ASCII[18]=ASCII[18]+1;break;
		case 19:ASCII[19]=ASCII[19]+1;break;
		case 20:ASCII[20]=ASCII[20]+1;break;
		case 21:ASCII[21]=ASCII[21]+1;break;
		case 22:ASCII[22]=ASCII[22]+1;break;
		case 23:ASCII[23]=ASCII[23]+1;break;
		case 24:ASCII[24]=ASCII[24]+1;break;
		case 25:ASCII[25]=ASCII[25]+1;break;
		case 26:ASCII[26]=ASCII[26]+1;break;
		case 27:ASCII[27]=ASCII[27]+1;break;
		case 28:ASCII[28]=ASCII[28]+1;break;
		case 29:ASCII[29]=ASCII[29]+1;break;
		case 30:ASCII[30]=ASCII[30]+1;break;
		case 31:ASCII[31]=ASCII[31]+1;break;
		case 32:ASCII[32]=ASCII[32]+1;break;
		case 33:ASCII[33]=ASCII[33]+1;break;
		case 34:ASCII[34]=ASCII[34]+1;break;
		case 35:ASCII[35]=ASCII[35]+1;break;
		case 36:ASCII[36]=ASCII[36]+1;break;
		case 37:ASCII[37]=ASCII[37]+1;break;
		case 38:ASCII[38]=ASCII[38]+1;break;
		case 39:ASCII[39]=ASCII[39]+1;break;
		case 40:ASCII[40]=ASCII[40]+1;break;
		case 41:ASCII[41]=ASCII[41]+1;break;
		case 42:ASCII[42]=ASCII[42]+1;break;
		case 43:ASCII[43]=ASCII[43]+1;break;
		case 44:ASCII[44]=ASCII[44]+1;break;
		case 45:ASCII[45]=ASCII[45]+1;break;
		case 46:ASCII[46]=ASCII[46]+1;break;
		case 47:ASCII[47]=ASCII[47]+1;break;
		case 48:ASCII[48]=ASCII[48]+1;break;
		case 49:ASCII[49]=ASCII[49]+1;break;
		case 50:ASCII[50]=ASCII[50]+1;break;
		case 51:ASCII[51]=ASCII[51]+1;break;
		case 52:ASCII[52]=ASCII[52]+1;break;
		case 53:ASCII[53]=ASCII[53]+1;break;
		case 54:ASCII[54]=ASCII[54]+1;break;
		case 55:ASCII[55]=ASCII[55]+1;break;
		case 56:ASCII[56]=ASCII[56]+1;break;
		case 57:ASCII[57]=ASCII[57]+1;break;
		case 58:ASCII[58]=ASCII[58]+1;break;
		case 59:ASCII[59]=ASCII[59]+1;break;
		case 60:ASCII[60]=ASCII[60]+1;break;
		case 61:ASCII[61]=ASCII[61]+1;break;
		case 62:ASCII[62]=ASCII[62]+1;break;
		case 63:ASCII[63]=ASCII[63]+1;break;
		case 64:ASCII[64]=ASCII[64]+1;break;
		case 65:ASCII[65]=ASCII[65]+1;break;
		case 66:ASCII[66]=ASCII[66]+1;break;
		case 67:ASCII[67]=ASCII[67]+1;break;
		case 68:ASCII[68]=ASCII[68]+1;break;
		case 69:ASCII[69]=ASCII[69]+1;break;
		case 70:ASCII[70]=ASCII[70]+1;break;
		case 71:ASCII[71]=ASCII[71]+1;break;
		case 72:ASCII[72]=ASCII[72]+1;break;
		case 73:ASCII[73]=ASCII[73]+1;break;
		case 74:ASCII[74]=ASCII[74]+1;break;
		case 75:ASCII[75]=ASCII[75]+1;break;
		case 76:ASCII[76]=ASCII[76]+1;break;
		case 77:ASCII[77]=ASCII[77]+1;break;
		case 78:ASCII[78]=ASCII[78]+1;break;
		case 79:ASCII[79]=ASCII[79]+1;break;
		case 80:ASCII[80]=ASCII[80]+1;break;
		case 81:ASCII[81]=ASCII[81]+1;break;
		case 82:ASCII[82]=ASCII[82]+1;break;
		case 83:ASCII[83]=ASCII[83]+1;break;
		case 84:ASCII[84]=ASCII[84]+1;break;
		case 85:ASCII[85]=ASCII[85]+1;break;
		case 86:ASCII[86]=ASCII[86]+1;break;
		case 87:ASCII[87]=ASCII[87]+1;break;
		case 88:ASCII[88]=ASCII[88]+1;break;
		case 89:ASCII[89]=ASCII[89]+1;break;
		case 90:ASCII[90]=ASCII[90]+1;break;
		case 91:ASCII[91]=ASCII[91]+1;break;
		case 92:ASCII[92]=ASCII[92]+1;break;
		case 93:ASCII[93]=ASCII[93]+1;break;
		case 94:ASCII[94]=ASCII[94]+1;break;
		case 95:ASCII[95]=ASCII[95]+1;break;
		case 96:ASCII[96]=ASCII[96]+1;break;
		case 97:ASCII[97]=ASCII[97]+1;break;
		case 98:ASCII[98]=ASCII[98]+1;break;
		case 99:ASCII[99]=ASCII[99]+1;break;
		case 100:ASCII[100]=ASCII[100]+1;break;
		case 101:ASCII[101]=ASCII[101]+1;break;
		case 102:ASCII[102]=ASCII[102]+1;break;
		case 103:ASCII[103]=ASCII[103]+1;break;
		case 104:ASCII[104]=ASCII[104]+1;break;
		case 105:ASCII[105]=ASCII[105]+1;break;
		case 106:ASCII[106]=ASCII[106]+1;break;
		case 107:ASCII[107]=ASCII[107]+1;break;
		case 108:ASCII[108]=ASCII[108]+1;break;
		case 109:ASCII[109]=ASCII[109]+1;break;
		case 110:ASCII[110]=ASCII[110]+1;break;
		case 111:ASCII[111]=ASCII[111]+1;break;
		case 112:ASCII[112]=ASCII[112]+1;break;
		case 113:ASCII[113]=ASCII[113]+1;break;
		case 114:ASCII[114]=ASCII[114]+1;break;
		case 115:ASCII[115]=ASCII[115]+1;break;
		case 116:ASCII[116]=ASCII[116]+1;break;
		case 117:ASCII[117]=ASCII[117]+1;break;
		case 118:ASCII[118]=ASCII[118]+1;break;
		case 119:ASCII[119]=ASCII[119]+1;break;
		case 120:ASCII[120]=ASCII[120]+1;break;
		case 121:ASCII[121]=ASCII[121]+1;break;
		case 122:ASCII[122]=ASCII[122]+1;break;
		case 123:ASCII[123]=ASCII[123]+1;break;
		case 124:ASCII[124]=ASCII[124]+1;break;
		case 125:ASCII[125]=ASCII[125]+1;break;
		case 126:ASCII[126]=ASCII[126]+1;break;
		case 127:ASCII[127]=ASCII[127]+1;break;
		}
		i=i+1;
	}
}
main()
{
	turn(char a[10000],int ASCII[128],int n1);
	char a[10000],b[10000];
	int i,j,n1,n2,c1[128],c2[128];
	i=0;
	while(i<=127)
	{
		c1[i]=0;
		c2[i]=0;
		i=i+1;
	}
	i=0;
	while(i<=9999)
	{
		a[i]='\0';
		b[i]='\0';
		i=i+1;
	}
	i=0;
	do
	{
		scanf("",&a[i]);
		i=i+1;
	}
	while(a[i-1]!='');
	n1=i-2;
	i=0;
	while(scanf("",&b[i])!=EOF)
	{
		i=i+1;
	}
	n2=i-2;
	if(n2!=n1) 
	{
		printf("");
		return 0;
	}
	i=0;
	while(i<=n1)
	{
		turn(a,c1,n1);
		turn(b,c2,n1);
		i=i+1;
	}
	i=0;
	while(i<=127)
	{
		if(c1[i]!=c2[i]) break;
		i=i+1;
	}
	if(i==128)
	printf("");
	printf("");
	
}

1000174
main(){
    struct point{
           int x,y,z;
           }points[10];
    double d[45],e,a;
    int n,i,j,k=0;    
    scanf("",&n);
    for(i=0;i<n;i++){
            scanf("",&points[i].x,&points[i].y,&points[i].z);
            }
    for(i=0;i<n;i++){
                     for(j=i+1;j<n;j++){
                                        a=1.0*(points[i].x-points[j].x)*(points[i].x-points[j].x)+1.0*(points[i].y-points[j].y)*(points[i].y-points[j].y)+1.0*(points[i].z-points[j].z)*(points[i].z-points[j].z);                                     
                                        d[k]=sqrt(a);
                                        k++;
                                        }
                                        }
    for(k=0;k<n*(n-1)/2;k++){
            for(i=0;i<n*(n-1)/2-1-k;i++){
			                        if(d[i]<d[i+1]){
					                                    e=d[i+1];
				                                        d[i+1]=d[i];
		                                                d[i]=e;
			                                            }
	                                 }
                           }
    for(k=1;k<n*(n-1)/2;k++){
                     if(d[k]==d[k-1]){
                                      d[k-1]=0;
                                      }
                                      }
    for(int b=0;b<n*(n-1)/2;b++){
             for(i=0;i<n;i++){
                     for(j=i+1;j<n;j++){
                                        a=1.0*(points[i].x-points[j].x)*(points[i].x-points[j].x)+1.0*(points[i].y-points[j].y)*(points[i].y-points[j].y)+1.0*(points[i].z-points[j].z)*(points[i].z-points[j].z);
                                        e=sqrt(a);                                        
                                        if(d[b]==e){
                                                    printf("",points[i].x,points[i].y,points[i].z,points[j].x,points[j].y,points[j].z,d[b]);
                                                    }
                                                    
                                        }
                     }
    }                                       
    return 0;
}


1000175
main ()
{
    
    int m;
    int n;
    int i , j ,d;
    int count = 0;
    cin >> n;
    char a[n+2][n+2];
    char b[n+2][n+2];
    for ( i = 0; i <= n+1; i++ )
    {
        for ( j = 0; j <= n+1 ; j++ )
        {
            a[i][j] = '';
            b[i][j] = '';
        }
    }
    
    
    
    for ( i = 1; i <= n; i++ )
    {
        for ( j = 1; j <= n; j++ )
        {
            cin >> a[i][j];
            b[i][j] = a[i][j];
        }
    }
    
    cin >> m;
    
    for ( d = 1; d <= m; d++ )
    {
        if ( d % 2 == 1 )
        {
             for ( i = 1; i <= n; i++ )
             {
                 for ( j = 1; j <= n; j++ )
                 {
                     if ( a[i][j] == '' )
                     {
                          b[i][j] = '';
                          if ( b[i-1][j] != '' )
                               b[i-1][j] = '';
                          if ( b[i+1][j] != '' )
                               b[i+1][j] = '';
                          if ( b[i][j-1] != '' )
                               b[i][j-1] = '';
                          if ( b[i][j+1] != '' )
                               b[i][j+1] = '';
                     }
                 }
             }
        }
        if ( d % 2 == 0 )
        {
             for ( i = 1; i <= n; i++ )
             {
                 for ( j = 1; j <= n; j++ )
                 {
                     if ( b[i][j] == '' )
                     {
                          a[i][j] = '';
                          if ( a[i-1][j] != '' )
                               a[i-1][j] = '';
                          if ( a[i+1][j] != '' )
                               a[i+1][j] = '';
                          if ( a[i][j-1] != '' )
                               a[i][j-1] = '';
                          if ( a[i][j+1] != '' )
                               a[i][j+1] = '';
                     }
                 }
             }
        }
    }
    
    for ( i = 1; i <= n; i++ )
    {
        for ( j = 1; j <= n; j++ )
        {
            if ( m % 2 == 1 )
            {
                 if ( a[i][j] == '' )
                      count++;
            }
            if ( m % 2 == 0 )
            {
                 if ( b[i][j] == '' )
                      count++;
            }
        }
    }
    
    cout << count << endl;

    
}
    
    


1000176
main()
{
    int a[9][9], b[9][9];
	int m, n;
	int i, j, k;
	cin>>m;
	cin>>n;
	for(j=0;j<9;j++)
	{
		for(i=0;i<9;i++)
		{
			a[j][i]=0;
		}
	}
		for(j=0;j<9;j++)
	{
		for(i=0;i<9;i++)
		{
			b[j][i]=0;
		}
	}
		for(k=0;k<n;k++)
        {
            if(k==0)
            {
                a[4][4]=2*m;
                a[3][3]=m;
                a[3][4]=m;
                a[3][5]=m;
                a[4][3]=m;
                a[4][5]=m;
                a[5][3]=m;
                a[5][4]=m;
                a[5][5]=m;
            }
            if(k==1)
            {
	            for(j=1;j<8;j++)
	            {
		            for(i=1;i<8;i++)
		            {
			            b[j][i]=2*a[j][i]+a[j-1][i-1]+a[j-1][i]+a[j-1][i+1]+a[j][i-1]+a[j][i+1]+a[j+1][i-1]+a[j+1][i]+a[j+1][i+1];
		            } 
	            }
	            for(j=0;j<9;j++)
	            {
		            for(i=0;i<9;i++)
	                {
			            a[j][i]=b[j][i];
		            }
	            }
            }
            if(k==2)
            {
	            for(j=1;j<8;j++)
	            {
		            for(i=1;i<8;i++)
		            {
			            b[j][i]=2*a[j][i]+a[j-1][i-1]+a[j-1][i]+a[j-1][i+1]+a[j][i-1]+a[j][i+1]+a[j+1][i-1]+a[j+1][i]+a[j+1][i+1];
		            } 
	            }
	            for(j=0;j<9;j++)
	            {
		            for(i=0;i<9;i++)
		            {
			            a[j][i]=b[j][i];
		            }
	            }
            }
            if(k==3)
            {
	            for(j=1;j<8;j++)
	            {
		            for(i=1;i<8;i++)
		            {
			            b[j][i]=2*a[j][i]+a[j-1][i-1]+a[j-1][i]+a[j-1][i+1]+a[j][i-1]+a[j][i+1]+a[j+1][i-1]+a[j+1][i]+a[j+1][i+1];
		            } 
	            }
                for(i=1;i<8;i++)
                {
                    b[0][i]=a[1][i-1]+a[1][i]+a[1][i+1];
                }
                for(i=1;i<8;i++)
                {
                    b[8][i]=a[7][i-1]+a[7][i]+a[7][i+1];
                }
                for(j=1;j<8;j++)
                {
                    b[j][0]=a[j-1][1]+a[j][1]+a[j+1][1];
                }
                for(j=1;j<8;j++)
                {
                    b[j][8]=a[j-1][7]+a[j][7]+a[j+1][7];
                } 
                b[0][8]=b[8][8]=b[8][0]=b[0][0]=a[1][1];                    
	            for(j=0;j<9;j++)
	            {
		            for(i=0;i<9;i++)
		            {
			            a[j][i]=b[j][i];
		            }
	            }
            }
        }                          
	for(j=0;j<9;j++)
	{
		for(i=0;i<8;i++)
		{
			cout<<a[j][i]<<"";
		}
		    cout<<a[j][8]<<endl;
	}
	return 0;
}


1000177
main()
{
      int t,i,j,k;
      char c[100000];
      int a[26];
      scanf("",&t);
      for(i=0;i<t;i++)
      {
                   int a[26]={0};   
                   gets(c);
                   for(j=0;c[j]!='\0';j++) 
                   {
                                          switch(c[j]) 
                                          {
                                                 case'':a[0]++;break;
                                                 case'':a[1]++;break;
                                                 case'':a[2]++;break;
                                                 case'':a[3]++;break;
                                                 case'':a[4]++;break;
                                                 case'':a[5]++;break;
                                                 case'':a[6]++;break;
                                                 case'':a[7]++;break;
                                                 case'':a[8]++;break;
                                                 case'':a[9]++;break;
                                                 case'':a[10]++;break;
                                                 case'':a[11]++;break;
                                                 case'':a[12]++;break;
                                                 case'':a[13]++;break;
                                                 case'':a[14]++;break;
                                                 case'':a[15]++;break;
                                                 case'':a[16]++;break;
                                                 case'':a[17]++;break;
                                                 case'':a[18]++;break;
                                                 case'':a[19]++;break;
                                                 case'':a[20]++;break;
                                                 case'':a[21]++;break;
                                                 case'':a[22]++;break;
                                                 case'':a[23]++;break;
                                                 case'':a[24]++;break;
                                                 case'':a[25]++;break;
                                          }
                   }
                   for(j=0,k=0;c[j]!='\0';j++)
                   {
                                                                 if(a[c[j]-97]==1)
                                                                 {
                                                                                  printf("",c[j]);
                                                                                  k++;
                                                                                  break;
                                                                 }
                   }
                   if(k==0)printf("");
                   
      }
}                                                 

1000178
main(int argc, char* argv[])
{
		
		int a[200],b[200],c[200],x[200],y[200];
		int i,d,n,e;
		scanf("",&n);
		for(i=0;i<n;i++)
		{
		scanf ("",&a[i],&b[i],&c[i]);

		if (b[i]==1&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		x[i]=1;
		if (b[i]==2&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		x[i]=31+1;
		if (b[i]==3&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		x[i]=31+28+1;
		if (b[i]==4&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		x[i]=31+28+31+1;
		if (b[i]==5&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		x[i]=31+28+31+30+1;
		if (b[i]==6&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		x[i]=31+28+31+30+31+1;
		if (b[i]==7&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		x[i]=31+28+31+30+31+30+1;
		if (b[i]==8&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		x[i]=31+28+31+30+31+30+31+1;
		if (b[i]==9&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		x[i]=31+28+31+30+31+30+31+31+1;
		if (b[i]==10&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		x[i]=31+28+31+30+31+30+31+31+30+1;
		if (b[i]==11&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		x[i]=31+28+31+30+31+30+31+31+30+31+1;
		if (b[i]==12&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		x[i]=31+28+31+30+31+30+31+31+30+31+30+1;
		if (b[i]==1&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		x[i]=1;
		if (b[i]==2&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		x[i]=31+1;
		if (b[i]==3&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		x[i]=31+29+1;
		if (b[i]==4&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		x[i]=31+29+31+1;
		if (b[i]==5&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		x[i]=31+29+31+30+1;
		if (b[i]==6&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		x[i]=31+29+31+30+31+1;
		if (b[i]==7&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		x[i]=31+29+31+30+31+30+1;
		if (b[i]==8&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		x[i]=31+29+31+30+31+30+31+1;
		if (b[i]==9&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		x[i]=31+29+31+30+31+30+31+31+1;
		if (b[i]==10&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		x[i]=31+29+31+30+31+30+31+31+30+1;
		if (b[i]==11&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		x[i]=31+29+31+30+31+30+31+31+30+31+1;
		if (b[i]==12&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		x[i]=31+29+31+30+31+30+31+31+30+31+30+1;

		if (c[i]==1&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		y[i]=1;
		if (c[i]==2&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		y[i]=31+1;
		if (c[i]==3&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		y[i]=31+28+1;
		if (c[i]==4&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		y[i]=31+28+31+1;
		if (c[i]==5&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		y[i]=31+28+31+30+1;
		if (c[i]==6&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		y[i]=31+28+31+30+31+1;
		if (c[i]==7&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		y[i]=31+28+31+30+31+30+1;
		if (c[i]==8&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		y[i]=31+28+31+30+31+30+31+1;
		if (c[i]==9&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		y[i]=31+28+31+30+31+30+31+31+1;
		if (c[i]==10&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		y[i]=31+28+31+30+31+30+31+31+30+1;
		if (c[i]==11&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		y[i]=31+28+31+30+31+30+31+31+30+31+1;
		if (c[i]==12&&((a[i]%100==0&&a[i]%400!=0)||a[i]%4!=0))
		y[i]=31+28+31+30+31+30+31+31+30+31+30+1;
		if (c[i]==1&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		y[i]=1;
		if (c[i]==2&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		y[i]=31+1;
		if (c[i]==3&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		y[i]=31+29+1;
		if (c[i]==4&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		y[i]=31+29+31+1;
		if (c[i]==5&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		y[i]=31+29+31+30+1;
		if (c[i]==6&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		y[i]=31+29+31+30+31+1;
		if (c[i]==7&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		y[i]=31+29+31+30+31+30+1;
		if (c[i]==8&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		y[i]=31+29+31+30+31+30+31+1;
		if (c[i]==9&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		y[i]=31+29+31+30+31+30+31+31+1;
		if (c[i]==10&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		y[i]=31+29+31+30+31+30+31+31+30+1;
		if (c[i]==11&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		y[i]=31+29+31+30+31+30+31+31+30+31+1;
		if (c[i]==12&&((a[i]%4==0&&a[i]%100!=0)||a[i]%400==0))
		y[i]=31+29+31+30+31+30+31+31+30+31+30+1;
		d=y[i]-x[i];
		e=x[i]-y[i];
		if(d%7==0||e%7==0)	
		printf("");
		printf("");
		}
		return 0;
}



1000179
main()
{
int Judge=0;
int W=0;
int Temp=0;
int M=0;
int Num_of_Origin;
int Start=101;
int k=0;
int Num_of_Change=0;
int Num_of_Changed=0;
int i=0;
char Change[100]={0};
char Changed[100]={0};
char Origin[100]={0};

gets (Origin);

gets (Changed);

gets (Change);
  for (i=0;i<100;i++)
    {if (Changed[i]==0)
     {Num_of_Changed=i;
      break;
     }
 }

for (i=0;i<100;i++)
 {if (Change[i]==0)
   {Num_of_Change=i;
    break;
   }
 }
for (W=0;W<100;W++)
{ for (i=0;i<100;i++)
    {if (Origin[i]==0)
   {Num_of_Origin=i;
    break;
    }
 }
 for (i=0;i<100;i++)
   {
        if ( Origin[i]==Changed[0])
      { for (k=0;k<Num_of_Changed;k++)
         {if (Origin[i+k]!=Changed[k])
             {Judge=1;break;
             }
          }
     if (Judge==0&&i!=0)
             {if (Origin[i-1]!=''&&Origin[i-1]!='')
                {
                 Judge=1;}

             }   
     if (Judge==0&&i==0)
             {if (Origin[Num_of_Changed]!='')
             {Judge=1;}
             }
  
           if (Judge==0)
          {Start=i;} 
           Judge=0; 
      }
   }

Temp=Num_of_Origin-Start;
if (Num_of_Change>=Num_of_Changed)
  {   for (i=0;i<Num_of_Change;i++)
     { if (i<Num_of_Changed)
       {Origin[Start+i]=Change[i];
        Temp-=1;}
          else 
          {
            Num_of_Origin++;
              for (M=0;M<Temp;M++)
              {Origin[Num_of_Origin-1-M]=Origin[Num_of_Origin-2-M];
              }
           
           Origin[Start+i]=Change[i];
         
         }
     }
  }
 else 
  {  for (i=0;i<Num_of_Changed;i++)
     {if (i<Num_of_Change)
        {Origin[Start+i]=Change[i];
          Temp-=1;
           M=i+1;   }
           else
             {
                      Num_of_Origin--;       
                  for(k=0;k<Temp;k++)
                      {Origin[Start+M+k]=Origin[Start+M+k+1];
                       Origin[Num_of_Origin+1]=0;
                       }
                    
             }
         
      }
   } 
Start=101;
}


      for (i=0;i<100;i++)       
   {   if (Origin[i]!=0)
      cout<<Origin[i];
}      
 cout<<endl;     
return 0;
}


1000180
main()
{
    int a[5][5];
    int i,j,p;
    int b,c,m=0;
    for(i=0;i<5;i++)
    {
                    for(j=0;j<5;j++)
                    {
                                    scanf("",&a[i][j]);
                    }
                    
    }
    for(i=0;i<5;i++)
    {
                    for(j=0;j<5;j++)
                    {
                                    b=1;
                                    c=1;
                                    for(p=0;p<j;p++)
                                    {
                                                    if(a[i][j]<a[i][p])
                                                    {
                                                                       b=0;
                                                    }
                                    }
                                    for(p=j+1;p<5;p++)
                                    {
                                                      if(a[i][j]<a[i][p])
                                                      {
                                                                         b=0;
                                                      }
                                    }
                                    for(p=0;p<i;p++)
                                    {
                                                    if(a[i][j]>a[p][j])
                                                    c=0;
                                    }
                                    for(p=i+1;p<5;p++)
                                    {
                                                      if(a[i][j]>a[p][j])
                                                      c=0;
                                    }
                                    if(b==1&&c==1)
                                    {
                                                  m=1;
                                         printf("",i+1,j+1,a[i][j]);
                                    }
                    }
    }
    if(m==0)
    printf("");
    return 0;
}                               

1000181
main()
{
    int i,j,k,m,n;
    char c;
    scanf("",&m);
    for(i=0;i<m;i++)
    {
                    scanf("",&b[i].num,b[i].au);
    }
    for(i=0;i<m;i++)
    {
                    
                    for(j=0;;j++)
                    {
                                 c=b[i].au[j];
                                 if(c=='\0')
                                 {
                                            break;
                                 }
                                 else
                                 {
                                     b[i].sta[c-64]++;
                                 }
                    }  
    }
    int sum[27]={0};
    for(i=0;i<m;i++)
    {
                      for(j=1;j<27;j++)
                      {
                                       sum[j]+=b[i].sta[j];
                      }
    }
    int max=0;
    for(i=1;i<27;i++)
    {
                     if(sum[i]>max)
                     {
                                   max=sum[i];
                                   k=i;
                     }
    }
    printf("",k+64);
    n=0;
    for(i=0;i<m;i++)
    {
                    if(b[i].sta[k]!=0)
                    {
                                      n++;
                    }
    }
    printf("",n);
    n=0;
    for(i=0;i<m;i++)
    {
                    if(b[i].sta[k]!=0)
                    {
                                      n++;
                                      if(n==1)
                                      {
                                              printf("",b[i].num);
                                      }
                                      else
                                      {
                                          printf("",b[i].num);
                                      }
                    }
    }
    return 0;
}

1000182
main()
{
	int z, q, s, l;
	for (z = 10; z <= 50; z = z + 10)
	{
		for (q = 10; q <= 50; q = q + 10)
		{
			for (s = 10; s <= 50; s = s + 10)
			{
				for (l = 10; l <= 50; l = l + 10)
				{ 
					if (z != q && z != s && z != l && q != s && q != l && s != l)
					{
						if ((z + q) == (s + l) && (z + l) > (q + s) && q > (z + s))
						{
							if (z > q && z > s && z > l)
							{
								cout << "" << "" << z << endl;
									if (q > s && q > l)
									{
										cout << "" << "" << q << endl;
										if (s > l)
										{
										    cout << "" << "" << s << endl;
											cout << "" << "" << l << endl;
										}
										else
										{
											cout << "" << "" << l << endl;
											cout << "" << "" << s << endl;
										}
									}
									if (s > q && s > l)
									{
										cout << "" << "" << s << endl;
										if (q > l)
										{
										    cout << "" << "" << q << endl;
											cout << "" << "" << l << endl;
										}
										else
										{
											cout << "" << "" << l << endl;
											cout << "" << "" << q << endl;
										}
									}
									if (l > q && l > s)
									{
										cout << "" << "" << l << endl;
										if (q > s)
										{
										    cout << "" << "" << q << endl;
											cout << "" << "" << s << endl;
										}
										else
										{
											cout << "" << "" << s << endl;
											cout << "" << "" << q << endl;
										}
									}
							}
							if (q > z && q > s && q > l)
							{
								cout << "" << "" << q << endl;
									if (z > s && z > l)
									{
										cout << "" << "" << z << endl;
										if (s > l)
										{
										    cout << "" << "" << s << endl;
											cout << "" << "" << l << endl;
										}
										else
										{
											cout << "" << "" << l << endl;
											cout << "" << "" << s << endl;
										}
									}
									if (s > z && s > l)
									{
										cout << "" << "" << s << endl;
										if (z > l)
										{
										    cout << "" << "" << z << endl;
											cout << "" << "" << l << endl;
										}
										else
										{
											cout << "" << "" << l << endl;
											cout << "" << "" << z << endl;
										}
									}
									if (l > z && l > s)
									{
										cout << "" << "" << l << endl;
										if (z > s)
										{
										    cout << "" << "" << z << endl;
											cout << "" << "" << s << endl;
										}
										else
										{
											cout << "" << "" << s << endl;
											cout << "" << "" << z << endl;
										}
									}
							}
							if (s > z && s > q && s > l)
							{
								cout << "" << "" << s << endl;
									if (z > q && z > l)
									{
										cout << "" << "" << z << endl;
										if (q > l)
										{
										    cout << "" << "" << q << endl;
											cout << "" << "" << l << endl;
										}
										else
										{
											cout << "" << "" << l << endl;
											cout << "" << "" << q << endl;
										}
									}
									if (q > z && q > l)
									{
										cout << "" << "" << q << endl;
										if (z > l)
										{
										    cout << "" << "" << z << endl;
											cout << "" << "" << l << endl;
										}
										else
										{
											cout << "" << "" << l << endl;
											cout << "" << "" << z << endl;
										}
									}
									if (l > z && l > q)
									{
										cout << "" << "" << l << endl;
										if (z > q)
										{
										    cout << "" << "" << z << endl;
											cout << "" << "" << q << endl;
										}
										else
										{
											cout << "" << "" << q << endl;
											cout << "" << "" << z << endl;
										}
									}
							}
							if (l > z && l > q && l > s)
							{
								cout << "" << "" << l << endl;
									if (z > q && z > s)
									{
										cout << "" << "" << z << endl;
										if (q > s)
										{
										    cout << "" << "" << q << endl;
											cout << "" << "" << s << endl;
										}
										else
										{
											cout << "" << "" << s << endl;
											cout << "" << "" << q << endl;
										}
									}
									if (q > z && q > s)
									{
										cout << "" << "" << q << endl;
										if (z > s)
										{
										    cout << "" << "" << z << endl;
											cout << "" << "" << s << endl;
										}
										else
										{
											cout << "" << "" << s << endl;
											cout << "" << "" << z << endl;
										}
									}
									if (s > z && s > q)
									{
										cout << "" << "" << s << endl;
										if (z > q)
										{
										    cout << "" << "" << z << endl;
											cout << "" << "" << q << endl;
										}
										else
										{
											cout << "" << "" << q << endl;
											cout << "" << "" << z << endl;
										}
									}
							}
						}
					}
				}
			}
		}
	}
    return 0;
}

1000183
main()
{
    int mt[20][20],i,j,m,n;
    scanf("",&m,&n);
    for(i=0;i<m;i++)
    {
                    for(j=0;j<n;j++)
                    scanf("",&mt[i][j]);
    }
    for(i=0;i<m;i++)
    {
                    for(j=0;j<n;j++)
                    {
                                    if(i==0)
                                    {
                                            if(j==0)
                                            {
                                                    if(mt[0][0]>=mt[0][1]&&mt[0][0]>=mt[1][0])
                                                    printf("",i,j);
                                            }
                                            if(j==n-1)
                                            {
                                                 if(mt[0][n-1]>=mt[1][n-1]&&mt[0][n-1]>=mt[0][n-2])
                                                 printf("",i,j);
                                            }
                                            else
                                            {
                                                if(mt[i][j]>=mt[i][j-1]&&mt[i][j]>=mt[i][j+1]&&mt[i][j]>=mt[i+1][j])
                                                 printf("",i,j);
                                            }
                                    }
                                    if(i==m-1)
                                    {
                                         if(j==0)
                                            {
                                                    if(mt[i][j]>=mt[i][j+1]&&mt[i][j]>=mt[i-1][j])
                                                    printf("",i,j);
                                            }
                                            if(j==n-1)
                                            {
                                                 if(mt[i][j]>=mt[i][j-1]&&mt[i][j]>=mt[i-1][j])
                                                 printf("",i,j);
                                            }
                                            else
                                            {
                                                if(mt[i][j]>=mt[i-1][j]&&mt[i][j]>=mt[i][j-1]&mt[i][j]>=mt[i][j+1])
                                                printf("",i,j);
                                            }
                                    }
                                    else
                                    {
                                        if(j==0)
                                        {
                                                    if(mt[i][j]>=mt[i][j+1]&&mt[i][j]>=mt[i-1][j]&&mt[i][j]>=mt[i+1][j])
                                                    printf("",i,j);
                                        }   
                                         if(j==n-1)
                                         {
                                              if(mt[i][j]>=mt[i][j-1]&&mt[i][j]>=mt[i-1][j]&&mt[i][j]>=mt[i+1][j])
                                                    printf("",i,j);
                                         }
                                         else
                                         {
                                             if(mt[i][j]>=mt[i][j-1]&&mt[i][j]>=mt[i-1][j]&&mt[i][j]>=mt[i+1][j]&&mt[i][j]>=mt[i][j+1])
                                                    printf("",i,j);
                                         }
                                    }
                    }
    }
    return 0;
}


1000184
mtod(int yy,int mm1,int mm2)
{
	int dd1,dd2,dd;
	if ((yy%400==0)||((yy%4==0)&&(yy%100!=0)))
	{
		switch(mm1)
		{
		case 1:dd1=0;break;
		case 2:dd1=31;break;
		case 3:dd1=31+29;break;
		case 4:dd1=31+29+31;break;
		case 5:dd1=31+29+31+30;break;
		case 6:dd1=31+29+31+30+31;break;
		case 7:dd1=31+29+31+30+31+30;break;
		case 8:dd1=31+29+31+30+31+30+31;break;
		case 9:dd1=31+29+31+30+31+30+31+31;break;
		case 10:dd1=31+29+31+30+31+30+31+31+30;break;
		case 11:dd1=31+29+31+30+31+30+31+31+30+31;break;
		default:dd1=31+29+31+30+31+30+31+31+30+31+30;break;
		}
		switch(mm2)
		{
		case 1:dd2=0;break;
		case 2:dd2=31;break;
		case 3:dd2=31+29;break;
		case 4:dd2=31+29+31;break;
		case 5:dd2=31+29+31+30;break;
		case 6:dd2=31+29+31+30+31;break;
		case 7:dd2=31+29+31+30+31+30;break;
		case 8:dd2=31+29+31+30+31+30+31;break;
		case 9:dd2=31+29+31+30+31+30+31+31;break;
		case 10:dd2=31+29+31+30+31+30+31+31+30;break;
		case 11:dd2=31+29+31+30+31+30+31+31+30+31;break;
		default:dd2=31+29+31+30+31+30+31+31+30+31+30;break;
		}
	}
	else
	{
		switch(mm1)
		{
		case 1:dd1=0;break;
		case 2:dd1=31;break;
		case 3:dd1=31+28;break;
		case 4:dd1=31+28+31;break;
		case 5:dd1=31+28+31+30;break;
		case 6:dd1=31+28+31+30+31;break;
		case 7:dd1=31+28+31+30+31+30;break;
		case 8:dd1=31+28+31+30+31+30+31;break;
		case 9:dd1=31+28+31+30+31+30+31+31;break;
		case 10:dd1=31+28+31+30+31+30+31+31+30;break;
		case 11:dd1=31+28+31+30+31+30+31+31+30+31;break;
		default:dd1=31+28+31+30+31+30+31+31+30+31+30;break;
		}
		switch(mm2)
		{
		case 1:dd2=0;break;
		case 2:dd2=31;break;
		case 3:dd2=31+28;break;
		case 4:dd2=31+28+31;break;
		case 5:dd2=31+28+31+30;break;
		case 6:dd2=31+28+31+30+31;break;
		case 7:dd2=31+28+31+30+31+30;break;
		case 8:dd2=31+28+31+30+31+30+31;break;
		case 9:dd2=31+28+31+30+31+30+31+31;break;
		case 10:dd2=31+28+31+30+31+30+31+31+30;break;
		case 11:dd2=31+28+31+30+31+30+31+31+30+31;break;
		default:dd2=31+28+31+30+31+30+31+31+30+31+30;break;
		}
	}
	dd=dd2-dd1;
	return dd;
}

main()
{
	int n,i,k;
	int year,month1,month2;
	int ans[201];
	cin>>n;
	for (i=1;i<=n;i++)
	{
		cin>>year
			>>month1
			>>month2;
		k=mtod (year,month1,month2);
		if (k%7==0)
		{
			ans[i]=1;
		}
		else
		{
			ans[i]=0;
		}
		year=month1=month2=0;
	}
    for (i=1;i<=n;i++)
	{
		if (ans[i]==1)
		{
			cout<<""<<endl;
		}
		else
		{
			cout<<""<<endl;
		}
	}
}


1000185
main()
{
    int n, i, j;
    int location[11][3];
    int (*p)[3];
    cin >> n;
    for ( i = 1; i <= n; i++ )
    {
        for ( j = 0; j < 3; j++ )
        {
            cin >> location[i][j];
        }
    }
    struct team
    {
           int a1;
           int a2;
           double distance;
    } zu[45], t;
    int k = 0;
    p = location;
    for ( i = 1; i < n; i++ )
    {
        for ( j = i + 1; j <= n; j++ )
        {
            zu[k].a1 = i;
            zu[k].a2 = j;
            int x, y, z;
            x = location[i][0] - location[j][0];
            y = location[i][1] - location[j][1];
            z = location[i][2] - location[j][2];
            zu[k].distance = sqrt ( x * x + y * y + z * z );
            k++;
        }
    }
    for ( i = 0; i < k - 1; i++ )
    {
        for ( j = i + 1; j < k; j++ )
        {
            if ( zu[i].distance - zu[j].distance < -0.01 )
            {
                 t = zu[i];
                 zu[i] = zu[j];
                 zu[j] = t;
            }
            if ( fabs( zu[i].distance - zu[j].distance ) < 0.01 )
                 {
                      if ( zu[i].a1 > zu[j].a1 )
                      {
                           t = zu[i];
                           zu[i] = zu[j];
                           zu[j] = t;
                      }
                      if ( zu[i].a1 == zu[j].a1 )
                           {
                                if ( zu[i].a2 > zu[j].a2 )
                                {
                                     t = zu[i];
                                     zu[i] = zu[j];
                                     zu[j] = t;
                                }
                           }
                 }
        }
    }
    for ( i = 0; i < k; i++ )
    {
        cout << "" << location[zu[i].a1][0] << "" << location[zu[i].a1][1] << "" << location[zu[i].a1][2] << ""
             << location[zu[i].a2][0] << "" << location[zu[i].a2][1] << "" << location[zu[i].a2][2] << ""
             << fixed << setprecision(2) << zu[i].distance << endl;
    }
    return 0;
}

1000186
main()
{
	int a,b,c,d,e,f,n,i,k;
	scanf("",&a,&b,&c);
	scanf("",&d,&e,&f);
	n=0;
	k=0;
	for (i=a;i<=d-1;i++)
	{
		if ((i%4==0 && i%100!=0)||(i%400==0))
		{
			k=k+1;
		}
	}
	n=(d-a)*365+k;
	if  ((d%4==0 && d%100!=0)||(d%400==0))
	{
		switch (e)
		{
		case 1: n=n;break;
		case 2: n=n+31;break;
		case 3: n=n+31+29;break;
		case 4: n=n+31+29+31;break;
		case 5: n=n+31+29+31+30;break;
		case 6: n=n+31+29+31+30+31;break;
		case 7: n=n+31+29+31+30+31+30;break;
		case 8: n=n+31+29+31+30+31+30+31;break;
		case 9: n=n+31+29+31+30+31+30+31+31;break;
		case 10:n=n+31+29+31+30+31+30+31+31+30;break;
		case 11:n=n+31+29+31+30+31+30+31+31+30+31;break;
		case 12:n=n+31+29+31+30+31+30+31+31+30+31+30;break;
		}
	}
	else
	{
	switch (e)
		{
		case 1: n=n;break;
		case 2: n=n+31;break;
		case 3: n=n+31+28;break;
		case 4: n=n+31+28+31;break;
		case 5: n=n+31+28+31+30;break;
		case 6: n=n+31+28+31+30+31;break;
		case 7: n=n+31+28+31+30+31+30;break;
		case 8: n=n+31+28+31+30+31+30+31;break;
		case 9: n=n+31+28+31+30+31+30+31+31;break;
		case 10:n=n+31+28+31+30+31+30+31+31+30;break;
		case 11:n=n+31+28+31+30+31+30+31+31+30+31;break;
		case 12:n=n+31+28+31+30+31+30+31+31+30+31+30;break;
		}	
	}
	
	if  ((a%4==0 && a%100!=0)||(a%400==0))
	{
		switch (b)
		{
		case 1: n=n;break;
		case 2: n=n-31;break;
		case 3: n=n-31-29;break;
		case 4: n=n-31-29-31;break;
		case 5: n=n-31-29-31-30;break;
		case 6: n=n-31-29-31-30-31;break;
		case 7: n=n-31-29-31-30-31-30;break;
		case 8: n=n-31-29-31-30-31-30-31;break;
		case 9: n=n-31-29-31-30-31-30-31-31;break;
		case 10:n=n-31-29-31-30-31-30-31-31-30;break;
		case 11:n=n-31-29-31-30-31-30-31-31-30-31;break;
		case 12:n=n-31-29-31-30-31-30-31-31-30-31-30;break;
		}
	}
	else
	{
	switch (b)
		{
		case 1: n=n;break;
		case 2: n=n-31;break;
		case 3: n=n-31-28;break;
		case 4: n=n-31-28-31;break;
		case 5: n=n-31-28-31-30;break;
		case 6: n=n-31-28-31-30-31;break;
		case 7: n=n-31-28-31-30-31-30;break;
		case 8: n=n-31-28-31-30-31-30-31;break;
		case 9: n=n-31-28-31-30-31-30-31-31;break;
		case 10:n=n-31-28-31-30-31-30-31-31-30;break;
		case 11:n=n-31-28-31-30-31-30-31-31-30-31;break;
		case 12:n=n-31-28-31-30-31-30-31-31-30-31-30;break;
		}	
	}
	n=n-c+f;
	printf("",n);
	return 0;
}


1000188
main(){
	int z,q,s,l,f;  
	f=1;          
	max(int a,int b,int c,int d);    
	for (z=1;z<=5;z++){   
		for (q=1;q<=5;q++){  
			if (q==z) q++;   
			for (s=1;s<=5;s++){     
			    while (s==z || s==q) s++;     
			    for (l=1;l<=5;l++){      
			        while ((l==z || l==q) || l==s) l++;       
                    if (l>5) break;                           
			        if (((z+q)==(s+l)&&(z+l)>(s+q))&&((z+s)<q)){
			        	if(max(z,q,s,l)==z) {
                        	cout <<""<<z*10<<endl;
                            z=0;
                        }
                        if(max(z,q,s,l)==q) {
                        	cout <<""<<q*10<<endl;
                        	q=0;
                        }
                        if(max(z,q,s,l)==s) {
                        	cout <<""<<s*10<<endl;
                        	s=0;
                        }
                        if(max(z,q,s,l)==l) {
                        	cout <<""<<l*10<<endl;
                        	l=0;
                        }
                        if(max(z,q,s,l)==z && max(z,q,s,l)!=0) {
                        	cout <<""<<z*10<<endl;
                            z=0;
                        }
                        if(max(z,q,s,l)==q && max(z,q,s,l)!=0) {
                        	cout <<""<<q*10<<endl;
                        	q=0;
                        }
                        if(max(z,q,s,l)==s && max(z,q,s,l)!=0) {
                        	cout <<""<<s*10<<endl;
                        	s=0;
                        }
                        if(max(z,q,s,l)==l && max(z,q,s,l)!=0) {
                        	cout <<""<<l*10<<endl;
                        	l=0;
                        }
                        if(max(z,q,s,l)==z && max(z,q,s,l)!=0) {
                        	cout <<""<<z*10<<endl;
                            z=0;
                        }
                        if(max(z,q,s,l)==q && max(z,q,s,l)!=0) {
                        	cout <<""<<q*10<<endl;
                        	q=0;
                        }
                        if(max(z,q,s,l)==s && max(z,q,s,l)!=0) {
                        	cout <<""<<s*10<<endl;
                        	s=0;
                        }
                        if(max(z,q,s,l)==l && max(z,q,s,l)!=0) {
                        	cout <<""<<l*10<<endl;
                        	l=0;
                        }
                        if(max(z,q,s,l)==z && max(z,q,s,l)!=0) {
                        	cout <<""<<z*10<<endl;
                            z=0;
                        }
                        if(max(z,q,s,l)==q && max(z,q,s,l)!=0) {
                        	cout <<""<<q*10<<endl;
                        	q=0;
                        }
                        if(max(z,q,s,l)==s && max(z,q,s,l)!=0) {
                        	cout <<""<<s*10<<endl;
                        	s=0;
                        }
                        if(max(z,q,s,l)==l && max(z,q,s,l)!=0) {
                        	cout <<""<<l*10<<endl;
                        	l=0;
                        }
			        	f=0;                              
                    }
                    if (f==0) break; 
			    }
			    if (f==0) break; 
			}
			if (f==0) break; 
		}
		if (f==0) break; 
	}
	return 0;
}

max(int a,int b,int c,int d){
    int m;
    m=(a>b)?a:b;
    m=(m>c)?m:c;
    m=(m>d)?m:d;
    return (m);
}


1000189
main()
{
      int sy,sm,sd,ey,em,ed;
      long int a,b,p,q;
      a=0,b=0;
      scanf("",&sy,&sm,&sd);
      scanf("",&ey,&em,&ed);
      for (p=0;p<sy;p++)
          {
                        if ((p%4==0&&p%100!=0)||(p%400==0)) a=a+366;
                        else a=a+365;
          }
      while (p==sy)
          {
                   if ((sy%4==0&&sy%100!=0)||(sy%400==0))
                       if(sm==1) a=a+sd;
                       if (sm==2) a=a+31+sd;
                       if (sm==3) a=a+31+29+sd;
                       if (sm==4) a=a+31+29+31+sd;
                       if (sm==5) a=a+31+29+31+30+sd;
                       if (sm==6) a=a+31+29+31+30+31+sd;
                       if (sm==7) a=a+31+29+31+30+31+30+sd;
                       if (sm==8) a=a+31+29+31+30+31+30+31+sd;
                       if (sm==9) a=a+31+29+31+30+31+30+31+31+sd;
                       if (sm==10) a=a+31+29+31+30+31+30+31+31+30+sd;
                       if (sm==11) a=a+31+29+31+30+31+30+31+31+30+31+sd;
                       else a=a+31+29+31+30+31+30+31+31+30+31+30+sd;
                   if(sm==1) a=a+sd;
                       if (sm==2) a=a+31+sd;
                       if (sm==3) a=a+31+28+sd;
                       if (sm==4) a=a+31+28+31+sd;
                       if (sm==5) a=a+31+28+31+30+sd;
                       if (sm==6) a=a+31+28+31+30+31+sd;
                       if (sm==7) a=a+31+28+31+30+31+30+sd;
                       if (sm==8) a=a+31+28+31+30+31+30+31+sd;
                       if (sm==9) a=a+31+28+31+30+31+30+31+31+sd;
                       if (sm==10) a=a+31+28+31+30+31+30+31+31+30+sd;
                       if (sm==11) a=a+31+28+31+30+31+30+31+31+30+31+sd;
                       else a=a+31+28+31+30+31+30+31+31+30+31+30+sd;
                   break;
          }
      for (q=0;q<ey;q++)
          {
                        if ((q%4==0&&q%100!=0)||(q%400==0)) b=b+366;
                        else b=b+365;
          }
      while (q==ey)
          {
                   if ((ey%4==0&&ey%100!=0)||(ey%400==0))
                       if(em==1)  b=b+ed;
                       if (em==2) b=b+31+ed;
                       if (em==3) b=b+31+29+ed;
                       if (em==4) b=b+31+29+31+ed;
                       if (em==5) b=b+31+29+31+30+ed;
                       if (em==6) b=b+31+29+31+30+31+ed;
                       if (em==7) b=b+31+29+31+30+31+30+ed;
                       if (em==8) b=b+31+29+31+30+31+30+31+ed;
                       if (em==9) b=b+31+29+31+30+31+30+31+31+ed;
                       if (em==10) b=b+31+29+31+30+31+30+31+31+30+ed;
                       if (em==11) b=b+31+29+31+30+31+30+31+31+30+31+ed;
                       else b=b+31+29+31+30+31+30+31+31+30+31+30+ed;
                   if(em==1) b=b+ed;
                       if (em==2) b=b+31+ed;
                       if (em==3) b=b+31+28+ed;
                       if (em==4) b=b+31+28+31+ed;
                       if (em==5) b=b+31+28+31+30+ed;
                       if (em==6) b=b+31+28+31+30+31+ed;
                       if (em==7) b=b+31+28+31+30+31+30+ed;
                       if (em==8) b=b+31+28+31+30+31+30+31+ed;
                       if (em==9) b=b+31+28+31+30+31+30+31+31+ed;
                       if (em==10) b=b+31+28+31+30+31+30+31+31+30+ed;
                       if (em==11) b=b+31+28+31+30+31+30+31+31+30+31+ed;
                       else b=b+31+28+31+30+31+30+31+31+30+31+30+ed;
                   break;
          }
      printf("",b-a);
      return(0);
}


1000190
main()
{
      int n,j;
      double a,b,c,y,e,f;
      scanf("",&n);
       for(j=1;j<=n;j++)
      {
       scanf("",&a,&b,&c);                
      y=b*b-4*a*c;
      if(y>0)
      {
             e=(-b+sqrt(y))/(2*a);
             f=(-b-sqrt(y))/(2*a);
             printf("",e);
             printf("",f);
             }
      else
      {
         if(y==0)
         {
             e=(-b)/(2*a);
             printf("",e
             }
         else       
         {
             e=sqrt(-y)/(2*a);
             f=(-b)/(2*a);
             if(f==0)
             {
                     f=0.00000;
                     }
             printf("",f,e);    
             printf("",f,e);
              }
      }
        }
       getchar();
       getchar();
       getchar();
       getchar();
        getchar();
       getchar();
       getchar();
       getchar();
       
       }  

1000191
main()
{
      int n,l;
      scanf("",&n);
      double a[100][5],b[100][6];
      
      for(l=0;l<=n-1;l++)
      {
                         scanf("",&a[l][0],&a[l][1],&a[l][2]);
                         a[l][3]=a[l][1]*a[l][1]-4*a[l][0]*a[l][2];
                         if(a[l][3]>0)
                         {
                                b[l][0]=(-a[l][1] + sqrt(a[l][1]*a[l][1]-4*a[l][0]*a[l][2]))/(2*a[l][0]) ;
                         b[l][1]=(-a[l][1] - sqrt(a[l][1]*a[l][1]-4*a[l][0]*a[l][2]))/(2*a[l][0]) ;
                         }
                         else
                         {
                             if(a[l][3]==0)
                             {
                                    b[l][0]=-a[l][1]/(2*a[l][0]);
                                    }
                                    else
                                    {
                                        b[l][0]=-a[l][1]/(2*a[l][0]);
                                        if(b[l][0]==0)
                                        {b[l][0]=0;}
                                        b[l][1]=(sqrt(4*a[l][0]*a[l][2]-a[l][1]*a[l][1]))/(2*a[l][0]);
                                        }
                                        }
                                        }
                                        for(l=0;l<=n-1;l++)
                                        {
                                                            if(a[l][3]>0)
                                                            {
                                                                         printf("",b[l][0], b[l][1]);
                                                                         }
                                                                         else
                                                                         {
                                                                             if(a[l][3]==0)
                                                                             {
                                                                                           printf("", b[l][0]);
                                                                                           }
                                                                                           else
                                                                                           {
                                                                                               printf("",b[l][0], b[l][1], b[l][0],b[l][1]);
                                                                                               }
                                                                                               }
                                                                                               }
                                                                                               getchar();
                                                                                                getchar();
                                                                                               }
                                                                                               
                                                           
                                        
                                    

                         


1000192
main()
{
    int n, p;
    int i, j, l, m, k;
    memset(a, 0, sizeof(a));
    memset(sum, 0, sizeof(sum));                   
    cin >> n;
    for (k = 0; k < n; k++)
	{
       for (i = 0; i < n; i++)
	   {
           for (j = 0; j < n; j++)
		   {
              cin >> a[i][j];
		   }
	   }
       Delete(a, n, k);                          
	}

    for (l = 0; l < n; l++)  
	{
       cout << sum[l] << endl;
	}
    return 0;
}

Delete(int a[][101], int n, int p)          
{
    if (n == 1) return;                          
    int i, j, k, l, m, q, r, s, min, Min[101];   
    for (i = 0; i < n; i++)
	{
       min = check_min(a[i], n);
       for (j = 0; j < n; j++)
	   {
           a[i][j] = a[i][j] - min;             
	   }
	}
    for (i = 0; i < n; i++)
	{
       for (j = 0; j < n; j++)
	   {
          if (j == 0) Min[i] = a[j][i];
          if (a[j][i] < Min[i]) Min[i] = a[j][i];
	   } 
	}
    for (i = 0; i < n; i++)
	{
       for (j = 0; j < n; j++)
	   {
           a[j][i] = a[j][i] - Min[i];          
	   }
	}
    sum[p] = sum[p] + a[1][1];                   
    for (k = 2; k < n; k++)
	{
        for (l = 2; l < n; l++)
		{
           a[k - 1][l - 1] = a[k][l];
		}
	}
    for (m = 2; m < n; m++)
	{
       a[0][m - 1] = a[0][m];
       a[m - 1][0] = a[m][0];
	}
    Delete(a, n - 1, p);                         
}

check_min(int a[], int n)
{
   int min;
   int i;
   for (i = 0; i < n; i++)
   { 
     if (i == 0) min = a[i];                  
     if (a[i] < min) min = a[i];              
   }
   return min;
} 

1000193
change(char a)
{
    int b;
    switch(a)
    {
     case'':b=0;break;
     case'':b=1;break;
     case'':b=2;break;
     case'':b=3;break;
     case'':b=4;break;
     case'':b=5;break;
     case'':b=6;break;
     case'':b=7;break;
     case'':b=8;break;
     case'':b=9;break;
     case'':b=10;break;
     case'':b=11;break;
     case'':b=12;break;
     case'':b=13;break;
     case'':b=14;break;
     case'':b=15;break;
     case'':b=16;break;
     case'':b=17;break;
     case'':b=18;break;
     case'':b=19;break;
     case'':b=20;break;
     case'':b=21;break;
     case'':b=22;break;
     case'':b=23;break;
     case'':b=24;break;
     case'':b=25;break;
     case'':b=26;break;
     case'':b=27;break;
     case'':b=28;break;
     case'':b=29;break;
     case'':b=30;break;
     case'':b=31;break;
     case'':b=32;break;
     case'':b=33;break;
     case'':b=34;break;
     case'':b=35;break;
     case'':b=10;break;
     case'':b=11;break;
     case'':b=12;break;
     case'':b=13;break;
     case'':b=14;break;
     case'':b=15;break;
     case'':b=16;break;
     case'':b=17;break;
     case'':b=18;break;
     case'':b=19;break;
     case'':b=20;break;
     case'':b=21;break;
     case'':b=22;break;
     case'':b=23;break;
     case'':b=24;break;
     case'':b=25;break;
     case'':b=26;break;
     case'':b=27;break;
     case'':b=28;break;
     case'':b=29;break;
     case'':b=30;break;
     case'':b=31;break;
     case'':b=32;break;
     case'':b=33;break;
     case'':b=34;break;
     case'':b=35;break;
     }
     return(b);
    }
rechange(int a)
{ char b;
 switch(a)
 {
     case 0:b='';break;
     case 1:b='';break;
     case 2:b='';break;
     case 3:b='';break;
     case 4:b='';break;
     case 5:b='';break;
     case 6:b='';break;
     case 7:b='';break;
     case 8:b='';break;
     case 9:b='';break;
     case 10:b='';break;
     case 11:b='';break;
     case 12:b='';break;
     case 13:b='';break;
     case 14:b='';break;
     case 15:b='';break;
     case 16:b='';break;
     case 17:b='';break;
     case 18:b='';break;
     case 19:b='';break;
     case 20:b='';break;
     case 21:b='';break;
     case 22:b='';break;
     case 23:b='';break;
     case 24:b='';break;
     case 25:b='';break;
     case 26:b='';break;
     case 27:b='';break;
     case 28:b='';break;
     case 29:b='';break;
     case 30:b='';break;
     case 31:b='';break;
     case 32:b='';break;
     case 33:b='';break;
     case 34:b='';break;
     case 35:b='';break;
 }
 return(b);
}
  main()
{
      int a,b;
      char n[10000];
      scanf("",&a,n,&b);
      int x,y;
      int i,j,k;
      x=strlen(n);
      y=change(n[x-1]);
      for(i=0;i<x-1;i++)
      { k=change(n[i]);
        for(j=0;j<x-i-1;j++)
        {k=k*a;}
        y=y+k;      
      }   
      int z;
      char q[10000]={'\0'};
      char *p=q;
      if(y>=b)
      {
      while(y>=b)
      {
       z=y%b;
       *p=rechange(z);
       y=y/b;
       if(y>0&&y<b)
      {*(p+1)=rechange(y);}
       p++;
       }
      }
      if(y<b)
      {*p=rechange(y);}
       for(i=strlen(q)-1;i>=0;i--)
      {printf("",q[i]);}
  return 0;
}


1000195
main(){
    int n,i,k,s,m;
    int zb[10][3];
    double d[45][7],e;
    scanf("",&n);
    for(i=0;i<n;i++){
                                for(s=0;s<3;s++){
                                scanf("",&(zb[i][s]));
                                }
                                }
                                s=0;
    for(i=0;i<=n-2;i++){
                        for(k=1;i+k<=n-1;k++){
                                              m=(zb[i][0]-zb[i+k][0])*(zb[i][0]-zb[i+k][0])+(zb[i][1]-zb[i+k][1])*(zb[i][1]-zb[i+k][1])+(zb[i][2]-zb[i+k][2])*(zb[i][2]-zb[i+k][2]);
                                              d[s][0]=sqrt(m);
                                              d[s][1]=zb[i][0];
                                              d[s][2]=zb[i][1];
                                              d[s][3]=zb[i][2];
                                              d[s][4]=zb[i+k][0];
                                              d[s][5]=zb[i+k][1];
                                              d[s][6]=zb[i+k][2];
                                              s++;
                                              }
                                              }
    m=s;
     for(k=1;m-k>0;k++){
                        for(i=0;i<m-k;i++){
                                          if(d[i][0]<d[i+1][0]){
                                                                for(s=0;s<7;s++){
                                                            e=d[i][s];
                                                            d[i][s]=d[i+1][s];
                                                            d[i+1][s]=e;
                                                            }
                                                            }
                                          }
                        }
     for(i=0;i<m;i++){
                      printf("",d[i][1],d[i][2],d[i][3],d[i][4],d[i][5],d[i][6],d[i][0]);
                      }
               
                      return 0;
                      }
                   
    
    


1000196
main()
{
    int n;
    int i,j,temp=0,num=0,sum1=0,sum2=0,money=0;
    int tian[1000];
    int qi[1000];
    scanf("",&n);
    while(n!=0)
    {
    temp=0,num=0,sum1=0,sum2=0,money=0;
    for(i=0;i<n;i++)
    scanf("",&tian[i]);
    for(j=0;j<n;j++)
    scanf("",&qi[j]);
    
    for(i=0;i<=n-2;i++)
    {
                       for(j=n-1;j>=1;j--)
                       {
                                          if(tian[j]>tian[j-1])
                                          {
                                                               temp=tian[j];
                                                               tian[j]=tian[j-1];
                                                               tian[j-1]=temp;
                                          }
                       }
    }
    
    
     for(i=0;i<=n-2;i++)
    {
                       for(j=n-1;j>=1;j--)
                       {
                                          if(qi[j]>qi[j-1])
                                          {
                                                               temp=qi[j];
                                                               qi[j]=qi[j-1];
                                                               qi[j-1]=temp;
                                          }
                       }
    }
    
    for(i=0;i<n;i++)
    {
                    num=i;
                    for(j=num;j>=0;j--)
                    {
                                       if(tian[j]>qi[i])
                                       {
                                                        sum1=sum1+1;
                                                        tian[j]=0;
                                                         qi[i]=0;
                                                         break;
                                       }          
                    }
    }
    
    for(i=0;i<n;i++)
    {
                   for(j=0;j<n;j++)
                   {
                      if(tian[i]==qi[j]&&tian[i]!=0)
                      {
                                   sum2++;
                                   break;            
                      }
                   }
    }
    
    money=200*(sum1-(n-sum1-sum2));
    printf("",money);
    scanf("",&n);
}
}

1000197
main()
{
    struct score
    {
           int ID;
           int c;
           int m;
           };
           int n,k,t,r;
           int j;
           scanf("",&n);
           int sum[100000];
           struct score s[100000];
           for(int i=1;i<=n;i++)
           {
                        scanf("",&s[i].ID,&s[i].c,&s[i].m);
                        sum[i]=s[i].c+s[i].m;
                        }
                        for(j=1;j<=3;j++)
                        {
                                         for(k=j;k<=n;k++)
                                         {
                                                            if(sum[k]>sum[j])
                                                            {            t=sum[j];         
                                                                         sum[j]=sum[k];
                                                                         sum[k]=t;
                                                                         r=s[j].ID;
                                                                         s[j].ID=s[k].ID;
                                                                         s[k].ID=r;
                                                                         }
                                                                         }
                                                                         }
                                                                         for(int u=1;u<=3;u++)
                                                                         {
                                                                                 printf("",s[u].ID,sum[u]);
                                                                                 }
                                                                                 getchar();
                                                                                 getchar();
                                                                                 }



1000199
main(){
    int m,n;
    scanf("",&m,&n);
    int sz[m][n];
    int zs[m][n];
    for(int i=0;i<m;i++){
        for(int x=0;x<n;x++){
            scanf("",&sz[i][x]);
            zs[i][x]=1;
        }
    }
    for(int i=0;i<m;i++){
        if(i==0){
            for(int x=0;x<n;x++){
                if(sz[i][x]>=sz[i+1][x]){
                    zs[i][x]=zs[i][x]*1;
                }else{
                     zs[i][x]=zs[i][x]*0;
                }
            }
        }
        if(i>0&&i<m-1){
            for(int x=0;x<n;x++){
                if(sz[i][x]>=sz[i+1][x]){
                    zs[i][x]=zs[i][x]*1;
                }else{
                     zs[i][x]=zs[i][x]*0;
                }
                if(sz[i][x]>=sz[i-1][x]){
                    zs[i][x]=zs[i][x]*1;
                }else{
                     zs[i][x]=zs[i][x]*0;
                }
            }
        }
        if(i==m-1){
            for(int x=0;x<n;x++){
                if(sz[i][x]>=sz[i-1][x]){
                    zs[i][x]=zs[i][x]*1;
                }else{
                     zs[i][x]=zs[i][x]*0;
                }
            }
        }
    }
    for(int x=0;x<n;x++){
        if(x==0){
            for(int i=0;i<m;i++){
                if(sz[i][x]>=sz[i][x+1]){
                    zs[i][x]=zs[i][x]*1;
                }else{
                     zs[i][x]=zs[i][x]*0;
                }
            }
        }
        if(x>0&&x<n-1){
            for(int i=0;i<m;i++){
                if(sz[i][x]>=sz[i][x+1]){
                    zs[i][x]=zs[i][x]*1;
                }else{
                     zs[i][x]=zs[i][x]*0;
                }
                if(sz[i][x]>=sz[i][x-1]){
                    zs[i][x]=zs[i][x]*1;
                }else{
                     zs[i][x]=zs[i][x]*0;
                }
            }
        }
        if(x==n-1){
            for(int i=0;i<m;i++){
                if(sz[i][x]>=sz[i][x-1]){
                    zs[i][x]=zs[i][x]*1;
                }else{
                     zs[i][x]=zs[i][x]*0;
                }
            }
        }
    }
    for(int i=0;i<m;i++){
        for(int x=0;x<n;x++){
            if(zs[i][x]==1){
                printf("",i,x);
            }
        }
    }
return 0;
}


1000200
main()
{
	int y[10000],m1[10000],m2[10000],n,i=0;
	cin>>n;
	for(i=0;i<n;i++)
	{
		cin>>y[i]>>m1[i]>>m2[i];
	}
	for(int i=0;i<n;i++)
	{
		if(y[i]%4==0&&y[i]%100!=0||y[i]%400==0)
		{
			switch(m1[i])
			{
			case 1:m1[i]=1;break;
			case 2:m1[i]=31+1;break;
			case 3:m1[i]=31+29+1;break;
			case 4:m1[i]=31+29+31+1;break;
			case 5:m1[i]=31+29+31+30+1;break;
			case 6:m1[i]=31+29+31+30+31+1;break;
			case 7:m1[i]=31+29+31+30+31+30+1;break;
			case 8:m1[i]=31+29+31+30+31+30+31+1;break;
			case 9:m1[i]=31+29+31+30+31+30+31+31+1;break;
			case 10:m1[i]=31+29+31+30+31+30+31+31+30+1;break;
			case 11:m1[i]=31+29+31+30+31+30+31+31+30+31+1;break;
			case 12:m1[i]=31+29+31+30+31+30+31+31+30+31+30+1;break;
			}
			switch(m2[i])
			{
			case 1:m2[i]=1;break;
			case 2:m2[i]=31+1;break;
			case 3:m2[i]=31+29+1;break;
			case 4:m2[i]=31+29+31+1;break;
			case 5:m2[i]=31+29+31+30+1;break;
			case 6:m2[i]=31+29+31+30+31+1;break;
			case 7:m2[i]=31+29+31+30+31+30+1;break;
			case 8:m2[i]=31+29+31+30+31+30+31+1;break;
			case 9:m2[i]=31+29+31+30+31+30+31+31+1;break;
			case 10:m2[i]=31+29+31+30+31+30+31+31+30+1;break;
			case 11:m2[i]=31+29+31+30+31+30+31+31+30+31+1;break;
			case 12:m2[i]=31+29+31+30+31+30+31+31+30+31+30+1;break;
			}
			if((m1[i]-m2[i])%7==0)
				cout<<""<<endl;
			else
				cout<<""<<endl;
		}
		else
		{
			switch(m1[i])
		{
			case 1:m1[i]=1;break;
			case 2:m1[i]=31+1;break;
			case 3:m1[i]=31+28+1;break;
			case 4:m1[i]=31+28+31+1;break;
			case 5:m1[i]=31+28+31+30+1;break;
			case 6:m1[i]=31+28+31+30+31+1;break;
			case 7:m1[i]=31+28+31+30+31+30+1;break;
			case 8:m1[i]=31+28+31+30+31+30+31+1;break;
			case 9:m1[i]=31+28+31+30+31+30+31+31+1;break;
			case 10:m1[i]=31+28+31+30+31+30+31+31+30+1;break;
			case 11:m1[i]=31+28+31+30+31+30+31+31+30+31+1;break;
			case 12:m1[i]=31+28+31+30+31+30+31+31+30+31+30+1;break;
		}
			switch(m2[i])
			{
			case 1:m2[i]=1;break;
			case 2:m2[i]=31+1;break;
			case 3:m2[i]=31+28+1;break;
			case 4:m2[i]=31+28+31+1;break;
			case 5:m2[i]=31+28+31+30+1;break;
			case 6:m2[i]=31+28+31+30+31+1;break;
			case 7:m2[i]=31+28+31+30+31+30+1;break;
			case 8:m2[i]=31+28+31+30+31+30+31+1;break;
			case 9:m2[i]=31+28+31+30+31+30+31+31+1;break;
			case 10:m2[i]=31+28+31+30+31+30+31+31+30+1;break;
			case 11:m2[i]=31+28+31+30+31+30+31+31+30+31+1;break;
			case 12:m2[i]=31+28+31+30+31+30+31+31+30+31+30+1;break;
			}
			if((m1[i]-m2[i])%7==0)
				cout<<""<<endl;
			else
				cout<<""<<endl;
		}
	}
	return 0;
}

1000201
main()
{
    int x[11],y[11],z[11],i,j,n,num=0;
    scanf("",&n);
    
    for(i=0;i<n;i++)
    scanf("",&x[i],&y[i],&z[i]);
    struct POINT
    {
          int point1x;
          int point1y;
          int point1z;
          int point2x;
          int point2y;
          int point2z;
		  int mark;
          float l;
    };
    struct POINT temp;
    struct POINT d[55];
    for(i=0;i<n;i++)
    {
                    for(j=i+1;j<n;j++)
                    {
                                      d[num].mark=num;
                                      d[num].point1x=x[i];d[num].point1y=y[i];d[num].point1z=z[i];
                                      d[num].point2x=x[j];d[num].point2y=y[j];d[num].point2z=z[j];
                                      d[num].l=f(x[i],y[i],z[i],x[j],y[j],z[j]);
                                      num=num+1;            
                    }
    }                         
    for(i=1;i<num;i++)
    {
                      for(j=0;j<num-i;j++)
                      {
                                        if(d[j].l>d[j+1].l)
                                        {
                                                           temp=d[j];
                                                           d[j]=d[j+1];
                                                           d[j+1]=temp;
                                        }
                      }
    } 
	for(i=1;i<num;i++)
    {
                      for(j=0;j<num-i;j++)
                      {
                                        if(d[j].l==d[j+1].l&&d[j].mark<d[j+1].mark)
                                        {
                                                           temp=d[j];
                                                           d[j]=d[j+1];
                                                           d[j+1]=temp;
                                        }
                      }
    }                                                                                                                
    for(i=num-1;i>=0;i--)
    printf("",d[i].point1x,d[i].point1y,d[i].point1z,d[i].point2x,d[i].point2y,d[i].point2z,d[i].l);

    return 0;
}
f(int a,int b,int c,int d,int e,int f)
{
      float length;
      length=sqrt((a-d)*(a-d)+(b-e)*(b-e)+(c-f)*(c-f));
      return(length);
}

1000202
main()
{
    char chuan[101],shuchu[100];
    int count1,count2,length,i,j;
    while(cin>>chuan)
    {
                cout<<chuan<<endl;
                length=strlen(chuan);
                strcpy(shuchu,chuan);
                count1=0;
                count2=0;
                for(i=0;i<length;i++)
                {
                                     if(chuan[i]=='')count1++;
                                     if(chuan[i]=='')
                                     {
                                                      count2++;
                                                      if(count2>count1)
                                                      {
                                                                       shuchu[i]=''; 
                                                                       count2--;
                                                      }
                                     } 
                                     
                }
                
                count1=0;
                count2=0;
                for(i=length-1;i>=0;i--)
                {
                                     if(chuan[i]=='')count2++;
                                     if(chuan[i]=='')
                                     {
                                                      count1++;
                                                      if(count1>count2)
                                                      {
                                                                       shuchu[i]='';
                                                                       count1--;
                                                      }
                                     } 
                                     
                }
                shuchu[length]='\0';
                for(i=0;i<length;i++)
                {
                                     if(shuchu[i]!='' && shuchu[i]!='')shuchu[i]='';
                }
                cout<<shuchu<<endl; 
                memset(shuchu,0,sizeof(shuchu));
                memset(chuan,0,sizeof(chuan));
    }      
return 0;    
}

1000203
main ()
{
    int n,m,i,j,sz[max][max];
    scanf("",&m,&n);
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            scanf("",&sz[i][j]);
        }
    }
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            if(i==0&&j==0)
            {
                if(sz[i][j]>=sz[i][j+1]&&sz[i][j]>=sz[i+1][j])
                   {
                    printf("",i,j);
                    }
            }
            if(i==0&&j!=0&&j!=n-1)
            {
              if(sz[i][j]>=sz[i][j-1]&&sz[i][j]>=sz[i][j+1]&&sz[i][j]>=sz[i+1][j])
               {

                printf("",i,j);
               }
            }
            if(i==0&&j==n-1)
            {
                if(sz[i][j]>=sz[i][j-1]&&sz[i][j]>=sz[i+1][j])
               {

                printf("",i,j);
               }

            }
            if (i!=m-1&&j==n-1&&i!=0)
            {
                if(sz[i][j]>=sz[i-1][j]&&sz[i][j]>=sz[i+1][j]&&sz[i][j]>=sz[i][j-1])
                   {

                    printf("",i,j);
                   }
            }
            if (i==m-1&&j==n-1)
            {
                if(sz[i][j]>=sz[i-1][j]&&sz[i][j]>=sz[i][j-1])
                   {

                    printf("",i,j);
                   }
            }
            if(i==m-1&&j!=n-1&&j!=0)
            {
                if(sz[i][j]>=sz[i][j-1]&&sz[i][j]>=sz[i][j+1]&&sz[i][j]>=sz[i-1][j])
                   {

                    printf("",i,j);
                   }
            }
            if(i==m-1&&j==0)
            {
                if(sz[i][j]>=sz[i][j+1]&&sz[i][j]>=sz[i-1][j])
                   {

                    printf("",i,j);
                   }
            }
            if(i!=0&&j==0&&i!=m-1)
            {
                if(sz[i][j]>=sz[i+1][j]&&sz[i][j]>=sz[i-1][j]&&sz[i][j]>=sz[i][j+1])
                    {
                        printf("",i,j);
                    }
            }
            if(sz[i][j]>=sz[i-1][j]&&sz[i][j]>=sz[i+1][j]&&sz[i][j]>=sz[i][j-1]&&sz[i][j]>=sz[i][j+1])
            {
                printf("",i,j);
            }
        }
    }
    return 0;
}


1000204
main()
{
	int a,b,c,d,e;


	    for(a=1;a<=2;a++)
	    for(b=1;b<=2;b++)
	    for(c=1;c<=5;c++)
	    for(d=1;d<=5;d++)
	    for(e=4;e<=5;e++)
	    {
	    	if((e==1)&&(b==2)&&(a!=5)&&(c==1)&&(d!=1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=d)&&(b!=e)&&(c!=d)&&(c!=e)&&(d!=e))
	    	   cout<<a<<""<<b<<""<<c<<""<<d<<""<<e<<endl;
	    }


	    for(a=1;a<=2;a++)
	        for(b=1;b<=5;b++)
	        for(c=1;c<=2;c++)
	        for(d=1;d<=5;d++)
	        for(e=4;e<=5;e++)
	        {
	        	if((e==1)&&(a==5)&&(b!=2)&&(c==1)&&(d!=1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=d)&&(b!=e)&&(c!=d)&&(c!=e)&&(d!=e))
	        	   cout<<a<<""<<b<<""<<c<<""<<d<<""<<e<<endl;
	        }


	        for(a=1;a<=2;a++)
	       	    for(b=1;b<=5;b++)
	       	    for(c=1;c<=5;c++)
	       	    for(d=1;d<=2;d++)
	       	    for(e=4;e<=5;e++)
	       	    {
	       	    	if((e==1)&&(c!=1)&&(b!=2)&&(a!=5)&&(d!=1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=d)&&(b!=e)&&(c!=d)&&(c!=e)&&(d!=e))
	       	    	   cout<<a<<""<<b<<""<<c<<""<<d<<""<<e<<endl;
	       	    }


	        for(a=1;a<=2;a++)
	       	    for(b=1;b<=5;b++)
	       	    for(c=1;c<=5;c++)
	       	    for(d=1;d<=5;d++)
	       	    for(e=1;e<=1;e++)
	       	    {
	       	    	if((e==1)&&(d==1)&&(b!=2)&&(a!=5)&&(c==1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=d)&&(b!=e)&&(c!=d)&&(c!=e)&&(d!=e))
	       	    	   cout<<a<<""<<b<<""<<c<<""<<d<<""<<e<<endl;
	       	    }


	        for(a=1;a<=5;a++)
	       	    for(b=1;b<=2;b++)
	       	    for(c=1;c<=2;c++)
	       	    for(d=1;d<=5;d++)
	       	    for(e=4;e<=5;e++)
	       	    {
	       	    	if((a==5)&&(b==2)&&(e!=1)&&(c==1)&&(d!=1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=d)&&(b!=e)&&(c!=d)&&(c!=e)&&(d!=e))
	       	    	   cout<<a<<""<<b<<""<<c<<""<<d<<""<<e<<endl;
	       	    }


	        for(a=1;a<=5;a++)
	       	    for(b=1;b<=2;b++)
	       	    for(c=1;c<=5;c++)
	       	    for(d=1;d<=2;d++)
	       	    for(e=4;e<=5;e++)
	       	    {
	       	    	if((c!=1)&&(b==2)&&(e!=1)&&(a!=5)&&(d!=1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=d)&&(b!=e)&&(c!=d)&&(c!=e)&&(d!=e))
	       	    	   cout<<a<<""<<b<<""<<c<<""<<d<<""<<e<<endl;
	       	    }

	        for(a=1;a<=5;a++)
	       	    for(b=1;b<=2;b++)
	       	    for(c=1;c<=5;c++)
	       	    for(d=1;d<=5;d++)
	       	    for(e=1;e<=1;e++)
	       	    {
	       	    	if((d==1)&&(b==2)&&(e!=1)&&(a!=5)&&(c==1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=d)&&(b!=e)&&(c!=d)&&(c!=e)&&(d!=e))
	       	    	   cout<<a<<""<<b<<""<<c<<""<<d<<""<<e<<endl;
	       	    }

	        for(a=1;a<=5;a++)
	       	    for(b=1;b<=5;b++)
	       	    for(c=1;c<=2;c++)
	       	    for(d=1;d<=2;d++)
	       	    for(e=4;e<=5;e++)
	       	    {
	       	    	if((a==5)&&(c!=1)&&(e!=1)&&(a!=5)&&(d!=1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=d)&&(b!=e)&&(c!=d)&&(c!=e)&&(d!=e))
	       	    	   cout<<a<<""<<b<<""<<c<<""<<d<<""<<e<<endl;
	       	    }

	        for(a=1;a<=5;a++)
	        	       	    for(b=1;b<=5;b++)
	        	       	    for(c=1;c<=2;c++)
	        	       	    for(d=1;d<=5;d++)
	        	       	    for(e=1;e<=1;e++)
	        	       	    {
	        	       	    	if((a==5)&&(d==1)&&(e!=1)&&(b!=2)&&(c==1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=d)&&(b!=e)&&(c!=d)&&(c!=e)&&(d!=e))
	        	       	    	   cout<<a<<""<<b<<""<<c<<""<<d<<""<<e<<endl;
	        	       	    }

	        for(a=1;a<=5;a++)
	        	       	    for(b=1;b<=5;b++)
	        	       	    for(c=1;c<=5;c++)
	        	       	    for(d=1;d<=2;d++)
	        	       	    for(e=1;e<=1;e++)
	        	       	    {
	        	       	    	if((d==1)&&(c!=1)&&(e!=1)&&(b!=2)&&(a!=5)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=d)&&(b!=e)&&(c!=d)&&(c!=e)&&(d!=e))
	        	       	    	   cout<<a<<""<<b<<""<<c<<""<<d<<""<<e<<endl;
	        	       	    }
	return 0;
}


1000205
main()
{
    int a[100][100];
    int i, j, k, m, n;
    int min, sum;

    scanf("", &m);
    for (k=0; k<m; k++) {
        
        n = m;
        sum = 0;
        
        for (i=0; i<n; i++) {
            for (j=0; j<n; j++) {
                scanf("", &a[i][j]);
            }
        }
        while (n>1) {
            
            for (i=0; i<n; i++) {
                min = a[i][0];
                for (j=1; j<n; j++) {
                    if (a[i][j] < min) {
                        min = a[i][j];
                    }
                }
                for (j=0; j<n; j++) {
                    a[i][j] -= min;
                }
            }
            
            for (j=0; j<n; j++) {
                min = a[0][j];
                for (i=1; i<n; i++) {
                    if (a[i][j] < min) {
                        min = a[i][j];
                    }
                }
                for (i=0; i<n; i++) {
                    a[i][j] -= min;
                }
            }
            
            sum += a[1][1];
            
            for (i=2; i<n; i++) {
                for (j=0; j<n; j++) {
                    a[i-1][j] = a[i][j];
                }
            }
            
            for (j=2; j<n; j++) {
                for (i=0; i<n; i++) {
                    a[i][j-1] = a[i][j];
                }
            }
            
            n--;
        }
        
        printf("", sum);
    }
    return 0;
}



char mn[] = {
    3, 9, 31
};

int xn = 0;

int max_files = sizeof(mn) / sizeof(mn[0]);

char * output_dir = "";

rnd(int min, int max) 
{
    return min + ((rand() << 15) | rand()) % (max - min + 1);
}

xbuild()
{
    int i, j, k, n;
    n = mn[xn];
    printf("", n);
    for (k=0; k<n; k++) {
        for (i=0; i<n; i++) {
            printf("", rnd(1, n*n));
            for (j=1; j<n; j++) {
                printf("", rnd(1, n*n));
            }
            printf("");
        }
    }
    xn++;
}


1000206
main()
{
	int n,i, y[300],m1[300],m2[300];
	scanf("",&n);
	for(i=0;i<n;i++)
	{
		scanf("",&y[i],&m1[i],&m2[i]);
	}
	for(i=0;i<n;i++)
	{
		if((y[i]%4==0&&y[i]%100!=0)||y[i]%400==0)
		{
			
			switch(m1[i])
			{
			case 1:m1[i]=0;break;
				case 2:m1[i]=31;break;
					case 3:m1[i]=31+29;break;
						case 4:m1[i]=31+29+31;break;
							case 5:m1[i]=31+29+31+30;break;
								case 6:m1[i]=31+29+31+30+31;break;
									case 7:m1[i]=31+29+31+30+31+30;break;
										case 8:m1[i]=31+29+31+30+31+30+31;break;
											case 9:m1[i]=31+29+31+30+31+30+31+31;break;
												case 10:m1[i]=31+29+31+30+31+30+31+31+30;break;
													case 11:m1[i]=366-30-31;break;
														case 12:m1[i]=366-31;break;
			}
				switch(m2[i])
			{
			case 1:m2[i]=0;break;
				case 2:m2[i]=31;break;
					case 3:m2[i]=31+29;break;
						case 4:m2[i]=31+29+31;break;
							case 5:m2[i]=31+29+31+30;break;
								case 6:m2[i]=31+29+31+30+31;break;
									case 7:m2[i]=31+29+31+30+31+30;break;
										case 8:m2[i]=31+29+31+30+31+30+31;break;
											case 9:m2[i]=31+29+31+30+31+30+31+31;break;
												case 10:m2[i]=31+29+31+30+31+30+31+31+30;break;
													case 11:m2[i]=366-30-31;break;
														case 12:m2[i]=366-31;break;
			}
				
			if((m2[i]-m1[i])%7==0||(m1[i]-m2[i])%7==0)
				printf("");
			printf("");
		}
		else
		{
			switch(m1[i])
			{
			case 1:m1[i]=0;break;
				case 2:m1[i]=31;break;
					case 3:m1[i]=31+29-1;break;
						case 4:m1[i]=31+29+31-1;break;
							case 5:m1[i]=31+29+31+30-1;break;
								case 6:m1[i]=31+29+31+30+31-1;break;
									case 7:m1[i]=31+29+31+30+31+30-1;break;
										case 8:m1[i]=31+29+31+30+31+30+31-1;break;
											case 9:m1[i]=31+29+31+30+31+30+31+31-1;break;
												case 10:m1[i]=31+29+31+30+31+30+31+31+30-1;break;
													case 11:m1[i]=366-30-31-1;break;
														case 12:m1[i]=366-31-1;break;
			}
			
				switch(m2[i])
			{
			case 1:m2[i]=0;break;
				case 2:m2[i]=31;break;
					case 3:m2[i]=31+29-1;break;
						case 4:m2[i]=31+29+31-1;break;
							case 5:m2[i]=31+29+31+30-1;break;
								case 6:m2[i]=31+29+31+30+31-1;break;
									case 7:m2[i]=31+29+31+30+31+30-1;break;
										case 8:m2[i]=31+29+31+30+31+30+31-1;break;
											case 9:m2[i]=31+29+31+30+31+30+31+31-1;break;
												case 10:m2[i]=31+29+31+30+31+30+31+31+30-1;break;
													case 11:m2[i]=366-30-31-1;break;
														case 12:m2[i]=366-31-1;break;
			}
				
			if((m2[i]-m1[i])%7==0||(m1[i]-m2[i])%7==0)
				printf("");
			printf("");

			
		
		
		}
	}
	

	
	return 0;
}

1000207
main()
{
	int num[3],nul[3];
	int i,j,h=0,k=0,sum=0;
	for(i=0;i<3;i++)
	{
		cin>>num[i];
	}
	for(i=0;i<3;i++)
	{
		cin>>nul[i];
	}
	if(nul[1]<=2)
	{
		for(i=num[0];i<nul[0];i++)
		{
			if(((i%4==0)&&(i%100!=0))||(i%400==0))
				sum=sum+366;
			else
				sum=sum+365;
		}
	}
	if(nul[1]>2)
	{
		for(i=num[0]+1;i<(nul[0]+1);i++)
		{
			if(((i%4==0)&&(i%100!=0))||(i%400==0))
				sum=sum+366;
			else
				sum=sum+365;
		}
	}
	if(((num[0]%4==0)&&(num[0]%100!=0))||(num[0]%400==0))
	{
		if(num[1]==1)
			h=num[2];
		if(num[1]==2)
			h=num[2]+31;
		if(num[1]==3)
			h=num[2]+60;
		if(num[1]==4)
			h=num[2]+91;
		if(num[1]==5)
			h=num[2]+121;
		if(num[1]==6)
			h=num[2]+152;
		if(num[1]==7)
			h=num[2]+182;
		if(num[1]==8)
			h=num[2]+213;
		if(num[1]==9)
			h=num[2]+244;
		if(num[1]==10)
			h=num[2]+274;
		if(num[1]==11)
			h=num[2]+305;
		if(num[1]==12)
			h=num[2]+335;
	}
	else
	{
		if(num[1]==1)
			h=num[2];
		if(num[1]==2)
			h=num[2]+31;
		if(num[1]==3)
			h=num[2]+59;
		if(num[1]==4)
			h=num[2]+90;
		if(num[1]==5)
			h=num[2]+120;
		if(num[1]==6)
			h=num[2]+151;
		if(num[1]==7)
			h=num[2]+181;
		if(num[1]==8)
			h=num[2]+212;
		if(num[1]==9)
			h=num[2]+243;
		if(num[1]==10)
			h=num[2]+273;
		if(num[1]==11)
			h=num[2]+304;
		if(num[1]==12)
			h=num[2]+334;
	}
	if(((num[0]%4==0)&&(num[0]%100!=0))||(num[0]%400==0))
	{
		if(nul[1]==1)
			k=nul[2];
		if(nul[1]==2)
			k=nul[2]+31;
		if(nul[1]==3)
			k=nul[2]+60;
		if(nul[1]==4)
			k=nul[2]+91;
		if(nul[1]==5)
			k=nul[2]+121;
		if(nul[1]==6)
			k=nul[2]+152;
		if(nul[1]==7)
			k=nul[2]+182;
		if(nul[1]==8)
			k=nul[2]+213;
		if(nul[1]==9)
			k=nul[2]+244;
		if(nul[1]==10)
			k=nul[2]+274;
		if(nul[1]==11)
			k=nul[2]+305;
		if(nul[1]==12)
			k=nul[2]+335;
	}
	else
	{
		if(nul[1]==1)
			k=nul[2];
		if(nul[1]==2)
			k=nul[2]+31;
		if(nul[1]==3)
			k=nul[2]+59;
		if(nul[1]==4)
			k=nul[2]+90;
		if(nul[1]==5)
			k=nul[2]+120;
		if(nul[1]==6)
			k=nul[2]+151;
		if(nul[1]==7)
			k=nul[2]+181;
		if(nul[1]==8)
			k=nul[2]+212;
		if(nul[1]==9)
			k=nul[2]+243;
		if(nul[1]==10)
			k=nul[2]+273;
		if(nul[1]==11)
			k=nul[2]+304;
		if(nul[1]==12)
			k=nul[2]+334;
	}
	cout<<sum+k-h;
	return 0;
}

1000208
main(){
    int m,n,i,j,a,b;
    a=0;
    scanf("",&m,&n);
    int sg[100][100],sz1[1000],sz2[1000];
    for(i=0;i<m;i++){
        for(j=0;j<n;j++){
            scanf("",&(sg[i][j]));
        }
    }
    if(sg[0][0]>=sg[0][1]&&sg[0][0]>=sg[1][0]){
        sz1[a]=0;sz2[a]=0;
        a++;
    }
    if(sg[0][n-1]>=sg[0][n-2]&&sg[0][n-1]>=sg[1][n-1]){
        sz1[a]=0;sz2[a]=n-1;
        a++;
    }
    if(sg[m-1][0]>=sg[m-1][1]&&sg[m-1][0]>=sg[m-2][0]){
        sz1[a]=m-1;sz2[a]=0;
        a++;
    }
    if(sg[m-1][n-1]>=sg[m-1][n-2]&&sg[m-1][n-1]>=sg[m-2][n-1]){
        sz1[a]=m-1;sz2[a]=n-1;
        a++;
    }
    if(n>1){
        for(j=1;j<n-1;j++){
            if(sg[0][j]>=sg[0][j+1]&&sg[0][j]>=sg[1][j]&&sg[0][j]>=sg[0][j-1]){
                sz1[a]=0;sz2[a]=j;
                a++;
            }
        }
    }
    if(m>1&&n>1){
        for(j=1;j<n-1;j++){
            if(sg[m-1][j]>=sg[m-1][j+1]&&sg[m-1][j]>=sg[m-2][j]&&sg[m-1][j]>=sg[m-1][j-1]){
                sz1[a]=m-1;sz2[a]=j;
                a++;
            }
        }
    }
     if(m>1){
        for(i=1;i<m-1;i++){
            if(sg[i][0]>=sg[i+1][0]&&sg[i][0]>=sg[i-1][0]&&sg[i][0]>=sg[i][1]){
                sz1[a]=i;sz2[a]=0;
                a++;
            }
        }
    }
    if(m>1&&n>1){
        for(i=1;i<m-1;i++){
            if(sg[i][n-1]>=sg[i+1][n-1]&&sg[i][n-1]>=sg[i-1][n-1]&&sg[i][n-1]>=sg[i][n-2]){
                sz1[a]=i;sz2[a]=j=n-1;
                a++;
            }
        }
    }
    if(m>1&&n>1)
        for(i=1;i<m-1;i++){
            for(j=1;j<n-1;j++){
                if(sg[i][j]>=sg[i-1][j]&&sg[i][j]>=sg[i+1][j]&&sg[i][j]>=sg[i][j-1]&&sg[i][j]>=sg[i][j+1]){
                    sz1[a]=i;sz2[a]=j;
                    a++;
                }
            }
        }
    
    for(int k=0;k<a-1;k++){
        int e;
        for(b=1;b<a-k;b++){
            if(sz1[b-1]>sz1[b]||(sz1[b-1]==sz1[b]&&sz2[b-1]>sz2[b])){
                e=sz1[b];
                sz1[b]=sz1[b-1];
                sz1[b-1]=e;
                
                e=sz2[b];
                sz2[b]=sz2[b-1];
                sz2[b-1]=e;
            }
        
        }
    
}
for(b=0;b<a;b++){
    printf("",sz1[b],sz2[b]);
}
return 0;
}



1000209
main()
{
	char ch[SIZE];
	int count[52]={0};
	char zimu[52]={'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''};
	int i,length,sum=0;
	gets(ch);
	length=strlen(ch);
	for(i=0;i<length;i++)
	{
		if(ch[i]=='')
		{
			count[0]++;
		}
		if(ch[i]=='')
		{
			count[1]++;
		}
		if(ch[i]=='')
		{
			count[2]++;
		}
		if(ch[i]=='')
		{
			count[3]++;
		}
		if(ch[i]=='')
		{
			count[4]++;
		}
		if(ch[i]=='')
		{
			count[5]++;
		}
		if(ch[i]=='')
		{
			count[6]++;
		}
		if(ch[i]=='')
		{
			count[7]++;
		}
		if(ch[i]=='')
		{
			count[8]++;
		}
		if(ch[i]=='')
		{
			count[9]++;
		}
		if(ch[i]=='')
		{
			count[10]++;
		}
		if(ch[i]=='')
		{
			count[11]++;
		}
		if(ch[i]=='')
		{
			count[12]++;
		}
		if(ch[i]=='')
		{
			count[13]++;
		}
		if(ch[i]=='')
		{
			count[14]++;
		}
		if(ch[i]=='')
		{
			count[15]++;
		}
		if(ch[i]=='')
		{
			count[16]++;
		}
		if(ch[i]=='')
		{
			count[17]++;
		}
		if(ch[i]=='')
		{
			count[18]++;
		}
		if(ch[i]=='')
		{
			count[19]++;
		}
		if(ch[i]=='')
		{
			count[20]++;
		}
		if(ch[i]=='')
		{
			count[21]++;
		}
		if(ch[i]=='')
		{
			count[22]++;
		}
		if(ch[i]=='')
		{
			count[23]++;
		}
		if(ch[i]=='')
		{
			count[24]++;
		}
		if(ch[i]=='')
		{
			count[25]++;
		}
		if(ch[i]=='')
		{
			count[26]++;
		}
		if(ch[i]=='')
		{
			count[27]++;
		}
		if(ch[i]=='')
		{
			count[28]++;
		}
		if(ch[i]=='')
		{
			count[29]++;
		}
		if(ch[i]=='')
		{
			count[30]++;
		}
		if(ch[i]=='')
		{
			count[31]++;
		}
		if(ch[i]=='')
		{
			count[32]++;
		}
		if(ch[i]=='')
		{
			count[33]++;
		}
		if(ch[i]=='')
		{
			count[34]++;
		}
		if(ch[i]=='')
		{
			count[35]++;
		}
		if(ch[i]=='')
		{
			count[36]++;
		}
		if(ch[i]=='')
		{
			count[37]++;
		}
		if(ch[i]=='')
		{
			count[38]++;
		}
		if(ch[i]=='')
		{
			count[39]++;
		}
		if(ch[i]=='')
		{
			count[40]++;
		}
		if(ch[i]=='')
		{
			count[41]++;
		}
		if(ch[i]=='')
		{
			count[42]++;
		}
		if(ch[i]=='')
		{
			count[43]++;
		}
		if(ch[i]=='')
		{
			count[44]++;
		}
		if(ch[i]=='')
		{
			count[45]++;
		}
		if(ch[i]=='')
		{
			count[46]++;
		}
		if(ch[i]=='')
		{
			count[47]++;
		}
		if(ch[i]=='')
		{
			count[48]++;
		}
		if(ch[i]=='')
		{
			count[49]++;
		}
		if(ch[i]=='')
		{
			count[50]++;
		}
		if(ch[i]=='')
		{
			count[51]++;
		}
	}
	for(i=0;i<52;i++)
	{
		sum+=count[i];
	}
	if(sum==0)
	{
		printf("");
	}
	else
	{
		for(i=0;i<52;i++)
		{
			if(count[i]>0)
			{
				printf("",zimu[i],count[i]);
			}
		}
	}
	return 0;
}

1000210
main()
{
	int a,b,c,k,t,l,s;
	scanf ("",&a,&b,&c);
    l=(a-1)/4+(a-1)/400-(a-1)/100;
	t=l*2+(a-l-1);
if ((a%4==0&&a%100!=0)||(a%400==0))
    {
		switch (b)
		{
			   case 1:
				  {
					  k=0;
					  break;
				  }
		      case 2:
				  {
					  k=31;
					  break;
				  }
			  case 3:
				  {
					  k=60;
					  break;
				  }
			  case 4:
				  {
					  k=91;
					  break;
				  }
			  case 5:
				  {
					  k=121;
					  break;
				  }
			   case 6:
				  {
					  k=152;
					  break;
				  }
			   case 7:
				  {
					  k=182;
					  break;
				  }
                case 8:
				  {
					  k=213;
					  break;
				  }
                case 9:
				  {
					  k=244;
					  break;
				  }
                case 10:
				  {
					  k=274;
					  break;
				  }
                 case 11:
				  {
					  k=305;
					  break;
				  }
                 case 12:
				  {
					  k=335;
					  break;
				  }
                
		}
	}
	else
    {
		switch (b)
		{
			   case 1:
				  {
					  k=0;
					  break;
				  }
		      case 2:
				  {
					  k=31;
					  break;
				  }
			  case 3:
				  {
					  k=59;
					  break;
				  }
			  case 4:
				  {
					  k=90;
					  break;
				  }
			  case 5:
				  {
					  k=120;
					  break;
				  }
			   case 6:
				  {
					  k=151;
					  break;
				  }
			   case 7:
				  {
					  k=181;
					  break;
				  }
                case 8:
				  {
					  k=212;
					  break;
				  }
                case 9:
				  {
					  k=243;
					  break;
				  }
                case 10:
				  {
					  k=273;
					  break;
				  }
                 case 11:
				  {
					  k=304;
					  break;
				  }
                 case 12:
				  {
					  k=334;
					  break;
				  }
                
		}
	}
	t=t+k+c;
    s=t%7;

	if (s==0)
		printf("");
if (s==1)
		printf("");
if (s==2)
		printf("");
if (s==3)
		printf("");
if (s==4)
		printf("");
if (s==5)
		printf("");
if (s==6)
		printf("");

	return 0;
}


1000211
main()
{
    int n,i,j,k,a[100][100][100],minh,minl,sum[100]={0};
    minhang(int n,int k,int a[100][100]),minlie(int n,int k,int a[100][100]);
    guilin(int n,int a[100][100]);
    scanf("",&n);
    for(i=0;i<n;i++)
    {
                    for(j=0;j<n;j++)
                    {
                                    for(k=0;k<n;k++)
                                    {
                                                    scanf("",&a[i][j][k]);
                                    }
                    }
    }
    for(i=0;i<n;i++)
    {
                    printf("",guilin(n,a[i]));
    }
    return 0;
}

guilin(int n,int a[100][100])
{
    int i,j,k,sum=0,minh,minl;
    if(n==1) return 0;
    else 
    {
         for(j=0;j<n;j++)
         {
                         minh=minhang(n,j,a);
                         for(k=0;k<n;k++) a[j][k]-=minh;
         }
         for(j=0;j<n;j++)
         {
                         minl=minlie(n,j,a);
                         for(k=0;k<n;k++) a[k][j]-=minl;
         }
         sum+=a[1][1];
         for(j=0;j<n;j++)
         {
                         for(k=0;k<n;k++)
                         {
                                         if(j>1&&k>1) a[j-1][k-1]=a[j][k];
                                         if(j>1&&k==0) a[j-1][k]=a[j][k];
                                         if(j==0&&k>1) a[j][k-1]=a[j][k];
                                         else a[j][k]=a[j][k];
                         }
         }
         sum+=guilin(n-1,a);
         return (sum);
    }
}

minhang(int n,int k,int a[100][100])
{
            int min,i;
            min=a[k][0];
            for(i=0;i<n;i++)
            {
                            if(a[k][i]<min) min=a[k][i];
            }
            return (min);
}

minlie(int n,int k,int a[100][100])
{
           int min,i;
           min=a[0][k];
           for(i=0;i<n;i++)
           {
                           if(a[i][k]<min) min=a[i][k];
           }
           return (min);
}

1000212
main()
{
   int a[6],flag[6],i,count;                                               
   
  for(a[5]=4;a[5]<=5;a[5]++)
  {
      for(a[1]=1;a[1]<=5;a[1]++)
	  {
	      if(a[1]==a[5])continue;
		  else
		  {
              for(a[3]=1;a[3]<=5;a[3]++)
			  {
			       if(a[3]==a[5]||a[3]==a[1])continue;
				   else
				   {
				        for(a[4]=1;a[4]<=5;a[4]++)
						{
						     if(a[4]==a[3]||a[4]==a[5]||a[4]==a[1])continue;
							 else
							 {
							      a[2]=15-a[1]-a[5]-a[3]-a[4];
								  flag[1]=2-a[5];
                                   flag[2]=3-a[2];
                                 flag[3]=6-a[1];
                                   flag[4]=(a[3]>1);
                                  flag[5]=2-a[4];
								  count=1;                                       
								  for(i=1;i<=5;i++)
								  {
									  if(a[i]==1||a[i]==2)
									  {
									     if(flag[i]!=1)
											 count=0;
										 
									  }
									  else
									  {
									      if(flag[i]==1)
											  count=0;
									  }
                                  }
								  if(count==1)
								  {
									  for(i=1;i<=4;i++)
	                                    cout<<a[i]<<'';
									  cout<<a[5];
								  }
								  
							 }
						}
				   }
			  }
		  }
	  }
  }
  a[5]=1;
  for(a[1]=2;a[1]<=5;a[1]++)
	  {
              for(a[3]=2;a[3]<=5;a[3]++)
			  {
			       if(a[3]==a[1])continue;
				   else
				   {
				        for(a[4]=2;a[4]<=5;a[4]++)
						{
						     if(a[4]==a[3]||a[4]==a[1])continue;
							 else
							 {
							      a[2]=15-a[1]-a[5]-a[3]-a[4];
								  flag[1]=2-a[5];

   flag[2]=3-a[2];
   flag[3]=6-a[1];
   flag[4]=(a[3]>1);
   flag[5]=2-a[4];
								  count=1;
								  for(i=1;i<=5;i++)
								  {
									  if(a[i]==1||a[i]==2)
									  {
									     if(flag[i]!=1)
											 count=0;
										 
									  }
									  else
									  {
									      if(flag[i]==1)
											  count=0;
									  }
                                  }
								  if(count==1)
								  {
									  for(i=1;i<=4;i++)
	                                    cout<<a[i]<<'';
									  cout<<a[5];
								  }
							 }
						}
				   }
			  }
		  
	  
  }
  
  return 0;
}

1000213
main()
{
	int n, i, j;
	cin >> n;
	g_a = n;
	while (n--)
	{
		for (i = 1; i <= g_a; i++)		
			for (j = 1; j <= g_a; j++)
				cin >> g_Matrix[i][j];
		cout << Operation(g_a) << endl;	
	}
	return 0;
}

1000214
main(int argc, char* argv[])
{
	int n,i,year,month1,month2,a,b;
	scanf("",&n);
	
	for(i=0;i<n;i++)
	{
		scanf("",&year,&month1,&month2);
		if(year%4==0 && year%100!=0 || year%400==0)
		{
			if(month1==1)
			{
				a=1;
			}
			if(month1==2)
			{
				a=32;
			}
			if(month1==3)
			{
				a=61;
			}
			if(month1==4)
			{
				a=92;
			}
            if(month1==5)
			{
				a=122;
			}
            if(month1==6)
			{
				a=153;
			}
			if(month1==7)
			{
				a=183;
			}
			if(month1==8)
			{
				a=214;
			}
			if(month1==9)
			{
				a=245;
			}
			if(month1==10)
			{
				a=275;
			}
			if(month1==11)
			{
				a=306;
			}
			if(month1==12)
			{
				a=336;
			}
			if (month2==1)
			{
				b=1;
			}
			if(month2==2)
			{
				b=32;
			}
			if(month2==3)
			{
				b=61;
			}
			if(month2==4)
			{
				b=92;
			}
            if(month2==5)
			{
				b=122;
			}
            if(month2==6)
			{
				b=153;
			}
			if(month2==7)
			{
				b=183;
			}
			if(month2==8)
			{
				b=214;
			}
			if(month2==9)
			{
				b=245;
			}
			if(month2==10)
			{
				b=275;
			}
			if(month2==11)
			{
				b=306;
			}
			if(month2==12)
			{
				b=336;
			}
		
			if((a-b)%7==0)
			{
				printf("");
			}
			else
			{
				printf("");
			}
		}
		else
		{
			if(month1==1)
			{
				a=1;
			}
			if(month1==2)
			{
				a=32;
			}
			if(month1==3)
			{
				a=60;
			}
			if(month1==4)
			{
				a=91;
			}
            if(month1==5)
			{
				a=121;
			}
            if(month1==6)
			{
				a=152;
			}
			if(month1==7)
			{
				a=182;
			}
			if(month1==8)
			{
				a=213;
			}
			if(month1==9)
			{
				a=244;
			}
			if(month1==10)
			{
				a=274;
			}
			if(month1==11)
			{
				a=305;
			}
			if(month1==12)
			{
				a=335;
			}
			if(month2==1)
			{
				b=1;
			}
			if(month2==2)
			{
				b=32;
			}
			if(month2==3)
			{
				b=60;
			}
			if(month2==4)
			{ 
				b=91;
			}
            if(month2==5)
			{
				b=121;
			}
            if(month2==6)
			{
				b=152;
			}
			if(month2==7)
			{
				b=182;
			}
			if(month2==8)
			{
				b=213;
			}
			if(month2==9)
			{
				b=244;
			}
			if(month2==10)
			{
				b=274;
			}
			if(month2==11)
			{
				b=305;
			}
			if(month2==12)
			{
				b=335;
			}
			if((a-b)%7==0)
			{
				printf("");
			}
			else
			{
				printf("");
			}
		}
	}	
	 return 0;
}

 
 
 


1000215
main()
{
    int a[100][100],i,j,k,n;
    int rowMin,colMin;
    int x;
    int first;
    int sum;
    int flag;

    scanf("",&n);
    for(k=0;k<n;k++)
    {
        
        for(i=0;i<n;i++)
        {
            for(j=0;j<n;j++)
            {
                scanf("",&a[i][j]);
            }
        }
        
        
        
        sum=0;
        
        for(x=n;x>1;x--)
        {
            
            for(i=0;i<x;i++)
            {
                first=1;
                flag=0;
                for(j=0;j<x;j++)
                {
                    if(a[i][j]>0)
                    {
                        if(first==1)  {rowMin=a[i][j];   first=0;}
                        if(a[i][j]<rowMin)    rowMin=a[i][j];
                    }
                    else
                    {
                        flag=1;
                        break;
                    }
                }
                if(flag==0)
                {
                    for(j=0;j<x;j++)
                    {
                        if(a[i][j]>0)  a[i][j]=a[i][j]-rowMin;
                    }
                }

            }
            
            for(j=0;j<x;j++)
            {
                first=1;
                flag=0;
                for(i=0;i<x;i++)
                {
                    if(a[i][j]>0)
                    {
                        if(first==1)  {colMin=a[i][j];   first=0;}
                        if(a[i][j]<colMin)    colMin=a[i][j];
                    }
                    else
                    {
                        flag=1;
                        break;
                    }
                }
                if(flag==0)
                {
                    for(i=0;i<x;i++)
                    {
                        if(a[i][j]>0)  a[i][j]=a[i][j]-colMin;
                    }
                }
            }
            
            
            
            sum=sum+a[1][1];
            
            i=0;
            for(j=2;j<x;j++)
                a[i][j-1]=a[i][j];
            j=0;
            for(i=2;i<x;i++)
                a[i-1][j]=a[i][j];
            for(i=2;i<x;i++)
            {
                for(j=2;j<x;j++)
                {
                    a[i-1][j-1]=a[i][j];
                }
            }
            
            
            
        }
        printf("",sum);
    }
	return 0;
}


1000216
main()
{
	int n,i,year[200],mon1[200],mon2[200];
	scanf("",&n);
	for(i=1;i<=n;i++)
	{
		scanf("",&year[i],&mon1[i],&mon2[i]);
	}
	
	for(i=1;i<=n;i++)
	{
		if( (year[i]%100!=0) && (year[i]%4==0) || year[i]%400==0  )
		{
			
		if(mon1[i]==1) { mon1[i]=1; }
		if(mon1[i]==2) { mon1[i]=32; }
        if(mon1[i]==3) { mon1[i]=61; }
        if(mon1[i]==4) { mon1[i]=92; }
        if(mon1[i]==5) { mon1[i]=122; }
        if(mon1[i]==6) { mon1[i]=153; }
        if(mon1[i]==7) { mon1[i]=183; }
        if(mon1[i]==8) { mon1[i]=214; }
        if(mon1[i]==9) { mon1[i]=245; }
        if(mon1[i]==10) { mon1[i]=275; }
        if(mon1[i]==11) { mon1[i]=306; }
        if(mon1[i]==12) { mon1[i]=336; }
        if(mon2[i]==1) { mon2[i]=1; }
		if(mon2[i]==2) { mon2[i]=32; }
        if(mon2[i]==3) { mon2[i]=61; }
        if(mon2[i]==4) { mon2[i]=92; }
        if(mon2[i]==5) { mon2[i]=122; }
        if(mon2[i]==6) { mon2[i]=153; }
        if(mon2[i]==7) { mon2[i]=183; }
        if(mon2[i]==8) { mon2[i]=214; }
        if(mon2[i]==9) { mon2[i]=245; }
        if(mon2[i]==10) { mon2[i]=275; }
        if(mon2[i]==11) { mon2[i]=306; }
        if(mon2[i]==12) { mon2[i]=336; }
        if(((mon2[i]-mon1[i])%7==0) || ((mon1[i]-mon2[i])%7==0)) { printf(""); }
		else { printf("");}
		}
	    else
		{
        if(mon1[i]==1) { mon1[i]=1; }
		if(mon1[i]==2) { mon1[i]=32; }
        if(mon1[i]==3) { mon1[i]=60; }
        if(mon1[i]==4) { mon1[i]=91; }
        if(mon1[i]==5) { mon1[i]=121; }
        if(mon1[i]==6) { mon1[i]=152; }
        if(mon1[i]==7) { mon1[i]=182; }
        if(mon1[i]==8) { mon1[i]=213; }
        if(mon1[i]==9) { mon1[i]=244; }
        if(mon1[i]==10) { mon1[i]=274; }
        if(mon1[i]==11) { mon1[i]=305; }
        if(mon1[i]==12) { mon1[i]=335; }
        if(mon2[i]==1) { mon2[i]=1; }
		if(mon2[i]==2) { mon2[i]=32; }
        if(mon2[i]==3) { mon2[i]=60; }
        if(mon2[i]==4) { mon2[i]=91; }
        if(mon2[i]==5) { mon2[i]=121; }
        if(mon2[i]==6) { mon2[i]=152; }
        if(mon2[i]==7) { mon2[i]=182; }
        if(mon2[i]==8) { mon2[i]=213; }
        if(mon2[i]==9) { mon2[i]=244; }
        if(mon2[i]==10) { mon2[i]=274; }
        if(mon2[i]==11) { mon2[i]=305; }
        if(mon2[i]==12) { mon2[i]=335; }
        if(((mon2[i]-mon1[i])%7==0)||((mon1[i]-mon2[i])%7==0)){	printf(""); }
		else { printf("");}
		}
	}
	return 0;
}

1000217
main()
{
    int N,a[501],i,k,b[501],c,m;
    scanf("",&N);
    for(i=1,k=1;i<=N;i++)
    {
                     scanf("",&a[i]);
                     if((a[i])%2==1)
                     {b[k]=a[i]; k=k+1;}            
                     }
                     for(i=2;i<k;i++)
                     {
                                     if(b[i]<=b[1])
                                     {
                                                    c=b[1];
                                                    b[1]=b[i];
                                                    b[i]=c;
                                     }}
                                     printf("",b[1]);
                                     for(i=2;i<(k-1);i++)
                                     {
                                                     for(m=i+1;m<k;m++)
                                                     {
                                                                       if(b[m]<=b[i])
                                                                       {
                                                                                     c=b[i];
                                                                                     b[i]=b[m];
                                                                                     b[m]=c;
                                                                                     }}
                                                                                     }
                                                                                     for(i=2;i<k;i++)
                                                                                     {
                                                                                     printf("",b[i]);
                                                                                     }
                                                                                                                                                                    return 0;
                                                                                     }

1000218
cal(int rank,int num)
{
	if (rank!=1)
	{
		
		
		
		
		int rowmin[rank];
		int columnmin[rank];
		for (int i=0;i<=rank-1;++i)
		{
			for (int j=0;j<=rank-1;++j)
			{
				if (j==0)
					rowmin[i]=matrix[num][i][j];
				else
					rowmin[i]=min(rowmin[i],matrix[num][i][j]);
			}
			if (rowmin[i]!=0)
				for (int j=0;j<=rank-1;++j)
					matrix[num][i][j]=matrix[num][i][j]-rowmin[i];
		}
		for (int i=0;i<=rank-1;++i)
		{
			for (int j=0;j<=rank-1;++j)
			{
				if (j==0)
					columnmin[i]=matrix[num][j][i];
				else
					columnmin[i]=min(columnmin[i],matrix[num][j][i]);
			}
			if (columnmin[i]!=0)
				for (int j=0;j<=rank-1;++j)
					matrix[num][j][i]=matrix[num][j][i]-columnmin[i];
		}
		countsum+=matrix[num][1][1];
		for (int i=2;i<=rank-1;++i)
			for (int j=0;j<=rank-1;++j)
				matrix[num][j][i-1]=matrix[num][j][i];
		for (int i=2;i<=rank-1;++i)
			for (int j=0;j<=rank-1;++j)
				matrix[num][i-1][j]=matrix[num][i][j];
		cal(rank-1,num);
	}
}
main() {
	int n;
	cin >>n;
	for (int i=0;i<=n-1;++i)
		for (int j=0;j<=n-1;++j)
			for (int k=0;k<=n-1;++k)
				cin >>matrix[i][j][k];
	for (int i=0;i<=n-1;++i)
	{
		countsum=0;
		cal(n,i);
		cout <<countsum<<endl;
	}
	return 0;
}


1000219
main(int argc, char* argv[])
{
	int y,m,d,i,j,k,n,y1;
	int a=-1;
	int mo,z;
	scanf("",&y,&m,&d);
	y1=(y%400);
	if(y1!=0){
    for(i=0;i<y1;i++){
		if(((i%4==0)&&(i%100!=0))||(i%400==0)){
			a++;
		}else a=a;
	}
	j=(366*a);
	k=365*(y1-a-1);
	if(((y1%4==0)&&(y1%100!=0))||(y1%400==0)){
		switch(m){
		case 1:mo=d;
			break;
		case 2:mo=31+d;
			break;
		case 3:mo=60+d;
			break;
		case 4:mo=91+d;
			break;
		case 5:mo=121+d;
			break;
		case 6:mo=152+d;
			break;
		case 7:mo=182+d;
			break;
		case 8:mo=213+d;
			break;
		case 9:mo=244+d;
			break;
		case 10:mo=274+d;
			break;
		case 11:mo=305+d;
			break;
		case 12:mo=335+d;
			break;
		}
		}else{	
			switch(m){
		case 1:mo=d;
			break;
		case 2:mo=31+d;
			break;
		case 3:mo=59+d;
			break;
		case 4:mo=90+d;
			break;
		case 5:mo=120+d;
			break;
		case 6:mo=151+d;
			break;
		case 7:mo=181+d;
			break;
		case 8:mo=212+d;
			break;
		case 9:mo=243+d;
			break;
		case 10:mo=273+d;
			break;
		case 11:mo=304+d;
			break;
		case 12:mo=334+d;
			break;
			}
		}
		n=mo+j+k-1;
		z=(n%7);
		switch(z){
		case 0:printf("");
			break;
		case 1:printf("");
			break;
		case 2:printf("");
			break;
		case 3:printf("");
			break;
		case 4:printf("");
			break;
		case 5:printf("");
			break;
		case 6:printf("");
			break;
		}
	}else{
        switch(m){
		case 1:mo=d;
			break;
		case 2:mo=31+d;
			break;
		case 3:mo=60+d;
			break;
		case 4:mo=91+d;
			break;
		case 5:mo=121+d;
			break;
		case 6:mo=152+d;
			break;
		case 7:mo=182+d;
			break;
		case 8:mo=213+d;
			break;
		case 9:mo=244+d;
			break;
		case 10:mo=274+d;
			break;
		case 11:mo=305+d;
			break;
		case 12:mo=335+d;
			break;
		}
		n=mo+4;
		z=(n%7);
        switch(z){
		case 0:printf("");
			break;
		case 1:printf("");
			break;
		case 2:printf("");
			break;
		case 3:printf("");
			break;
		case 4:printf("");
			break;
		case 5:printf("");
			break;
		case 6:printf("");
			break;
		}
	}
	return 0;
}



1000220
main(){
    char a[100],b[100],c[200];
    int i,j=0,k=0,z=0,p,q,r,m,h=0,v;
    int t[100],n[100];
    char u,w;
    gets(c);
    scanf("",a);
    scanf("",b);
    p=strlen(a);
    q=strlen(b);
    r=strlen(c);
    u=a[0];
    for(i=0;i<r;i++){
                     w=c[i];
                     if(u==w){
                              if(i==0||c[i-1]==''){
                              t[j]=i;
                              j+=1;
                              }
                              else {
                                   k+=1;
                                   }
                                   }
                     else {
                           k+=1;
                           }
                           }
    if(k==r){
             printf("",c);
             }
    else {
         for(k=0;k<j;k++){
          for(i=1;i<p;i++){
                           m=t[k];
                           u=a[i];
                           w=c[m+i];
                           if (u!=w){
                                     z+=1;
                                     break;
                                     }
                           }
          if (i==p){
                    n[h]=t[k];
                    h+=1;
                    }
                    }
          if(z==j){
                   printf("",c);
                   }
          else {
                m=n[0];
                if (m==0){
                          for(i=0;i<h-1;i++){
                                           for(k=0;k<q;k++){
                                                              printf("",b[k]);
                                                            }
                                           v=n[i+1];
                                           for(k=p+n[i];k<v;k++){
                                                                 printf("",c[k]);
                                                                 }
                                                                 }
                          for(i=0;i<q;i++){
                                            printf("",b[i]);
                                            }
                          for(i=p+n[h-1];i<r;i++){
                                                 printf("",c[i]);
                                                 }
                                                 }
                  else {
                         for(i=0;i<n[0];i++){
                                          printf("",c[i]);
                                          }
                         for(i=0;i<h-1;i++){
                                           for(k=0;k<q;k++){
                                                              printf("",b[k]);
                                                            }
                                           v=n[i+1];
                                           for(k=p+n[i];k<v;k++){
                                                                 printf("",c[k]);
                                                                 }
                                                                 }
                          for(i=0;i<q;i++){
                                            printf("",b[i]);
                                            }
                          for(i=p+n[h-1];i<r;i++){
                                                 printf("",c[i]);
                                                 }
                                                 }
                                                 }
                                                 }
         return 0;
         }


1000221
main()
{
	long int a,b,i,m,j=0,c=0,d=0,k=0;
	char s[100];
	scanf("",&a,s,&b);
	char x[100];
	if(s[0]!=0)
	{
        for(i=0;s[i]!='\0';i++)
		{
		    if(s[i]=='')
			s[i]=9;
		if(s[i]=='')
			s[i]=8;
		if(s[i]=='')
			s[i]=7;
		if(s[i]=='')
			s[i]=6;
		if(s[i]=='')
			s[i]=5;
		if(s[i]=='')
			s[i]=4;
		if(s[i]=='')
			s[i]=3;
		if(s[i]=='')
			s[i]=2;
		if(s[i]=='')
			s[i]=1;
		if(s[i]=='')
			s[i]=0;
		if(s[i]==''||s[i]=='')
			s[i]=10;
		if(s[i]==''||s[i]=='')
			s[i]=11;
		if(s[i]==''||s[i]=='')
			s[i]=12;
		if(s[i]==''||s[i]=='')
			s[i]=13;
		if(s[i]==''||s[i]=='')
			s[i]=14;
		if(s[i]==''||s[i]=='')
			s[i]=15;
		if(s[i]==''||s[i]=='')
			s[i]=16;
		if(s[i]==''||s[i]=='')
			s[i]=17;
		if(s[i]==''||s[i]=='')
			s[i]=18;
		if(s[i]==''||s[i]=='')
			s[i]=19;
		if(s[i]==''||s[i]=='')
			s[i]=20;
		if(s[i]==''||s[i]=='')
			s[i]=21;
		if(s[i]==''||s[i]=='')
			s[i]=22;
		if(s[i]==''||s[i]=='')
			s[i]=23;
		if(s[i]==''||s[i]=='')
			s[i]=24;
		if(s[i]==''||s[i]=='')
			s[i]=25;
		if(s[i]==''||s[i]=='')
			s[i]=26;
		if(s[i]==''||s[i]=='')
			s[i]=27;
		if(s[i]==''||s[i]=='')
			s[i]=28;
		if(s[i]==''||s[i]=='')
			s[i]=29;
		if(s[i]==''||s[i]=='')
			s[i]=30;
		if(s[i]==''||s[i]=='')
			s[i]=31;
		if(s[i]==''||s[i]=='')
			s[i]=32;
		if(s[i]==''||s[i]=='')
			s[i]=33;
		if(s[i]==''||s[i]=='')
			s[i]=34;
		if(s[i]==''||s[i]=='')
			s[i]=35;
		j++;
	}
	for(i=0;i<j;i++)
	{
		m=pow(a,j-i-1);
		c=s[i]*m;
		d=d+c;
	}
	for(i=0;d!=0;i++)
	{
		x[i]=d%b;
		d=d/b;
		k++;
	}
	for(i=0;i<k;i++)
	{
        if(x[i]==35)
			x[i]='';
		if(x[i]==34)
			x[i]='';
		if(x[i]==33)
			x[i]='';
		if(x[i]==32)
			x[i]='';
		if(x[i]==31)
			x[i]='';
		if(x[i]==30)
			x[i]='';
		if(x[i]==29)
			x[i]='';
		if(x[i]==28)
			x[i]='';
		if(x[i]==27)
			x[i]='';
		if(x[i]==26)
			x[i]='';
		if(x[i]==25)
			x[i]='';
		if(x[i]==24)
			x[i]='';
		if(x[i]==23)
			x[i]='';
		if(x[i]==22)
			x[i]='';
		if(x[i]==21)
			x[i]='';
		if(x[i]==20)
			x[i]='';
		if(x[i]==19)
			x[i]='';
		if(x[i]==18)
			x[i]='';
		if(x[i]==17)
			x[i]='';
		if(x[i]==16)
			x[i]='';
		if(x[i]==15)
			x[i]='';
		if(x[i]==14)
			x[i]='';
		if(x[i]==13)
			x[i]='';
		if(x[i]==12)
			x[i]='';
		if(x[i]==11)
			x[i]='';
		if(x[i]==10)
			x[i]='';
		if(x[i]==9)
			x[i]='';
		if(x[i]==8)
			x[i]='';
		if(x[i]==7)
			x[i]='';
		if(x[i]==6)
			x[i]='';
		if(x[i]==5)
			x[i]='';
		if(x[i]==4)
			x[i]='';
		if(x[i]==3)
			x[i]='';
		if(x[i]==2)
			x[i]='';
		if(x[i]==1)
			x[i]='';
		if(x[i]==0)
			x[i]='';
	}
	for(i=k-1;i>=0;i--)
	{
		printf("",x[i]);
	}
	}
	if(s[0]==0)
		printf("");
	return 0;
}


1000222
main()
{
	int A,B,C,D,E,y,x1,x2,x3,x4,x;
	scanf("",&x1);
	scanf("",&x2);
    scanf("",&x3);
	scanf("",&x4);
	x=x1;
	if(x<10)
		y=x;
	else
	{
		if(x<100)
		{A=x/10;
			B=x%10;
			y=B*10+A;
		
		}
		else
		{
			if(x<1000)
			{A=x/100;
				B=x%100/10;
				C=x%10;
				y=C*100+B*10+A;}
			else
			{
				if(x<10000)
				{	A=x/1000;
				    B=x%1000/100;
					C=x%100/10;
					D=x%10;
					y=D*1000+C*100+B*10+A;}
				else
                    A=x/10000;
				    B=x%10000/1000;
					C=x%1000/100;
					D=x%100/10;
					E=x%10;
					y=E*10000+D*1000+C*100+B*10+A;
			}
		}
	}
printf("",y);
	x=x2;
if(x<10)
		y=x;
	else
	{
		if(x<100)
		{A=x/10;
			B=x%10;
			y=B*10+A;
		
		}
		else
		{
			if(x<1000)
			{A=x/100;
				B=x%100/10;
				C=x%10;
				y=C*100+B*10+A;}
			else
			{
				if(x<10000)
				{	A=x/1000;
				    B=x%1000/100;
					C=x%100/10;
					D=x%10;
					y=D*1000+C*100+B*10+A;}
				else
                    A=x/10000;
				    B=x%10000/1000;
					C=x%1000/100;
					D=x%100/10;
					E=x%10;
					y=E*10000+D*1000+C*100+B*10+A;
			}
		}
	}
printf("",y);
x=x3;
if(x<10)
		y=x;
	else
	{
		if(x<100)
		{A=x/10;
			B=x%10;
			y=B*10+A;
		
		}
		else
		{
			if(x<1000)
			{A=x/100;
				B=x%100/10;
				C=x%10;
				y=C*100+B*10+A;}
			else
			{
				if(x<10000)
				{	A=x/1000;
				    B=x%1000/100;
					C=x%100/10;
					D=x%10;
					y=D*1000+C*100+B*10+A;}
				else
                    A=x/10000;
				    B=x%10000/1000;
					C=x%1000/100;
					D=x%100/10;
					E=x%10;
					y=E*10000+D*1000+C*100+B*10+A;
			}
		}
	}
printf("",y);
 x=x4;
if(x<10)
		y=x;
	else
	{
		if(x<100)
		{A=x/10;
			B=x%10;
			y=B*10+A;
		
		}
		else
		{
			if(x<1000)
			{A=x/100;
				B=x%100/10;
				C=x%10;
				y=C*100+B*10+A;}
			else
			{
				if(x<10000)
				{	A=x/1000;
				    B=x%1000/100;
					C=x%100/10;
					D=x%10;
					y=D*1000+C*100+B*10+A;}
				else
                    A=x/10000;
				    B=x%10000/1000;
					C=x%1000/100;
					D=x%100/10;
					E=x%10;
					y=E*10000+D*1000+C*100+B*10+A;
			}
		}
	}
printf("",y);

	return 0;}

1000223
main(){
    int n;
    scanf("",&n);
    int year[200],month1[200],month2[200],chaju[200]={0,0,0,0};
    int i,e,k;
    for(i=0;i<n;i++){
                     scanf("",&year[i],&month1[i],&month2[i]);
                     if(month1[i]>month2[i]){
                                             e=month1[i];
                                             month1[i]=month2[i];
                                             month2[i]=e;
                                             }
                     
                     if(isRunNian(year[i])){
                                      for(k=month1[i];k<month2[i];k++){
                                                                       if(k==1||k==3||k==5||k==7||k==8||k==10||k==12){
                                                                                                                      chaju[i]+=31;
                                                                                                                      }
                                                                       if(k==2){
                                                                                chaju[i]+=29;
                                                                                }
                                                                       if(k==4||k==6||k==9||k==11){
                                                                                                   chaju[i]+=30;
                                                                                                   }
                                                                         }
                                                                         }
                                                                                                   else  {
                                       for(k=month1[i];k<month2[i];k++){
                                                                       if(k==1||k==3||k==5||k==7||k==8||k==10||k==12){
                                                                                                                      chaju[i]+=31;
                                                                                                                      }
                                                                       if(k==2){
                                                                                chaju[i]+=28;
                                                                                }
                                                                       if(k==4||k==6||k==9||k==11){
                                                                                                   chaju[i]+=30;
                                                                                                   }
                                                                       }
                                                                       }
                     if(chaju[i]%7==0){
                                       printf("");
                                       }
                     else{
                          printf("");
                          }
    }
                                                                                                                      
                                                                                              
                                            
                                            
  
                   
                     return 0;
                     }
                     
                     

isRunNian(int year){
	int result;
	if(year%400 == 0 ||(year%4==0 && year%100!=0)){
		result = 1;
	} else{
		result = 0;
	}
      return result;	
}


1000224
juli(double m, double n, double l){
    double t;
    t= m*m+n*n+l*l;
    t=sqrt(t);
    return t;
}
main(){
    int n,i,j,m;
    scanf("",&n);
    double x[11];
    double y[11];
    double z[11];
    double k[56];
    
    double jiawei1[56];
    double jiawei2[56];
    double jiawei3[56];
    
    double jianwei1[56];
    double jianwei2[56];
    double jianwei3[56];
    double tran;
    
    for(i=1;i<n+1;i++){
        scanf("",&x[i],&y[i],&z[i]);
    }
    m=1;
    for(i=1;i<1+n;i++){
        for(j=i+1;j<n+1;j++){
            k[m]= juli(x[i]-x[j],y[i]-y[j],z[i]-z[j]);
            jiawei1[m]=x[i];
            jiawei2[m]=y[i];
            jiawei3[m]=z[i];
            jianwei1[m]=x[j];
            jianwei2[m]=y[j];
            jianwei3[m]=z[j];
            m=m+1;
        }
    }

    for(i=1;i<m;i++){
        for(j=i;j<m;j++){
           
            if(k[i]<k[j]){
                tran=k[i];
                k[i]=k[j];
                k[j]=tran;
                
                tran=jiawei1[i];
                jiawei1[i]=jiawei1[j];
                jiawei1[j]=tran;
                
                tran=jiawei2[i];
                jiawei2[i]=jiawei2[j];
                jiawei2[j]=tran;
                
                tran=jiawei3[i];
                jiawei3[i]=jiawei3[j];
                jiawei3[j]=tran;
                
                tran=jianwei1[i];
                jianwei1[i]=jianwei1[j];
                jianwei1[j]=tran;
                
                tran=jianwei2[i];
                jianwei2[i]=jianwei2[j];
                jianwei2[j]=tran;
                
                tran=jianwei3[i];
                jianwei3[i]=jianwei3[j];
                jianwei3[j]=tran;
            }
        }   
        }
        int v=1;
        for(i=1;i<m;i++){
            
            for(j=i;j<m;j++){
                
                if(k[i]==k[j]){
                    
                    for(v=1;v<n+1;v++){
                        
                        if(
                            (jiawei1[i]==x[v]&&jiawei1[j]!=x[v])
                        ||(jiawei1[i]==jiawei1[j]&&jiawei2[i]==y[v]&&jiawei2[j]!=x[v])
                        ||(jiawei1[i]==jiawei1[j]&&jiawei2[i]==jiawei2[j]&&jiawei3[i]==z[v]&&jiawei3[j]!=z[v])
                        ||(jiawei1[i]==jiawei1[j]&&jiawei2[i]==jiawei2[j]&&jiawei3[i]==jiawei3[j]&&jianwei1[i]==x[v]&&jianwei1[j]!=x[v])
                        ||(jiawei1[i]==jiawei1[j]&&jiawei2[i]==jiawei2[j]&&jiawei3[i]==jiawei3[j]&&jianwei1[i]==jianwei1[j]&&jianwei2[i]==y[v]&&jianwei2[j]!=y[v])
                        ||(jiawei1[i]==jiawei1[j]&&jiawei2[i]==jiawei2[j]&&jiawei3[i]==jiawei3[j]&&jianwei1[i]==jianwei1[j]&&jianwei2[i]==jianwei2[j]&&jianwei3[i]==z[v]&&jianwei3[j]!=z[v])
                        ){
                
                tran=jiawei1[i];
                jiawei1[i]=jiawei1[j];
                jiawei1[j]=tran;
                
                tran=jiawei2[i];
                jiawei2[i]=jiawei2[j];
                jiawei2[j]=tran;
                
                tran=jiawei3[i];
                jiawei3[i]=jiawei3[j];
                jiawei3[j]=tran;
                
                tran=jianwei1[i];
                jianwei1[i]=jianwei1[j];
                jianwei1[j]=tran;
                
                tran=jianwei2[i];
                jianwei2[i]=jianwei2[j];
                jianwei2[j]=tran;
                
                tran=jianwei3[i];
                jianwei3[i]=jianwei3[j];
                jianwei3[j]=tran;
                

                        }
                        
                    }
                    
                }
            }
        }
        
        
    
    for(i=1;i<n*(n-1)/2+1;i++){
             printf("",(int)jiawei1[i],(int)jiawei2[i],(int)jiawei3[i],(int)jianwei1[i],(int)jianwei2[i],(int)jianwei3[i],k[i]);
    }
    return 0;  
}







1000225
main()
{                    
 int i,j,k=0,m,n;
 int sum=0;
 scanf("",&n);
 int a[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};
 if(n==7)
 for(i=1;i<=12;i++)
 {
 for(j=1;j<=a[i];j++)
 {
                     if(j==13)
                     {
                              if(n==7||n%7==6)
                              printf("",i);
                              
                     }}
                     sum=sum+a[i];
                     n=sum+13;
                     }
 if(n==6)
 for(i=1;i<=12;i++)
 {
 for(j=1;j<=a[i];j++)
 {
                     if(j==13)
                     {
                              if(n%7==0)
                              printf("",i);
                              
                     }}
                     sum=sum+a[i];
                     n=sum+13;
                     }
 if(n==5)
 for(i=1;i<=12;i++)
 {
 for(j=1;j<=a[i];j++)
 {
                     if(j==13)
                     {
                              if(n%7==1)
                              printf("",i);
                              
                     }}
                     sum=sum+a[i];
                     n=sum+13;
                     }
 if(n==4)
 for(i=1;i<=12;i++)
 {
 for(j=1;j<=a[i];j++)
 {
                     if(j==13)
                     {
                              if(n%7==2)
                              printf("",i);
                              
                     }}
                     sum=sum+a[i];
                     n=sum+13;
                     }
 if(n==3)
 for(i=1;i<=12;i++)
 {
 for(j=1;j<=a[i];j++)
 {
                     if(j==13)
                     {
                              if(n%7==3&&n!=3)
                              printf("",i);
                              
                     }}
                     sum=sum+a[i];
                     n=sum+13;
                     }
 if(n==2)
 for(i=1;i<=12;i++)
 {
 for(j=1;j<=a[i];j++)
 {
                     if(j==13)
                     {
                              if(n%7==4)
                              printf("",i);
                              
                     }}
                     sum=sum+a[i];
                     n=sum+13;
                     }
 if(n==1)
 for(i=1;i<=12;i++)
 {
 for(j=1;j<=a[i];j++)
 {
                     if(j==13)
                     {
                              if(n%7==5)
                              printf("",i);
                              
                     }}
                     sum=sum+a[i];
                     n=sum+13;
                     }
     
}


1000226
main()
{
        int m, n;
        int i, j;
        scanf("", &m, &n);
        for (i = 1; i <= m ; i++)
                for (j = 1; j <= n; j++) {
                        scanf("", &matrix[i][j]);
                }
        transform(m, n);

        return 0;
}

transform(int m, int n)
{
        int total = m * n;
        int index = 0;
        int dir = 0;
        int x = 0, y = 0;
        int times[4] = {0};

        while (index < total) {
                switch(dir) {
                        case 0:
                                x++;y++;
                                while ( y < n - times[1] ) {
                                        printf("", matrix[x][y]);
                                        y++;
                                        index++;
                                }
                                break;
                        case 1:
                                while ( x < m - times[2]) {
                                        printf("", matrix[x][y]);
                                        x++;
                                        index++;
                                }
                                break;
                        case 2:
                                while ( y > times[3] + 1 ) {
                                        printf("", matrix[x][y]);
                                        y--;
                                        index++;
                                }
                                break;
                        case 3:
                                while ( x > times[0] ) {
                                        printf("", matrix[x][y]);
                                        x--;
                                        index++;
                                }
                                break;
                        default:
                                break;
                }
                if (total - index == 1) {
                        if (dir == 3) x++, y++;
                        printf("", matrix[x][y]);
                        index++;
                }
                times[dir]++;
                dir = (dir+1)%4;
        }
}


1000227
main()
{
	char a[300];
	char b[52];
	int i=0,j=0;
	int p,q,t,s;
	scanf("",a);
	while(j<52)
	{
		b[j]=0;
		j++;
	}
	while(a[i]!='\0')
	{
		if (a[i]=='')
			b[0]=b[0]+1;
		if (a[i]=='')
			b[1]=b[1]+1;
		if (a[i]=='')
			b[2]=b[2]+1;
		if (a[i]=='')
			b[3]=b[3]+1;
		if (a[i]=='')
			b[4]=b[4]+1;
		if (a[i]=='')
			b[5]=b[5]+1;
		if (a[i]=='')
			b[6]=b[6]+1;
		if (a[i]=='')
			b[7]=b[7]+1;
		if (a[i]=='')
			b[8]=b[8]+1;
		if (a[i]=='')
			b[9]=b[9]+1;
		if (a[i]=='')
			b[10]=b[10]+1;
		if (a[i]=='')
			b[11]=b[11]+1;
		if (a[i]=='')
			b[12]=b[12]+1;
		if (a[i]=='')
			b[13]=b[13]+1;
		if (a[i]=='')
			b[14]=b[14]+1;
		if (a[i]=='')
			b[15]=b[15]+1;
		if (a[i]=='')
			b[16]=b[16]+1;
		if (a[i]=='')
			b[17]=b[17]+1;
		if (a[i]=='')
			b[18]=b[18]+1;
		if (a[i]=='')
			b[19]=b[19]+1;
		if (a[i]=='')
			b[20]=b[20]+1;
		if (a[i]=='')
			b[21]=b[21]+1;
		if (a[i]=='')
			b[22]=b[22]+1;
		if (a[i]=='')
			b[23]=b[23]+1;
		if (a[i]=='')
			b[24]=b[24]+1;
		if (a[i]=='')
			b[25]=b[25]+1;
		if (a[i]=='')
			b[26]=b[26]+1;
		if (a[i]=='')
			b[27]=b[27]+1;
		if (a[i]=='')
			b[28]=b[28]+1;
		if (a[i]=='')
			b[29]=b[29]+1;
		if (a[i]=='')
			b[30]=b[30]+1;
		if (a[i]=='')
			b[31]=b[31]+1;
		if (a[i]=='')
			b[32]=b[32]+1;
		if (a[i]=='')
			b[33]=b[33]+1;
		if (a[i]=='')
			b[34]=b[34]+1;
		if (a[i]=='')
			b[35]=b[35]+1;
		if (a[i]=='')
			b[36]=b[36]+1;
		if (a[i]=='')
			b[37]=b[37]+1;
		if (a[i]=='')
			b[38]=b[38]+1;
		if (a[i]=='')
			b[39]=b[39]+1;
		if (a[i]=='')
			b[40]=b[40]+1;
		if (a[i]=='')
			b[41]=b[41]+1;
		if (a[i]=='')
			b[42]=b[42]+1;
		if (a[i]=='')
			b[43]=b[43]+1;
		if (a[i]=='')
			b[44]=b[44]+1;
		if (a[i]=='')
			b[45]=b[45]+1;
		if (a[i]=='')
			b[46]=b[46]+1;
		if (a[i]=='')
			b[47]=b[47]+1;
		if (a[i]=='')
			b[48]=b[48]+1;
		if (a[i]=='')
			b[49]=b[49]+1;
		if (a[i]=='')
			b[50]=b[50]+1;
		if (a[i]=='')
			b[51]=b[51]+1;
		i++;
	}
		if (b[26]!=0)
			printf("",b[26]);
		if (b[27]!=0)
			printf("",b[27]);
		if (b[28]!=0)
			printf("",b[28]);
		if (b[29]!=0)
			printf("",b[29]);
		if (b[30]!=0)
			printf("",b[30]);
		if (b[31]!=0)
			printf("",b[31]);
		if (b[32]!=0)
			printf("",b[32]);
		if (b[33]!=0)
			printf("",b[33]);
		if (b[34]!=0)
			printf("",b[34]);
		if (b[35]!=0)
			printf("",b[35]);
		if (b[36]!=0)
			printf("",b[36]);
		if (b[37]!=0)
			printf("",b[37]);
		if (b[38]!=0)
			printf("",b[38]);
		if (b[39]!=0)
			printf("",b[39]);
		if (b[40]!=0)
			printf("",b[40]);
		if (b[41]!=0)
			printf("",b[41]);
		if (b[42]!=0)
			printf("",b[42]);
		if (b[43]!=0)
			printf("",b[43]);
		if (b[44]!=0)
			printf("",b[44]);
		if (b[45]!=0)
			printf("",b[45]);
		if (b[46]!=0)
			printf("",b[46]);
		if (b[47]!=0)
			printf("",b[47]);
		if (b[48]!=0)
			printf("",b[48]);
		if (b[49]!=0)
			printf("",b[49]);
		if (b[50]!=0)
			printf("",b[50]);
		if (b[51]!=0)
			printf("",b[51]);
		if (b[0]!=0)
			printf("",b[0]);
		if (b[1]!=0)
			printf("",b[1]);
		if (b[2]!=0)
			printf("",b[2]);
		if (b[3]!=0)
			printf("",b[3]);
		if (b[4]!=0)
			printf("",b[4]);
		if (b[5]!=0)
			printf("",b[5]);
		if (b[6]!=0)
			printf("",b[6]);
		if (b[7]!=0)
			printf("",b[7]);
		if (b[8]!=0)
			printf("",b[8]);
		if (b[9]!=0)
			printf("",b[9]);
		if (b[10]!=0)
			printf("",b[10]);
		if (b[11]!=0)
			printf("",b[11]);
		if (b[12]!=0)
			printf("",b[12]);
		if (b[13]!=0)
			printf("",b[13]);
		if (b[14]!=0)
			printf("",b[14]);
		if (b[15]!=0)
			printf("",b[15]);
		if (b[16]!=0)
			printf("",b[16]);
		if (b[17]!=0)
			printf("",b[17]);
		if (b[18]!=0)
			printf("",b[18]);
		if (b[19]!=0)
			printf("",b[19]);
		if (b[20]!=0)
			printf("",b[20]);
		if (b[21]!=0)
			printf("",b[21]);
		if (b[22]!=0)
			printf("",b[22]);
		if (b[23]!=0)
			printf("",b[23]);
		if (b[24]!=0)
			printf("",b[24]);
		if (b[25]!=0)
			printf("",b[25]);
		if (b[0]==0&&b[1]==0&&b[2]==0&&b[3]==0&&b[4]==0&&b[5]==0&&b[6]==0&&b[7]==0&&b[8]==0&&b[9]==0&&b[10]==0)
			j=0;
		if (j==0&&b[11]==0&&b[12]==0&&b[13]==0&&b[14]==0&&b[15]==0&&b[16]==0&&b[17]==0&&b[18]==0&&b[19]==0&&b[20]==0)
			q=0;
		if (q==0&&b[21]==0&&b[22]==0&&b[23]==0&&b[24]==0&&b[25]==0&&b[26]==0&&b[27]==0&&b[28]==0&&b[29]==0&&b[30]==0)
			p=0;
		if (p==0&&b[31]==0&&b[32]==0&&b[33]==0&&b[34]==0&&b[35]==0&&b[36]==0&&b[37]==0&&b[38]==0&&b[30]==0&&b[40]==0)
			t=0;
		if (t==0&&b[41]==0&&b[42]==0&&b[43]==0&&b[44]==0&&b[45]==0&&b[46]==0&&b[47]==0&&b[48]==0&&b[49]==0&&b[50]==0)
			s=0;
		if (s==0&&b[51]==0)
			printf("");
}



1000228
main()
{
	int a[100][100],b[100][100],j,q,k,i,n,m,row,col;
	scanf("",&row,&col);
              
	for(i=0;i<row;i++){
		for(j=0;j<col;j++){
         scanf("",&a[i][j]);
		}
	}
	
	
	if(row>=col)
	{
		if(col%2==0){
      k=col/2;
	  for(q=1;q<=k;q++){
			
i=0;
for(j=0;j<col-1;j++)     
printf("",a[i][j]);

j=col-1;
for(i=0;i<row-1;i++)
printf("",a[i][j]);

i=row-1;
for(j=col-1;j>0;j--)     
printf("",a[i][j]);

j=0;
for(i=row-1;i>0;i--)
printf("",a[i][j]); 
	  
	  	  
	  for(i=1,n=0;i<row-1;i++,n++){
		for(j=1,m=0;j<col-1;j++,m++){
         b[n][m]=a[i][j];
		}
	  }
		 for(i=0;i<row;i++){
		for(j=0;j<col;j++){
        a[i][j]=b[i][j];
		}
	}

col=col-2;
row=row-2;
	  }
		}

		else
		{
		
		k=col/2;
		for(q=1;q<=k;q++){
			
i=0;
for(j=0;j<col-1;j++)     
printf("",a[i][j]);

j=col-1;
for(i=0;i<row-1;i++)
printf("",a[i][j]);

i=row-1;
for(j=col-1;j>0;j--)     
printf("",a[i][j]);

j=0;
for(i=row-1;i>0;i--)
printf("",a[i][j]);  
	  
	  	  
	  for(i=1,n=0;i<row-1;i++,n++){
		for(j=1,m=0;j<col-1;j++,m++){
         b[n][m]=a[i][j];
		}
	  }
		 for(i=0;i<row;i++){
		for(j=0;j<col;j++){
        a[i][j]=b[i][j];
		}
	}

col=col-2;
row=row-2;
		}
		for(i=0;i<row;i++)
           printf("",a[i][0]) ;
		}
	}


	else
{
		if(row%2==0){
      k=row/2;
	  for(q=1;q<=k;q++){
			
i=0;
for(j=0;j<col-1;j++)     
printf("",a[i][j]);

j=col-1;
for(i=0;i<row-1;i++)
printf("",a[i][j]);

i=row-1;
for(j=col-1;j>0;j--)     
printf("",a[i][j]);

j=0;
for(i=row-1;i>0;i--)
printf("",a[i][j]); 
	  
	  	  
	  for(i=1,n=0;i<row-1;i++,n++){
		for(j=1,m=0;j<col-1;j++,m++){
         b[n][m]=a[i][j];
		}
	  }
		 for(i=0;i<row;i++){
		for(j=0;j<col;j++){
        a[i][j]=b[i][j];
		}
	}

col=col-2;
row=row-2;
	  }
		}

		else
		{
		
		k=row/2;
		for(q=1;q<=k;q++){
			
i=0;
for(j=0;j<col-1;j++)     
printf("",a[i][j]);

j=col-1;
for(i=0;i<row-1;i++)
printf("",a[i][j]);

i=row-1;
for(j=col-1;j>0;j--)     
printf("",a[i][j]);

j=0;
for(i=row-1;i>0;i--)
printf("",a[i][j]);
	  
	  	  
	  for(i=1,n=0;i<row-1;i++,n++){
		for(j=1,m=0;j<col-1;j++,m++){
         b[n][m]=a[i][j];
		}
	  }
		 for(i=0;i<row;i++){
		for(j=0;j<col;j++){
        a[i][j]=b[i][j];
		}
	}

col=col-2;
row=row-2;
		}
		for(j=0;j<col;j++)
           printf("",a[0][j]) ;
		}
	}
		 
		 
		 return 0;
}




1000229
main()
{
    int m,n,i,j,o;
    scanf("",&m);
    scanf("",&n);
    o=0;
    int a[m+2][n+2];
    for(i=0;i<m+2;i++)
    {
                      for(j=0;j<n+2;j++)
                      {
                                        a[i][j]=-10;
                      }
    }
    for(i=1;i<=m;i++)
    {
                    for(j=1;j<=n;j++)
                    {
                                     scanf("",&a[i][j]);
                    }
    }
    for(i=1;i<=m;i++)
    {
                     for(j=1;j<=n;j++)
                     {
                                      if((a[i][j]>=a[i-1][j])&&(a[i][j]>=a[i][j-1])&&(a[i][j]>=a[i+1][j])&&(a[i][j]>=a[i][j+1]))
                                      {
                                                                                                                                if(o==0)
                                                                                                                                {
                                                                                                                                printf("",(i-1),(j-1));
                                                                                                                                o++;
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                printf("",(i-1),(j-1));
                                                                                                                                o++;
                                                                                                                                }
                                      }
                     }
   }
}

1000230
main()
{
int l,r;
scanf("",&r);
for(l=1;l<=r;l++)
{	max(int,int);
char d[102]={0},e[102]={0},f[102]={0};
signed char a[102]={0},b[102]={0},c[103]={0},t;                   
int m,p=0,i,j,k,x,y,z=0,signa=1,signb=-1;                 

scanf("",d);
for(i=0;i<102;i++)                            
{
a[i]=d[i];
}
if(a[0]=='')
{
signa=-1;
for(i=0;i<101;i++)
a[i]=a[i+1];
}
for(i=0;a[i]!=0;i++);
x=i-1;
for(j=0;j<x;j++,x--)
{
t=a[j];
a[j]=a[x];
a[x]=t;
}                                                               
x=i-1;
for(k=0;k<=x;k++)a[k]-='';                      


scanf("",e);
for(i=0;i<102;i++)                            
{
b[i]=e[i];
}
if(b[0]=='')
{
signb=-1;
for(i=0;i<101;i++)
b[i]=b[i+1];
}
for(i=0;b[i]!=0;i++);
y=i-1;
for(j=0;j<y;j++,y--)
{
t=b[j];
b[j]=b[y];
b[y]=t;
}                                                               
y=i-1;
for(k=0;k<=y;k++)b[k]-='';                      


if(signa==signb)
{
for(i=0;i<=x||i<=y;i++)
{
c[i]=a[i]+b[i]+p;
p=0;
if(c[i]>9)
{
p=1;
c[i]-=10;
}
}
if(p==1){c[i]=1;i++;}
for(k=0;k<i;k++) 
c[k]+='';
for(k=0;k<i-1;k++,i--)
{
t=c[k];
c[k]=c[i-1];
c[i-1]=t;
}
if(signa==-1)printf("");
for(i=0;i<102;i++)                            
{
f[i]=c[i];
}
puts(f);
}
else
{
for(m=max(x,y);(m>=0)&&(z==0);m--)
{
if(a[m]>b[m])z=1;
else {if(a[m]<b[m])z=-1;
else z=0;}
}
if(!z)printf("");
else
{
if(z==-1)for(i=0;i<102;i++)                                
{
t=a[i];
a[i]=b[i];
b[i]=t;
}
for(i=0;i<=max(x,y);i++)
{
c[i]=a[i]-b[i]+p;
p=0;
if(c[i]<0)
{
p=-1;
c[i]+=10;
}
}
for(i-=1;c[i]==0;i--);
for(k=0;k<=i;k++)c[k]+='';
for(k=0;k<i;k++,i--)
{
t=c[k];
c[k]=c[i];
c[i]=t;
}
if(z*signa!=1)printf("");
for(i=0;i<102;i++)                            
{
f[i]=c[i];
}
puts(f);
}
}
}
}
max(int x ,int y)
{
return(x>y?x:y);
}


1000231
if(y%4==0)
        {
                    t[1]=1;
                    t[2]=t[1]+31;
                    t[3]=t[2]+29;
                    t[4]=t[3]+31;
                    t[5]=t[4]+30;
                    t[6]=t[5]+31;
                    t[7]=t[6]+30;
                    t[8]=t[7]+31;
                    t[9]=t[8]+31;
                    t[10]=t[9]+30;
                    t[11]=t[10]+31;
                    t[12]=t[11]+30;
        }
        else {
            t[1]=1;
                    t[2]=t[1]+31;
                    t[3]=t[2]+28;
                    t[4]=t[3]+31;
                    t[5]=t[4]+30;
                    t[6]=t[5]+31;
                    t[7]=t[6]+30;
                    t[8]=t[7]+31;
                    t[9]=t[8]+31;
                    t[10]=t[9]+30;
                    t[11]=t[10]+31;
                    t[12]=t[11]+30;
            }


        if(   (t[a]-t[b]>0&&(t[a]-t[b])%7==0)    ||  (t[a]-t[b]<0&&(t[b]-t[a])%7==0)  )
            printf("");
        printf("");
    }

}


1000232
main()
{
    int i, n;
    int y, m1, m2;
    int d1, d2;
    cin >> n;
    for (i = 1;i <= n;i++)
    {
        cin >> y >> m1 >> m2;
        if (((y % 4 == 0) && (y % 100 != 0)) || (y % 400 == 0))
        {
            switch(m1)
            {
                case 1:
                    d1 = 1;
                    break;
                case 2:
                    d1 = 32;
                    break;
                case 3:
                    d1 = 61;
                    break;
                case 4:
                    d1 = 92;
                    break;
                case 5:
                    d1 = 122;
                    break;
                case 6:
                    d1 = 153;
                    break;
                case 7:
                    d1 = 183;
                    break;
                case 8:
                    d1 = 214;
                    break;
                case 9:
                    d1 = 245;
                    break;
                case 10:
                    d1 = 275;
                    break;
                case 11:
                    d1 = 306;
                    break;
                case 12:
                    d1 = 336;
                    break;
            }
            switch(m2)
            {
                case 1:
                    d2 = 1;
                    break;
                case 2:
                    d2 = 32;
                    break;
                case 3:
                    d2 = 61;
                    break;
                case 4:
                    d2 = 92;
                    break;
                case 5:
                    d2 = 122;
                    break;
                case 6:
                    d2 = 153;
                    break;
                case 7:
                    d2 = 183;
                    break;
                case 8:
                    d2 = 214;
                    break;
                case 9:
                    d2 = 245;
                    break;
                case 10:
                    d2 = 275;
                    break;
                case 11:
                    d2 = 306;
                    break;
                case 12:
                    d2 = 336;
                    break;
            }
            if ((d1 - d2) % 7 == 0) 
            cout << "" << endl;
            else
            cout << "" << endl;
        }
        else
        {
            switch(m1)
            {
                case 1:
                    d1 = 1;
                    break;
                case 2:
                    d1 = 32;
                    break;
                case 3:
                    d1 = 60;
                    break;
                case 4:
                    d1 = 91;
                    break;
                case 5:
                    d1 = 121;
                    break;
                case 6:
                    d1 = 152;
                    break;
                case 7:
                    d1 = 182;
                    break;
                case 8:
                    d1 = 213;
                    break;
                case 9:
                    d1 = 244;
                    break;
                case 10:
                    d1 = 274;
                    break;
                case 11:
                    d1 = 305;
                    break;
                case 12:
                    d1 = 335;
                    break;
            }
            switch(m2)
            {
                case 1:
                    d2 = 1;
                    break;
                case 2:
                    d2 = 32;
                    break;
                case 3:
                    d2 = 60;
                    break;
                case 4:
                    d2 = 91;
                    break;
                case 5:
                    d2 = 121;
                    break;
                case 6:
                    d2 = 152;
                    break;
                case 7:
                    d2 = 182;
                    break;
                case 8:
                    d2 = 213;
                    break;
                case 9:
                    d2 = 244;
                    break;
                case 10:
                    d2 = 274;
                    break;
                case 11:
                    d2 = 305;
                    break;
                case 12:
                    d2 = 335;
                    break;
            }
            if (( d1 - d2) % 7 == 0)
            cout << "" << endl;
            else
            cout << "" << endl;
        }
    }
    return 0;
    
}


1000233
main()
{
	char str[300];
	int i,n,flag=0;
	int a1=0,b1=0,c1=0,d1=0,e1=0,f1=0,g1=0,h1=0,i1=0,j1=0,k1=0,l1=0,m1=0,n1=0,o1=0,p1=0,q1=0,r1=0,s1=0,t1=0,u1=0,v1=0,w1=0,x1=0,y1=0,z1=0;
    int a2=0,b2=0,c2=0,d2=0,e2=0,f2=0,g2=0,h2=0,i2=0,j2=0,k2=0,l2=0,m2=0,n2=0,o2=0,p2=0,q2=0,r2=0,s2=0,t2=0,u2=0,v2=0,w2=0,x2=0,y2=0,z2=0;
	gets(str);
	n=strlen(str);

	for(i=0;i<n;i++){
		if(str[i]>''&&str[i]<''||str[i]>''&&str[i]<'')
			flag++;
	}
	if(flag==0)
		printf("");
	else {
		for(i=0;i<n;i++){
			if(str[i]=='')
				a1++;
			if(str[i]=='')
				b1++;
			if(str[i]=='')
				c1++;
			if(str[i]=='')
				d1++;
			if(str[i]=='')
				e1++;
			if(str[i]=='')
				f1++;
			if(str[i]=='')
				g1++;
			if(str[i]=='')
				h1++;
			if(str[i]=='')
				i1++;
			if(str[i]=='')
				j1++;
			if(str[i]=='')
				k1++;
			if(str[i]=='')
				l1++;
			if(str[i]=='')
				m1++;
			if(str[i]=='')
				n1++;
			if(str[i]=='')
				o1++;
			if(str[i]=='')
				p1++;
			if(str[i]=='')
				q1++;
			if(str[i]=='')
				r1++;
			if(str[i]=='')
				s1++;
			if(str[i]=='')
				t1++;
			if(str[i]=='')
				u1++;
			if(str[i]=='')
				v1++;
			if(str[i]=='')
				w1++;
			if(str[i]=='')
				x1++;
			if(str[i]=='')
				y1++;
			if(str[i]=='')
				z1++;
			if(str[i]=='')
				a2++;
			if(str[i]=='')
				b2++;
			if(str[i]=='')
				c2++;
			if(str[i]=='')
				d2++;
			if(str[i]=='')
				e2++;
			if(str[i]=='')
				f2++;
			if(str[i]=='')
				g2++;
			if(str[i]=='')
				h2++;
			if(str[i]=='')
				i2++;
			if(str[i]=='')
				j2++;
			if(str[i]=='')
				k2++;
			if(str[i]=='')
				l2++;
			if(str[i]=='')
				m2++;
			if(str[i]=='')
				n2++;
			if(str[i]=='')
				o2++;
			if(str[i]=='')
				p2++;
			if(str[i]=='')
				q2++;
			if(str[i]=='')
				r2++;
			if(str[i]=='')
				s2++;
			if(str[i]=='')
				t2++;
			if(str[i]=='')
				u2++;
			if(str[i]=='')
				v2++;
			if(str[i]=='')
				w2++;
			if(str[i]=='')
				x2++;
			if(str[i]=='')
				y2++;
			if(str[i]=='')
				z2++;
		}
	}
	if(a1>0) printf("",a1);
	if(b1>0) printf("",b1);
	if(c1>0) printf("",c1);
	if(d1>0) printf("",d1);
	if(e1>0) printf("",e1);
	if(f1>0) printf("",f1);
	if(g1>0) printf("",g1);
	if(h1>0) printf("",h1);
	if(i1>0) printf("",i1);
	if(j1>0) printf("",j1);
	if(k1>0) printf("",k1);
	if(l1>0) printf("",l1);
	if(m1>0) printf("",m1);
	if(n1>0) printf("",n1);
	if(o1>0) printf("",o1);
	if(p1>0) printf("",p1);
	if(q1>0) printf("",q1);
	if(r1>0) printf("",r1);
	if(s1>0) printf("",s1);
	if(t1>0) printf("",t1);
	if(u1>0) printf("",u1);
	if(v1>0) printf("",v1);
	if(w1>0) printf("",w1);
	if(x1>0) printf("",x1);
	if(y1>0) printf("",y1);
	if(z1>0) printf("",z1);
	if(a2>0) printf("",a2);
	if(b2>0) printf("",b2);
	if(c2>0) printf("",c2);
	if(d2>0) printf("",d2);
	if(e2>0) printf("",e2);
	if(f2>0) printf("",f2);
	if(g2>0) printf("",g2);
	if(h2>0) printf("",h2);
	if(i2>0) printf("",i2);
	if(j2>0) printf("",j2);
	if(k2>0) printf("",k2);
	if(l2>0) printf("",l2);
	if(m2>0) printf("",m2);
	if(n2>0) printf("",n2);
	if(o2>0) printf("",o2);
	if(p2>0) printf("",p2);
	if(q2>0) printf("",q2);
	if(r2>0) printf("",r2);
	if(s2>0) printf("",s2);
	if(t2>0) printf("",t2);
	if(u2>0) printf("",u2);
	if(v2>0) printf("",v2);
	if(w2>0) printf("",w2);
	if(x2>0) printf("",x2);
	if(y2>0) printf("",y2);
	if(z2>0) printf("",z2);
}







1000234
find(int n)
{
    int flag=0;
    if(n%4==0)
    {
        if(n%100==0)
        {
            if(n%400==0)
            {
                flag=1;
            }
            else
            {
                flag=0;
            }
        }
        else flag=1;
    }
    return flag;
}
spp1(int n)
{
    int p=0;
    if(n==1) p=31;
    if(n==2) p=28; 
    if(n==3) p=31; 
    if(n==4) p=30; 
    if(n==5) p=31; 
    if(n==6) p=30; 
    if(n==7) p=31; 
    if(n==8) p=31; 
    if(n==9) p=30; 
    if(n==10) p=31; 
    if(n==11) p=30; 
    if(n==12) p=31;
    return p;  
}
spp2(int n)
{
    int p=0;
    if(n==1) p=31;
    if(n==2) p=29; 
    if(n==3) p=31; 
    if(n==4) p=30; 
    if(n==5) p=31; 
    if(n==6) p=30; 
    if(n==7) p=31; 
    if(n==8) p=31; 
    if(n==9) p=30; 
    if(n==10) p=31; 
    if(n==11) p=30; 
    if(n==12) p=31;
    return p;  
}
main()
{
    int n,i,j;
    scanf("",&n);
    for(i=0;i<n;i++)
    {
        scanf("",&mem[i].year,&mem[i].month1,&mem[i].month2);
        if(find(mem[i].year)==0)
        {
            int p=0;
            if(mem[i].month1>mem[i].month2)
            {
                for(j=mem[i].month2;j<mem[i].month1;j++)
                {
                    p+=spp1(j);
                }
            }

            else
            {
                for(j=mem[i].month1;j<mem[i].month2;j++)
                {
                    p+=spp1(j);
                }
            }
            if(p%7==0)
            {
                printf("");    
            }
            else
            {
                printf("");
            }
        }
        else
        {
            int p=0;
            if(mem[i].month1>mem[i].month2)
            {
                for(j=mem[i].month2;j<mem[i].month1;j++)
                {
                    p+=spp2(j);
                }
            }

            else
            {
                for(j=mem[i].month1;j<mem[i].month2;j++)
                {
                    p+=spp2(j);
                }
            }
            if(p%7==0)
            {
                printf("");    
            }
            else
            {
                printf("");
            }
        }
    }
    return 0;
}



1000235
main()
{
	int x[52]={0},i,flag,len;
	char str[MAX];
	scanf("",str);
	len=strlen(str);
	for(i=0;i<len;i++)
	{
	    if(str[i]=='') x[0]+=1;
		if(str[i]=='') x[1]+=1;
		if(str[i]=='') x[2]+=1;
		if(str[i]=='') x[3]=x[3]+1;
		if(str[i]=='') x[4]=x[4]+1;
		if(str[i]=='') x[5]=x[5]+1;
		if(str[i]=='') x[6]=x[6]+1;
		if(str[i]=='') x[7]=x[7]+1;
		if(str[i]=='') x[8]=x[8]+1;
		if(str[i]=='') x[9]=x[9]+1;
		if(str[i]=='') x[10]=x[10]+1;
		if(str[i]=='') x[11]=x[11]+1;
		if(str[i]=='') x[12]=x[12]+1;
		if(str[i]=='') x[13]=x[13]+1;
		if(str[i]=='') x[14]=x[14]+1;
		if(str[i]=='') x[15]=x[15]+1;
		if(str[i]=='') x[16]=x[16]+1;
		if(str[i]=='') x[17]=x[17]+1;
		if(str[i]=='') x[18]=x[18]+1;
		if(str[i]=='') x[19]=x[19]+1;
		if(str[i]=='') x[20]=x[20]+1;
		if(str[i]=='') x[21]=x[21]+1;
		if(str[i]=='') x[22]=x[22]+1;
		if(str[i]=='') x[23]=x[23]+1;
        if(str[i]=='') x[24]=x[24]+1; 
		if(str[i]=='') x[25]=x[25]+1;
	    if(str[i]=='') x[26]+=1;
		if(str[i]=='') x[27]+=1;
		if(str[i]=='') x[28]=x[28]+1;
		if(str[i]=='') x[29]=x[29]+1;
		if(str[i]=='') x[30]=x[30]+1;
		if(str[i]=='') x[31]=x[31]+1;
		if(str[i]=='') x[32]=x[32]+1;
		if(str[i]=='') x[33]=x[33]+1;
		if(str[i]=='') x[34]=x[34]+1;
		if(str[i]=='') x[35]=x[35]+1;
		if(str[i]=='') x[36]=x[36]+1;
		if(str[i]=='') x[37]=x[37]+1;
		if(str[i]=='') x[38]=x[38]+1;
		if(str[i]=='') x[39]=x[39]+1;
		if(str[i]=='') x[40]=x[40]+1;
		if(str[i]=='') x[41]=x[41]+1;
		if(str[i]=='') x[42]=x[42]+1;
		if(str[i]=='') x[43]=x[43]+1;
		if(str[i]=='') x[44]=x[44]+1;
		if(str[i]=='') x[45]=x[45]+1;
		if(str[i]=='') x[46]=x[46]+1;
		if(str[i]=='') x[47]=x[47]+1;
		if(str[i]=='') x[48]=x[48]+1;
        if(str[i]=='') x[49]=x[49]+1; 
		if(str[i]=='') x[50]=x[50]+1;
		if(str[i]=='') x[51]+=1;
	}
        if(x[26]>0)  printf("",x[26]);
		if(x[27]>0)  printf("",x[27]); 
		if(x[28]>0)  printf("",x[28]);
		if(x[29]>0)  printf("",x[29]);
		if(x[30]>0)  printf("",x[30]);
		if(x[31]>0)  printf("",x[31]); 
		if(x[32]>0)  printf("",x[32]);
		if(x[33]>0)  printf("",x[33]);
		if(x[34]>0)  printf("",x[34]);
		if(x[35]>0)  printf("",x[35]); 
		if(x[36]>0)  printf("",x[36]);
		if(x[37]>0)  printf("",x[37]); 
		if(x[38]>0)  printf("",x[38]);
		if(x[39]>0)  printf("",x[39]);
		if(x[40]>0)  printf("",x[40]);
		if(x[41]>0)  printf("",x[41]); 
		if(x[42]>0)  printf("",x[42]);
		if(x[43]>0)  printf("",x[43]);
		if(x[44]>0)  printf("",x[44]);
		if(x[45]>0)  printf("",x[45]); 	
		if(x[46]>0)  printf("",x[46]);
		if(x[47]>0)  printf("",x[47]); 
		if(x[48]>0)  printf("",x[48]);
		if(x[49]>0)  printf("",x[49]);
		if(x[50]>0)  printf("",x[50]);
		if(x[51]>0)  printf("",x[51]); 
		if(x[0]>0)  printf("",x[0]);
		if(x[1]>0)  printf("",x[1]); 
		if(x[2]>0)  printf("",x[2]);
		if(x[3]>0)  printf("",x[3]);
		if(x[4]>0)  printf("",x[4]);
		if(x[5]>0)  printf("",x[5]); 
		if(x[6]>0)  printf("",x[6]);
		if(x[7]>0)  printf("",x[7]); 
		if(x[8]>0)  printf("",x[8]);
		if(x[9]>0)  printf("",x[9]);
		if(x[10]>0)  printf("",x[10]);
		if(x[11]>0)  printf("",x[11]); 
		if(x[12]>0)  printf("",x[12]);
		if(x[13]>0)  printf("",x[13]);
		if(x[14]>0)  printf("",x[14]);
		if(x[15]>0)  printf("",x[15]); 
		if(x[16]>0)  printf("",x[16]);
		if(x[17]>0)  printf("",x[17]); 
		if(x[18]>0)  printf("",x[18]);
		if(x[19]>0)  printf("",x[19]);
		if(x[20]>0)  printf("",x[20]);
		if(x[21]>0)  printf("",x[21]); 
		if(x[22]>0)  printf("",x[22]);
		if(x[23]>0)  printf("",x[23]);
		if(x[24]>0)  printf("",x[24]);
		if(x[25]>0)  printf("",x[25]);
		flag=0;
		for(i=0;i<52;i++)
		{
			if(x[i]!=0)  flag=1;
		}
		if(flag==0) printf("");
}
		
	



1000236
main()
{
	int n,i,a,b,c,s,t;
	scanf("",&n);
	for(i=1;i<=n;i++)
	{
		scanf("",&a,&b,&c);
		if(((a%4==0)&&(a%100!=0))||((a%100==0)&&(a%400==0)))
		{
			if(b==1)
				s=1;
			if(b==2)
				s=1+31;
			if(b==3)
				s=1+31+29;
			if(b==4)
				s=1+31+29+31;
			if(b==5)
				s=1+31+29+31+30;
			if(b==6)
				s=1+31+29+31+30+31;
			if(b==7)
				s=1+31+29+31+30+31+30;
			if(b==8)
				s=1+31+29+31+30+31+30+31;
			if(b==9)
				s=1+31+29+31+30+31+30+31+31;
			if(b==10)
				s=1+31+29+31+30+31+30+31+31+30;
			if(b==11)
				s=1+31+29+31+30+31+30+31+31+30+31;
			if(b==12)
				s=1+31+29+31+30+31+30+31+31+30+31+30;
			if(c==1)
				t=1;
			if(c==2)
				t=1+31;
			if(c==3)
				t=1+31+29;
			if(c==4)
				t=1+31+29+31;
			if(c==5)
				t=1+31+29+31+30;
			if(c==6)
				t=1+31+29+31+30+31;
			if(c==7)
				t=1+31+29+31+30+31+30;
			if(c==8)
				t=1+31+29+31+30+31+30+31;
			if(c==9)
				t=1+31+29+31+30+31+30+31+31;
			if(c==10)
				t=1+31+29+31+30+31+30+31+31+30;
			if(c==11)
				t=1+31+29+31+30+31+30+31+31+30+31;
			if(c==12)
				t=1+31+29+31+30+31+30+31+31+30+31+30;
			if((s-t)%7==0)
			{
				printf("");
			}
			else
			{
				printf("");
			}
		}
		else
		{
			if(b==1)
				s=1;
			if(b==2)
				s=1+31;
			if(b==3)
				s=1+31+28;
			if(b==4)
				s=1+31+28+31;
			if(b==5)
				s=1+31+28+31+30;
			if(b==6)
				s=1+31+28+31+30+31;
			if(b==7)
				s=1+31+28+31+30+31+30;
			if(b==8)
				s=1+31+28+31+30+31+30+31;
			if(b==9)
				s=1+31+28+31+30+31+30+31+31;
			if(b==10)
				s=1+31+28+31+30+31+30+31+31+30;
			if(b==11)
				s=1+31+28+31+30+31+30+31+31+30+31;
			if(b==12)
				s=1+31+28+31+30+31+30+31+31+30+31+30;
			if(c==1)
				t=1;
			if(c==2)
				t=1+31;
			if(c==3)
				t=1+31+28;
			if(c==4)
				t=1+31+28+31;
			if(c==5)
				t=1+31+28+31+30;
			if(c==6)
				t=1+31+28+31+30+31;
			if(c==7)
				t=1+31+28+31+30+31+30;
			if(c==8)
				t=1+31+28+31+30+31+30+31;
			if(c==9)
				t=1+31+28+31+30+31+30+31+31;
			if(c==10)
				t=1+31+28+31+30+31+30+31+31+30;
			if(c==11)
				t=1+31+28+31+30+31+30+31+31+30+31;
			if(c==12)
				t=1+31+28+31+30+31+30+31+31+30+31+30;
			if((s-t)%7==0)
			{
				printf("");
			}
			else
			{
				printf("");
			}
		}
	}
	return 0;
}


1000237
main()
{
	int num,ii,jj,mm,pp,A[130]={0},a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;
	char fu;
	for(ii=0;ii<310;ii++)
	{
	scanf("",&fu);
	if(  (fu>=65&&fu<=90)  ||  (fu>=97&&fu<=122)  )
	{num=fu;
	
	A[num]++;
	if(fu=='') break;

	}

	
	}

	if(A[65]!=0) printf("",A[65]);
	if(A[66]!=0) printf("",A[66]);
	 if(A[67]!=0) printf("",A[67]);
	 if(A[68]!=0) printf("",A[68]);
	 if(A[69]!=0) printf("",A[69]);
	 if(A[70]!=0) printf("",A[70]);
	 if(A[71]!=0) printf("",A[71]);
	if(A[72]!=0) printf("",A[72]);
	 if(A[73]!=0) printf("",A[73]);
	 if(A[74]!=0) printf("",A[74]);
	 if(A[75]!=0) printf("",A[75]);
	 if(A[76]!=0) printf("",A[76]);
	 if(A[77]!=0) printf("",A[77]);
	 if(A[78]!=0) printf("",A[78]);
	 if(A[79]!=0) printf("",A[79]);
	 if(A[80]!=0) printf("",A[80]);
	 if(A[81]!=0) printf("",A[81]);
	 if(A[82]!=0) printf("",A[82]);
 if(A[83]!=0) printf("",A[83]);
	 if(A[84]!=0) printf("",A[84]);
	if(A[85]!=0) printf("",A[85]);
	 if(A[86]!=0) printf("",A[86]);
	 if(A[87]!=0) printf("",A[87]);
	 if(A[88]!=0) printf("",A[88]);
	 if(A[89]!=0) printf("",A[89]);
	 if(A[90]!=0) printf("",A[90]);
	 if(A[97]!=0) printf("",A[97]);
	  if(A[98]!=0) printf("",A[98]);
	  if(A[99]!=0) printf("",A[99]); 
	  if(A[100]!=0) printf("",A[100]);
	  	  if(A[101]!=0) printf("",A[101]);
	  if(A[102]!=0) printf("",A[102]);
	  if(A[103]!=0) printf("",A[103]);
	  if(A[104]!=0) printf("",A[104]);
	  if(A[105]!=0) printf("",A[105]);
	  if(A[106]!=0) printf("",A[106]);
	  if(A[107]!=0) printf("",A[107]);
	  if(A[108]!=0) printf("",A[108]);
	  if(A[109]!=0) printf("",A[109]);
	  if(A[110]!=0) printf("",A[110]);
	  if(A[111]!=0) printf("",A[111]);
 if(A[112]!=0) printf("",A[112]);
 if(A[113]!=0) printf("",A[113]);
 if(A[114]!=0) printf("",A[114]);

 if(A[115]!=0) printf("",A[115]); 
 if(A[116]!=0) printf("",A[116]);
 if(A[117]!=0) printf("",A[117]);
 if(A[118]!=0) printf("",A[118]);

 if(A[119]!=0) printf("",A[119]);
 if(A[120]!=0) printf("",A[120]);
 if(A[121]!=0) printf("",A[121]);
 if(A[122]!=0) printf("",A[122]);
 
 pp=0;for(mm=0;mm<130;mm++)
 {
 if(A[mm]!=0) pp=1;
 }
	if(pp==0) printf("");	  	 
	

return 0;
}


1000239
main()
{
    int m,n;
     int i,j,k;
     scanf("",&m,&n);
int **p=(int **)malloc(m*sizeof(int *));
for(i=0;i<m;i++)
p[i]=(int *)malloc(n*sizeof(int));

for(i=0;i<m;i++)
{
                for(j=0;j<n;j++)
                scanf("",&p[i][j]);
}


for(i=0;i<m;i++)
{
                for(j=0;j<n;j++)
                {
                                if(i==0)
                                {
                                        if(j==0)
                                        {
                                                if(p[i][j]>=p[i][j+1]&&p[i][j]>=p[i+1][j])
                                                printf("",i,j);
                                        }
                                        if(j==n-1)
                                        {
                                                if(p[i][j]>=p[i][j-1]&&p[i][j]>=p[i+1][j])
                                                printf("",i,j);
                                        }
                                        else
                                        {
                                            if(p[i][j]>=p[i][j+1]&&p[i][j]>=p[i+1][j]&&p[i][j]>=p[i][j-1])
                                            printf("",i,j);
                                        }
                                }
                                if(i==m-1)
                                {
                                        if(j==0)
                                        {
                                                if(p[i][j]>=p[i][j+1]&&p[i][j]>=p[i-1][j])
                                                printf("",i,j);
                                        }
                                         if(j==n-1)
                                        {
                                                if(p[i][j]>=p[i][j-1]&&p[i][j]>=p[i-1][j])
                                                printf("",i,j);
                                        }
                                        else
                                        {
                                            if(p[i][j]>=p[i][j+1]&&p[i][j]>=p[i-1][j]&&p[i][j]>=p[i][j-1])
                                            printf("",i,j);
                                        }
                                }
                                else
                                        {
                                            if(j==0)
                                            {
                                                if(p[i][j]>=p[i][j+1]&&p[i][j]>=p[i+1][j]&&p[i][j]>=p[i-1][j])
                                                printf("",i,j);
                                            }
                                           if(j==n-1)
                                            {
                                                if(p[i][j]>=p[i][j-1]&&p[i][j]>=p[i+1][j]&&p[i][j]>=p[i-1][j])
                                                printf("",i,j);
                                            }
                                            else
                                            {
                                            if(p[i][j]>=p[i][j+1]&&p[i][j]>=p[i+1][j]&&p[i][j]>=p[i][j-1]&&p[i][j]>=p[i-1][j])
                                            printf("",i,j);
                                            }
                                            }
                                            
                                }
                }
getchar();
getchar();

}


1000241
main()
{
	int n;
	int TianJi[1000];
	int QiWang[1000];
	int i, j;
	int *pwin[1000];




	FILE *fp;
	fp = fopen("", "");

	for(i=0; i<1000; i++){
		if((pwin[i]=(int *)malloc(sizeof(int)*1000))==NULL){
			printf("");
		return 1;
		}
	}

	while(1){
		fscanf(fp, "", &n);
		scanf("", &n);
		if(n==0)
			break;


		for(i=0; i<n; i++){
			fscanf(fp, "", &TianJi[i]);
			scanf("", &TianJi[i]);
		}
		for(i=0; i<n; i++){
			fscanf(fp, "", &QiWang[i]);
			scanf("", &QiWang[i]);
		}


		qsort((void*)&TianJi[0], n, sizeof(int), Compare);
		qsort((void*)&QiWang[0], n, sizeof(int), Compare);


		for(i=0; i<n; i++){
			if(TianJi[0]>QiWang[i])
				*(pwin[i]+0) = 1;
			if(TianJi[0]<QiWang[i])
				*(pwin[i]+0) = -1;
			else
				*(pwin[i]+0) = 0;
		}




		for(i=n-2;i>=0;i--) 
			for(j=1;j<n-i;j++) 
				if(QiWang[i+j]<TianJi[j]) 
					*(pwin[i]+j)=*(pwin[i]+j-1)+1; 
				if(QiWang[i+j]>TianJi[j]) 
					*(pwin[i]+j)=*(pwin[i+1]+j-1)-1; 
				if(*(pwin[i+1]+j-1)-1>*(pwin[i]+j-1)) 
					*(pwin[i]+j)=*(pwin[i+1]+j-1)-1; 
				else 
					*(pwin[i]+j)=*(pwin[i]+j-1); 


		printf("", *(pwin[0]+n-1)*200);


	}
	fclose(fp);


	return 0;
}

Compare(const void *a, const void *b)
{
	return *(int*)b-*(int*)a;
}

max(int a, int b)
{
	return (a>b)? a: b;
}


1000242
main(){
 int m,n,i,k=0,j;
 int a[20][20];
 scanf("",&m,&n);
 struct sh
 {
  int m;
  int n;
 }
 sh[400];
 for(i=0;i<m;i++){
  for(j=0;j<n;j++){
   scanf("",&a[i][j]);
  }
 }
 if(a[0][0]>=a[0][1]&&a[0][0]>=a[1][0]){
  sh[k].m=0;
  sh[k].n=0;
  k++;
 }
 if(a[0][n-1]>=a[0][n-2]&&a[0][n-1]>=a[1][n-1]){
  sh[k].m=0;
  sh[k].n=n-1;
  k++;
 }
 if(a[m-1][0]>=a[m-2][0]&&a[m-1][0]>=a[m-1][1]){
  sh[k].m=m-1;
  sh[k].n=0;
  k++;
 }
 if(a[m-1][n-1]>=a[m-2][n-1]&&a[m-1][n-1]>=a[m-1][n-2]){
  sh[k].m=m-1;
  sh[k].n=n-1;
  k++;
 }
 
 
 for(i=0;i<m;i++){
  for(j=0;j<n;j++){
   if(i==0&&j!=0&&j!=n-1){
    if(a[i][j]>=a[i][j+1]&&a[i][j]>=a[i+1][j]&&a[i][j]>=a[i][j-1]){
     sh[k].m=i;
     sh[k].n=j;
     k++;
    }
    }if(j==0&&i!=0&&i!=m-1){
     if(a[i][j]>=a[i][j+1]&&a[i][j]>=a[i+1][j]&&a[i][j]>=a[i-1][j]){
     sh[k].m=i;
     sh[k].n=j;
     k++;
     }
     }if(j==n-1&&i!=0&&i!=m-1){
      if(a[i][j]>=a[i-1][j]&&a[i][j]>=a[i+1][j]&&a[i][j]>=a[i][j-1]){
     sh[k].m=i;
     sh[k].n=j;
     k++;
      }
     }if(i==m-1&&j!=0&&j!=n-1){
      if(a[i][j]>=a[i][j+1]&&a[i][j]>=a[i-1][j]&&a[i][j]>=a[i][j-1]){
     sh[k].m=i;
     sh[k].n=j;
     k++;
      }
     }if(i!=0&&i!=m-1&&j!=0&&j!=n-1){
		 if(a[i][j]>=a[i][j+1]&&a[i][j]>=a[i+1][j]&&a[i][j]>=a[i][j-1]&&a[i][j]>=a[i-1][j]){
     sh[k].m=i;
     sh[k].n=j;
     k++;
      }
	 }
     
  }
 }
  int e,f;
  for(j=1;j<=k;j++){
   for(i=0;i<k-j;i++){
    if(sh[i].m>sh[i+1].m){
     e=sh[i+1].m;
     f=sh[i+1].n;
     sh[i+1].m=sh[i].m;
     sh[i+1].n=sh[i].n;
     sh[i].m=e;
     sh[i].n=f;
    }
   }
  }
  int c=0;
  i=0;
  for(;c<k;c=i+1){
  for(j=1;j<=k;j++){
	  for(i=c;i<k;i++){
   if(sh[i].m==sh[i+1].m){
	   if(sh[i].n>sh[i+1].n){
		    
            f=sh[i+1].n;
            
            sh[i+1].n=sh[i].n;
            
            sh[i].n=f;
	   }else{
		   continue;
	   }
   }else{
        break;
   }
	  }
  }
  }
  
  for(i=0;i<k;i++){
	  printf("",sh[i].m,sh[i].n);
  }
  return 0;
 }

    

1000243
main()
{
	int n,i,a[300];
	int cra,crb,rnd,sdx,year,jy1,nl1,yue1,month2,l,k;
	scanf("",&n);
	for(i=0;i<n;i++)
	{
	
	scanf("",&year,&yue1,&month2);
	rnd=((year-1)/4-(year-1)/100+(year-1)/400)*(366%7);
    sdx=(year-1-((year-1)/4-(year-1)/100+(year-1)/400))*(365%7);
	if((year%400)==0||((year%4)==0&&(year%100)!=0))
	{
		if(yue1==1){jy1=0;}
		if(yue1==2){jy1=31;}
		if(yue1==3){jy1=31+29;}
		if(yue1==4){jy1=31+29+31;}
		if(yue1==5){jy1=31+29+31+30;}
		if(yue1==6){jy1=31+29+31+30+31;}
		if(yue1==7){jy1=31+29+31+30+31+30;}
		if(yue1==8){jy1=31+29+31+30+31+30+31;}
		if(yue1==9){jy1=31+29+31+30+31+30+31+31;}
		if(yue1==10){jy1=31+29+31+30+31+30+31+31+30;}
		if(yue1==11){jy1=31+29+31+30+31+30+31+31+30+31;}
		if(yue1==12){jy1=31+29+31+30+31+30+31+31+30+31+30;}
	
	}
	
	else
	{
		if(yue1==1){jy1=0;}
		if(yue1==2){jy1=31;}
		if(yue1==3){jy1=31+28;}
		if(yue1==4){jy1=31+28+31;}
		if(yue1==5){jy1=31+28+31+30;}
		if(yue1==6){jy1=31+28+31+30+31;}
		if(yue1==7){jy1=31+28+31+30+31+30;}
		if(yue1==8){jy1=31+28+31+30+31+30+31;}
		if(yue1==9){jy1=31+28+31+30+31+30+31+31;}
		if(yue1==10){jy1=31+28+31+30+31+30+31+31+30;}
		if(yue1==11){jy1=31+28+31+30+31+30+31+31+30+31;}
		if(yue1==12){jy1=31+28+31+30+31+30+31+31+30+31+30;}
	}
	if((year%400)==0||((year%4)==0&&(year%100)!=0))
	{
		if(month2==1){nl1=0;}
		if(month2==2){nl1=31;}
		if(month2==3){nl1=31+29;}
		if(month2==4){nl1=31+29+31;}
		if(month2==5){nl1=31+29+31+30;}
		if(month2==6){nl1=31+29+31+30+31;}
		if(month2==7){nl1=31+29+31+30+31+30;}
		if(month2==8){nl1=31+29+31+30+31+30+31;}
		if(month2==9){nl1=31+29+31+30+31+30+31+31;}
		if(month2==10){nl1=31+29+31+30+31+30+31+31+30;}
		if(month2==11){nl1=31+29+31+30+31+30+31+31+30+31;}
		if(month2==12){nl1=31+29+31+30+31+30+31+31+30+31+30;}
	
	}
	
	else
	{
		if(month2==1){nl1=0;}
		if(month2==2){nl1=31;}
		if(month2==3){nl1=31+28;}
		if(month2==4){nl1=31+28+31;}
		if(month2==5){nl1=31+28+31+30;}
		if(month2==6){nl1=31+28+31+30+31;}
		if(month2==7){nl1=31+28+31+30+31+30;}
		if(month2==8){nl1=31+28+31+30+31+30+31;}
		if(month2==9){nl1=31+28+31+30+31+30+31+31;}
		if(month2==10){nl1=31+28+31+30+31+30+31+31+30;}
		if(month2==11){nl1=31+28+31+30+31+30+31+31+30+31;}
		if(month2==12){nl1=31+28+31+30+31+30+31+31+30+31+30;}
	}
	cra=jy1+rnd+sdx+1;
    crb=nl1+rnd+sdx+1;
	l=cra%7;
	k=crb%7;
	if(l==k)
		{
			a[i]=1;
		}
		else
		{
			a[i]=0;
		}
	}
	for(i=0;i<n;i++)
	{
		if(a[i]==1)
		{
			printf("");
		}
		else
		{
			printf("");
		}
	}
	return 0;
}


1000244
main()
{
	 struct 
	 {
		unsigned int year;
		int month;
		int date;
		int dayoftheyear;
	}nn;
	 int week=0;
	 unsigned int sum=0;
	 scanf("",&nn.year,&nn.month,&nn.date);
	 sum=(nn.year-1)+(nn.year-1)/4-(nn.year-1)/100+(nn.year-1)/400;
	 

	if(((nn.year%4==0)&&(nn.year%100!=0))||(nn.year%400==0))
		{

           switch(nn.month)
		   {
		    case 1:
			nn.dayoftheyear=nn.date;
			break;
			case 2:
			nn.dayoftheyear=nn.date+jan;
			break;
			case 3:
			nn.dayoftheyear=nn.date+jan+feb+1;
			break;
			case 4:
			nn.dayoftheyear=nn.date+jan+feb+mar+1;
			break;
			case 5:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+1;
			break;
			case 6:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+1;
			break;
			case 7:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+1;
			break;
			case 8:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+1;
			break;
			case 9:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug+1;
			break;
			case 10:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug+sep+1;
			break;
			case 11:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug+sep+oct+1;
			break;
			case 12:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug+sep+oct+nov+1;
			break;
		   }
		}
		   else 
		   {

            switch(nn.month)
			{
		    case 1:
			nn.dayoftheyear=nn.date;
			break;
			case 2:
			nn.dayoftheyear=nn.date+jan;
			break;
			case 3:
			nn.dayoftheyear=nn.date+jan+feb;
			break;
			case 4:
			nn.dayoftheyear=nn.date+jan+feb+mar;
			break;
			case 5:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr;
			break;
			case 6:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may;
			break;
			case 7:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun;
			break;
			case 8:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul;
			break;
			case 9:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug;
			break;
			case 10:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug+sep;
			break;
			case 11:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug+sep+oct;
			break;
			case 12:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug+sep+oct+nov;
			break;
			}

		   }
		   sum+=nn.dayoftheyear;
		   week=sum%7;
		   switch(week)
		   {
		   case 0:
			   printf("");
			   break;
           case 1:
			   printf("");
			   break;
           case 2:
			   printf("");
			   break;
           case 3:
			   printf("");
			   break;
           case 4:
			   printf("");
			   break;
           case 5:
			   printf("");
			   break;
           case 6:
			   printf("");
			   break;
			   

			   

			   
		   }


	return 0;
}
 
 


1000245
for(m=m1;m<m2;m++)
                             {                 
                                               if(m==1||m==3||m==5||m==7||m==8||m==10||m==12)
                                               d[m]=31;
                                               if(m==2)
                                               d[m]=29;
                                               else
                                               d[m]=30;
                                               t=d[m]+t;
                             }     
                       }
                       else
                       {
                           if(m1>m2)
                             for(m=m2;m<m1;m++)
                             {                 
                                               if(m==1||m==3||m==5||m==7||m==8||m==10||m==12)
                                               d[m]=31;
                                               if(m==2)
                                               d[m]=28;
                                               else
                                               d[m]=30;
                                               t=d[m]+t;
                             }
                             for(m=m1;m<m2;m++)
                             {                 
                                               if(m==1||m==3||m==5||m==7||m==8||m==10||m==12)
                                               d[m]=31;
                                               if(m==2)
                                               d[m]=28;
                                               else
                                               d[m]=30;
                                               t=d[m]+t;
                             }     
                       }
                       if(t%7==0)
                       printf("");
                       printf("");
      }
      getchar();
      getchar();
      getchar();
}


1000246
bubble (int b[][501],int num[],int n)
{
	int i,j,mid,k;
	for(k=0;k<n;k++)
	{
		for(i=1;i<num[k];i++)
		{  
			for(j=1;j<=num[k]-i;j++)
			{  
				if(b[k][j-1]>b[k][j])
				{
					
					mid=b[k][j-1];
					b[k][j-1]=b[k][j];
					b[k][j]=mid;
				}
			}
		}
	}
	

}
main()
{int n=0,i,j,k,max;
int a[50][501]={0},num[100]={0},c[500]={0};
int zhong[100]={0};
char c1;
scanf("",&n);
for(i=0;i<n;i++)
{
	for(;;)
	{
		scanf("", &a[i][num[i]++]);
		scanf("", &c1);
		if(c1!= '')
			break;
	}

}
for(i=0;i<n;i++)
{
	for(k=0;k<num[i];k++)
	{
		
				c[k]=0;
	
	}
	for(k=0;k<num[i];k++)
	{
		for(j=k+1;j<num[i];j++)
		{
			if(a[i][j]==a[i][k])
				c[k]++;
		}
	}
	if(c[0]!=num[i]-1)
	{
		max=c[0];
		zhong[i]=a[i][0];
		for(k=1;k<num[i]-2;k++)
		{
			if(c[k]>max)
			{
				max=c[k];
				zhong[i]=a[i][k];
			}
		}
	}



}


	bubble(a,num,n);

for(i=0;i<n;i++)
{
	if(zhong[i]==0)
	{
		if(num[i]%2==0)
			printf("",a[i][(num[i]-1)/2],a[i][(num[i]+1)/2]);
		printf("",a[i][num[i]/2]);

	}
	else
		{
		if(num[i]%2==0)
			printf("",zhong[i],a[i][(num[i]-1)/2],a[i][(num[i]+1)/2]);
		printf("",zhong[i],a[i][num[i]/2]);

	}
	
}






return 0;
}
*/

main()
{char a[200][50],*p;
int length[200]={0};
int i,j,n,max=0,min=100,n1,n2;


scanf("",&n);
for(i=0;i<n;i++)
{
	for(j=0;;j++)
	{scanf("",*(a+i)+j);
	if(*(*(a+i)+j)==''||*(*(a+i)+j)=='\n')
	{*(*(a+i)+j)='\0';
		break;}
	else 
		(*(length+i))++;
	}

}
for(i=0;i<n;i++)
{
		if((*(length+i))>max)
		{
			max=*(length+i);
			n1=i;
		}
				
			if((*(length+i))<min)
		{
			min=*(length+i);
			n2=i;
			}
}
  printf("",a+n1,a+n2);

  return 0;
}

1000247
main()
{
	char num[3][251];        
	int lenth[3];       
	int i,j,k,sign=0,sign2=0,sign3=0;
	cin.getline(num[0],250);
	cin.getline(num[1],250);
	lenth[0]=strlen(num[0]);
	lenth[1]=strlen(num[1]);
	if(lenth[0]>=lenth[1])    
	{
		lenth[2]=lenth[0];
		for(i=0;i<lenth[0];i++)
			num[2][i]=num[0][i];
	}
	else
	{
		lenth[2]=lenth[1];
		for(i=0;i<lenth[1];i++)
			num[2][i]=num[1][i];
	}
	for(i=lenth[0]-1,j=lenth[1]-1,k=lenth[2]-1;(i>=0)&&(j>=0);i--,j--,k--)
	{
		num[2][k]=num[0][i]-''+num[1][j]-'';         
		if(sign==1)                   
			num[2][k]++;
		sign=0;          
		if((int)num[2][k]>=10)          
		{
			num[2][k]=num[2][k]-10+'';
			sign=1;
		}
		else num[2][k]+='';               
	}

	if(sign==1)            
		{
		if(lenth[0]==lenth[1])       
		sign2=1;
		else
		{
			while(num[2][k]=='')      
			{
				num[2][k]='';
				k--;
				if(k<0)
				{
					sign2=1;         
					break;
				}
			}
			if(k>=0)          
			num[2][k]++;
		}
		}
	if(sign2==1)         
		cout<<1;
	if(sign2!=1)          
	for(i=0;i<lenth[2];i++)
		{
		if(num[2][i]!='')
			{
			sign3=1;        
			break;
			}
		}
	if(sign3==0)        
		i=0;
	for(;i<lenth[2];i++)      
		cout<<num[2][i];
	return 0;
}





1000248
main()
{
	int n;
	int TianJi[1000];
	int QiWang[1000];
	int i, j;
	int *pwin[1000];




	FILE *fp;
	fp = fopen("", "");

	for(i=0; i<1000; i++){
		if((pwin[i]=(int *)malloc(sizeof(int)*1000))==NULL){
			printf("");
		return 1;
		}
	}

	while(1){
		fscanf(fp, "", &n);
		scanf("", &n);
		if(n==0)
			break;


		for(i=0; i<n; i++){
			fscanf(fp, "", &TianJi[i]);
			scanf("", &TianJi[i]);
		}
		for(i=0; i<n; i++){
			fscanf(fp, "", &QiWang[i]);
			scanf("", &QiWang[i]);
		}


		qsort((void*)&TianJi[0], n, sizeof(int), Compare);
		qsort((void*)&QiWang[0], n, sizeof(int), Compare);


		for(i=0; i<n; i++){
			if(TianJi[0]>QiWang[i])
				*(pwin[i]+0) = 1;
			if(TianJi[0]<QiWang[i])
				*(pwin[i]+0) = -1;
			else
				*(pwin[i]+0) = 0;
		}




		for(j=1; j<n; j++){
			for(i=n-1-j; i>=0; i--){

				
				if (TianJi[j]>QiWang[i+j])
					*(pwin[i]+j) = *(pwin[i]+j-1) + 1;
				if(TianJi[j]<QiWang[i+j])
					*(pwin[i]+j) = *(pwin[i+1]+j-1) - 1;
				else
					*(pwin[i]+j) = max(*(pwin[i]+j-1), *(pwin[i+1]+j-1)-1);
			}
		}




		printf("", *(pwin[0]+n-1)*200);


	}
	fclose(fp);


	return 0;
}

Compare(const void *a, const void *b)
{
	return *(int*)b-*(int*)a;
}

max(int a, int b)
{
	return (a>b)? a: b;
}


1000249
main()
{
	int n, i, a, b, c, d, B, C;
	cin>>n;
	for ( i = 1; i <= n; i++ )
	{
		cin>>a>>b>>c;
		if ( ( a % 400 == 0 ) || ( a % 4 == 0 )
			 && ( a % 100 != 0 ) )
		{
			if ( b > c )
			{
				d = c; c = b; b = d;
			}
			switch ( b )
			{ case 1: B = 0;break;
			{ case 2: B = 31;break; }
			{ case 3: B = 60;break; }
			{ case 4: B = 91;break; }
			{ case 5: B = 121;break; }
			{ case 6: B = 152;break; }
			{ case 7: B = 182;break; }
			{ case 8: B = 213;break; }
			{ case 9: B = 244;break; }
			{ case 10: B = 274;break; }
			{ case 11: B = 305;break; }
			{ default: B = 335;break; }
			}
			switch ( c )
			{ case 1: C = 0;break; 
			{ case 2: C = 31;break; }
			{ case 3: C = 60;break; }
			{ case 4: C = 91;break; }
			{ case 5: C = 121;break; }
			{ case 6: C = 152;break; }
			{ case 7: C = 182;break; }
			{ case 8: C = 213;break; }
			{ case 9: C = 244;break; }
			{ case 10: C = 274;break; }
			{ case 11: C = 305;break; }
			{ default: C = 335;break; }
			}
			if ( ( C - B ) % 7 == 0 )
				cout<<""<<endl;
			else cout<<""<<endl;
		}
		else
		{
			if ( b > c )
			{
				d = c; c = b; b = d;
			}
			switch ( b )
			{ case 1: B = 0;break; 
			{ case 2: B = 31;break; }
			{ case 3: B = 59;break; }
			{ case 4: B = 90;break; }
			{ case 5: B = 120;break; }
			{ case 6: B = 151;break; }
			{ case 7: B = 181;break; }
			{ case 8: B = 212;break; }
			{ case 9: B = 243;break; }
			{ case 10: B = 273;break; }
			{ case 11: B = 304;break; }
			{ default: B = 334;break; }
			}
			switch ( c )
			{ case 1: C = 0;break;
			{ case 2: C = 31;break; }
			{ case 3: C = 59;break; }
			{ case 4: C = 90;break; }
			{ case 5: C = 120;break; }
			{ case 6: C = 151;break; }
			{ case 7: C = 181;break; }
			{ case 8: C = 212;break; }
			{ case 9: C = 243;break; }
			{ case 10: C = 273;break; }
			{ case 11: C = 304;break; }
			{ default: C = 334;break; }
			}
			if ( ( C - B) % 7 == 0 )
				cout<<""<<endl;
			else cout<<""<<endl;
		}
	}
	return 0;
}

1000250
main(int argc, char* argv[])
{   
    int m,n,a[30][30],i,j;
    scanf ("",&m,&n);
    for (i=0;i<m;i++)
    {
        for (j=0;j<n;j++)
        {
            scanf ("",&a[i][j]);
            }
            }
          
            for (i=0;i<m;i++)
            {
                for (j=0;j<n;j++)
                {
                    if (i==0)
                    {
                     if (j==0&&a[0][0]>=a[0][1]&&a[0][0]>=a[1][0])
                       printf ("");
                     if (j<n-1&&j>0)
                     {
                          if (a[0][j]>=a[0][j+1]&&a[0][j]>=a[0][j-1]&&a[0][j]>=a[1][j])
                          printf ("",j);
                          }
                      if (j==n-1)
                     {
                          if (a[0][j]>=a[0][j-1]&&a[0][j]>=a[1][j])
                          printf ("",j);
                          }
                          }
                if (i<(m-1)&&i>=1)
                    {
                       if (j==0)
                       {
                               if (a[i][j]>=a[i][j+1]&&a[i][j]>=a[i-1][j]&&a[i][j]>=a[i+1][j]) 
                               printf ("",i,j);
                               }
                      if (j<n-1&&j>0)
                       {
                            if (a[i][j]>=a[i][j+1]&&a[i][j]>=a[i-1][j]&&a[i][j]>=a[i+1][j]&&a[i][j]>=a[i][j-1])
                            printf ("",i,j);
                            }
                       if (j==n-1)
                       {
                                 if (a[i][j]>=a[i][j-1]&&a[i][j]>=a[i-1][j]&&a[i][j]>=a[i+1][j])
                                 printf ("",i,j);
                                 }
                                 }
                    if (i==(m-1))
                    {
                       if (j==0)
                       {
                               if (a[i][j]>=a[i][j+1]&&a[i][j]>=a[i-1][j])
                               printf ("",i,j);
                               }
                       if (j>0&&j<n-1)
                       {
                               if (a[i][j]>=a[i][j+1]&&a[i][j]>=a[i][j-1]&&a[i][j]>=a[i-1][j])
                                printf ("",i,j);
                                }
                       if (j==(n-1))
                       {
                                  if (a[i][j]>=a[i][j-1]&&a[i][j]>=a[i-1][j])
                                  printf ("",i,j);
                                  }
                                  }
                                  }
                                  }
                                  scanf ("",&i);
                                  return 0;
                                  }


1000251
main()
{
	int startyear,endyear,startmonth,endmonth,startday,endday,i,answer;
	long int sumdays1=0,sumdays2=0;
	scanf("",&startyear,&startmonth,&startday);
	scanf("",&endyear,&endmonth,&endday);
	for(i=1;i<startyear;i++)
	{
		if((i%4==0&&i%100!=0)||(i%400==0))
		{
			sumdays1+=366;
		}
		else
		{
			sumdays1+=365;
		}
	}
	if((startyear%4==0&&startyear%100!=0)||(startyear%400==0))
	{
		switch(startmonth)
		{
		case 1:sumdays1+=0;
			break;
		case 2:sumdays1+=31;
			break;
		case 3:sumdays1+=60;
			break;
		case 4:sumdays1+=91;
			break;
		case 5:sumdays1+=121;
			break;
		case 6:sumdays1+=152;
			break;
		case 7:sumdays1+=182;
			break;
		case 8:sumdays1+=213;
			break;
		case 9:sumdays1+=244;
			break;
		case 10:sumdays1+=274;
			break;
		case 11:sumdays1+=305;
			break;
		case 12:sumdays1+=335;
			break;
		}
	}
	else
	{
		switch(startmonth)
		{
		case 1:sumdays1+=0;
			break;
		case 2:sumdays1+=31;
			break;
		case 3:sumdays1+=59;
			break;
		case 4:sumdays1+=90;
			break;
		case 5:sumdays1+=120;
			break;
		case 6:sumdays1+=151;
			break;
		case 7:sumdays1+=181;
			break;
		case 8:sumdays1+=212;
			break;
		case 9:sumdays1+=243;
			break;
		case 10:sumdays1+=273;
			break;
		case 11:sumdays1+=304;
			break;
		case 12:sumdays1+=334;
			break;
		}
	}
	sumdays1+=startday;
	for(i=1;i<endyear;i++)
	{
		if((i%4==0&&i%100!=0)||(i%400==0))
		{
			sumdays2+=366;
		}
		else
		{
			sumdays2+=365;
		}
	}
	if((endyear%4==0&&endyear%100!=0)||(endyear%400==0))
	{
		switch(endmonth)
		{
		case 1:sumdays2+=0;
			break;
		case 2:sumdays2+=31;
			break;
		case 3:sumdays2+=60;
			break;
		case 4:sumdays2+=91;
			break;
		case 5:sumdays2+=121;
			break;
		case 6:sumdays2+=152;
			break;
		case 7:sumdays2+=182;
			break;
		case 8:sumdays2+=213;
			break;
		case 9:sumdays2+=244;
			break;
		case 10:sumdays2+=274;
			break;
		case 11:sumdays2+=305;
			break;
		case 12:sumdays2+=335;
			break;
		}
	}
	else
	{
		switch(endmonth)
		{
		case 1:sumdays2+=0;
			break;
		case 2:sumdays2+=31;
			break;
		case 3:sumdays2+=59;
			break;
		case 4:sumdays2+=90;
			break;
		case 5:sumdays2+=120;
			break;
		case 6:sumdays2+=151;
			break;
		case 7:sumdays2+=181;
			break;
		case 8:sumdays2+=212;
			break;
		case 9:sumdays2+=243;
			break;
		case 10:sumdays2+=273;
			break;
		case 11:sumdays2+=304;
			break;
		case 12:sumdays2+=334;
			break;
		}
	}
	sumdays2+=endday;
	answer=sumdays2-sumdays1;
	printf("",answer);
	return 0;
}

1000252
main()
{
	int startyear, endyear;
	int startmonth, endmonth;
	int startday, endday;
	int year, day, month;
    day=0;
	scanf("", &startyear, &startmonth, &startday);
	scanf("", &endyear, &endmonth, &endday);
	if(startyear!=endyear)
	{
	for(year=(startyear+1);year<endyear;year++)
	{
		if((year%4==0&&year%100!=0)||(year%400==0))
		{
			day=day+366;
		}
		else
			day=day+365;
	}
	if((startyear%4==0&&startyear%100!=0)||(startyear%400==0))
	{
		if(startmonth==1)
	        day=day+(31-startday)+29+(31*6)+(30*4);
	    if(startmonth==2)
		    day=day+(29-startday)+(31*6)+(30*4);
		if(startmonth==3)
			day=day+(31-startday)+30*4+31*5;
		if(startmonth==4)
			day=day+(30-startday)+30*3+31*5;
		if(startmonth==5)
			day=day+(31-startday)+30*3+31*4;
		if(startmonth==6)
			day=day+(30-startday)+30*2+31*4;
		if(startmonth==7)
			day=day+(31-startday)+30*2+31*3;
		if(startmonth==8)
			day=day+(31-startday)+30*2+31*2;
		if(startmonth==9)
			day=day+(30-startday)+30+31*2;
		if(startmonth==10)
			day=day+(31-startday)+31+30;
		if(startmonth==11)
			day=day+(30-startday)+31;
		if(startmonth==12)
			day=day+(31-startday);
	}
	else
	{
		if(startmonth==1)
	        day=day+(31-startday)+28+(31*6)+(30*4);
	    if(startmonth==2)
		    day=day+(28-startday)+(31*6)+(30*4);
		if(startmonth==3)
			day=day+(31-startday)+30*4+31*5;
		if(startmonth==4)
			day=day+(30-startday)+30*3+31*5;
		if(startmonth==5)
			day=day+(31-startday)+30*3+31*4;
		if(startmonth==6)
			day=day+(30-startday)+30*2+31*4;
		if(startmonth==7)
			day=day+(31-startday)+30*2+31*3;
		if(startmonth==8)
			day=day+(31-startday)+30*2+31*2;
		if(startmonth==9)
			day=day+(30-startday)+30+31*2;
		if(startmonth==10)
			day=day+(31-startday)+31+30;
		if(startmonth==11)
			day=day+(30-startday)+31;
		if(startmonth==12)
			day=day+(31-startday);
	}
	if((endyear%4==0&&endyear%100!=0)||(endyear%400==0))
	{
		if(endmonth==1)
			day=day+endday;
		if(endmonth==2)
			day=day+endday+31;
		if(endmonth==3)
			day=day+endday+31+29;
		if(endmonth==4)
			day=day+endday+31*2+29;
		if(endmonth==5)
			day=day+endday+31*2+30+29;
		if(endmonth==6)
			day=day+endday+31*3+30+29;
		if(endmonth==7)
			day=day+endday+31*3+30*2+29;
		if(endmonth==8)
			day=day+endday+31*4+30*2+29;
		if(endmonth==9)
			day=day+endday+31*5+30*2+29;
		if(endmonth==10)
			day=day+endday+31*5+30*3+29;
		if(endmonth==11)
			day=day+endday+31*6+30*3+29;
		if(endmonth==12)
			day=day+endday+31*6+30*4+29;
	}
	else
	{
		if(endmonth==1)
			day=day+endday;
		if(endmonth==2)
			day=day+endday+31;
		if(endmonth==3)
			day=day+endday+31+28;
		if(endmonth==4)
			day=day+endday+31*2+28;
		if(endmonth==5)
			day=day+endday+31*2+30+28;
		if(endmonth==6)
			day=day+endday+31*3+30+28;
		if(endmonth==7)
			day=day+endday+31*3+30*2+28;
		if(endmonth==8)
			day=day+endday+31*4+30*2+28;
		if(endmonth==9)
			day=day+endday+31*5+30*2+28;
		if(endmonth==10)
			day=day+endday+31*5+30*3+28;
		if(endmonth==11)
			day=day+endday+31*6+30*3+28;
		if(endmonth==12)
			day=day+endday+31*6+30*4+28;
	}
	}
	else
	{
		if(startyear==endyear)
		{
			if((endyear%4==0&&endyear%100!=0)||(endyear%400==0))
			{
				if(startmonth==endmonth)
					day=endday-startday;
				else
				{
					for(month=(startmonth+1);month<endmonth;month++)
					{
						if((month==3)||(month==5)||(month==7)||(month==8)||(month==10)||(month==12))
							day=day+31;
						else
						{
							if((month==4)||(month==6)||(month==9)||(month==11))
								day=day+30;
							else
							{
								if(month==2)
									day=day+29;
							}
						}
					}
					if((startmonth==3)||(startmonth==5)||(startmonth==7)||(startmonth==8)||(startmonth==10)||(startmonth==12))
						day=day+(31-startday)+endday;
					else
						{
							if((startmonth==4)||(startmonth==6)||(startmonth==9)||(startmonth==11))
								day=day+30-startday+endday;
							else
							{
								if(startmonth==2)
									day=day+29-startday+endday;
							}
						}
				}
			}
			else
			{
				if(startmonth==endmonth)
					day=endday-startday;
				else
				{
					for(month=(startmonth+1);month<endmonth;month++)
					{
						if((month==3)||(month==5)||(month==7)||(month==8)||(month==10)||(month==12))
							day=day+31;
						else
						{
							if((month==4)||(month==6)||(month==9)||(month==11))
								day=day+30;
							else
							{
								if(month==2)
									day=day+28;
							}
						}
					}
					if((startmonth==3)||(startmonth==5)||(startmonth==7)||(startmonth==8)||(startmonth==10)||(startmonth==12))
						day=day+(31-startday)+endday;
					else
						{
							if((startmonth==4)||(startmonth==6)||(startmonth==9)||(startmonth==11))
								day=day+30-startday+endday;
							else
							{
								if(startmonth==2)
									day=day+28-startday+endday;
							}
						}
				}
			}
		}
	}

				

	printf("", day);

	return 0;
}


1000253
main()
{
	int year1, year2, mon1, mon2, date1, date2;
	scanf("", &year1, &mon1, &date1);
    scanf("", &year2, &mon2, &date2);
	int y[3000]={0};
	int n, i;
	n=year2-year1;
	y[0]=year1;
	for(i=0;i<=n;i++)
	{
	     if((y[i] % 4 == 0 && y[i] % 100 != 0) || (y[i] % 400 == 0))
		 {
             y[i+1]=y[i]+1;
			 y[i]=366;
         }
		 else
		 {
			 y[i+1]=y[i]+1;
			 y[i]=365;
		 }
	
	}
	int sum=0;
	if(n>=2)
	{for(i=1;i<n;i++)
	  sum=sum+y[i];
	}

   
		   if(mon2==1)
		   { 
		   if(mon1==1)sum=date2-1+sum+y[0]-date1;
		   if(mon1==2)sum=date2-1+sum+y[0]-31-date1;
		  
			   if(mon1==3)sum=date2-1+sum+y[0]-59-date1;
	           if(mon1==4)sum=date2-1+sum+y[0]-89-date1;
               if(mon1==5)sum=date2-1+sum+y[0]-120-date1; 
               if(mon1==6)sum=date2-1+sum+y[0]-150-date1; 
               if(mon1==7)sum=date2-1+sum+y[0]-181-date1; 
               if(mon1==8)sum=date2-1+sum+y[0]-212-date1;
               if(mon1==9)sum=date2-1+sum+y[0]-242-date1;
               if(mon1==10)sum=date2-1+sum+y[0]-273-date1;
		       if(mon1==11)sum=date2-1+sum+y[0]-303-date1;
               if(mon1==12)sum=date2-1+sum+y[0]-334-date1;
		    if(y[0]==366)
			{if(mon2>mon1)sum=sum+1;}
		   }
           if(mon2==2)
		   {
		       if(mon1==1)sum=31+date2-1+sum+y[0]-date1;
		       if(mon1==2)sum=31+date2-1+sum+y[0]-31-date1;
		       
			   if(mon1==3)sum=31+date2-1+sum+y[0]-59-date1;
	           if(mon1==4)sum=31+date2-1+sum+y[0]-89-date1;
               if(mon1==5)sum=31+date2-1+sum+y[0]-120-date1; 
               if(mon1==6)sum=31+date2-1+sum+y[0]-150-date1; 
               if(mon1==7)sum=31+date2-1+sum+y[0]-181-date1; 
               if(mon1==8)sum=31+date2-1+sum+y[0]-212-date1;
               if(mon1==9)sum=31+date2-1+sum+y[0]-242-date1;
               if(mon1==10)sum=31+date2-1+sum+y[0]-273-date1;
		       if(mon1==11)sum=31+date2-1+sum+y[0]-303-date1;
               if(mon1==12)sum=31+date2-1+sum+y[0]-334-date1;
			  if(y[0]==366)
			  {if(mon2>mon1)sum=sum+1;}
		   
		   }
           if(mon2==3)
		   {
		      if(mon1==1)sum=59+date2-1+sum+y[0]-date1;
		        if(mon1==2)sum=59+date2-1+sum+y[0]-31-date1;
		      
			   if(mon1==3)sum=59+date2-1+sum+y[0]-59-date1;
	           if(mon1==4)sum=59+date2-1+sum+y[0]-89-date1;
               if(mon1==5)sum=59+date2-1+sum+y[0]-120-date1; 
               if(mon1==6)sum=59+date2-1+sum+y[0]-150-date1; 
               if(mon1==7)sum=59+date2-1+sum+y[0]-181-date1; 
               if(mon1==8)sum=59+date2-1+sum+y[0]-212-date1;
               if(mon1==9)sum=59+date2-1+sum+y[0]-242-date1;
               if(mon1==10)sum=59+date2-1+sum+y[0]-273-date1;
		       if(mon1==11)sum=59+date2-1+sum+y[0]-303-date1;
               if(mon1==12)sum=59+date2-1+sum+y[0]-334-date1;
			  if(y[0]==366)
			 {if(mon2>mon1)sum=sum+1;}
		   

		   }
 
	       if(mon2==4)
		   {
		      if(mon1==1)sum=89+date2-1+sum+y[0]-date1;
		       if(mon1==2)sum=89+date2-1+sum+y[0]-31-date1;
		      
			   if(mon1==3)sum=89+date2-1+sum+y[0]-59-date1;
	           if(mon1==4)sum=89+date2-1+sum+y[0]-89-date1;
               if(mon1==5)sum=89+date2-1+sum+y[0]-120-date1; 
               if(mon1==6)sum=89+date2-1+sum+y[0]-150-date1; 
               if(mon1==7)sum=89+date2-1+sum+y[0]-181-date1; 
               if(mon1==8)sum=89+date2-1+sum+y[0]-212-date1;
               if(mon1==9)sum=89+date2-1+sum+y[0]-242-date1;
               if(mon1==10)sum=89+date2-1+sum+y[0]-273-date1;
		       if(mon1==11)sum=89+date2-1+sum+y[0]-303-date1;
               if(mon1==12)sum=89+date2-1+sum+y[0]-334-date1;
			  if(y[0]==366)
			 {if(mon2>mon1)sum=sum+1;}
		   }

           if(mon2==5)
		   {
		   if(mon1==1)sum=120+date2-1+sum+y[0]-date1;
		   if(mon1==2)sum=120+date2-1+sum+y[0]-31-date1;
		   
			   if(mon1==3)sum=120+date2-1+sum+y[0]-59-date1;
	           if(mon1==4)sum=120+date2-1+sum+y[0]-89-date1;
               if(mon1==5)sum=120+date2-1+sum+y[0]-120-date1; 
               if(mon1==6)sum=120+date2-1+sum+y[0]-150-date1; 
               if(mon1==7)sum=120+date2-1+sum+y[0]-181-date1; 
               if(mon1==8)sum=120+date2-1+sum+y[0]-212-date1;
               if(mon1==9)sum=120+date2-1+sum+y[0]-242-date1;
               if(mon1==10)sum=120+date2-1+sum+y[0]-273-date1;
		       if(mon1==11)sum=120+date2-1+sum+y[0]-303-date1;
               if(mon1==12)sum=120+date2-1+sum+y[0]-334-date1;
		       if(y[0]==366)
			   {if(mon2>mon1)sum=sum+1;}
		   
		   
		   }
           if(mon2==6)
		   {
		   if(mon1==1)sum=150+date2-1+sum+y[0]-date1;
		   if(mon1==2)sum=150+date2-1+sum+y[0]-31-date1;
		  
			   if(mon1==3)sum=150+date2-1+sum+y[0]-59-date1;
	           if(mon1==4)sum=150+date2-1+sum+y[0]-89-date1;
               if(mon1==5)sum=150+date2-1+sum+y[0]-120-date1; 
               if(mon1==6)sum=150+date2-1+sum+y[0]-150-date1; 
               if(mon1==7)sum=150+date2-1+sum+y[0]-181-date1; 
               if(mon1==8)sum=150+date2-1+sum+y[0]-212-date1;
               if(mon1==9)sum=150+date2-1+sum+y[0]-242-date1;
               if(mon1==10)sum=150+date2-1+sum+y[0]-273-date1;
		       if(mon1==11)sum=150+date2-1+sum+y[0]-303-date1;
               if(mon1==12)sum=150+date2-1+sum+y[0]-334-date1;
		      if(y[0]==366)
			  {if(mon2>mon1)sum=sum+1;}
		   
		   }

           if(mon2==7)
		   {
		   if(mon1==1)sum=181+date2-1+sum+y[0]-date1;
		   if(mon1==2)sum=181+date2-1+sum+y[0]-31-date1;
		   
			   if(mon1==3)sum=181+date2-1+sum+y[0]-59-date1;
	           if(mon1==4)sum=181+date2-1+sum+y[0]-89-date1;
               if(mon1==5)sum=181+date2-1+sum+y[0]-120-date1; 
               if(mon1==6)sum=181+date2-1+sum+y[0]-150-date1; 
               if(mon1==7)sum=181+date2-1+sum+y[0]-181-date1; 
               if(mon1==8)sum=181+date2-1+sum+y[0]-212-date1;
               if(mon1==9)sum=181+date2-1+sum+y[0]-242-date1;
               if(mon1==10)sum=181+date2-1+sum+y[0]-273-date1;
		       if(mon1==11)sum=181+date2-1+sum+y[0]-303-date1;
               if(mon1==12)sum=181+date2-1+sum+y[0]-334-date1;
		   if(y[0]==366)
			  {if(mon2>mon1)sum=sum+1;}
		   }
           if(mon2==8)
		   {
		   if(mon1==1)sum=212+date2-1+sum+y[0]-date1;
		   if(mon1==2)sum=212+date2-1+sum+y[0]-31-date1;
		   
			   if(mon1==3)sum=212+date2-1+sum+y[0]-59-date1;
	           if(mon1==4)sum=212+date2-1+sum+y[0]-89-date1;
               if(mon1==5)sum=212+date2-1+sum+y[0]-120-date1; 
               if(mon1==6)sum=212+date2-1+sum+y[0]-150-date1; 
               if(mon1==7)sum=212+date2-1+sum+y[0]-181-date1; 
               if(mon1==8)sum=212+date2-1+sum+y[0]-212-date1;
               if(mon1==9)sum=212+date2-1+sum+y[0]-242-date1;
               if(mon1==10)sum=212+date2-1+sum+y[0]-273-date1;
		       if(mon1==11)sum=212+date2-1+sum+y[0]-303-date1;
               if(mon1==12)sum=212+date2-1+sum+y[0]-334-date1;
		  if(y[0]==366)
			 {if(mon2>mon1)sum=sum+1;}
		   }
          if(mon2==9)
		  {
		   if(mon1==1)sum=242+date2+sum+y[0]-date1;
		   if(mon1==2)sum=242+date2-1+sum+y[0]-31-date1;
		  
			   if(mon1==3)sum=242+date2-1+sum+y[0]-59-date1;
	           if(mon1==4)sum=242+date2-1+sum+y[0]-89-date1;
               if(mon1==5)sum=242+date2-1+sum+y[0]-120-date1; 
               if(mon1==6)sum=242+date2-1+sum+y[0]-150-date1; 
               if(mon1==7)sum=242+date2-1+sum+y[0]-181-date1; 
               if(mon1==8)sum=242+date2-1+sum+y[0]-212-date1;
               if(mon1==9)sum=242+date2-1+sum+y[0]-242-date1;
               if(mon1==10)sum=242+date2-1+sum+y[0]-273-date1;
		       if(mon1==11)sum=242+date2-1+sum+y[0]-303-date1;
               if(mon1==12)sum=242+date2-1+sum+y[0]-334-date1;
		  if(y[0]==366)
			  {if(mon2>mon1)sum=sum+1;}
		  
		  }
          if(mon2==10)
		  {
		   if(mon1==1)sum=273+date2-1+sum+y[0]-date1;
		   if(mon1==2)sum=273+date2-1+sum+y[0]-31-date1;
		   
			   if(mon1==3)sum=273+date2-1+sum+y[0]-59-date1;
	           if(mon1==4)sum=273+date2-1+sum+y[0]-89-date1;
               if(mon1==5)sum=273+date2-1+sum+y[0]-120-date1; 
               if(mon1==6)sum=273+date2-1+sum+y[0]-150-date1; 
               if(mon1==7)sum=273+date2-1+sum+y[0]-181-date1; 
               if(mon1==8)sum=273+date2-1+sum+y[0]-212-date1;
               if(mon1==9)sum=273+date2-1+sum+y[0]-242-date1;
               if(mon1==10)sum=273+date2-1+sum+y[0]-273-date1;
		       if(mon1==11)sum=273+date2-1+sum+y[0]-303-date1;
               if(mon1==12)sum=273+date2-1+sum+y[0]-334-date1;
		   if(y[0]==366)
			  {if(mon2>mon1)sum=sum+1;}

		  }
          if(mon2==11)
		  {
		   if(mon1==1)sum=303+date2-1+sum+y[0]-date1;
		   if(mon1==2)sum=303+date2-1+sum+y[0]-31-date1;
		  
			   if(mon1==3)sum=303+date2-1+sum+y[0]-59-date1;
	           if(mon1==4)sum=303+date2-1+sum+y[0]-89-date1;
               if(mon1==5)sum=303+date2-1+sum+y[0]-120-date1; 
               if(mon1==6)sum=303+date2-1+sum+y[0]-150-date1; 
               if(mon1==7)sum=303+date2-1+sum+y[0]-181-date1; 
               if(mon1==8)sum=303+date2-1+sum+y[0]-212-date1;
               if(mon1==9)sum=303+date2-1+sum+y[0]-242-date1;
               if(mon1==10)sum=303+date2-1+sum+y[0]-273-date1;
		       if(mon1==11)sum=303+date2-1+sum+y[0]-303-date1;
               if(mon1==12)sum=303+date2-1+sum+y[0]-334-date1;
		   if(y[0]==366)
			  {if(mon2>mon1)sum=sum+1;}

		  }
          if(mon2==12)
		  {
		   if(mon1==1)sum=334+date2-1+sum+y[0]-date1;
		   if(mon1==2)sum=334+date2-1+sum+y[0]-31-date1;
		  
			   if(mon1==3)sum=334+date2-1+sum+y[0]-59-date1;
	           if(mon1==4)sum=334+date2-1+sum+y[0]-89-date1;
               if(mon1==5)sum=334+date2-1+sum+y[0]-120-date1; 
               if(mon1==6)sum=334+date2-1+sum+y[0]-150-date1; 
               if(mon1==7)sum=334+date2-1+sum+y[0]-181-date1; 
               if(mon1==8)sum=334+date2-1+sum+y[0]-212-date1;
               if(mon1==9)sum=334+date2-1+sum+y[0]-242-date1;
               if(mon1==10)sum=334+date2-1+sum+y[0]-273-date1;
		       if(mon1==11)sum=334+date2-1+sum+y[0]-303-date1;
               if(mon1==12)sum=334+date2-1+sum+y[0]-334-date1;
		       if(y[0]==366)
			   {if(mon2>mon1)sum=sum+1;}
		  }
		
		  
     if(y[n]==366)
	 {if(mon2>mon1)sum=sum+1;}
	
	
	if(n==0)sum=sum-y[0];
	printf("", sum+1);
	return 0;


}		


1000254
main()
{
    int n,i,p,q,c,d;
    int a[100000];
    scanf("",&n);
    struct student
    { int num;
      int score1;
      int score2;
    }stu[100000];
    for(i=0;i<n;i++)
    {
                    scanf("",&stu[i].num,&stu[i].score1,&stu[i].score2);
    }
    for(i=0;i<n;i++)
    {
                    a[i]=stu[i].score1+stu[i].score2;
    }
    int max1,max2,max3;
    int num1,num2,num3;
    if(a[0]>=a[1])
    {
                 max1= a[0];
                 num1=0;
                 if(a[0]<a[2])
                 {
                              max1=a[2];
                              num1=2;
                              max2=a[0];
                              num2=0;
                              max3=a[1];
                              num3=1;
                 }
                 else
                 {
                     if(a[1]>=a[2])
                     {
                                  max2=a[1];
                                  num2=1;
                                  max3=a[2];
                                  num3=2;
                     }
                     else
                     {
                                  max2=a[2];
                                  num2=2;
                                  max3=a[1];
                                  num3=1;
                     }
                 }
    }
    else
    {
                 max1= a[1];
                 num1=1;
                 if(a[1]<a[2])
                 {
                              max1=a[2];
                              num1=2;
                              max2=a[1];
                              num2=1;
                              max3=a[0];
                              num3=0;
                 }
                 else
                 {
                     if(a[0]>=a[2])
                     {
                                  max2=a[0];
                                  num2=0;
                                  max3=a[2];
                                  num3=2;
                     }
                     else
                     {
                                  max2=a[2];
                                  num2=2;
                                  max3=a[0];
                                  num3=0;
                     }
                 }
    }
    for(i=3;i<n;i++)
    {
                if(a[i]>max1)
                {
                                  p=max1;q=max2;c=num1;d=num2; 
                                  max1=a[i];max2=p;max3=q;
                                  num1=i;num2=c;num3=d;
                }
                else
                {if(a[i]>max2&&a[i]<=max1)
                     {
                                 p=max2;c=num2;
                                 max2=a[i];max3=p;
                                 num2=i;num3=c;
                     }
                else
                {
                    if(a[i]>max3&&a[i]<=max2)
                    {
                                 max3=a[i];num3=i;
                    }
                }
                }

    }
    printf("",num1+1,a[num1],num2+1,a[num2],num3+1,a[num3]);
    getchar();
    getchar();
    getchar();               
 
}

1000255
main()
{
    int x1,y1,x2,y2,a[100][100],b[100][100],i,j,q,c[100][100];
    cin>>x1>>y1;
    for(i=0;i<=x1-1;i++)
    {
                      for(j=0;j<=y1-1;j++)
                      {
                                        cin>>a[i][j];
                                        

                                        }
                                        }
                                        cin>>x2>>y2;
                                        for(i=0;i<=x2-1;i++)
                                        {
                                                          for(j=0;j<=y2-1;j++)
                                                          {
                                                                            cin>>b[i][j];
                                                                            }
                                                                            }
               for(i=0;i<=x1-1;i++)
     {
                       for(j=0;j<=y2-1;j++)
                       {
                                           c[i][j]=0;
                                           }
                                           }                                                              
                                                                            
                                                                            
     for(i=0;i<=x1-1;i++)
     {
                       for(j=0;j<=y2-1;j++)
                       {
                       for(q=0;q<=y1-1;q++)
                       {
                                           c[i][j]=c[i][j]+a[i][q]*b[q][j];
                                           }
                                           }
                                           }
                                           
               for(i=0;i<=x1-1;i++)
     {             if(y2!=1)
                   
                   
                  { cout<<c[i][0];
                       for(j=1;j<=y2-1;j++)
                       {                  
                                           cout<<""<<c[i][j];
                                           if(j==y2-1)
                                           {
                                                      cout<<endl;
                                                      }
                                                      }
                                                      }
                                                      else
                                                      {
                                                          cout<<c[i][0]<<endl;
                                                          }
                                                          }
                                                                                   
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
    
    
    
    return 0;
}


1000256
main (void)
{
    int i, j, m, n;
    
    scanf ("", &m, &n);
    int block[m+2][n+2], mark[m+2][n+2];
    
    for (i = 0; i < n + 2; i++) {
        block[0][i] = -1;
        block[m+1][i] = -1;
    }
    for (i = 1; i < m + 1; i++) {
        block[i][0] = -1;
        block[i][n+1] = -1;
    }
    
    for (i = 1; i <= m; i++)
        for (j = 1; j <= n; j++) {
            scanf ("", &block[i][j]);
            mark[i][j] = 0;
        }
    for (i = 1; i <=m; i++)
        for (j = 1; j <= n; j++)
            if (mark[i][j] != -1) {
                            if (block[i][j] < block[i][j+1]) {
                                            mark[i][j] = -1;
                                            continue;
                            }
                            if (block[i][j] > block[i][j+1])
                                 mark[i][j+1] = -1;
                            if (block[i][j] < block[i+1][j]) {
                                            mark[i][j] = -1;
                                            continue;
                            }
                            if (block[i][j] > block[i+1][j])
                                 mark[i+1][j] = -1;
                            if (block[i][j] < block[i-1][j]) {
                                            mark[i][j] = -1;
                                            continue;
                            }
                            if (block[i][j] > block[i-1][j])
                                 mark[i-1][j] = -1;
                            if (block[i][j] < block[i][j-1]) {
                                            mark[i][j] = -1;
                                            continue;
                            }
                            if (block[i][j] > block[i][j-1])
                                 mark[i][j-1] = -1;
                            printf ("", i-1, j-1);
            }
    
    return 0;
}


1000257
main()
{
int m,n;
scanf("",&m,&n);
int sz[m][n];
int row,col;
for(row=0;row<m;row++){
  for(col=0;col<n;col++){
     scanf("",&sz[row][col]);
  }
}
int a[400],b[400];
int i;
i=0;
for(row=0;row<m;row++){
  for(col=0;col<n;col++){
    if(row==0&&col==0){
       if(sz[row][col]>=sz[row][col+1]&&sz[row][col]>=sz[row+1][col]){
                 a[i]=row;
                 b[i]=col;
                 i++; 
       }
    }
    if(row==0&&col==n-1){
        if(sz[row][col]>=sz[row][col-1]&&sz[row][col]>=sz[row+1][col]){
                a[i]=row;
                 b[i]=col;
                 i++; 
         }
    }
    if(row==m-1&&col==0){
        if(sz[row][col]>=sz[row-1][col]&&sz[row][col]>=sz[row][col+1]){
                a[i]=row;
                 b[i]=col;
                 i++; 
         }
     }
    if(row==m-1&&col==n-1){
        if(sz[row][col]>=sz[row-1][col]&&sz[row][col]>=sz[row][col-1]){
               a[i]=row;
                 b[i]=col;
                i++; 
         }
     }
    if(row==0){
         if(sz[row][col]>=sz[row+1][col]&&sz[row][col]>=sz[row][col-1]&&sz[row][col]>=sz[row][col+1]){ 
           a[i]=row;
           b[i]=col;
            i++; 
         }
     }
    if(row==m-1){
          if(sz[row][col]>=sz[row-1][col]&&sz[row][col]>=sz[row][col-1]&&sz[row][col]>=sz[row][col+1]){
             a[i]=row;
           b[i]=col; 
             i++; 
         }
     }
    if(col==0){
          if(sz[row][col]>=sz[row-1][col]&&sz[row][col]>=sz[row+1][col]&&sz[row][col]>=sz[row][col+1]){
             a[i]=row;
           b[i]=col; 
            i++; 
         }
     }
     if(col==n-1){
           if(sz[row][col]>=sz[row-1][col]&&sz[row][col]>=sz[row+1][col]&&sz[row][col]>=sz[row][col-1]){
            a[i]=row;
           b[i]=col; 
            i++; 
         }
     }
     if(sz[row][col]>=sz[row-1][col]&&sz[row][col]>=sz[row+1][col]&&sz[row][col]>=sz[row][col-1]&&sz[row][col]>=sz[row][col+1]){
       a[i]=row;
       b[i]=col;
       i++; 
     }
   
   }
}
int k;
for( k = 0;k < i; k++ ){
      printf("",a[k],b[k]);
}
return 0;
}

1000258
main()
{
	int y1,y2,m1,m2,d1,d2;
	int sum1,sum2,x1,x2,final;
	scanf("",&y1,&m1,&d1);
	scanf("",&y2,&m2,&d2);
	if((y1 % 4 == 0 && y1 % 100 != 0) || (y1 % 400 == 0))
	{ switch(m1)
	{
	            case 1:x1=d1;break;
				case 2:x1=31+d1;break;
				case 3:x1=31+29+d1;break;
				case 4:x1=31+29+31+d1;break;
				case 5:x1=31+29+31+30+d1;break;
				case 6:x1=31+29+31+30+31+d1;break;
				case 7:x1=31+29+31+30+31+30+d1;break;
			    case 8:x1=31+29+31+30+31+30+31+d1;break;
				case 9:x1=31+29+31+30+31+30+31+31+d1;break;
				case 10:x1=31+29+31+30+31+30+31+31+30+d1;break;
				case 11:x1=31+29+31+30+31+30+31+31+30+31+d1;break;
				case 12:x1=31+29+31+30+31+30+31+31+30+31+30+d1;break;
	}
		sum1=365*(y1-1)+x1+(y1-1)/4-y1/100+y1/400; 
	}
	else
	{
         switch(m1)
	{
	            case 1:x1=d1;break;
				case 2:x1=31+d1;break;
				case 3:x1=31+28+d1;break;
				case 4:x1=31+28+31+d1;break;
				case 5:x1=31+28+31+30+d1;break;
				case 6:x1=31+28+31+30+31+d1;break;
				case 7:x1=31+28+31+30+31+30+d1;break;
			    case 8:x1=31+28+31+30+31+30+31+d1;break;
				case 9:x1=31+28+31+30+31+30+31+31+d1;break;
				case 10:x1=31+28+31+30+31+30+31+31+30+d1;break;
				case 11:x1=31+28+31+30+31+30+31+31+30+31+d1;break;
				case 12:x1=31+28+31+30+31+30+31+31+30+31+30+d1;break;
	}
		 sum1=365*(y1-1)+x1+y1/4-y1/100+y1/400;
	}
	if((y2 % 4 == 0 && y2 % 100 != 0) || (y2 % 400 == 0))
	{
       switch(m2)
	{
	            case 1:x2=d2;break;
				case 2:x2=31+d2;break;
				case 3:x2=31+29+d2;break;
				case 4:x2=31+29+31+d2;break;
				case 5:x2=31+29+31+30+d2;break;
				case 6:x2=31+29+31+30+31+d2;break;
				case 7:x2=31+29+31+30+31+30+d2;break;
			    case 8:x2=31+29+31+30+31+30+31+d2;break;
				case 9:x2=31+29+31+30+31+30+31+31+d2;break;
				case 10:x2=31+29+31+30+31+30+31+31+30+d2;break;
				case 11:x2=31+29+31+30+31+30+31+31+30+31+d2;break;
				case 12:x2=31+29+31+30+31+30+31+31+30+31+30+d2;break;
	}
		sum2=365*(y2-1)+x2+(y2-1)/4-y2/100+y2/400;
	}
	else
	{
         switch(m2)
	{
	            case 1:x2=d2;break;
				case 2:x2=31+d2;break;
				case 3:x2=31+28+d2;break;
				case 4:x2=31+28+31+d2;break;
				case 5:x2=31+28+31+30+d2;break;
				case 6:x2=31+28+31+30+31+d2;break;
				case 7:x2=31+28+31+30+31+30+d2;break;
			    case 8:x2=31+28+31+30+31+30+31+d2;break;
				case 9:x2=31+28+31+30+31+30+31+31+d2;break;
				case 10:x2=31+28+31+30+31+30+31+31+30+d2;break;
				case 11:x2=31+28+31+30+31+30+31+31+30+31+d2;break;
				case 12:x2=31+28+31+30+31+30+31+31+30+31+30+d2;break;
	}
		 sum2=365*(y2-1)+x2+y2/4-y2/100+y2/400;
	}
     final=sum2-sum1;
	 printf("",final);
}

1000259
main()
{
	int yearr[13] = {0, 31,29,31,30,31,30,31,31,30,31,30,31};
	int yearp[13] = {0, 31,28,31,30,31,30,31,31,30,31,30,31};

	int sty = 0;
	int stm = 0;
	int str = 0;

	int eny = 0;
	int enm = 0;
	int enr = 0;

	int i = 0;
	int t = 0;
	int j = 0;

	int day = 0;
	int year = 0;
	int mon = 0;


	cin >> sty;
	cin >> stm;
	cin >> str;
	cin >> eny;
	cin >> enm;
	cin >> enr;

	for( i = 0;i <= eny - sty;i++ )
	{
		year = sty + i;

		if((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0) ) 
		{
			if( year == sty && year != eny)
			{
				for( t = stm;t <= 12;t++ )
				{
					if( t == stm)
						day += yearr[t] - str;
					else
						day += yearr[t];
				}
			}
			if( year == eny && year != sty )
			{
				for( t =1;t <= enm;t++)
				{
					if( t== enm)
						day += enr;
					else
						day += yearr[t];
				}
			}

			if( year != eny && year!= sty )
			{
				for( t =1;t <= 12;t++ )
					day += yearr[t];
			}
			if( year == eny && year == sty )
			{
				if( stm == enm )
					day += enr - str;
				else
				{
					for( t = stm;t <= enm;t++ )
					{
						if( t == stm )
							day += yearr[t] - str;
						if( t == enm )
						{
							day += enr;
						}
						if( t!= stm && t!= enm )
							day += yearr[t];
					}
				}
			}
		}
		else
		{
			if( year == sty && year != eny)
			{
				for( t = stm;t <= 12;t++ )
				{
					if( t == stm)
						day += yearp[t] - str;
					else
						day += yearp[t];
				}
			}
			if( year == eny && year != sty )
			{
				for( t =1;t <= enm;t++)
				{
					if( t== enm)
						day += enr;
					else
						day += yearp[t];
				}
			}

			if( year != eny && year!= sty )
			{
				for( t =1;t <= 12;t++ )
					day += yearp[t];
			}
			if( year == eny && year == sty )
			{
				if( stm == enm )
					day += enr - str;
				else
				{
					for( t = stm;t <= enm;t++ )
					{
						if( t == stm )
							day += yearp[t] - str;
						if( t == enm )
						{
							day += enr;
						}
						if( t!= stm && t!= enm )
							day += yearp[t];
					}
				}
			}

		}
	}

	cout << day;

	cin >> i;

	return 0;
}

		







1000260
main(){
	char zfc[100];
	int n;
    int k;
	int i=0,j=0;
    gets(zfc);
	k=strlen(zfc);
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
	for(i=0;i<k;i++){
		if(zfc[i]==''&&zfc[i+1]==''){
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j+1];
			}
		}else{
			for(j=i+1;j<k;j++){
				zfc[j]=zfc[j];
			}
		}
	}
			
	printf("",zfc);
		
	return 0;
}

1000261
if(p->age>=60)
		{
			strcpy(p1->id,"");
			strcpy(p1->id,p->id);
			p1->age=p->age;
			p2->next=p1;
            p2=p1;            
		}		
		p1=(struct patient *)malloc(sizeof(struct patient));
		p=p->next;
	}
	p2->next=NULL;
	return(old);
}
struct sort(struct patient *head)   
{
	struct patient head0,end0;
	struct patient *p0,*p1,*p2,*p;
	head0.next=head;
	p=head;
	while(p->next!=NULL)
		p=p->next;
	p=p->next=&end0;
	while(p!=head0.next)   
	{
		p0=&head0;
		p1=p0->next;
		p2=p1->next;
		while(p2!=p)
		{
			if((p1->age)<(p2->age))
			{
				p0->next=p2;
				p1->next=p2->next;
				p2->next=p1;
				p0=p2;
				p2=p1->next;
			}
			else
			{
				p0=p1;
				p1=p2;
				p2=p2->next;
			}
		}
		p=p1;
	}
	while(p->next!=&end0)
		p=p->next;
	p->next=NULL;
	return(p1);
}
print2(struct patient *head)   
{
	struct patient *p;
	p=head;
	while(p!=NULL)
	{
	   if(p->age<60) printf("",p->id),p=p->next;
	   else p=p->next;
	}	
}
print1(struct patient *head)    
{
	struct patient *p;
	p=head;
	while(p!=NULL)
	{
		printf("",p->id);
		p=p->next;
	}
}
main()
{
	struct creat(int num);
	struct old(struct patient *head);
    struct sort(struct patient *head);
	print1(struct patient *head);
	print2(struct patient *head);
	struct patient *head,*oldp,*sortold;  
	int num;
	scanf("",&num);
	head=creat(num);
	oldp=old(head);
	sortold=sort(oldp);
	print1(sortold);
	print2(head);
}

1000262
main(void)
{
    scanf("",&year[0],&month[0],&day[0]);
    scanf("",&year[1],&month[1],&day[1]);
    for (i=year[0]+1;i<year[1];i++)
    {
        if ((i % 4 == 0 && i % 100 != 0) || (i % 400 == 0))
        days+=366;
        else days+=365;
    }
    if (year[0]!=year[1])
    {
          for (i=month[0]+1;i<=12;i++)
             switch (i)
             {
              case 1:case 3:case 5:case 7:case 8:case 10:case 12:days+=31;break;
              case 2:
                  if ((year[0] % 4 == 0 && year[0] % 100 != 0) || (year[0] % 400 == 0))
                     days+=29;
                     else days+=28;
                  break;
              default:days+=30;
             }
          for (i=1;i<=month[1]-1;i++)
             switch (i)
             {
              case 1:case 3:case 5:case 7:case 8:case 10:case 12:days+=31;break;
              case 2:
                  if ((year[1] % 4 == 0 && year[1] % 100 != 0) || (year[1] % 400 == 0))
                     days+=29;
                     else days+=28;
                  break;
              default:days+=30;
             }
          for (k=0;k<2;k++)
              switch (month[k])
             {
              case 1:case 3:case 5:case 7:case 8:case 10:case 12:days+=(int)fabs(31*(int)fabs(k-1)-day[k]);break;
              case 2:
                  if ((year[k] % 4 == 0 && year[k] % 100 != 0) || (year[k] % 400 == 0))
                     days+=(int)fabs(29*(int)fabs(k-1)-day[k]);
                     else days+=(int)fabs(28*(int)fabs(k-1)-day[k]);
                  break;
              default:days+=(int)fabs(30*(int)fabs(k-1)-day[k]);
             }
    }
    if (month[0]!=month[1])
           {
                    for (i=month[0]+1;i<=month[1]-1;i++)
                      switch (i)
                      {
                      case 1:case 3:case 5:case 7:case 8:case 10:case 12:days+=31;break;
                      case 2:
                      if ((year[1] % 4 == 0 && year[1] % 100 != 0) || (year[1] % 400 == 0))
                      days+=29;
                      else days+=28;
                      break;
                      default:days+=30;
                      }
                    for (k=0;k<2;k++)
                     switch (month[k])
                      {
                       case 1:case 3:case 5:case 7:case 8:case 10:case 12:days+=(int)fabs(31*(int)fabs(k-1)-day[k]);break;
                       case 2:
                        if ((year[k] % 4 == 0 && year[k] % 100 != 0) || (year[k] % 400 == 0))
                        days+=(int)fabs(29*(int)fabs(k-1)-day[k]);
                         else days+=(int)fabs(28*(int)fabs(k-1)-day[k]);
                        break;
                       default:days+=(int)fabs(30*(int)fabs(k-1)-day[k]);
                      }
           }
           else days+=day[1]-day[0];
    printf("",days);
    return 0;
}            


1000263
main(){
	int n,i,j,k=0,z;
	int a[10][3];
    scanf("",&n);
    
    for(i=0;i<n;i++){
                      
                     if(i==0){
                     scanf("",&a[0][0],&a[0][1],&a[0][2]);
                    }
                     else{
                     scanf("",&a[i][0],&a[i][1],&a[i][2]);}
                     }
    struct {
           int b[3],c[3];
           float d;
           }x[46];
    
    for(i=0;i<n;i++){
                     for(j=i+1;j<n;j++){
                                        
                                        x[k].b[0]=a[i][0];
                                      
                                        x[k].b[1]=a[i][1];
                                        x[k].b[2]=a[i][2];
                                        x[k].c[0]=a[j][0];
                                        x[k].c[1]=a[j][1];
                                        x[k].c[2]=a[j][2];
                                        x[k].d=sqrt((a[i][0]-a[j][0])*(a[i][0]-a[j][0])+(a[i][1]-a[j][1])*(a[i][1]-a[j][1])+(a[i][2]-a[j][2])*(a[i][2]-a[j][2]));
                                        k++;
                                        }
                                        }
    
    
    for(i=0;i<k;i++){
                     for(j=k-1;j>i;j--){
                                        if(x[j].d>x[j-1].d){
                                                            x[45]=x[j];
                                                            x[j]=x[j-1];
                                                            x[j-1]=x[45];
                                                            }
                                                            }
                                                            }
    for(i=0;i<k;i++){
                     printf("",x[i].b[0],x[i].b[1],x[i].b[2],x[i].c[0],x[i].c[1],x[i].c[2],x[i].d);
                     }
                                                            
                                                            
    
    
    
return 0;}


1000264
main()
{
	int year1,month1,date1,year2,month2,date2;                             
	int year_2;                                                            
	int year,month,date;
	scanf("",&year1,&month1,&date1,&year2,&month2,&date2);
	year_2=year2;
	if(date1<=date2) date=date2-date1;
	else 		
	{
		month2=month2-1; 
		        if((month2<=7&&month2%2!=0)||(month2>7&&month2%2==0))     
                date=date2-date1+31;
	            if(month2!=2) 
			    date=date2-date1+30;
                     if((year2%4==0&&year2%100!=0)||(year2%400==0))           
						  date=date2-date1+29;
					      else date=date2-date1+28;
	}
	if(month2>=month1) month=month2-month1;
	else             
	{
		month=month2-month1+12;
		year_2=year2-1;
	}
	year=year_2-year1;

	

	int day,monthday,yearday;                     
	int monthday1=0,monthday2=0;
	day=0;
    monthday=0;
	int judgeyear2;                               
	int i;
	if(month1+month>=12) judgeyear2=year_2;
	else judgeyear2=year2;
	for(i=1;i<=month1-1;i++)                         
        if(i<=12)                                                                   
			if((i<=7&&i%2!=0)||(i>7&&i%2==0)) monthday1=monthday1+31;
			if(i==2) 
				{
				    if((year1%4==0&&year1%100!=0)||(year1%400==0))           
			                  monthday1=monthday1+29;
	                else monthday1=monthday1+28;
				}
				 else monthday1=monthday1+30;
	for(i=1;i<=month1+month-1;i++)                                      
		if(i>12)
			if(((i-12)<=7&&(i-12)%2!=0)||((i-12)>7&&(i-12)%2==0)) monthday2=monthday2+31;
			if((i-12)==2)
				{
				    if((year2%4==0&&year2%100!=0)||(year2%400==0))           
			                  monthday2=monthday2+29;
	                else monthday2=monthday2+28;
				}
				 else monthday2=monthday2+30;
		if((i<=7&&i%2!=0)||(i>7&&i%2==0)) monthday2=monthday2+31;
			if(i==2)
				{
				    if((judgeyear2%4==0&&judgeyear2%100!=0)||(judgeyear2%400==0))           
			                  monthday2=monthday2+29;
	                else monthday2=monthday2+28;
				}
				 else monthday2=monthday2+30;
	monthday=monthday2-monthday1;
	yearday=365*year;                                        
    int j;
	year2=year_2;
	for(j=year1;j<=year2-1;j++)
	    if((j%4==0&&j%100!=0)||(j%400==0))
			yearday=yearday+1;
		else continue;
	day=date+monthday+yearday;

	printf("",day);

	return 0;

    
}


1000265
main()
{
	int y,m,d,x;
	scanf("",&y,&m,&d);
    if (y%4==0)
	    if (y%100==0)
			if (y%400==0){
	            switch(m){
		          case 1:
			       x=d;
			       break;
                  case 2:
			       x=31+d;
			       break;
		          case 3:
			       x=31+29+d;
			       break;
		          case 4:
		           x=31+29+31+d;
			       break;
		          case 5:
			       x=31+29+31+30+d;
			       break;
		          case 6:
			       x=31+29+31+30+31+d;
			       break;
		          case 7:
			       x=31+29+31+30+31+30+d;
			       break;
		          case 8:
			       x=31+29+31+30+31+30+31+d;
			       break;
		          case 9:
			       x=31+29+31+30+31+30+31+31+d;
			       break;
		          case 10:
			       x=31+29+31+30+31+30+31+31+30+d;
			       break;
                  case 11:
			       x=31+29+31+30+31+30+31+31+30+31+d;
			       break;
		          case 12:
			       x=31+29+31+30+31+30+31+31+30+31+30+d;
			       break;}
	              printf("",x);}
			else{
                switch(m){
		case 1:
			x=d;
			break;
        case 2:
			x=31+d;
			break;
		case 3:
			x=31+28+d;
			break;
		case 4:
			x=31+28+31+d;
			break;
		case 5:
			x=31+28+31+30+d;
			break;
		case 6:
			x=31+28+31+30+31+d;
			break;
		case 7:
			x=31+28+31+30+31+30+d;
			break;
		case 8:
			x=31+28+31+30+31+30+31+d;
			break;
		case 9:
			x=31+28+31+30+31+30+31+31+d;
			break;
		case 10:
			x=31+28+31+30+31+30+31+31+30+d;
			break;
        case 11:
			x=31+28+31+30+31+30+31+31+30+31+d;
			break;
		case 12:
			x=31+28+31+30+31+30+31+31+30+31+30+d;
			break;}
				printf("",x);}
		else{
            switch(m){
		case 1:
			x=d;
			break;
        case 2:
			x=31+d;
			break;
		case 3:
			x=31+29+d;
			break;
		case 4:
			x=31+29+31+d;
			break;
		case 5:
			x=31+29+31+30+d;
			break;
		case 6:
			x=31+29+31+30+31+d;
			break;
		case 7:
			x=31+29+31+30+31+30+d;
			break;
		case 8:
			x=31+29+31+30+31+30+31+d;
			break;
		case 9:
			x=31+29+31+30+31+30+31+31+d;
			break;
		case 10:
			x=31+29+31+30+31+30+31+31+30+d;
			break;
        case 11:
			x=31+29+31+30+31+30+31+31+30+31+d;
			break;
		case 12:
			x=31+29+31+30+31+30+31+31+30+31+30+d;
			break;}
	               printf("",x);}
	else{
         switch(m){
		case 1:
			x=d;
			break;
        case 2:
			x=31+d;
			break;
		case 3:
			x=31+28+d;
			break;
		case 4:
			x=31+28+31+d;
			break;
		case 5:
			x=31+28+31+30+d;
			break;
		case 6:
			x=31+28+31+30+31+d;
			break;
		case 7:
			x=31+28+31+30+31+30+d;
			break;
		case 8:
			x=31+28+31+30+31+30+31+d;
			break;
		case 9:
			x=31+28+31+30+31+30+31+31+d;
			break;
		case 10:
			x=31+28+31+30+31+30+31+31+30+d;
			break;
        case 11:
			x=31+28+31+30+31+30+31+31+30+31+d;
			break;
		case 12:
			x=31+28+31+30+31+30+31+31+30+31+30+d;
			break;}
		 printf("",x);}
	return 0;
}

1000266
main ( )
{
	int array[100][100];              
	int row, col;                     
	cin >> row >> col;     
	int i,j,k,a,b,c,d;                
	int A=0,B=0,C=0;                  
	int sum=0;                        
	for( i = 0 ; i <= row - 1 ; i++ )
	{
		for( j = 0 ; j <= col - 1 ; j++ )
		{
			cin >> array[i][j] ;      
		}
	}
	for( k = 0 ; ; k++ )               
	{
		for( a = k ; a <= col - k - 1 ; a++ ) 
		{
			cout << array[k][a] << endl ;      
			sum++ ;                            
			if( a == col - k - 1 )
				A = array[k][a] ;               
		}
		if( sum == row * col )
			break ;                            
		for( b = k ; b <= row - k - 1 ; b++ )
		{
			if( array[b][col-k-1] == A )
				continue ;                      
			cout << array[b][col-k-1] << endl ; 
			sum++ ;                            
			if(b == row - k - 1 )     
				B = array[b][col-k-1] ;         
		}
		if( sum == row * col )
			break;                              
		for( c = col - k - 1 ; c >= k ; c-- )
		{
			if( array[row-k-1][c] == B )
				continue ;                     
			cout << array[row-k-1][c] << endl ;
			sum++ ;                            
			if( c == k )
				C = array[row-k-1][c] ;       
		}
		if( sum == row * col )
			break ;                            
		for( d = row - k - 1 ; d >= k+1 ; d-- )
		{
			if( array[d][k] == C )
				continue ;                    
			cout << array[d][k] << endl ;
			sum++ ;                           
		}
		if( sum == row*col )
			break ;                            
	}
	return 0 ;
}

1000267
main()
{   
	count(int,int);
	int a,b,len1,len2,i,m=0,x=0;
	long int t=0,r;
	char n[20],s[50]={'\0'};
	scanf("",&a,n,&b);
    len1=strlen(n);
	for(i=len1-1;i>=0;i--)
	{
		switch(n[i])
		{
		case '':t=t;break;
		case '':t=t+count(a,len1-1-i);break;
		case '':t=t+2*(count(a,len1-1-i));break;
		case '':t=t+3*(count(a,len1-1-i));break;
		case '':t=t+4*(count(a,len1-1-i));break;
		case '':t=t+5*(count(a,len1-1-i));break;
		case '':t=t+6*(count(a,len1-1-i));break;
		case '':t=t+7*(count(a,len1-1-i));break;
		case '':t=t+8*(count(a,len1-1-i));break;
		case '':t=t+9*(count(a,len1-1-i));break;
		case '':t=t+10*(count(a,len1-1-i));break;
		case '':t=t+10*(count(a,len1-1-i));break;
		case '':t=t+11*(count(a,len1-1-i));break;
		case '':t=t+11*(count(a,len1-1-i));break;
		case '':t=t+12*(count(a,len1-1-i));break;
		case '':t=t+12*(count(a,len1-1-i));break;
		case '':t=t+13*(count(a,len1-1-i));break;
	    case '':t=t+13*(count(a,len1-1-i));break;
		case '':t=t+14*(count(a,len1-1-i));break;
		case '':t=t+14*(count(a,len1-1-i));break;
		case '':t=t+15*(count(a,len1-1-i));break;
		case '':t=t+15*(count(a,len1-1-i));break;
		case '':t=t+16*(count(a,len1-1-i));break;
		case '':t=t+16*(count(a,len1-1-i));break;
		case '':t=t+17*(count(a,len1-1-i));break;
		case '':t=t+17*(count(a,len1-1-i));break;
		case '':t=t+18*(count(a,len1-1-i));break;
		case '':t=t+18*(count(a,len1-1-i));break;
		case '':t=t+19*(count(a,len1-1-i));break;
		case '':t=t+19*(count(a,len1-1-i));break;
		case '':t=t+20*(count(a,len1-1-i));break;
		case '':t=t+20*(count(a,len1-1-i));break;
		case '':t=t+21*(count(a,len1-1-i));break;
		case '':t=t+21*(count(a,len1-1-i));break;
		case '':t=t+22*(count(a,len1-1-i));break;
		case '':t=t+22*(count(a,len1-1-i));break;
		case '':t=t+23*(count(a,len1-1-i));break;
		case '':t=t+23*(count(a,len1-1-i));break;
		case '':t=t+24*(count(a,len1-1-i));break;
		case '':t=t+24*(count(a,len1-1-i));break;
		case '':t=t+25*(count(a,len1-1-i));break;
		case '':t=t+25*(count(a,len1-1-i));break;
		case '':t=t+26*(count(a,len1-1-i));break;
		case '':t=t+26*(count(a,len1-1-i));break;
		case '':t=t+27*(count(a,len1-1-i));break;
		case '':t=t+27*(count(a,len1-1-i));break;
		case '':t=t+28*(count(a,len1-1-i));break;
		case '':t=t+28*(count(a,len1-1-i));break;
		case '':t=t+29*(count(a,len1-1-i));break;
		case '':t=t+29*(count(a,len1-1-i));break;
		case '':t=t+30*(count(a,len1-1-i));break;
			case '':t=t+30*(count(a,len1-1-i));break;
			case '':t=t+31*(count(a,len1-1-i));break;
			case '':t=t+31*(count(a,len1-1-i));break;
			case '':t=t+32*(count(a,len1-1-i));break;
			case '':t=t+32*(count(a,len1-1-i));break;
			case '':t=t+33*(count(a,len1-1-i));break;
			case '':t=t+33*(count(a,len1-1-i));break;
			case '':t=t+34*(count(a,len1-1-i));break;
			case '':t=t+34*(count(a,len1-1-i));break;
			case '':t=t+20*(count(a,len1-1-i));break;
			case '':t=t+20*(count(a,len1-1-i));break;
		}
	}
	r=t; 
	do
	{   
		t=r;
		x=t%b;
		if(x>=0&&x<=9)
		{
		 s[m]=x+48;m++;
		}
		if(x>9)
		{
		 s[m]=x+55;m++;
		}
		r=t/b;
	}while(r>=b);
	if(r>0&&r<=9)
		{
		 s[m]=r+48;
		}
	if(r>9)
		{
			s[m]=r+55;
		}
	len2=strlen(s);
	for(i=len2-1;i>=0;i--)
	{
		printf("",s[i]);
	}
	return 0;
}
count(int a,int h)
{
	int y,s=1;
	if(h==0) s=1;
	else
	{
		for(y=0;y<h;y++)
		{
		s=s*a;
		}
	}
	return s;

}

1000268
CreateNewLink()
{
	struct YyxLink *newLn;
	if((newLn=(struct YyxLink*)malloc(sizeof(struct YyxLink)))==NULL){
		printf("");
		exit(-1);
	}
	newLn->n = 0;
	newLn->head = NULL;
	newLn->tail = NULL;

	return newLn;
}

struct AddNode(struct YyxLink *ln, const struct record *rec)
{
	struct YyxNode *newNode;
	if((newNode=(struct YyxNode*)malloc(sizeof(struct YyxNode)))==NULL){
		printf("");
		exit(-1);
	}
	newNode->m_rec = *rec;
	newNode->next = NULL;
	if(ln->n==0){
		ln->head = newNode;
		ln->tail = newNode;
	}else{
		ln->tail->next = newNode;
		ln->tail = newNode;
	}
	ln->n ++;

	return ln;
}

myCompare(const struct record *rec1, const struct record *rec2)
{
	return rec2->total - rec1->total;
}

struct Search(struct YyxLink *ln, const struct record *rec)
{
	struct YyxNode *nd = ln->head;
	while(nd!=NULL && myCompare(&nd->m_rec, rec))
		nd = nd->next;
	
	return nd;
}

struct ClearLink(struct YyxLink *ln)
{
	struct YyxNode *delNode = ln->head;
	struct YyxNode *nextNode;
	while(delNode != NULL){
		nextNode = delNode->next;
		free(delNode);
		delNode = nextNode;
	}
	ln->n = 0;
	ln->head = NULL;
	ln->tail = NULL;

	return ln;
}

main()
{
	struct YyxLink *mainLn;
	struct record stu;
	int n;
	int i;
	struct record *max1, *max2, *max3;
	struct YyxNode *temp;
	mainLn = CreateNewLink();
	scanf("", &n);
	for(i=0; i<n; i++){
		scanf("", &stu.stuID, 
			&stu.YuWen, &stu.math);
		stu.total = stu.YuWen + stu.math;
		AddNode(mainLn, &stu);
	}
	
	max1=max2=max3= &mainLn->head->m_rec;
	temp = mainLn->head;
	while(temp!=NULL){
		if(max1->total<temp->m_rec.total)
			max1 = &temp->m_rec;
		temp = temp->next;
	}
	temp = mainLn->head;
	if (max2==max1){
		temp = mainLn->head->next;
		max2 = &temp->m_rec;
	}
	while(temp!=NULL){
		if(max2->total<temp->m_rec.total)
			if(max1!=&temp->m_rec)
				max2 = &temp->m_rec;
		temp = temp->next;
	}
	temp = mainLn->head;
	while(&temp->m_rec==max1||&temp->m_rec==max2)
		temp = temp->next;
	max3 = &temp->m_rec;
	while(temp!=NULL){
		if(max3->total<temp->m_rec.total)
			if(max1!=&temp->m_rec&&max2!=&temp->m_rec)
			max3 = &temp->m_rec;
		temp = temp->next;
	}

	printf("", max1->stuID, max1->total);
	printf("", max2->stuID, max2->total);
	printf("", max3->stuID, max3->total);


	free(ClearLink(mainLn));

	return 0;
}


1000269

main()
{
	char init[300];
	int letter[27]={0};
	int i;
	int t=0;
	gets(init);
for(i=0;i<=strlen(init);i++)
switch(init[i])
{
case'' : letter[1]++;break;
case'' : letter[2]++;break;
case'' : letter[3]++;break;
case'' : letter[4]++;break;
case'' : letter[5]++;break;
case'' : letter[6]++;break;
case'' : letter[7]++;break;
case'' : letter[8]++;break;
case'' : letter[9]++;break;
case'' : letter[10]++;break;
case'' : letter[11]++;break;
case'' : letter[12]++;break;
case'' : letter[13]++;break;
case'' : letter[14]++;break;
case'' : letter[15]++;break;
case'' : letter[16]++;break;
case'' : letter[17]++;break;
case'' : letter[18]++;break;
case'' : letter[19]++;break;
case'' : letter[20]++;break;
case'' : letter[21]++;break;
case'' : letter[22]++;break;
case'' : letter[23]++;break;
case'' : letter[24]++;break;
case'' : letter[25]++;break;
case'' : letter[26]++;break;
}
if(letter[1]!=0) {printf("",letter[1]);t++;}
if(letter[2]!=0) {printf("",letter[2]);t++;}
if(letter[3]!=0) {printf("",letter[3]);t++;}
if(letter[4]!=0) {printf("",letter[4]);t++;}
if(letter[5]!=0) {printf("",letter[5]);t++;}
if(letter[6]!=0) {printf("",letter[6]);t++;}
if(letter[7]!=0) {printf("",letter[7]);t++;}
if(letter[8]!=0) {printf("",letter[8]);t++;}
if(letter[9]!=0) {printf("",letter[9]);t++;}
if(letter[10]!=0) {printf("",letter[10]);t++;}
if(letter[11]!=0) {printf("",letter[11]);t++;}
if(letter[12]!=0) {printf("",letter[12]);t++;}
if(letter[13]!=0) {printf("",letter[13]);t++;}
if(letter[14]!=0) {printf("",letter[14]);t++;}
if(letter[15]!=0) {printf("",letter[15]);t++;}
if(letter[16]!=0) {printf("",letter[16]);t++;}
if(letter[17]!=0) {printf("",letter[17]);t++;}
if(letter[18]!=0) {printf("",letter[18]);t++;}
if(letter[19]!=0) {printf("",letter[19]);t++;}
if(letter[20]!=0) {printf("",letter[20]);t++;}
if(letter[21]!=0) {printf("",letter[21]);t++;}
if(letter[22]!=0) {printf("",letter[22]);t++;}
if(letter[23]!=0) {printf("",letter[23]);t++;}
if(letter[24]!=0) {printf("",letter[24]);t++;}
if(letter[25]!=0) {printf("",letter[25]);t++;}
if(letter[26]!=0) {printf("",letter[26]);t++;}

if(t==0) printf("");
}


1000270
creat(void)
{
	struct student *head;
	struct student *p1,*p2;
	int i;
	j=0;
	p1=p2=(struct student *)malloc(LEN);
	scanf("",&p1->name,&p1->grade_1,&p1->grade_2,&p1->a,&p1->b,&p1->paper);

    p1->sum = 0;
    p1->flag = 0;
    if(p1->grade_1>80&&p1->paper>0)
		p1->sum+=8000;
	if(p1->grade_1>85&&p1->grade_2>80)
		p1->sum+=4000;
	if(p1->grade_1>90)
		p1->sum+=2000;
	if(p1->grade_1>85&&p1->b=='')
		p1->sum+=1000;
	if(p1->grade_2>80&&p1->a=='')
		p1->sum+=850;

	head=NULL;
	
	for(i=0;;i++)
	{
		
		j=j+1;
		if(j==1)
		{
			head=p1;
		}
		else 
		{
			p2->next=p1;
		}
		p2=p1;
		if(i>=n-1)
		{
			break;
		}
		p1=(struct student *)malloc(LEN);
    	scanf("",&p1->name,&p1->grade_1,&p1->grade_2,&p1->a,&p1->b,&p1->paper);

        p1->sum = 0;       
		p1->flag = 0;
	    if(p1->grade_1>80&&p1->paper>0)
	    	p1->sum+=8000;
        if(p1->grade_1>85&&p1->grade_2>80)
            p1->sum+=4000;
      	if(p1->grade_1>90)
	    	p1->sum+=2000;
      	if(p1->grade_1>85&&p1->b=='')
	    	p1->sum+=1000;
        if(p1->grade_2>80&&p1->a=='')
	     	p1->sum+=850;

       }
	p2->next=NULL;
	return(head);
}


output(struct student *p)
{
    int total;                                    
	int i,max;                             
	struct student *tmp;
	tmp = p;
	max = 0;
	total = 0;
	tmp = p;
	while(tmp!=NULL)
	{
      	total+=tmp->sum;
	
		if(tmp->flag == 1)
		{
			tmp = tmp->next;
			continue;
		}
		if(max<tmp->sum)
		{
			max = tmp->sum;
		}
		tmp = tmp->next;
	}

    tmp = p;
    while(tmp!=NULL)
	{
		if(tmp->flag == 1)
		{
			tmp = tmp->next;
			continue;
		}
			if(max!=tmp->sum)
		{
			tmp=tmp->next;
		}
		else
		{
			tmp->flag = 1;
			break;
		}
	}
    if (tmp->flag==1)
       printf("",tmp->name);
    printf("",max,total);		
}



main()
{
    scanf("",&n);
    struct student *p = creat();
    output(p);
}




1000271
main(){
    int row,col,i,j,k,l,x,p,r,q,a,b=1;
    int sz[100][100];
    scanf("",&row,&col);
    for(i=0;i<row;i++){
        for(j=0;j<col;j++){
            scanf("",&(sz[i][j]));
        }
    }
    if(row>=col){
        if(col%2==0){
        a=col/2;
        for(k=0;k<a;k++){
                
                for(l=k;l<(col-1-k);l++){
                    printf("",sz[k][l]);
                }
                
                for(p=k;p<(row-1-k);p++){
                    printf("",sz[p][col-k-1]);
                }
                
                for(q=(col-k-1);q>k;q--){
                    printf("",sz[row-k-1][q]);
                }

                for(r=(row-k-1);r>k;r--){
                    printf("",sz[r][k]);
                }
            }

        }
        else{
        a=col/2;
        for(k=0;k<a;k++){
                
                for(l=k;l<(col-1-k);l++){
                    printf("",sz[k][l]);
                }
                
                for(p=k;p<(row-1-k);p++){
                    printf("",sz[p][col-k-1]);
                }
                
                for(q=(col-k-1);q>k;q--){
                    printf("",sz[row-k-1][q]);
                }

                for(r=(row-k-1);r>k;r--){
                    printf("",sz[r][k]);
                }
            }
           for(x=a;x<(row-a);x++){
                    printf("",sz[x][a]);
                }
        }
        
        
    }

    
 
    else{
        if(row%2==0){
        a=row/2;
        for(k=0;k<a;k++){
                
                for(l=k;l<(col-1-k);l++){
                    printf("",sz[k][l]);
                }
                
                for(p=k;p<(row-1-k);p++){
                    printf("",sz[p][col-k-1]);
                }
                
                for(q=(col-k-1);q>k;q--){
                    printf("",sz[row-k-1][q]);
                }

                for(r=(row-k-1);r>k;r--){
                    printf("",sz[r][k]);
                }
            }

        }
        else{
        a=row/2;
        for(k=0;k<a;k++){
                
                for(l=k;l<(col-1-k);l++){
                    printf("",sz[k][l]);
                }
                
                for(p=k;p<(row-1-k);p++){
                    printf("",sz[p][col-k-1]);
                }
                
                for(q=(col-k-1);q>k;q--){
                    printf("",sz[row-k-1][q]);
                }

                for(r=(row-k-1);r>k;r--){
                    printf("",sz[r][k]);
                }
            }
           for(x=a;x<(col-a);x++){
                    printf("",sz[a][x]);
                }
        }
        
        
    }


    
    
    return 0;
}




1000272
main()
{
    int array[100][100],row,col,i,j,k,a,b,c,d;
    scanf("",&row,&col);
    for (i=0;i<row;i++)
    {
        for (j=0;j<col;j++)
        {
            scanf("",&(array[i][j]));
        }
    }
    for (k=0;k<row;k++)
    {   
        if (row-1-k-k==1&&col-1-k-k==1)
        {
            printf("",array[k][k],array[k][k+1],array[k+1][k+1],array[k+1][k]);
        break;
        }
        if (row-1-k-k==0&&col-1-k-k==0)
        {
            printf("",array[k][k]);
            break;
        }
        if (row-1-k-k==1&&col-1-k-k==0)
        {
            printf("",array[k][k],array[k+1][k]);
            break;
        }

        if (row-1-k-k==1&&col-1-k-k!=1)
        {
            for (i=k,j=k;j<col-1-k;j++)
            {
                printf("",array[i][j]);
            }
            for (i=k,j=col-1-k;i<row-1-k;i++)
            {
                printf("",array[i][j]);
            }
            for (i=row-1-k,j=col-1-k;j>k;j--)
            {
                printf("",array[i][j]);
            }
            break;
        }
        if (row-1-k-k==0)
        {
            for (i=k,j=k;j<=col-1-k;j++)
            {
                printf("",array[i][j]);
            }
            break;
        }
        if (col-1-k-k==1)
        {            
            for (i=k,j=k;j<col-1-k;j++)
            {
                printf("",array[i][j]);
            }
            for (i=k,j=col-1-k;i<row-1-k;i++)
            {
                printf("",array[i][j]);
            }
            for (i=row-1-k,j=col-1-k;j>k;j--)
            {
                printf("",array[i][j]);
            }
            for (i=row-1-k,j=k;i>k;i--)
            {
                printf("",array[i][j]);
             }
             break;
        }
        if (col-1-k-k==0)
        {
            for (i=k,j=col-1-k;i<=row-1-k;i++)
            {
                printf("",array[i][j]);
            }
            break;
        }                
        for (i=k,j=k;j<col-1-k;j++)
        {
            printf("",array[i][j]);
        }
        for (i=k,j=col-1-k;i<row-1-k;i++)
        {
            printf("",array[i][j]);
        }
        for (i=row-1-k,j=col-1-k;j>k;j--)
        {
            printf("",array[i][j]);
        }
        for (i=row-1-k,j=k;i>k;i--)
        {
            printf("",array[i][j]);
        }
     }
     return 0;
}


1000273
main(){
    int n,a[10000],b[10000],c[10000];
int i,j,min,max;
int e,d=1;
scanf("",&n);
for(i=0;i<n;i++){
                 scanf("",&a[i],&b[i]);
                 }
for(i=0;i<10000;i++){
                 c[i]=0;
                 }
                 for(i=0;i<n;i++){
                                 if(a[i]==b[i]){
                                                continue;
                                                }
                                  j=a[i];
                                  while(j<b[i]&&j>=a[i]){
                                  c[j]=1;
                                  j++;
                                  }
                                  
                 }
                 min=a[0];
                 max=b[0];
                 for(i=1;i<n;i++){
                                  if(min>a[i]){
                                               min=a[i];
                                               }
                                               if(max<b[i]){
                                                            max=b[i];
                                                            }
                                  }
                 for(j=min;j<max;j++){
                                          if(c[j]==0){
                                                    e=0;
                                                     }
                                                     if(e==0||d==0){
                                                                    d=0;
                                                                    }
                                          }
                                          if(d==0){
                                                   printf("");
                                                   }else{
                                                         printf("",min,max);
                                                         }

                                  return 0;                              
}
                 


1000274
main()
{
	int year,month,day;
	int xq,count;
	int a,b,c,d;
	scanf("",&year,&month,&day);
	year=year%400;
	if (year==0)
	{
		xq=6;
	}
	else
	{
		a=year/100;
		if (a==0)
			xq=6;
		if (a==1)
			xq=4;
		if (a==2)
			xq=2;
		if (a==3)
			xq=0;
		b=year%100;
		c=b%4;
		d=b/4;
		if (c!=0)
			xq=xq+5*d+c+1;
		if (c==0)
			xq=xq+5*d;



		xq=xq%7;
	}
	if (year%4!=0||year%100==0&&year%400!=0)
	{
          switch (month)
		  {
		  case 1:
			  count=day-1;
			  break;
		  case 2:
			  count=day+31-1;
			  break;
		  case 3:
			  count=day+31+28-1;
			  break;
		  case 4:
			  count=day+31+28+31-1;
			  break;
		  case 5:
			  count=day+31+28+31+30-1;
			  break;
		  case 6:
			  count=day+31+28+31+30+31-1;
			  break;
		  case 7:
			  count=day+31+28+31+30+31+30-1;
			  break;
		  case 8:
			  count=day+31+28+31+30+31+30+31-1;
			  break;
		  case 9:
			  count=day+31+28+31+30+31+30+31+31-1;
			  break;
		  case 10:
			  count=day+31+28+31+30+31+30+31+31+30-1;
			  break;
		  case 11:
			  count=day+31+28+31+30+31+30+31+31+30+31-1;
			  break;
		  case 12:
			  count=day+31+28+31+30+31+30+31+31+30+31+30-1;
			  break;
		  }
	}
	else
	{
		switch (month)
		  {
		  case 1:
			  count=day-1;
			  break;
		  case 2:
			  count=day+31-1;
			  break;
		  case 3:
			  count=day+31+29-1;
			  break;
		  case 4:
			  count=day+31+29+31-1;
			  break;
		  case 5:
			  count=day+31+29+31+30-1;
			  break;
		  case 6:
			  count=day+31+29+31+30+31-1;
			  break;
		  case 7:
			  count=day+31+29+31+30+31+30-1;
			  break;
		  case 8:
			  count=day+31+29+31+30+31+30+31-1;
			  break;
		  case 9:
			  count=day+31+29+31+30+31+30+31+31-1;
			  break;
		  case 10:
			  count=day+31+29+31+30+31+30+31+31+30-1;
			  break;
		  case 11:
			  count=day+31+29+31+30+31+30+31+31+30+31-1;
			  break;
		  case 12:
			  count=day+31+29+31+30+31+30+31+31+30+31+30-1;
			  break;
		  }
	}
	xq=xq+count%7;
	xq=xq%7;
	switch (xq)
	{
	case 0:
		printf("");
		break;
	case 1:
		printf("");
		break;
	case 2:
		printf("");
		break;
	case 3:
		printf("");
		break;
	case 4:
		printf("");
		break;
	case 5:
		printf("");
		break;
	case 6:
		printf("");
		break;
	}
		


	
	return 0;
}

1000275
main()
{
  int a[4],z,q,s,l,i,j,m,n;
  for(i=0;i<4;i++)
  {
    a[i]=10;
    for(j=0;j<4;j++)
    {
     if(j==i)
      {continue;}
      a[j]=40;
      for(m=0;m<4;m++)
      {
         if((m==i)||(m==j))
         {continue;}
         a[m]=30;
             for(n=0;n<4;n++)
             {
              if((n==i)||(n==j)||(n==m))
              {continue;}
               a[n]=20;
               z=a[0];
               q=a[1];
               s=a[2];
               l=a[3];
               if((((z+q)==(s+l))&&((z+l)>(s+q))&&((z+s)<q))==1)
               {
               printf("",l);
               printf("",q);
               printf("",z);
               printf("",s);
               }
              } 
       }
    }
  }
  for(i=0;i<4;i++)
  {
    a[i]=10;
    for(j=0;j<4;j++)
    {
     if(j==i)
      {continue;}
      a[j]=50;
      for(m=0;m<4;m++)
      {
         if((m==i)||(m==j))
         {continue;}
         a[m]=30;
             for(n=0;n<4;n++)
             {
              if((n==i)||(n==j)||(n==m))
              {continue;}
               a[n]=20;
               z=a[0];
               q=a[1];
               s=a[2];
               l=a[3];
               if((((z+q)==(s+l))&&((z+l)>(s+q))&&((z+s)<q))==1)
               {
               printf("",l);
               printf("",q);
               printf("",z);
               printf("",s);
               }
              } 
       }
    }
  }
  for(i=0;i<4;i++)
  {
    a[i]=10;
    for(j=0;j<4;j++)
    {
     if(j==i)
      {continue;}
      a[j]=40;
      for(m=0;m<4;m++)
      {
         if((m==i)||(m==j))
         {continue;}
         a[m]=50;
             for(n=0;n<4;n++)
             {
              if((n==i)||(n==j)||(n==m))
              {continue;}
               a[n]=20;
               z=a[0];
               q=a[1];
               s=a[2];
               l=a[3];
               if((((z+q)==(s+l))&&((z+l)>(s+q))&&((z+s)<q))==1)
               {
                printf("",l);
               printf("",q);
               printf("",z);
               printf("",s);
               }
              } 
       }
    }
  }
  for(i=0;i<4;i++)
  {
    a[i]=10;
    for(j=0;j<4;j++)
    {
     if(j==i)
      {continue;}
      a[j]=40;
      for(m=0;m<4;m++)
      {
         if((m==i)||(m==j))
         {continue;}
         a[m]=30;
             for(n=0;n<4;n++)
             {
              if((n==i)||(n==j)||(n==m))
              {continue;}
               a[n]=50;
               z=a[0];
               q=a[1];
               s=a[2];
               l=a[3];
               if((((z+q)==(s+l))&&((z+l)>(s+q))&&((z+s)<q))==1)
               {
                printf("",l);
               printf("",q);
               printf("",z);
               printf("",s);
               }
              } 
       }
    }
  }
  for(i=0;i<4;i++)
  {
    a[i]=50;
    for(j=0;j<4;j++)
    {
     if(j==i)
      {continue;}
      a[j]=40;
      for(m=0;m<4;m++)
      {
         if((m==i)||(m==j))
         {continue;}
         a[m]=30;
             for(n=0;n<4;n++)
             {
              if((n==i)||(n==j)||(n==m))
              {continue;}
               a[n]=20;
               z=a[0];
               q=a[1];
               s=a[2];
               l=a[3];
               if((((z+q)==(s+l))&&((z+l)>(s+q))&&((z+s)<q))==1)
               {
               printf("",l);
               printf("",q);
               printf("",z);
               printf("",s);
               }
              } 
       }
    }
  }
  
 
  return 0;
}


1000276
main()
{
      int n,i,j,k,c[100],a[100][100],sum,l;
      scanf("",&n);
      for(i=0;i<n;i++)
      {
              sum=0;
              for(j=0;j<n;j++)
              {
                      for(k=0;k<n;k++)
                      scanf("",&a[j][k]);
              }
              for(l=1;l<=n-1;l++)
              {
                    
                    c[0]=a[0][0];
                    for(k=l;k<n;k++)
                    {
                        if(c[0]>a[0][k])
                        c[0]=a[0][k];
                    }
                    for(k=0;k<n;k++)
                    {
                         a[0][k]=a[0][k]-c[0];
                    }
                    c[0]=a[0][0];
                    for(j=l;j<n;j++)
                    {
                        c[j]=a[j][0];
                        for(k=l;k<n;k++)
                        {
                            if(c[j]>a[j][k])
                            c[j]=a[j][k];
                        }
                        for(k=0;k<n;k++)
                        {
                             a[j][k]=a[j][k]-c[j];
                        }
                    }
                    for(k=l;k<n;k++)
                    {
                        c[k]=a[0][k];
                        for(j=l;j<n;j++)
                        {
                            if(c[k]>a[j][k])
                            c[k]=a[j][k];
                        }
                        for(j=0;j<n;j++)
                        {
                             a[j][k]=a[j][k]-c[k];
                        }
                    }
                    for(j=l;j<n;j++)
                    {
                        if(c[0]>a[j][0])
                        c[0]=a[j][0];
                    }
                    for(j=0;j<n;j++)
                    {
                         a[j][0]=a[j][0]-c[0];
                    }
                    sum=sum+a[l][l];
              }
              printf("",sum);
        } 
        getchar();
        getchar();
}

1000277
main()
{
    int n=1,a1[1000],a2[1000];
    for(;n!=0;) 
    {
        scanf("",&n);
        if(n!=0)
		{
                for(int i=0;i<n;i++)
				{scanf("",&a1[i]);}
                for(int i=0;i<n;i++) 
				{scanf("",&a2[i]);}

                for(int i=0;i<n;i++)                       
                {
                         for(int j=0;j<n-i-1;j++)
                         {
                             if(a1[j]<a1[j+1])
                             {
                                     int temp;
                                         temp=a1[j];
                                      a1[j]=a1[j+1];
                                     a1[j+1]=temp;
                             }
                         }
                 }
                for(int i=0;i<n;i++)                         
                {
                         for(int j=0;j<n-i-1;j++)
                         {
                             if(a2[j]<a2[j+1])
                             {
                                     int temp;
                                         temp=a2[j];
                                      a2[j]=a2[j+1];
                                     a2[j+1]=temp;
                             }
                         }
                 }
				
               
			
                printf("",duma(n,a1,a2));
        } 
    }
    return 0; 
} 

duma(int n,int a1[1000],int a2[1000])
{
    int a=0,i=0; 
    for(i=n;i!=1;i--) 
    {
           if(a1[0]>a2[0])               
           {
               a+=200;
               for(int k=0;k<i-1;k++) 
               {
                       a1[k]=a1[k+1];
                       a2[k]=a2[k+1];
               }
           }
           else
           { 
              if (a1[0]<a2[0])              
              {
                     a-=200;
                 for(int k=0;k<i-1;k++) 
                 {
                       a2[k]=a2[k+1];
                 } 
              } 
              else
              {
                  if(a1[i-1]>a2[i-1])           
                  {
                         a+=200;
                  }
                  else                            
                  {
					  if(a1[i-1]<a2[0])
                         a-=200;
					  else
						  a=a;
                         for(int k=0;k<i-1;k++)     
                         {
                              a2[k]=a2[k+1];
                         }

                  } 
               }
              } 
          
    }
    if (a1[0]<a2[0])                 
    {
        a-=200; 
    }
    else 
    {
         if (a1[0]>a2[0])
         {
               a+=200; 
         }
         else
         a=a; 
    }
    return a;
}


1000278
win(int x,int w[],int p[])
 {    
      int i,topw=0,topp=0,downw=x-1,downp=x-1;
      int j,convert,converts;
      int win=0,same=0,fail=0;
        for (i=0;i<x;i++)
           for (j=0;j<x-i-1;j++)
      {
                if (w[j]<w[j+1])
              {
                   convert=w[j];
                   w[j]=w[j+1];
                   w[j+1]=convert;      
               }
      
               if (p[j]<p[j+1])
                 {
                   converts=p[j];
                   p[j]=p[j+1];
                   p[j+1]=converts;      
                  }
      } 
     
          for (i=0;i<x;i++)
           {
              if (w[downw]>p[downp])
               {
                  win++;
                  downw--;
                  downp--;
               }
              if (w[downw]<p[downp])
                   {
                       fail++;
                       downw--;
                       topp++;
                       } 
                  if (w[topw]>p[topp])
                     {
                        win++;
                        topw++;
                        topp++;
                        }
                    if(w[downw]==p[topp])
                    break;
                    else
                   {  
                     fail++;
                     topp++;
                     downw--;
                   }    
           }
          
           return (200*(win-fail));
      }            

main ()
{
  int n,i,j,k,get;
  scanf ("",&n);
  while (1)
  {    
       if (n==0)
       break;
       else
       {    
            int a[n];
            int b[n];
            for (i=0;i<n;i++) 
            scanf ("",&a[i]);
            for (i=0;i<n;i++)
            scanf ("",&b[i]); 
        get=win(n,a,b);
        printf("",get);
        }
        scanf ("",&n);
     }
     getchar ();
     getchar ();
}     
     
     
     
     
     


1000279
f(int a)
{
    if((a%4==0&&a%100!=0)||(a%400==0))
    return 0;
    else
    return 1;
}
main()
{
      int n;
      scanf("",&n);
      int a,b,c,d=0,k;
      for(int i=1;i<=n;i++)
      {
              d=0;
              scanf("",&a,&b,&c);
              if(f(a)==0)
              {
              if(c>b)
              {k=c;c=b;b=k;}
                      while(b>c)
                      {
                                if(c==11)
                                {d=d+2;}
                                if(c==10)
                                {d=d+3;}
                                if(c==9)
                                {d=d+2;}
                                if(c==8)
                                {d=d+3;}
                                if(c==7)
                                {d=d+3;}
                                if(c==6)
                                {d=d+2;}
                                if(c==5)
                                {d=d+3;}
                                if(c==4)
                                {d=d+2;}
                                if(c==3)
                                {d=d+3;}
                                if(c==2)
                                {d=d+1;}
                                if(c==1)
                                {d=d+3;}
                                c++;
                      }
                      if(d%7==0)
                      printf("");
                      printf("");                 
              }
                   if(f(a)==1)
              {
              if(c>b)
              {a=c;c=b;b=a;}
                      while(b>c)
                      {
                                if(c==11)
                                {d=d+2;}
                                if(c==10)
                                {d=d+3;}
                                if(c==9)
                                {d=d+2;}
                                if(c==8)
                                {d=d+3;}
                                if(c==7)
                                {d=d+3;}
                                if(c==6)
                                {d=d+2;}
                                if(c==5)
                                {d=d+3;}
                                if(c==4)
                                {d=d+2;}
                                if(c==3)
                                {d=d+3;}
                                if(c==1)
                                d=d+3;
                                c++;
                      }
                      if(d%7==0)
                      printf("");
                      printf("");                 
              }
              
      }
}


1000280
main()
{
    int m,n;
    pNode head=NULL;
    scanf("",&n,&m);
    head=inputdata(n);
    change(head,n,m);
	outputdata(head);

	return 0;
}

1000281
main()
{
    int m,n;
    pNode head=NULL;
    scanf("",&n,&m);
    head=inputdata(n);
    change(head,n,m);
	outputdata(head);

	return 0;
}


1000282
main()
{
	
	int lengthofnumber[505]={0},lengthofname[505]={0},lengthofadd[505]={0},lengthofscore[505]={0};
	int i,j,numberofstudent=0;
	struct student stu[505];
	for(i=0;i<505;i++)
	{
		for(j=0;j<30;j++)
		{
			scanf("",&stu[i].number[j]);
			if(stu[i].number[j]==''||stu[i].number[j]=='')
			{
				break;
			}
			else
			{
				lengthofnumber[i]+=1;
			}
		}
		if(stu[i].number[2]=='')
		{
			break;
		}
		else
		{
			numberofstudent+=1;
		}
		for(j=0;j<30;j++)
		{
			scanf("",&stu[i].name[j]);
			if(stu[i].name[j]=='')
			{
				break;
			}
			else
			{
				lengthofname[i]+=1;
			}
		}
		scanf("",&stu[i].gender);
		getchar();
		scanf("",&stu[i].age);
		getchar();
		for(j=0;j<30;j++)
		{
			scanf("",&stu[i].score[j]);
			if(stu[i].score[j]!='')
			{
				lengthofscore[i]+=1;
			}
			else
			{
				break;
			}
		}
		for(j=0;j<30;j++)
		{
			scanf("",&stu[i].add[j]);
			if(stu[i].add[j]!='\n')
			{
				lengthofadd[i]+=1;
			}
			else
			{
				break;
			}
		}
		
	}
			i=numberofstudent-1;
			while(i!=0)
			{
				
				for(j=0;j<lengthofnumber[i];j++)
				{
					printf("",stu[i].number[j]);
				}
				printf("");
				for(j=0;j<lengthofname[i];j++)
				{
					printf("",stu[i].name[j]);
				}
				printf("");
				printf("",stu[i].gender);
				printf("",stu[i].age);
				for(j=0;j<lengthofscore[i];j++)
				{
					printf("",stu[i].score[j]);
				}
				printf("");
				for(j=0;j<lengthofadd[i];j++)
				{
					printf("",stu[i].add[j]);
				}
				printf("");
				i--;
			}
	
			for(j=0;j<lengthofnumber[0];j++)
			{
				printf("",stu[0].number[j]);
			}
			printf("");
			for(j=0;j<lengthofname[0];j++)
			{
				printf("",stu[0].name[j]);
			}
			printf("");
			printf("",stu[0].gender);
			printf("",stu[0].age);
			for(j=0;j<lengthofscore[0];j++)
				{
					printf("",stu[0].score[j]);
				}
			printf("");
			for(j=0;j<lengthofadd[0];j++)
			{
				printf("",stu[0].add[j]);
			}	
	return 0;
}

1000283
main(int argc, char* argv[])
{
	int n,m,f,sum,i;
	char zhuan[50];
	scanf("",&n);
	char x[10];
	scanf("",x);
	scanf("",&m);
	f=strlen(x);
 

	sum=0;
	int wei=0;
	for(i=0;i<f;i++){
		sum=sum+zheng(x[i])*pow(n,f-i-1);
	}
	for(i=49;i>=0;i--){
		zhuan[i]=fan(sum%m);
		wei++;
		sum=sum/m;
		if(sum==0)
			break;
	}
	for(i=50-wei;i<50;i++){
		printf("",zhuan[i]);
	}
  return 0;
}
zheng(char x){
	int m;
   switch(x){
     case '':m=1;break;
     case '':m=2;break;
     case '':m=3;break;
     case '':m=4;break;
	 case '':m=5;break;
	case '':m=6;break;
	case '':m=7;break;
	case '':m=8;break;
	 case '':m=9;break;
	 case '':m=0;break;
	 case '':m=10;break;
	case '':m=10;break;
	case '':m=11;break;
	case '':m=11;break;
    case '':m=12;break;
    case '':m=13;break;
	case '':m=14;break;
	case '':m=15;break;
	case '':m=16;break;
	case '':m=17;break;
    case '':m=18;break;
	case '':m=19;break;
	case '':m=20;break;
	case '':m=21;break;
	case '':m=22;break;
	case '':m=23;break;
	case '':m=24;break;
	case '':m=25;break;
	case '':m=26;break;
	case '':m=27;break;
	case '':m=28;break;
	case '':m=29;break;
	case '':m=30;break;
	case '':m=31;break;
	case '':m=32;break;
	case '':m=33;break;
	case '':m=34;break;
	case '':m=35;break;
	case '':m=12;break;
	case '':m=13;break;
	case '':m=14;break;
	case '':m=15;break;
	case '':m=16;break;
	case '':m=17;break;
	case '':m=18;break;
	case '':m=19;break;
	case '':m=20;break;
	case '':m=21;break;
	case '':m=22;break;
	case '':m=23;break;
	case '':m=24;break;
	case '':m=25;break;
	case '':m=26;break;
	case '':m=27;break;
	case '':m=28;break;
	case '':m=29;break;
	case '':m=30;break;
	case '':m=31;break;
    case '':m=32;break;
	case '':m=33;break;
	case '':m=34;break;
	case '':m=35;break;
	 
   }
   return m;
}

fan(int x){
	char m;
	switch(x){
	case 0:m='';break;
	case 1:m='';break;
	case 2:m='';break;
	case 3:m='';break;
	case 4:m='';break;
	case 5:m='';break;
	case 6:m='';break;
	case 7:m='';break;
	case 8:m='';break;
	case 9:m='';break;
	case 10:m='';break;
	case 11:m='';break;
	case 12:m='';break;
	case 13:m='';break;
	case 14:m='';break;
	case 15:m='';break;
	case 16:m='';break;
	case 17:m='';break;
	case 18:m='';break;
	case 19:m='';break;
	case 20:m='';break;
	case 21:m='';break;
	case 22:m='';break;
	case 23:m='';break;
	case 24:m='';break;
	case 25:m='';break;
	case 26:m='';break;
	case 27:m='';break;
	case 28:m='';break;
	case 29:m='';break;
	case 30:m='';break;
	case 31:m='';break;
	case 32:m='';break;
	case 33:m='';break;
	case 34:m='';break;
	case 35:m='';break;
	
	}
	return m;
}






	

		
		


	
 


1000284
arrange(pNode p)
{
	pNode q=NULL,head=NULL,min=NULL,headnew=NULL,ppre=NULL,minpre=NULL,s=NULL;
	headnew=create();
	q=headnew;
	head=p;
    while (head->next)
	{
       	min=p=head->next;
		ppre=minpre=head;
		while(p)
	{
		 if (min->x>p->x)
		 {
			 min=p;
			 minpre=ppre;
		 }
		 ppre=p;
		 p=p->next;
	}
	s=(pNode)malloc(sizeof(struct Node));
	s->x=min->x;
    q->next=s;
	s->next=NULL;
	q=s;
	minpre->next=min->next;
	free(min);
    }
	return headnew;
}

main()
{
    int m,n;
    pNode head=NULL;
    scanf("",&n,&m);
    head=inputdata(n);
    change(head,n,m);
	outputdata(head);

	return 0;
}


1000285
main()
{
	int y,m,d,a;
	scanf("",&y,&m,&d);
	if(y%4!=0){
		switch(m){
		case 1:a=d;break;
		case 2:a=31+d;break;
		case 3:a=31+28+d;break;
		case 4:a=31+28+31+d;break;
		case 5:a=31+28+31+30+d;break;
		case 6:a=31+28+31+30+31+d;break;
		case 7:a=31+28+31+30+31+30+d;break;
		case 8:a=31+28+31+30+31+30+31+d;break;
		case 9:a=31+28+31+30+31+30+31+31+d;break;
		case 10:a=31+28+31+30+31+30+31+31+30+d;break;
		case 11:a=31+28+31+30+31+30+31+31+30+31+d;break;
		case 12:a=31+28+31+30+31+30+31+31+30+31+30+d;break;
		}
		printf("",a);
	}
	if(y%400==0){
		switch(m){
		case 1:a=d;break;
		case 2:a=31+d;break;
		case 3:a=31+29+d;break;
		case 4:a=31+29+31+d;break;
		case 5:a=31+29+31+30+d;break;
		case 6:a=31+29+31+30+31+d;break;
		case 7:a=31+29+31+30+31+30+d;break;
		case 8:a=31+29+31+30+31+30+31+d;break;
		case 9:a=31+29+31+30+31+30+31+31+d;break;
		case 10:a=31+29+31+30+31+30+31+31+30+d;break;
		case 11:a=31+29+31+30+31+30+31+31+30+31+d;break;
		case 12:a=31+29+31+30+31+30+31+31+30+31+30+d;break;
		}
		printf("",a);
	}
	if(y%4==0&&y%100==0&&y%400!=0){
		switch(m){
		case 1:a=d;break;
		case 2:a=31+d;break;
		case 3:a=31+28+d;break;
		case 4:a=31+28+31+d;break;
		case 5:a=31+28+31+30+d;break;
		case 6:a=31+28+31+30+31+d;break;
		case 7:a=31+28+31+30+31+30+d;break;
		case 8:a=31+28+31+30+31+30+31+d;break;
		case 9:a=31+28+31+30+31+30+31+31+d;break;
		case 10:a=31+28+31+30+31+30+31+31+30+d;break;
		case 11:a=31+28+31+30+31+30+31+31+30+31+d;break;
		case 12:a=31+28+31+30+31+30+31+31+30+31+30+d;break;
		}
		printf("",a);
	}
	if(y%4==0&&y%100!=0){
		switch(m){
		case 1:a=d;break;
		case 2:a=31+d;break;
		case 3:a=31+29+d;break;
		case 4:a=31+29+31+d;break;
		case 5:a=31+29+31+30+d;break;
		case 6:a=31+29+31+30+31+d;break;
		case 7:a=31+29+31+30+31+30+d;break;
		case 8:a=31+29+31+30+31+30+31+d;break;
		case 9:a=31+29+31+30+31+30+31+31+d;break;
		case 10:a=31+29+31+30+31+30+31+31+30+d;break;
		case 11:a=31+29+31+30+31+30+31+31+30+31+d;break;
		case 12:a=31+29+31+30+31+30+31+31+30+31+30+d;break;
		}
		printf("",a);
	}
	return 0;
}




1000286
main()
{
	int a,b,c;
	scanf("",&a,&b,&c);
    if (b==1)
	{
		printf("",c);
	}
	if((a%4==0)&&(a%100==0)&&(a%400==0))
	{
		switch (b) 
	{
	case 2 :
	{
		printf("",31+c);
		break;
	}
	case 3:
	{
       printf("",31+29+c);
	   break;
	}
	case 4:
	{
	   printf("",31+29+31+c);
	   break;
	}
	case 5:
		   {
			  printf("",31+29+31+30+c);
			  break;
		   }
	case 6:
			   {
				   printf("",31+29+31+30+31+c);
				   break;
			   }
	case 7:
				   {
					   printf("",31+29+31+30+31+30+c);
					   break;
				   }
	case 8:
					   {
						   printf("",31+29+31+30+31+30+31+c);
						   break;
					   }
	case 9:
						   {
							   printf("",31+29+31+30+31+30+31+31+c);
							   break;
						   }
	case 10:
							   {
								   printf("",31+29+31+30+31+30+31+31+30+c);
								   break;
							   }
	case 11:
								   {
									   printf("",31+29+31+30+31+30+31+31+30+31+c);
									   break;
								   }
	case 12:
									   {
										   printf("",31+29+31+30+31+30+31+31+30+31+30+c);
										   break;
									   }
		}
	}
		else
		{
     switch(b)
	{
		case 2:
			{
		printf("",31+c);
		break;
	}
	   case 3:
	{
       printf("",31+28+c);
	   break;
	}
		case 4:
	   {
		   printf("",31+28+31+c);
		   break;
	   }
		case 5:
	 {
		 printf("",31+28+31+30+c);
		 break;
	 }
		case 6:
	 {
		 printf("",31+28+31+30+31+c);
		 break;
	}
		case 7:
	{
		printf("",31+28+31+30+31+30+c);
		break;
	 }
		case 8:
	{
		printf("",31+28+31+30+31+30+31+c);
		break;
	}
		case 9:
	 {
		printf("",31+28+31+30+31+30+31+31+c);
		break;
	 }
						case 10:
							{
								   printf("",31+28+31+30+31+30+31+31+30+c);
								   break;
							   }
						case 11:
								   {
									   printf("",31+28+31+30+31+30+31+31+30+31+c);
									   break;
								   }
						case 12:
									   {
										   printf("",31+28+31+30+31+30+31+31+30+31+30+c);
										   break;
									   }
						}
		}
	return 0;
}

1000287
main()
{    int n,k;
     cin>>n;
     for(k=1;k<=n;k++)
       {
    	 int a[n][n],i,j,sum=0;
         int min[n],liemin[n];
         for(i=0;i<n;i++)
            for(j=0;j<n;j++)
        		 cin>>a[i][j];
         for(i=0;i<n;i++)
        	 min[i]=a[i][0];
         for(i=0;i<n;i++)
        	 liemin[i]=a[0][i];

         int scale=n;
         while(scale>1)
         {   for(i=0;i<scale;i++)
        	   for(j=0;j<scale;j++)
        	    {if(a[i][j]<min[i])
        	    	min[i]=a[i][j];
        	    }
             for(i=0;i<n;i++)
                for(j=0;j<n;j++)
            		 a[i][j]=a[i][j]-min[i];

             for(j=0;j<scale;j++)
            	   for(i=0;i<scale;i++)
            	    {if(a[i][j]<liemin[j])
            	    	liemin[j]=a[i][j];
            	    }
                 for(i=0;i<n;i++)
                    for(j=0;j<n;j++)
                		 a[i][j]=a[i][j]-liemin[j];

            

          sum=sum+a[1][1];
          

          for(i=0;i<scale;i++)
             for(j=1;j<scale;j++)
         		 a[i][j]=a[i][j+1];

          for(j=0;j<scale;j++)
             for(i=1;i<scale;i++)
         		 a[i][j]=a[i+1][j];

          scale=scale-1;
          for(i=0;i<scale;i++)
        	  min[i]=a[i][0];
          for(i=0;i<scale;i++)
        	  liemin[i]=a[0][i];
         }
         cout<<sum<<endl;
       }
     return 0;
}


1000288
main()
{
    int n,i;
    double sum,GPA,temp;
    scanf("",&n);
    int d[n];
    double c[n],b[n],a[n];
    for(i=1;i<=n;i++)
    {
                     scanf("",&a[i]);
                     }
    for(i=1;i<=n;i++)
    {
                     scanf("",&d[i]);
                     }
    for(i=1;i<=n;i++)
    {
                     if(d[i]<=100&&d[i]>=90)
                     {
                                            b[i]=4.0;
                                            }
                     if(d[i]<=89&&d[i]>=85)
                     {
                                            b[i]=3.7;
                                            }
                     if(d[i]<=84&&d[i]>=82)
                     {
                                            b[i]=3.3;
                                            }
                     if(d[i]<=81&&d[i]>=78)
                     {
                                            b[i]=3.0;
                                            }
                     if(d[i]<=77&&d[i]>=75)
                     {
                                            b[i]=2.7;
                                            }
                     if(d[i]<=74&&d[i]>=72)
                     {
                                            b[i]=2.3;
                                            }
                     if(d[i]<=71&&d[i]>=68)
                     {
                                            b[i]=2.0;
                                            }
                     if(d[i]<=67&&d[i]>=64)
                     {
                                            b[i]=1.5;
                                            }
                     if(d[i]<=63&&d[i]>=60)
                     {
                                            b[i]=1.0;
                                            }
                     if(d[i]<60)
                     {
                                b[i]=0;
                                            }
    }
    for(i=1;i<=n;i++)
    {
                     c[i]=a[i]*b[i];
                     }
    sum=0;
    temp=0;
    for(i=1;i<=n;i++)
    {
                      sum=sum+a[i];
                      }
    for(i=1;i<=n;i++)
    {
                     temp=temp+c[i];
                     }
    GPA=temp/sum;
    printf("",GPA);
    return 0;
}

1000289
init_link( struct link *plink )
{
    struct node *p = (struct node *)malloc( sizeof(struct node) ); 
	if ( p==NULL )
		return -1;
	p->data = 0;
	p->next = NULL;
	plink->head = p;
	plink->tail = p;
	return 0;
}


insert_link( struct link *plink ,int value )
{ 
	struct node *p = (struct node *)malloc( sizeof(struct node) ); 
	if ( p==NULL )
		return -1;
	p->data = value;
	p->next = NULL;
	plink->tail->next = p;
	plink->tail = p;
    
	return 0;
}



delete_link( struct link *plink,struct node *pnode)
{
    
	
    struct node *p = pnode->next;
	if ( p == NULL ){ 
      pnode = plink->head;
	  p = plink->head->next;
	  pnode->next = pnode->next->next;
	} if ( plink->tail == p ){
	  pnode->next = NULL;
	  plink->tail = pnode; 
	}
	else {
      pnode->next = pnode->next->next;
	}
    
	free(p);
	return 0;
    
}

destroy_link( struct link *plink )
{
	struct node *p = plink->head ;
	struct node *q;
	while( p != NULL )
	{
       q = p->next ;
	   free(p);
	   p = q;
	}
	plink->head = NULL;
	plink->tail = NULL;
	return 0;
}




solve( int n,int m)
{
	int i,j,result;
	struct link link1;
	struct node *p;
	
	
	
    init_link( &link1 );
    for(i=1;i<=n;i++)
		insert_link(&link1,i);
    p = link1.head;
	for(i=1;i<n;i++)
	{   
		
		for(j=1;j<m;j++)
		{
           if ( p->next == NULL )
			  p = link1.head->next;
		   else
              p = p->next;
		} 
		
        delete_link( &link1,p);
	}
    
    result = link1.head->next->data;
	destroy_link( &link1 );
    return result;

}

main()
{
    int n,m,k;
	struct link link1;
	struct node *p;
    init_link( &link1 );
	scanf("",&n,&m);
    while( n || m )
	{ 
        k=solve(n,m);
		insert_link(&link1,k);
		scanf("",&n,&m);
	}
    p = link1.head;
	while( p->next != NULL )
    {
		printf("",p->next->data );
		p = p->next ;
	}
	destroy_link( &link1 );
	
	return 0;
}

1000290
h(int x[],int y)
{   int i,j,t;
  for(i=1;i<y;i++)
     for(j=y;j>i;j--)
     if(x[j]>x[j-1])
   {     t=x[j-1];
         x[j-1]=x[j];
         x[j]=t;     }
   }
   
   g(int x[],int y)
{   int i,j,t;
     for(i=1;i<y;i++)
     for(j=y;j>i;j--)
     if(x[j]<x[j-1])
   {     t=x[j-1];
         x[j-1]=x[j];
         x[j]=t;     }
 }

c(int b[],int m,int n)  
{     int i; 
      for(i=n;i<=m;i++)
           b[i]=b[i+1];
           }
main()
{
    int n=1,a1[2000],a2[2000];
    for(int k=1;n!=0;k++) 
    {
        scanf("",&n);
        if(n!=0)
		{
                for(int i=0;i<n;i++)
				{scanf("",&a1[i]);}
                for(int i=0;i<n;i++) 
				{scanf("",&a2[i]);}

                for(int i=0;i<n;i++)                       
                {
                         for(int j=0;j<n-i-1;j++)
                         {
                             if(a1[j]<a1[j+1])
                             {
                                     int temp;
                                         temp=a1[j];
                                      a1[j]=a1[j+1];
                                     a1[j+1]=temp;
                             }
                         }
                 }
                for(int i=0;i<n;i++)                         
                {
                         for(int j=0;j<n-i-1;j++)
                         {
                             if(a2[j]<a2[j+1])
                             {
                                     int temp;
                                         temp=a2[j];
                                      a2[j]=a2[j+1];
                                     a2[j+1]=temp;
                             }
                         }
                 }
				if(k==1)
                printf("",duma(n,a1,a2));
				printf("",duma(n,a1,a2));
        } 
    }
    return 0; 
} 

duma(int n,int a1[2000],int a2[2000])
{
    int a=0,i=0; 
    for(i=n;i!=1;i--) 
    {
           if(a1[0]>a2[0])               
           {
               a+=200;
               for(int k=0;k<i-1;k++) 
               {
                       a1[k]=a1[k+1];
                       a2[k]=a2[k+1];
               }
           }
           else
           { 
              if (a1[0]<a2[0])              
              {
                     a-=200;
                 for(int k=0;k<i-1;k++) 
                 {
                       a2[k]=a2[k+1];
                 } 
              } 
              else
              {
                  if(a1[i-1]>a2[i-1])           
                  {
                         a+=200;
                  }
                  else                            
                  {
					  if(a1[i-1]<a2[0])
                         a-=200;
					  else
						  a=a;
                         for(int k=0;k<i-1;k++)     
                         {
                              a2[k]=a2[k+1];
                         }

                  } 
               }
              } 
          
    }
    if (a1[0]<a2[0])                 
    {
        a-=200; 
    }
    else 
    {
         if (a1[0]>a2[0])
         {
               a+=200; 
         }
         else
         a=a; 
    }
    return a;
}


1000291
main()
{
	int m,n,i,j,k;
	int juzhen1[11][11];
	int juzhen2[11][11];	
	scanf("",&m,&n);
	for(i=0;i<11;i++)
	{
	  for(j=0;j<11;j++)
	  {
	    juzhen1[i][j]=0;
	    juzhen2[i][j]=0;

	  }
	}
	juzhen1[5][5]=m;
	for(k=1;k<n+1;k++)
	{
	  for(i=1;i<10;i++)
	  {
	    for(j=1;j<10;j++)
		{
		  if(k%2!=0)
		  {
		    if(juzhen1[i][j]>0)
		    {
		      juzhen2[i][j]=juzhen2[i][j]+2*(juzhen1[i][j]);
			  juzhen2[i-1][j-1]=juzhen2[i-1][j-1]+juzhen1[i][j];
			  juzhen2[i-1][j]=juzhen2[i-1][j]+juzhen1[i][j];
			  juzhen2[i-1][j+1]=juzhen2[i-1][j+1]+juzhen1[i][j];
		      juzhen2[i][j-1]=juzhen2[i][j-1]+juzhen1[i][j];
			  juzhen2[i][j+1]=juzhen2[i][j+1]+juzhen1[i][j];
		      juzhen2[i+1][j-1]=juzhen2[i+1][j-1]+juzhen1[i][j];
			  juzhen2[i+1][j]=juzhen2[i+1][j]+juzhen1[i][j];
			  juzhen2[i+1][j+1]=juzhen2[i+1][j+1]+juzhen1[i][j];
			  
		    }
		  }
		  if(k%2==0)
		  {
		    if(juzhen2[i][j]>0)
		    {
		      juzhen1[i][j]=juzhen1[i][j]+2*(juzhen2[i][j]);
			  juzhen1[i-1][j-1]=juzhen1[i-1][j-1]+juzhen2[i][j];
			  juzhen1[i-1][j]=juzhen1[i-1][j]+juzhen2[i][j];
			  juzhen1[i-1][j+1]=juzhen1[i-1][j+1]+juzhen2[i][j];
		      juzhen1[i][j-1]=juzhen1[i][j-1]+juzhen2[i][j];
			  juzhen1[i][j+1]=juzhen1[i][j+1]+juzhen2[i][j];
		      juzhen1[i+1][j-1]=juzhen1[i+1][j-1]+juzhen2[i][j];
			  juzhen1[i+1][j]=juzhen1[i+1][j]+juzhen2[i][j];
			  juzhen1[i+1][j+1]=juzhen1[i+1][j+1]+juzhen2[i][j];
			  
		    }
		  }
		}
	  }
	  if(k%2!=0)
	  {
	    for(i=1;i<10;i++)
		{
		  for(j=1;j<10;j++)
		  {
		    juzhen1[i][j]=0;
		  }
		}
	  }
	  if(k%2==0)
	  {
	    for(i=1;i<10;i++)
		{
		  for(j=1;j<10;j++)
		  {
		    juzhen2[i][j]=0;
		  }
		}
	  }
	}
	if(k%2==0)
	{
	  for(i=1;i<10;i++)
	  {
	    printf("",juzhen2[i][1],juzhen2[i][2],juzhen2[i][3],juzhen2[i][4],juzhen2[i][5],juzhen2[i][6],juzhen2[i][7],juzhen2[i][8],juzhen2[i][9]);
	  }
	}
	if(k%2!=0)
	{
	  for(i=1;i<10;i++)
	  {
	    printf("",juzhen1[i][1],juzhen1[i][2],juzhen1[i][3],juzhen1[i][4],juzhen1[i][5],juzhen1[i][6],juzhen1[i][7],juzhen1[i][8],juzhen1[i][9]);
	  }
	}
	return 0;
}

1000292
main()
{
	long int year;
	int month,day;
	long int sum;
	scanf("",&year,&month,&day);
		if(month==1)
			sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+day;
		if(month==2)
			sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+31+day;
		else
		{
		if(year%400==0||((year%4==0)&&(year%100!=0)))
		{
			if(month==3)
            sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+60+day;
			if(month==4)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+91+day;
			if(month==5)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+121+day;
			if(month==6)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+152+day;
			if(month==7)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+182+day;
            if(month==8)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+213+day;
            if(month==9)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+244+day;
            if(month==10)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+274+day;
            if(month==11)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+305+day;
            if(month==12)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+335+day;
		}
		else
		{
			if(month==3)
            sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+59+day;
			if(month==4)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+90+day;
			if(month==5)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+120+day;
			if(month==6)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+151+day;
			if(month==7)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+181+day;
            if(month==8)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+212+day;
            if(month==9)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+243+day;
            if(month==10)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+273+day;
            if(month==11)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+304+day;
            if(month==12)
				sum=365*((year-1)%7)+((year-1)/4+(year-1)/400-(year-1)/100)+334+day;
		}
		}
		if(sum%7==0)
			printf("");
		if(sum%7==1)
			printf("");
		if(sum%7==2)
			printf("");
	    if(sum%7==3)
			printf("");
	    if(sum%7==4)
			printf("");
	    if(sum%7==5)
			printf("");
	    if(sum%7==6)
			printf("");
}

1000293
main()
{
    int a[105][105];
    long m,n,k,z,sum,i,j;
    scanf("",&z);
    for(i=1;i<=z;i++)
    {sum=0;
                     scanf("",&m,&n);
                    if(m>=2&&n>=2)
                    { for(j=1;j<=m;j++)
                     {
                                      for(k=1;k<=n;k++)
                     {
                                      scanf("",&a[j][k]);
                                      }
                                      }
                                      for(k=1;k<=n;k++)
                                      sum=sum+a[1][k]+a[m][k];
                                      for(j=2;j<=m-1;j++)
                                      {
                                                         sum=sum+a[j][1]+a[j][n];
                                                         }
                                                         printf("",sum);
                                                         }
                                                      
                                                     else
                                                     {for(j=1;j<=m;j++)
                     {
                                      for(k=1;k<=n;k++)
                     {
                                      scanf("",&a[j][k]);
                                      }
                                      }for(j=1;j<=m;j++)
                                                     {for(k=1;k<=n;k++)
                                                     sum=sum+a[j][k];}
                                                     printf("",sum);}
                                                       
                                                       
                                                       }
                                                 
                                                         
                                                    getchar();getchar();    } 


1000294
main()
{
   int i,num;
   double sz[10],sz1[10],sz2[10],sum, result,GPA;
   scanf("", &num);
   for(i=0;i<num;i++)
   {
                     scanf("", &sz[i]);
                     }
   for(i=0;i<num;i++)
   {
                     scanf("", &sz1[i]);
                     }
   for(i=0;i<num;i++)
   {
                     if(sz1[i]>=90)
                     {
                                   sz2[i]=4.0;
                     }
                     if(sz1[i]>=85)
                     {
                                   sz2[i]=3.7;
                     }
                     if(sz1[i]>=82)
                     {
                                   sz2[i]=3.3;
                     }
                     if(sz1[i]>=78)
                     {
                                   sz2[i]=3.0;
                     }
                     if(sz1[i]>=75)
                     {
                                   sz2[i]=2.7;
                     }
                     if(sz1[i]>=72)
                     {
                                   sz2[i]=2.3;
                     }
                     if(sz1[i]>=68)
                     {
                                   sz2[i]=2.0;
                     }
                     if(sz1[i]>=64)
                     {
                                   sz2[i]=1.5;
                     }
                     if(sz1[i]>=60)
                     {
                                   sz2[i]=1.0;
                     }
                    else
                     {
                                   sz2[i]=0;
                     }
                     }
   result=0;
   sum=0;
   
   
   for(i=0;i<num;i++)
   {
                     result=result+sz2[i]*sz[i];
                     sum=sum+sz[i];
                     }
   
  GPA=result/sum;
   printf("", GPA);
   scanf("");
   return 0;
}

1000295
main(){
	int a,b,i,zhen,chu,result;
	long x=0;
	char n[32],m[32];
	scanf("",&a,n,&b);
	result=strlen(n);
	 
	for(i=0;i<result;i++){
		switch(n[i]){
		case '':zhen=0;break;
		case '':zhen=1;break;
		case '':zhen=2;break;
        case '':zhen=3;break;
		case '':zhen=4;break;
		case '':zhen=5;break;
		case '':zhen=6;break;
		case '':zhen=7;break;
		case '':zhen=8;break;
		case '':zhen=9;break;
		case '':
        case '':zhen=10;
		    break;
		case '':
		case '':zhen=11;
			break;
		case '':
		case '':zhen=12;
			break;
		case '':
		case '':zhen=13;
			break;
		case '':
		case '':zhen=14;
			break;
		case '':
        case '':zhen=15;
			break;
		case '':
		case '':zhen=16;
			break;
		case '':
		case '':zhen=17;
			break;
		case '':
		case '':zhen=18;
			break;
		case '':
		case '':zhen=19;
			break;
		case '':
		case '':zhen=20;
			break;
		case '':
		case '':zhen=21;
			break;
		case '':
		case '':zhen=22;
			break;
		case '':
		case '':zhen=23;
			break;
		case '':
		case '':zhen=24;
			break;
		case '':
		case '':zhen=25;
			break;
		case '':
		case '':zhen=26;
			break;
		case '':
		case '':zhen=27;
			break;
		case '':
		case '':zhen=28;
			break;
		case '':
		case '':zhen=29;
			break;
		case '':
		case '':zhen=30;
			break;
		case '':
		case '':zhen=31;
			break;
		case '':
		case '':zhen=32;
			break;
		case '':
		case '':zhen=33;
			break;
		case '':
		case '':zhen=34;
			break;
		case '':
		case '':zhen=35;
			break;

		}
		x+=zhen*pow(a,result-1-i);
	}
	for(i=0;x>0;i++){
		chu=x%b;
		x=x/b;
		switch(chu){
        case 0:m[i]='';break;
		case 1:m[i]='';break;
        case 2:m[i]='';break;
		case 3:m[i]='';break;
        case 4:m[i]='';break;
		case 5:m[i]='';break;
		case 6:m[i]='';break;
		case 7:m[i]='';break;
		case 8:m[i]='';break;
		case 9:m[i]='';break;
		case 10:m[i]='';break;
		case 11:m[i]='';break;
		case 12:m[i]='';break;
		case 13:m[i]='';break;
		case 14:m[i]='';break;
		case 15:m[i]='';break;
		case 16:m[i]='';break;
		case 17:m[i]='';break;
		case 18:m[i]='';break;
		case 19:m[i]='';break;
		case 20:m[i]='';break;
		case 21:m[i]='';break;
		case 22:m[i]='';break;
		case 23:m[i]='';break;
		case 24:m[i]='';break;
		case 25:m[i]='';break;
		case 26:m[i]='';break;
		case 27:m[i]='';break;
		case 28:m[i]='';break;
		case 29:m[i]='';break;
		case 30:m[i]='';break;
		case 31:m[i]='';break;
		case 32:m[i]='';break;
		case 33:m[i]='';break;
		case 34:m[i]='';break;
		case 35:m[i]='';break;
		}
	}
	i=i-1;
	for(;i>=0;i--){
		printf("",m[i]);
	}
	printf("");
	return 0;
}

1000296
main()

{
    int n[10000],sudu[10000][2];
    int i,j,l,x;
    i=0;
    int m,z,zhongjian[2];
    int yinzi[1000];
    int wei,weik,tou,touk;
    
    do
    {
     
       scanf("",&n[i]);
       if(n[i]==0)
       break;
       
       else
      {
         for(j=0;j<n[i];j++)
         {
           scanf("",&sudu[j][0]);                 
         }
         for(j=0;j<n[i];j++)
         {
           scanf("",&sudu[j][1]);                 
         }
      }
      
      
          for(l=0;l<n[i];l++)
          {
              for(j=0;j<n[i]-1;j++)
              {
                    if(sudu[j][0]>sudu[j+1][0])
                      {
                          zhongjian[0]=sudu[j+1][0];              
                          sudu[j+1][0]=sudu[j][0];              
                          sudu[j][0]=zhongjian[0];
              
                       }
                    else;
              }
         }
         
         for(l=0;l<n[i];l++)
         {
             for(j=0;j<n[i]-1;j++)
             {
                   if(sudu[j][1]>sudu[j+1][1])
                     {
                         zhongjian[0]=sudu[j+1][1];              
                         sudu[j+1][1]=sudu[j][1];              
                         sudu[j][1]=zhongjian[0];
              
                      }
                   else;
             }
         }
         
         yinzi[i]=0;
         m=n[i]-1;
         wei=0;
         weik=0;
         tou=m;
         touk=m;
         x=0;
         
         
        do{
             if(sudu[tou][0]>sudu[touk][1])
             {
                yinzi[i]=yinzi[i]+200;
                x++;
                tou--;
                touk--;
             }
             if(sudu[tou][0]<sudu[touk][1])
             {
                yinzi[i]=yinzi[i]-200;
                x++;
                wei++;  
                touk--;       
             }        
             else
              {  
                
                    while(sudu[wei][0]>sudu[weik][1])
                     {
                          wei++;
                          weik++;
                          yinzi[i]=yinzi[i]+200; 
                          x++;                                               
                     }                   
                     
                     
                 if(sudu[wei][0]==sudu[touk][1])
                 {
                     wei++; 
                     touk--; 
                     x++;                             
                 }
                 else
                 {
                     wei++; 
                     touk--;
                     yinzi[i]=yinzi[i]-200; 
                     x++;
                 }
                 }
                     
        }
        while(x<n[i]);
         
        
    i++;
    }
    while(n[i-1]!=0);
    
    z=i;
       for(i=0;i<z;i++)
    {
    printf("",yinzi[i]);
    }
         
     
    getchar();
    getchar();
}


1000297
main(){
    int f[100],g[100];
    for(int a=1;a<=5;a++)
            for(int b=1;b<=5;b++)
                    if(b!=a)
                             for(int c=1;c<=5;c++)
                                     if(c!=b&&c!=a)
                                                   for(int d=1;d<=5;d++)
                                                           if(d!=c&&d!=b&&d!=a)    
                                                                                   for(int e=1;e<=5;e++)
                                                                                           if(e!=d&&e!=c&&e!=b&&e!=a&&e!=2&&e!=3){
                                                                                                                                  f[1]=e==1;g[1]=a;                                       
                                                                                                                                  f[2]=b==2;g[2]=b;
                                                                                                                                  f[3]=a==5;g[3]=c;
                                                                                                                                  f[4]=c!=1;g[4]=d;
                                                                                                                                  f[5]=d==1;g[5]=e;
                                                                                                                                  int flag=1;
                                                                                                                                  for(int i=1;i<=5;i++)
                                                                                                                                          if(!((g[i]<=2&&f[i])||(g[i]>2&&f[i]==0))){flag=0;break;}
                                                                                                                                          if(flag){cout<<a<<''<<b<<''<<c<<''<<d<<''<<e<<endl;return 0;}
                                                                                           
                                                                                           }     
                    
    
    
    return 0;    
}


1000298
for(int i=0;i<len;i++)
      {
              int count=0;
              for(int j=0;j<len;j++)
              {
                      if(count==0)
                      {printf("",squre2[i][j]);
                      count=1;}
                      printf("",squre2[i][j]);
              }
              printf("");
      }
     
      
    
}

1000299
merge(int* array,int* temp,int left,int right,int middle){
     int i,j,k,index1,index2;
     for(i = left; i <= middle; i++){
           temp[i] = array[i];
     }
     for(j = 1; j <= right - middle; j++){
           temp[right - j + 1] = array[j + middle];
     }
     for(index1 = left,index2 = right, k = left; k <= right; k++){
                if(temp[index1] <= temp[index2]){
                     array[k] = temp[index1++];
                }
                else{
                     array[k] = temp[index2--];
                }
     }
}
mergesort(int* array,int* temp,int left,int right){
     if(left < right){
             int middle = (left + right) / 2;
             mergesort(array,temp,left,middle);
             mergesort(array,temp,middle + 1,right);
             merge(array,temp,left,right,middle);
     }        
}
main(){
    int n;
    scanf("",&n);
    if(n == 0){return 0;}
    int horse_q[1005] = {0};      
    int horse_t[1005] = {0};     
    int i;
    for(i = 0; i < n; i++){
            scanf("",&horse_t[i]);
    }
    for(i = 0; i < n; i++){
            scanf("",&horse_q[i]);
    }
    int temp_t[1005] = {0};
    mergesort(horse_t,temp_t,0,n - 1);
    int temp_q[1005] = {0};
    mergesort(horse_q,temp_q,0,n - 1);
    int t_head = n - 1;        
    int t_last = 0;            
    int q_head = n - 1;           
    int q_last = 0;       
    int ans = 0;              
    while(q_head >= q_last){     
         if(horse_t[t_head] > horse_q[q_head]){
                       ans += 200;
                       t_head--;
                       q_head--;
         }
         if(horse_t[t_head] < horse_q[q_head]){
              ans -= 200;
              t_last++;
              q_head--;
         }
         else{
              if(horse_t[t_last] > horse_q[q_last]){
                        ans += 200;
                        t_last++;
                        q_last++;
              }
              else{
                   if(horse_t[t_last] < horse_q[q_head]){
                                      ans -= 200;
                   }
                   t_last++;
                   q_head--;
              }
         }
    }
    printf("",ans);
    main();
}

1000300
main()
{
    int n,n1;
    scanf("",&n);
    
    double a[2][11];
    double gpa=0,gpa1=0;
    
    
    for (n1=1; n1<=n; n1++) {
        scanf("",&a[0][n1-1]);
    }
    
    for (n1=1; n1<=n; n1++) {
        scanf("",&a[1][n1-1]);
        if (a[1][n1-1]>=90&&a[1][n1-1]<=100) {
            a[1][n1-1]=4.0*a[0][n1-1];
        }
        if (a[1][n1-1]>=85) {
                a[1][n1-1]=3.7*a[0][n1-1];
            }
            if (a[1][n1-1]>=82) {
                    a[1][n1-1]=3.3*a[0][n1-1];
                }
                if (a[1][n1-1]>=78) {
                        a[1][n1-1]=3.0*a[0][n1-1];
                    }
                    if (a[1][n1-1]>=75) {
                            a[1][n1-1]=2.7*a[0][n1-1];
                        }
                        if (a[1][n1-1]>=72) {
                                a[1][n1-1]=2.3*a[0][n1-1];
                            }
                            if (a[1][n1-1]>=68) {
                                    a[1][n1-1]=2.0*a[0][n1-1];
                                }
                                if (a[1][n1-1]>=64) {
                                        a[1][n1-1]=1.5*a[0][n1-1];
                                    }
                                    if (a[1][n1-1]>=60) {
                                            a[1][n1-1]=1.0*a[0][n1-1];
                                        }
                                        else
                                            a[1][n1-1]=0*a[0][n1-1];
        gpa=gpa+a[1][n1-1];
        gpa1=gpa1+a[0][n1-1];
    }
    gpa=gpa/gpa1;
    printf("",gpa);
    return 0;
}

1000301
insertsort(int* array,int left,int right){
     int i,j,temp;
     for(i = left + 1; i <= right; i++){
           temp = array[i];
           for(j = i - 1; j >= left; j--){
                 if(array[j] > temp){
                             array[j + 1] = array[j];
                 }
                 else{
                      break;
                 }
           }
           array[j + 1] = temp;
     }
} 
merge(int* array,int* temp,int left,int right,int middle){
     int i,j,k,index1,index2;
     for(i = left; i <= middle; i++){
           temp[i] = array[i];
     }
     for(j = 1; j <= right - middle; j++){
           temp[right - j + 1] = array[j + middle];
     }
     for(index1 = left,index2 = right, k = left; k <= right; k++){
                if(temp[index1] <= temp[index2]){
                     array[k] = temp[index1++];
                }
                else{
                     array[k] = temp[index2--];
                }
     }
}
mergesort(int* array,int* temp,int left,int right){
     if(right - left > 16){
             int middle = (left + right) / 2;
             mergesort(array,temp,left,middle);
             mergesort(array,temp,middle + 1,right);
             merge(array,temp,left,right,middle);
     }
     else{
          insertsort(array,left,right);
     }
}
main(){
    int n;
    scanf("",&n);
    if(n == 0){return 0;}
    int horse_q[1005];      
    int horse_t[1005];     
    int i;
    for(i = 0; i < n; i++){
            scanf("",&horse_t[i]);
    }
    for(i = 0; i < n; i++){
            scanf("",&horse_q[i]);
    }
    int temp[1005];
    mergesort(horse_t,temp,0,n - 1);
    mergesort(horse_q,temp,0,n - 1);
    int t_head = n - 1;        
    int t_last = 0;            
    int q_head = n - 1;           
    int q_last = 0;       
    int ans = 0;              
    while(q_head >= q_last){     
         if(horse_t[t_head] > horse_q[q_head]){
                       ans += 200;
                       t_head--;
                       q_head--;
         }
         if(horse_t[t_head] < horse_q[q_head]){
              ans -= 200;
              t_last++;
              q_head--;
         }
         else{
              if(horse_t[t_last] > horse_q[q_last]){
                        ans += 200;
                        t_last++;
                        q_last++;
              }
              else{
                   if(horse_t[t_last] < horse_q[q_head]){
                                      ans -= 200;
                   }
                   t_last++;
                   q_head--;
              }
         }
    }
    printf("",ans);
    main();
}

1000302
zhuan1(char xx){
	int x;

	switch(xx){
		case '':x=0;break;
		case '':x=1;break;
		case '':x=2;break;
		case '':x=3;break;
		case '':x=4;break;
		case '':x=5;break;
		case '':x=6;break;
		case '':x=7;break;
		case '':x=8;break;
		case '':x=9;break;
		case '':x=10;break;
        case '':x=11;break;
		case '':x=12;break;
		case '':x=13;break;
		case '':x=14;break;
		case '':x=15;break;
		case '':x=16;break;
		case '':x=17;break;
		case '':x=18;break;
		case '':x=19;break;
		case '':x=20;break;
		case '':x=21;break;
		case '':x=22;break;
		case '':x=23;break;
		case '':x=24;break;
		case '':x=25;break;
		case '':x=26;break;
		case '':x=27;break;
		case '':x=28;break;
		case '':x=29;break;
		case '':x=30;break;
		case '':x=31;break;
		case '':x=32;break;
		case '':x=33;break;
		case '':x=34;break;
		case '':x=35;break;
        case '':x=10;break;
        case '':x=11;break;
		case '':x=12;break;
		case '':x=13;break;
		case '':x=14;break;
		case '':x=15;break;
		case '':x=16;break;
		case '':x=17;break;
		case '':x=18;break;
		case '':x=19;break;
		case '':x=20;break;
		case '':x=21;break;
		case '':x=22;break;
		case '':x=23;break;
		case '':x=24;break;
		case '':x=25;break;
		case '':x=26;break;
		case '':x=27;break;
		case '':x=28;break;
		case '':x=29;break;
		case '':x=30;break;
		case '':x=31;break;
		case '':x=32;break;
		case '':x=33;break;
		case '':x=34;break;
		case '':x=35;break;
} 
	return x;
}
zhuan2(int yy){
	char tt;
switch(yy){
        case 0:tt='';break;
		case 1:tt='';break;
		case 2:tt='';break;
		case 3:tt='';break;
		case 4:tt='';break;
		case 5:tt='';break;
		case 6:tt='';break;
		case 7:tt='';break;
		case 8:tt='';break;
		case 9:tt='';break;
        case 10:tt='';break;
        case 11:tt='';break;
		case 12:tt='';break;
		case 13:tt='';break;
		case 14:tt='';break;
		case 15:tt='';break;
		case 16:tt='';break;
		case 17:tt='';break;
		case 18:tt='';break;
		case 19:tt='';break;
		case 20:tt='';break;
		case 21:tt='';break;
		case 22:tt='';break;
		case 23:tt='';break;
		case 24:tt='';break;
		case 25:tt='';break;
		case 26:tt='';break;
		case 27:tt='';break;
		case 28:tt='';break;
		case 29:tt='';break;
		case 30:tt='';break;
		case 31:tt='';break;
		case 32:tt='';break;
		case 33:tt='';break;
		case 34:tt='';break;
		case 35:tt='';break;
		}
return tt;
}
main(int argc, char* argv[])
{
	int n,m,x,k,i,j,count,y=0;
	char str[10];
		
	char str1[100];
	
	scanf("",&n);
	scanf("",str);
	scanf("",&m);
	count=strlen(str);

	
	for(i=0;i<=count-1;i++){
	x=zhuan1(str[i]);
		y=y+(x*(int)pow(n,count-1-i));

	}
	if(y==0){
		printf("");
	return 0;
	}
	
	int count1=0;
	for(k=0,j=0;y!=0;k++,j++){
		
	str1[j]=zhuan2(y%m);
		y=y/m;
		count1++;
	}
	for(j=count1-1;j>=0;j--){
		
	
		printf("",str1[j]);
	}

	return 0;
}

1000303
main()
{
    int k,l,m,n;
	scanf("",&k,&l,&m);   
    if(k%4==0)
	{if(k%100==0)
	{if(k%400==0)          
			{
if((l>0)&&(l<2)){n=m;printf("",n);}
if((l>1)&&(l<3)){n=(m+31);printf("",n);}
if((l>2)&&(l<4)){n=(m+31+29);printf("",n);}
if((l>3)&&(l<5)){n=(m+31+29+31);printf("",n);}
if((l>4)&&(l<6)){n=(m+31+29+31+30);printf("",n);}
if((l>5)&&(l<7)){n=(m+31+29+31+30+31);printf("",n);}
if((l>6)&&(l<8)){n=(m+31+29+31+30+31+30);printf("",n);}
if((l>7)&&(l<9)){n=(m+31+29+31+30+31+30+31);printf("",n);}
if((l>8)&&(l<10)){n=(m+31+29+31+30+31+30+31+31);printf("",n);}
if((l>9)&&(l<11)){n=(m+31+29+31+30+31+30+31+31+30);printf("",n);}
if((l>10)&&(l<12)){n=(m+31+29+31+30+31+30+31+31+30+31);printf("",n);}
if((l>11)&&(l<13)){n=(m+31+29+31+30+31+30+31+31+30+31+30);printf("",n);}
			}
			else                  
			{
if((l>0)&&(l<2)){n=m;printf("",n);}
if((l>1)&&(l<3)){n=(m+31);printf("",n);}
if((l>2)&&(l<4)){n=(m+31+28);printf("",n);}
if((l>3)&&(l<5)){n=(m+31+28+31);printf("",n);}
if((l>4)&&(l<6)){n=(m+31+28+31+30);printf("",n);}
if((l>5)&&(l<7)){n=(m+31+28+31+30+31);printf("",n);}
if((l>6)&&(l<8)){n=(m+31+28+31+30+31+30);printf("",n);}
if((l>7)&&(l<9)){n=(m+31+28+31+30+31+30+31);printf("",n);}
if((l>8)&&(l<10)){n=(m+31+28+31+30+31+30+31+31);printf("",n);}
if((l>9)&&(l<11)){n=(m+31+28+31+30+31+30+31+31+30);printf("",n);}
if((l>10)&&(l<12)){n=(m+31+28+31+30+31+30+31+31+30+31);printf("",n);}
if((l>11)&&(l<13)){n=(m+31+28+31+30+31+30+31+31+30+31+30);printf("",n);}
			}
	}else                  
			{
if((l>0)&&(l<2)){n=m;printf("",n);}
if((l>1)&&(l<3)){n=(m+31);printf("",n);}
if((l>2)&&(l<4)){n=(m+31+29);printf("",n);}
if((l>3)&&(l<5)){n=(m+31+29+31);printf("",n);}
if((l>4)&&(l<6)){n=(m+31+29+31+30);printf("",n);}
if((l>5)&&(l<7)){n=(m+31+29+31+30+31);printf("",n);}
if((l>6)&&(l<8)){n=(m+31+29+31+30+31+30);printf("",n);}
if((l>7)&&(l<9)){n=(m+31+29+31+30+31+30+31);printf("",n);}
if((l>8)&&(l<10)){n=(m+31+29+31+30+31+30+31+31);printf("",n);}
if((l>9)&&(l<11)){n=(m+31+29+31+30+31+30+31+31+30);printf("",n);}
if((l>10)&&(l<12)){n=(m+31+29+31+30+31+30+31+31+30+31);printf("",n);}
if((l>11)&&(l<13)){n=(m+31+29+31+30+31+30+31+31+30+31+30);printf("",n);}
			}
	}else                  
			{
if((l>0)&&(l<2)){n=m;printf("",n);}
if((l>1)&&(l<3)){n=(m+31);printf("",n);}
if((l>2)&&(l<4)){n=(m+31+28);printf("",n);}
if((l>3)&&(l<5)){n=(m+31+28+31);printf("",n);}
if((l>4)&&(l<6)){n=(m+31+28+31+30);printf("",n);}
if((l>5)&&(l<7)){n=(m+31+28+31+30+31);printf("",n);}
if((l>6)&&(l<8)){n=(m+31+28+31+30+31+30);printf("",n);}
if((l>7)&&(l<9)){n=(m+31+28+31+30+31+30+31);printf("",n);}
if((l>8)&&(l<10)){n=(m+31+28+31+30+31+30+31+31);printf("",n);}
if((l>9)&&(l<11)){n=(m+31+28+31+30+31+30+31+31+30);printf("",n);}
if((l>10)&&(l<12)){n=(m+31+28+31+30+31+30+31+31+30+31);printf("",n);}
if((l>11)&&(l<13)){n=(m+31+28+31+30+31+30+31+31+30+31+30);printf("",n);}
			}
    return 0;
}

1000304
x(int n,int a[ ],int b[ ])
{
  int num=0,num1=0,i=n-1,j=n-1;
  int m=0,k=0,z,shen=n;
  while(shen>1)
  {
                  if(a[i]>b[j])
                  {
                               num++;
                               i--;
                               j--;
                               shen--;
                               continue;
                  }
                  if(a[m]>b[k])
                  {
                               num++;
                               m++;
                               k++;
                               shen--;
                  }
                  else
                  {
                                if(a[m]<b[j])
                                num1++;
                                
                                m++;
                                j--;
                                shen--;
                  }
                  
  }
  if(a[m]>b[k])  num++;
  if(a[m]<b[k])  num1++;
  z=num-num1;
  return z;
}

  

main()
{
    int m=0,i,win,n,d;
    int l,j,t;
    int a[1000], b[1000];
    while(m==0)
    {
               scanf("",&n);
               if(n==0) break;
               else
               {
                   for(i=0;i<n;i++)
                   scanf("",&a[i]);
                   for(i=0;i<n;i++)
                   scanf("",&b[i]);
                   
                   
               }
               
               for(j=0;j<n-1;j++)
               { 
                 for(l=0;l<n-j-1;l++)
                     if(a[l]>a[l+1])
                     {
                                    t=a[l];
                                    a[l]=a[l+1];
                                    a[l+1]=t;
                     }
                 }
               for(j=0;j<n-1;j++)
               {
                 for(l=0;l<n-j-1;l++)
                     if(b[l]>b[l+1])
                     {
                                    t=b[l];
                                    b[l]=b[l+1];
                                    b[l+1]=t;
                     }
               }
               
               d = x(n,a,b);
               win=d*200;
               printf("",win);
    }
}


1000305
main()
{
      int la,lb,l,i,j,k,t;
      int a[1000],b[1000],c[1000];
      char stra[1000],strb[1000];
       
      scanf("",stra,strb);
      
      la=strlen(stra);
      lb=strlen(strb);
      
      
      for (i=0;i<=1000;i++)
       b[i]=0;
       for (i=0;i<=1000;i++)
       c[i]=0;
       
      
      if (la==lb)
      {   for (i=la-1;i>=0;i--)
            {    
                  a[i]=stra[i]+strb[i]+b[i+1];
                       
                  if (a[i]>=(106))
                  {   a[i]=a[i]-10;
                      
                      b[i]=1;         
                          
                  }
                  
                    
                  
            }
            t=0;
            i=0;
            while (a[i]==2*'')
            {     i=i+1;
            t=t+1;
                  
                  
                  }
            
            
            
           
            if(b[0]==1)
            printf("",1);
            for (i=t;i<la;i++)
            {printf("",a[i]-2*'');}
            
      }
        if(la<lb)
      {        l=lb-la;
           
          
           
            for (i=la-1;i>=0;i--)
            {    
                  a[i]=stra[i]+strb[i+l]+b[i+1];
                       
                  if (a[i]>=(106))
                  {   a[i]=a[i]-10;
                      
                      b[i]=1;         
                     
                               
                  }
                  
                    
                  
            }
            
            if (b[0]==0)
            { 
                        
               t=0;
               i=0;
            while (strb[i]=='')
            {     i=i+1;
            t=t+1;
                  
                  
                  }         
                   
             for(i=t;i<l;i++)
            {printf("",strb[i]-'');}}
            else
            {    
                 c[l]=1;
                
                for (i=l-1;i>=0;i--)
                 {  
                     
                     strb[i]=strb[i]+c[i+1];
                                    
                                    
                    if (strb[i]>=(58))
                  {   strb[i]=strb[i]-10;
                      
                      c[i]=1;         
                               
                  }
                     
                 }
                  
                  t=0;
                  i=0;
                  while (strb[i]==2*'')
                  {     i=i+1;
                        t=t+1;
                  }
                 if (c[0]==1)
                 printf("",1);
                 for(i=t;i<l;i++)
                 printf("",strb[i]-'');               
                
            }
             for (i=0;i<la;i++)
            {printf("",a[i]-2*'');}
            
      }
        
     
    
       if(lb<la)
      {        l=la-lb;
           
          
           
            for (i=lb-1;i>=0;i--)
            {    
                  a[i]=strb[i]+stra[i+l]+b[i+1];
                       
                  if (a[i]>=(106))
                  {   a[i]=a[i]-10;
                      
                      b[i]=1;         
                     
                               
                  }
                  
                    
                  
            }
            if (b[0]==0)
            {     t=0;
               i=0;
            while (stra[i]=='')
            {     i=i+1;
               t=t+1;}
                        
             for(i=t;i<l;i++)
            {printf("",stra[i]-'');}}
            else
            {    
                 c[l]=1;
                
                for (i=l-1;i>=0;i--)
                 {  
                     
                     stra[i]=stra[i]+c[i+1];
                                    
                                    
                    if (stra[i]>=(58))
                  {   stra[i]=stra[i]-10;
                      
                      c[i]=1;         
                               
                  }
                     
                 }
                 
                 if (c[0]==1)
                 printf("",1);
                 for(i=0;i<l;i++)
                 printf("",stra[i]-'');               
                
            }
             for (i=0;i<lb;i++)
            {printf("",a[i]-2*'');}
            
      }
        
    
    
    
    if((la==1)&&(lb==1)&&(stra[0]=='')&&(strb[0]==''))
    printf("",0);
    
    
    
    
   
    return 0;
}



1000307
main()
{
	int startyear,startmonth,startday,rankstartday=0;
	int endyear,endmonth,endday,rankendday=0;
	cin >> startyear >> startmonth >> startday;
	cin >> endyear >> endmonth >> endday;
	int sum=0,year=0,month;
	int days1[12]={31,28,31,30,31,30,31,31,30,31,30,31};
	int days2[12]={31,29,31,30,31,30,31,31,30,31,30,31};
	if( startyear== endyear)
	{
		if( (startyear % 4 == 0 && startyear % 100 != 0) || (startyear % 400 == 0) )
		{
			for(month=1;month<startmonth;month++)
			{
				rankstartday=rankstartday+days2[month-1];
			}
			rankstartday=rankstartday+startday;
			for(month=1;month<endmonth;month++)
			{
				rankendday=rankendday+days2[month-1];
			}
			rankendday=rankendday+endday;
		}
		if( !((startyear % 4 == 0 && startyear % 100 != 0) || (startyear % 400 == 0)) )
		{
			for(month=1;month<startmonth;month++)
			{
				rankstartday=rankstartday+days1[month-1];
			}
			rankstartday=rankstartday+startday;
			for(month=1;month<endmonth;month++)
			{
				rankendday=rankendday+days1[month-1];
			}
			rankendday=rankendday+endday;
		}
		sum = rankendday - rankstartday;
	}
	if ( startyear < endyear)
	{
		if( (startyear % 4 == 0 && startyear % 100 != 0) || (startyear % 400 == 0) )
		{
			for(month=1;month<startmonth;month++)
			{
				rankstartday=rankstartday+days2[month-1];
			}
			rankstartday=rankstartday+startday;
			sum=366-rankstartday;
		}
		if( !((startyear % 4 == 0 && startyear % 100 != 0) || (startyear % 400 == 0)) )
		{
			for(month=1;month<startmonth;month++)
			{
				rankstartday=rankstartday+days1[month-1];
			}
			rankstartday=rankstartday+startday;
			sum=365-rankstartday;
		}
		for(year=startyear+1;year<endyear;year++)
		{
			if( (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0) )
			{
				sum=sum+366;
			}
			else sum=sum+365;
		}
		if( (endyear % 4 == 0 && endyear % 100 != 0) || (endyear % 400 == 0) )
		{
			for(month=1;month<endmonth;month++)
			{
				rankendday=rankendday+days2[month-1];
			}
			rankendday=rankendday+endday;
			sum=sum+rankendday;
		}
		if( !((endyear % 4 == 0 && endyear % 100 != 0) || (endyear % 400 == 0)) )
		{
			for(month=1;month<endmonth;month++)
			{
				rankendday=rankendday+days1[month-1];
			}
			rankendday=rankendday+endday;
			sum=sum+rankendday;
		}
	}
	cout << sum << endl;
	return 0;
}


1000308
main()
{
    int n;
    int i,j,temp=0,num=0,sum1=0,sum2=0,money=0;
    int tian[1000];
    int qi[1000];
    scanf("",&n);
    while(n!=0)
    {
    temp=0,num=0,sum1=0,sum2=0,money=0;
    for(i=0;i<n;i++)
    scanf("",&tian[i]);
    for(j=0;j<n;j++)
    scanf("",&qi[j]);
    
    for(i=0;i<=n-2;i++)
    {
                       for(j=n-1;j>=1;j--)
                       {
                                          if(tian[j]>tian[j-1])
                                          {
                                                               temp=tian[j];
                                                               tian[j]=tian[j-1];
                                                               tian[j-1]=temp;
                                          }
                       }
    }
    
    
     for(i=0;i<=n-2;i++)
    {
                       for(j=n-1;j>=1;j--)
                       {
                                          if(qi[j]>qi[j-1])
                                          {
                                                               temp=qi[j];
                                                               qi[j]=qi[j-1];
                                                               qi[j-1]=temp;
                                          }
                       }
    }
    
    for(i=0;i<n;i++)
    {
                    num=i;
                    for(j=num;j>=0;j--)
                    {
                                       if(tian[j]>qi[i])
                                       {
                                                        sum1=sum1+1;
                                                        tian[j]=0;
                                                         qi[i]=0;
                                                         break;
                                       }          
                    }
    }
    
    for(i=0;i<n;i++)
    {
                   for(j=0;j<n;j++)
                   {
                      if(tian[i]==qi[j]&&tian[i]!=0)
                      {
                                   sum2++;
                                   break;            
                      }
                   }
    }
    
    money=200*(sum1-(n-sum1-sum2));
    printf("",money);
    scanf("",&n);
}
getchar();
getchar();
}

1000309
main()
{
	int a[2000][2], i=0, j=0, k, l, l1, l2, m, n, maxt, mint, q, g=0, max=0;                   
	char b[9000], c[9000];                                                                     
	cin.getline(b,9000,'\n');
	cin.getline(c,9000,'\n');                                                                  
	l1 = strlen(b);
	l2 = strlen(c);
	for (k=0;k<l1;k++)
	{
		if (b[k+1] == '' || b[k+1] == '\0')
		{
			a[i][0] = b[k] - '';
			i++;
			k = k + 1;
			continue;
		}
		else
		{
			if (b[k+2] == '' || b[k+2] == '\0')
			{
				m = b[k] - '';
				n = b[k+1] - '';
				a[i][0] = 10 * m + n;
				i++;
				k = k + 2;
				continue;
			}
			if (b[k+3] == ''|| b[k+3] == '\0')
			{
				m = b[k] - '';
				n = b[k+1] - '';
				q = b[k+2] - '';
				a[i][0] = 100 * m + 10 * n + q;
				i++;
				k = k + 3;
				continue;
			}
		}
	}                                                                                               
	for (k=0;k<l2;k++)
	{
		if (c[k+1] == ''||c[k+1] == '\0')
		{
			a[j][1] = c[k] - '';
			j++;
			k = k + 1;
			continue;
		}
		if (c[k+2] == '' || c[k+2] == '\0')
			{
				m = c[k] - '';
				n = c[k+1] - '';
				a[j][1] = 10 * m + n;
				j++;
				k = k + 2;
				continue;
			}
			if (c[k+3] == '' || c[k+3] == '\0')
			{
				m = c[k] - '';
				n = c[k+1] - '';
				q = c[k+2] - '';
				a[j][1] = 100 * m + 10 * n + q;
				j++;
				k = k + 3;
				continue;
			}
	}                                                                                         
	mint = a[0][0];
	maxt = a[0][1];
	for (k=1;k<i;k++)
	{
		if (mint > a[k][0])
			mint = a[k][0];
		if (maxt < a[k][1])
			maxt = a[k][1];
	}                                                                                         
	for (k=mint;k<=maxt;k++)
	{
			
			g = 0;
			for (l=0;l<i;l++)
			{
				if (a[l][0] <= k && a[l][1] > k)
					g++;
			}
			if (max < g)
				max = g;
	}                                                                                         
	cout <<  i << ""<< max;                                                                  
	return 0;
}

1000310
main()
{
      int l1,l2,l,m,i,k,g,f;
      char str1[250],str2[250],str3[252],str4[251];
      gets(str1);
      gets(str2);

      l1=strlen(str1);
      
      l2=strlen(str2);
      if(  l1==1&&l2==1&&str1[0]==''&&str2[0]=='')
         printf("",str1);
      else
      {   
    
      if(l1>l2)
        {
               
        l=l1;m=l1-l2;  
               
                 for(i=m;i<=l-1;i++)
                 {
                                  str4[i]=str2[i-m];
                                 }
                 for(i=0;i<m;i++)
                 {
                               str2[i]='';
                               
                 }
                 
                 for(i=m;i<=l-1;i++)
                 str2[i]=str4[i];
                 str2[l]='\0';
                 
              
             
              
               
               }
        
      else
        {
               l=l2;m=l2-l1;  
               
                 for(i=m;i<=l-1;i++)
                 {
                                  str4[i]=str1[i-m];
                                 }
                 for(i=0;i<m;i++)
                 {
                               str1[i]='';
                               
                 } 
                 for(i=m;i<=l-1;i++)
                 str1[i]=str4[i];
                 
                 str1[l]='\0';
             
           
        }
        g=0;
        
        for(i=l-1;i!=-1;i=i-1)
       { 
       
                            
      
                         if(str1[i]+str2[i]+g-48>'')
                            {
                                    str3[i+1]=g+str1[i]+str2[i]-58;
                                    g=1;      
                                    
                             
                            }
                            else
                            {
                                str3[i+1]=str1[i]+str2[i]+g-48;
                            g=0;
                            }
      }
      str3[l+1]='\0';
      k=0;
      
     if(g==1)
      str3[0]='';
     if(g==0)
     {
     for(i=0;i<=l;i++)
     str3[i]=str3[i+1];
     }
    for(i=0;;i++)
      {
        if(str3[i]!='')
        break;
        k=k+1;
      
        }  
          
        for(i=0;i<=l;i++)
           {
           str3[i]=str3[i+k];   
         
          }
           
           
   printf("",str3);
      
      
      
      }
      }
      
      
      
      
      
      
      
      

1000312
main()
{
    int n;
    int t[1000],q[1000];
    int i=0,k=0;
    int a=0,b=0,c=0;
    int w=0,p=0,l=0,m=0;    
    do
    {
         scanf("",&n);
         if(n==0)
         break;
         for(i=0;i<n;i++)
         scanf("",&t[i]);
         for(a=0;a<n-1;a++)
             for(b=0;b<n-a-1;b++)
                 if(t[b]<t[b+1])
                 {
                     c=t[b];
                     t[b]=t[b+1];
                     t[b+1]=c;           
                 }
         for(i=0;i<n;i++)
         scanf("",&q[i]);
         for(a=0;a<n-1;a++)
             for(b=0;b<n-a-1;b++)
                 if(q[b]<q[b+1])
                 {
                     c=q[b];
                     q[b]=q[b+1];
                     q[b+1]=c;          
                 }
         i=n-1;
         for(k=0;k<n;k++)
         {
             if(t[i]>q[i])
             {
                 w=w+1;
                 i=i-1;
                 continue;                 
             }
             if(t[i]<q[i])
             {
                 l=l+1;
                 for(int o=0;o<i;o++)
                 q[o]=q[o+1];
                 i=i-1;
                 continue;             
             }
             if(t[i]==q[i])
             {
                 if(t[0]>q[0])
                 {
                     w=w+1;
                     for(int o=0;o<i;o++)
                     {
                         q[o]=q[o+1];
                         t[o]=t[o+1];
                     }    
                     i=i-1;
                     continue;                    
                 }
                 if(t[0]<q[0])
                 {
                     l=l+1;
                     for(int o=0;o<i;o++)
                     q[o]=q[o+1];
                     i=i-1;
                     continue;
                 }
                 if(t[0]==q[0])
                 {
                     if(t[0]==t[i])
                     continue;
                     else
                     {
                         l=l+1;
                         for(int o=0;o<i;o++)
                         q[o]=q[o+1];
                         i=i-1;
                         continue;
                     }                                        
                 }             
             }
         }
         m=200*w-200*l;
         printf("",m);
         w=0;
         l=0;
         p=0;
         m=0;        
    }
    while(n!=0);
    return 0;        
}


1000313
main()
{
    int a1[251], b1[251], c[251];
    int i, i1, i2, j1, j2, j3, j4, j5, c1, c2, jinwei, head;
    char a[251], b[251];
    
    scanf("", a);
    scanf("", b);
    c1 = strlen(a);  c2 = strlen(b);
    a1[0] = b1[0] = 0;
    for(i1=1; i1<=c1; i1++)
        a1[i1] = a[i1-1] - '';
    for(i2=1; i2<=c2; i2++)
        b1[i2] = b[i2-1] - '';
    if(c1 >= c2)
    {
        for(i=c1; i>=c1-c2+1; i--)
            b1[i] = b1[i-c1+c2];
        for(j1=c1-c2; j1>=1; j1--)
            b1[j1] = 0;
        jinwei = 0;
        for(j2=c1; j2>=0; j2--)
        {
            c[j2] = a1[j2] + b1[j2] + jinwei;
            jinwei = 0;
            if(c[j2] >= 10)
            {
                c[j2] = c[j2] - 10;
                jinwei++;    
            }        
        } 
        head = 0;
        for(j4=0; j4<=c1; j4++)
            if(c[j4] != 0)
                {
                    head = j4;
                    break; 
                }
        if(head==0 && c[0] == 0)
             printf("");
        else
        {
            for(j3=head; j3<=c1; j3++)
                printf("", c[j3]);
            printf("");
        }
    }
    else
    {
        for(i=c2; i>=c2-c1+1; i--)
            a1[i] = a1[i-c2+c1];
        for(j1=c2-c1; j1>=1; j1--)
            a1[j1] = 0;
        jinwei = 0;
        for(j2=c2; j2>=0; j2--)
        {
            c[j2] = a1[j2] + b1[j2] + jinwei;
            jinwei = 0;
            if(c[j2] >= 10)
            {
                c[j2] = c[j2] - 10;
                jinwei++;    
            }        
        } 
        head = 0;
        for(j4=0; j4<=c2; j4++)
            if(c[j4] != 0)
                {
                    head = j4;
                    break; 
                }
        if(head==0 && c[0]==0)
             printf("");
        else
        {
            for(j3=head; j3<=c2; j3++)
                printf("", c[j3]);
            printf("");
        }
    }    
              
        return 0;
}

1000314
main()
{
	int m,n;
	int MT[21][21];
	int Tx[401],Ty[401],x,y;
	int i,j,k=0;

	cin>>m>>n;
	for(i=0;i<m;i++)
	{
		for(j=0;j<n;j++)cin>>MT[i][j];
	}

	for(i=0;i<m;i++)
	{
		for(j=0;j<n;j++)
		{
			if(i+1<m && i-1>=0 && j+1<n && j-1>=0)
			{
				if(MT[i][j]>=MT[i+1][j] && MT[i][j]>=MT[i-1][j] && MT[i][j]>=MT[i][j+1] && MT[i][j]>=MT[i][j-1])
				{
					Tx[k]=i;
					Ty[k]=j;
					k++;
				}
			}
			if(i+1<m && i-1>=0 && j+1<n)
			{
				if(MT[i][j]>=MT[i+1][j] && MT[i][j]>=MT[i-1][j] && MT[i][j]>=MT[i][j+1])
				{
					Tx[k]=i;
					Ty[k]=j;
					k++;
				}
			}
			if(i+1<m && i-1>=0 && j-1>=0)
			{
				if(MT[i][j]>=MT[i+1][j] && MT[i][j]>=MT[i-1][j] && MT[i][j]>=MT[i][j-1])
				{
					Tx[k]=i;
					Ty[k]=j;
					k++;
				}
			}
			if(i+1<m && j+1<n && j-1>=0)
			{
				if(MT[i][j]>=MT[i+1][j] && MT[i][j]>=MT[i][j+1] && MT[i][j]>=MT[i][j-1])
				{
					Tx[k]=i;
					Ty[k]=j;
					k++;
				}
			}
			if(i-1>=0 && j+1<n && j-1>=0)
			{
				if(MT[i][j]>=MT[i-1][j] && MT[i][j]>=MT[i][j+1] && MT[i][j]>=MT[i][j-1])
				{
					Tx[k]=i;
					Ty[k]=j;
					k++;
				}
			}
			if(i==0 && j==0)
			{
				if(MT[i][j]>=MT[i+1][j] && MT[i][j]>=MT[i][j+1])
				{
					Tx[k]=i;
					Ty[k]=j;
					k++;
				}
			}
			if(i==0 && j==n-1)
			{
				if(MT[i][j]>=MT[i+1][j] && MT[i][j]>=MT[i][j-1])
				{
					Tx[k]=i;
					Ty[k]=j;
					k++;
				}
			}
			if(i==m-1 && j==0)
			{
				if(MT[i][j]>=MT[i-1][j] && MT[i][j]>=MT[i][j+1])
				{
					Tx[k]=i;
					Ty[k]=j;
					k++;
				}
			}
			if(i==m-1 && j==n-1)
			{
				if(MT[i][j]>=MT[i-1][j] && MT[i][j]>=MT[i][j-1])
				{
					Tx[k]=i;
					Ty[k]=j;
					k++;
				}
			}

		}
	}

	for(i=0;i<k;i++)
	{
		for(j=0;j<k-i-1;j++)
		{
			if(Tx[j]>Tx[j+1])
			{
				x=Tx[j];
				Tx[j]=Tx[j+1];
				Tx[j+1]=x;
				y=Ty[j];
				Ty[j]=Ty[j+1];
				Ty[j+1]=y;
			}
		}
	}

	for(i=0;i<k;i++)
	{
		for(j=0;j<k-i;j++)
		{
			if(Tx[j]==Tx[j+1] && Ty[j]>Ty[j+1])
			{
				y=Ty[j];
				Ty[j]=Ty[j+1];
				Ty[j+1]=y;
			}
		}
	}


	for(i=0;i<k;i++)cout<<Tx[i]<<""<<Ty[i]<<endl;

	return 0;
}

1000315
main()
{
	int m=0;int n,i,j;
	cin>>m>>n;
	int a[10][10]={0},b[10][10]={0},c[10][10]={0},d[10][10]={0},e[10][10]={0};
	a[5][5]=m;
	for(i=1;i<=9;i++)
		for(j=1;j<=9;j++)
			if(a[i][j]!=0){b[i][j]=2*a[i][j]+b[i][j];
	                       b[i+1][j]=a[i][j]+b[i+1][j];
						   b[i-1][j]=a[i][j]+b[i-1][j];
						   b[i+1][j+1]=a[i][j]+b[i+1][j+1];
						   b[i-1][j+1]=a[i][j]+b[i-1][j+1];
						   b[i][j+1]=a[i][j]+b[i][j+1];
						   b[i+1][j-1]=a[i][j]+b[i+1][j-1];
						   b[i-1][j-1]=a[i][j]+b[i-1][j-1];
						   b[i][j-1]=a[i][j]+b[i][j-1];}
	for(i=1;i<=9;i++)
		for(j=1;j<=9;j++)
			if(b[i][j]!=0){c[i][j]=2*b[i][j]+c[i][j];
	                       c[i+1][j]=b[i][j]+c[i+1][j];
						   c[i-1][j]=b[i][j]+c[i-1][j];
						   c[i+1][j+1]=b[i][j]+c[i+1][j+1];
						   c[i-1][j+1]=b[i][j]+c[i-1][j+1];
						   c[i][j+1]=b[i][j]+c[i][j+1];
						   c[i+1][j-1]=b[i][j]+c[i+1][j-1];
						   c[i-1][j-1]=b[i][j]+c[i-1][j-1];
						   c[i][j-1]=b[i][j]+c[i][j-1];}
	for(i=1;i<=9;i++)
		for(j=1;j<=9;j++)
			if(c[i][j]!=0){d[i][j]=2*c[i][j]+d[i][j];
	                       d[i+1][j]=c[i][j]+d[i+1][j];
						   d[i-1][j]=c[i][j]+d[i-1][j];
						   d[i+1][j+1]=c[i][j]+d[i+1][j+1];
						   d[i-1][j+1]=c[i][j]+d[i-1][j+1];
						   d[i][j+1]=c[i][j]+d[i][j+1];
						   d[i+1][j-1]=c[i][j]+d[i+1][j-1];
						   d[i-1][j-1]=c[i][j]+d[i-1][j-1];
						   d[i][j-1]=c[i][j]+d[i][j-1];}
	for(i=1;i<=9;i++)
		for(j=1;j<=9;j++)
			if(d[i][j]!=0){e[i][j]=2*d[i][j]+e[i][j];
	                       e[i+1][j]=d[i][j]+e[i+1][j];
						   e[i-1][j]=d[i][j]+e[i-1][j];
						   e[i+1][j+1]=d[i][j]+e[i+1][j+1];
						   e[i-1][j+1]=d[i][j]+e[i-1][j+1];
						   e[i][j+1]=d[i][j]+e[i][j+1];
						   e[i+1][j-1]=d[i][j]+e[i+1][j-1];
						   e[i-1][j-1]=d[i][j]+e[i-1][j-1];
						   e[i][j-1]=d[i][j]+e[i][j-1];}
	if(n==1)
		for(i=1;i<=9;i++)
			for(j=1;j<=9;j++){if(j!=9)cout<<b[i][j]<<"";else cout<<b[i][j]<<endl;}
	if(n==2)
		for(i=1;i<=9;i++)
			for(j=1;j<=9;j++){if(j!=9)cout<<c[i][j]<<"";else cout<<c[i][j]<<endl;}
	if(n==3)
		for(i=1;i<=9;i++)
			for(j=1;j<=9;j++){if(j!=9)cout<<d[i][j]<<"";else cout<<d[i][j]<<endl;}
	if(n==4)
		for(i=1;i<=9;i++)
			for(j=1;j<=9;j++){if(j!=9)cout<<e[i][j]<<"";else cout<<e[i][j]<<endl;}





	cin.get();cin.get();
	return 0;
}

1000316
main()
{
    int n,s,tmp; 
    for(s=0;s<100;s++)
    {
           scanf("",&n);
           if(n==0)  break;
           int a[1000],b[1000];
           int i,j,k,r;
           for(i=0;i<n;i++)
           scanf("",&a[i]);
           for(i=0;i<n;i++)
           scanf("",&b[i]);
           for(j=n-1;j>0;j--)
           {
                      for(r=0;r<j;r++)
                      {
                                      if(a[r]>a[r+1])
                                      {
                                                     tmp=a[r+1];
                                                     a[r+1]=a[r];
                                                     a[r]=tmp;
                                      }
                                      if(b[r]>b[r+1])
                                      {
                                                     tmp=b[r+1];
                                                     b[r+1]=b[r];
                                                     b[r]=tmp;
                                      }
                      }
           }
           int m=0;
           for(i=0;i<n;i++)
           {
                           if(a[i]>b[i]) m++;
                           if(a[i]<b[i]) 
                           {
                                         m--;
                                         for(j=n-1;j>i;j--)
                                         b[j]=b[j-1];
                                         continue;
                           }
                           if(a[i]==b[i])
                           {
                                         for(k=n-1;k>i;k--)
                                         {
                                                           if(a[k]>b[k])
                                                           {m++;n--;continue;}
                                                           else
                                                           {
                                                                        if(a[i]==a[k]) continue;
                                                                        m--;
                                                                        for(r=k;r>i;r--)
                                                                        b[r]=b[r-1];
                                                                        n=k+1;
                                                                        break;
                                                           }
                                         }
                           }
           }
      
           printf("",200*m);
    }
    getchar();
    getchar();
}

1000317
main()
{
    int x[5],a,b,c,d,e;
    for(a=1;a<=5;a++)
    {
        x[0]=a;
        for(b=1;b<=5;b++)
        {
            if(b==x[0]) continue;
            else
            {x[1]=b;
            for(c=1;c<=5;c++)
            {
                if(c==x[0]||c==x[1]) continue;
                else
                {x[2]=c;
                for(d=1;d<=5;d++)
                {
                    if(d==x[0]||d==x[1]||d==x[2]) continue;
                    else
                    {x[3]=d;
                    for(e=1;e<=5;e++)
                    {
                        if(e==x[0]||e==x[1]||e==x[2]||e==x[3]) continue;
                        else
                        {x[4]=e;
                        if(x[4]==2||x[4]==3) continue;
                        else
                        {
                            if(x[0]==1||x[0]==2)
                            {
                                if(x[4]!=1) continue;
                            }
                            else
                            {
                                if(x[4]==1) continue;
                            }
                            if(x[1]==1||x[1]==2)
                            {
                                if(x[1]!=2) continue;
                            }
                            else
                            {
                                if(x[1]==2) continue;
                            }
                            if(x[2]==1||x[2]==2)
                            {
                                if(x[0]!=5) continue;
                            }
                            else
                            {
                                if(x[0]==5) continue;
                            }
                            if(x[3]==1||x[3]==2)
                            {
                                if(x[2]==1) continue;
                            }
                            else
                            {
                                 if(x[2]!=1) continue;
                            }
                            if(x[4]==1||x[4]==2)
                            {
                                if(x[3]!=1) continue;
                            }
                            else
                            {
                                if(x[3]==1) continue;
                            }
                            printf("",x[0],x[1],x[2],x[3],x[4]);
                        }
                        }
                    }
                    }
                }
                }
            }
            }
        }
    }
}



1000318
if(x1<x2)
      {
                        for(i=(x2-x1-1);i>=0;i--)
          a[i]=a[i]+str2[i]-'';
          for(i=x2-1;i>=(x2-x1);i--)
          {
                 a[i]=a[i]+str1[i+x1-x2]+str2[i]-''-'';
                 if(a[i]>=10)
                 for(k=i;k>=1;k--)
                 {
                 a[k-1]=a[k-1]+1;
                 a[k]=a[k]%10;
                 if(a[k-1]<10)
                 break;
                 }
          }
          for(i=0;i<x2;i++)
          {
                           if(a[i]!=0||a[i]==0&&m!=0)
                           {
                            printf("",a[i]);
                            m=1;
                            }
                            if(i==1&&m==0)
                            printf("");
          }
      }
      else
      {
          for(i=x1-1;i>=0;i--)
          {
          a[x1-i-1]=a[x1-i-1]+str1[i]+str2[i]-''-'';
          if(a[x1-1-i]>=10)
          {
                 a[x1-i]++;
                 a[x1-1-i]=a[x1-1-i]%10;
          }
          }
          if(a[x1]!=0)
          for(i=x1;i>=0;i--)
          printf("",a[i]);
          for(i=x1-1;i>=0;i--)
          {
                 if(a[i]!=0||a[i]==0&&n!=0)
                 {
                 printf("",a[i]);
                 n=1;
                 }
                 if(i==0&&n==0)
                 printf("");
          }
      }
      
}



1000319
main()
{
      
      for(int a=1;a<=5;a++)
      for(int b=1;b<=5;b++)
      {
            if(a==b)
            continue;
            for(int c=1;c<=5;c++)
            {
                   if(c==b)
                   continue;
                   if(c==a)
                   continue;
                   for(int d=1;d<=5;d++)
                   {
                          if(d==c)
                          continue;
                          if(d==a)
                          continue;
                          if(d==b)
                          continue;
                          for(int e=1;e<=5;e++)
                          {
                                           if(e==2)
                                           continue;
                                           if(e==3)
                                           continue;
                                           if(e==a)
                                           continue;
                                           if(e==b)
                                           continue;
                                           if(e==c)
                                           continue;
                                           if(e==d)
                                           continue;
                                           if(a<=2)
                                           {if(e!=1)
                                           continue;}
                                           else
                                           {
                                               if(e==1)
                                               continue;
                                               }
                                           if(b<=2)
                                           {
                                                   if(b!=2)
                                           continue;}
                                           else
                                           {
                                               if(b==2)
                                               continue;
                                           }
                                           if(c<=2)
                                           {
                                                   if(a!=5)
                                           continue;}
                                           else
                                           {
                                               if(a==5)
                                               continue;
                                           }
                                           if(d<=2)
                                           {
                                           if(c==1)
                                           continue;}
                                           else
                                           {
                                               if(c!=1)
                                               continue;
                                               }
                                           if(e<=2)
                                           {
                                                   if(d!=1)
                                           continue;}
                                           else
                                           {
                                               if(d==1)
                                               continue;
                                               }
                                           printf("",a,b,c,d,e);
                          }
                   }
            }
      }
      getchar();
}

1000320
main(int argc, char* argv[])
{
	int year,month,day;
	int real;
	scanf("",&year,&month,&day);
	if((year%4==0 && year%100!=0) || (year%400==0))
	{
	       if(month==1)
		   {
	           printf("",day);
		   }
	       if(month==2)
		   {
	           real=31+day;
		       printf("",real);
		   }
	       if(month==3)
		   {
	           real=31+29+day;
		       printf("",real);
		   }
	       if(month==4)
		   {
	           real=31+29+31+day;
		       printf("",real);
		   }
	       if(month==5)
		   {
	           real=31*2+30+29+day;
		       printf("",real);
		   }
	       if(month==6)
		   {
	           real=31*3+30+29+day;
		       printf("",real);
		   }
	       if(month==7)
		   {
	           real=31*3+30*2+29+day;
		       printf("",real);
		   }
	       if(month==8)
		   {
	           real=31*4+30*2+29+day;
		       printf("",real);
		   }
	       if(month==9)
		   {
	           real=31*5+30*2+29+day;
		       printf("",real);
		   }
	       if(month==10)
		   {
	           real=31*5+30*3+29+day;
		       printf("",real);
		   }
	       if(month==11)
		   {
	           real=31*6+30*3+29+day;
		       printf("",real);
		   }
	       if(month==12)
		   {
	           real=31*6+30*4+29+day;
		       printf("",real);
		   }

	}
	   else
	   {
	       if(month==1)
		   {
	           printf("",day);
		   }
	       if(month==2)
		   {
	           real=31+day;
		       printf("",real);
		   }
	       if(month==3)
		   {
	           real=31+28+day;
		       printf("",real);
		   }
	       if(month==4)
		   {
	           real=31+28+31+day;
		       printf("",real);
		   }
	       if(month==5)
		   {
	           real=31*2+30+28+day;
		       printf("",real);
		   }
	       if(month==6)
		   {
	           real=31*3+30+28+day;
		       printf("",real);
		   }
	       if(month==7)
		   {
	           real=31*3+30*2+28+day;
		       printf("",real);
		   }
	       if(month==8)
		   {
	           real=31*4+30*2+28+day;
		       printf("",real);
		   }
	       if(month==9)
		   {
	           real=31*5+30*2+28+day;
		       printf("",real);
		   }
	       if(month==10)
		   {
	           real=31*5+30*3+28+day;
		       printf("",real);
		   }
	       if(month==11)
		   {
	           real=31*6+30*3+28+day;
		       printf("",real);
		   }
	       if(month==12)
		   {
	           real=31*6+30*4+28+day;
		       printf("",real);
		   }
	   }
	return 0;
}

1000321
clear (int k)
{
     for (int i=0;i<=999999;i++)
     a[k][i]=0;
     xiaoshuchangdu[k]=0;
     changdu[k]=1;
     zhengshuchangdu[k]=1;
}

xieru (int k)
{
    fuzhu=0;
    for (int i=1;;i++)
    {
        shuru[i]=getchar ();
        if (shuru [i]==10)
        {
           changdu[k]=i-1;
           break;
        }
        if (shuru [i]==46)
        {
           fuzhu=1;
           xiaoshuchangdu[k]--;
           i--;
        }
        a[k][i]=shuru[i]-48;
        if (fuzhu==1)
        xiaoshuchangdu[k]++;
    }
    zhengshuchangdu[k]=changdu[k]-xiaoshuchangdu[k];
}

         
shuchu (int m)
{
     for (int i=1;i<=zhengshuchangdu[m];i++)
     cout <<a[m][i];
     if (xiaoshuchangdu[m]>0)
     {
        cout <<"";
        for (int i=zhengshuchangdu[m]+1;i<=changdu[m];i++)
        cout <<a[m][i];
     }
}



jiafa (int k,int l,int m)
{
     clear(m);
     int fzheng=max(zhengshuchangdu[k],zhengshuchangdu[l])+1;
     int fxiao=max(xiaoshuchangdu[k],xiaoshuchangdu[l]);
     for (int i=fxiao+fzheng;i>=1;i--)
     {
         a[m][i]=a[m][i]+(a[k][zhengshuchangdu[k]+i-fzheng]+a[l][zhengshuchangdu[l]+i-fzheng]);
         a[m][i-1]=a[m][i-1]+a[m][i]/10;
         a[m][i]=a[m][i]%10;
     }
     while (1)
     { 
         if (a[m][1]!=0)
         break;
         if (fzheng+fxiao==1)
         break;
         for (int i=0;i<=fxiao+fzheng;i++)
         a[m][i]=a[m][i+1];
         fzheng=fzheng-1;
     }
     for (int i=fzheng+fxiao;i>=1;i--)
     {
         if (a[m][i]!=0)
         break;
         fxiao=fxiao-1;
     }
     zhengshuchangdu[m]=fzheng;
     xiaoshuchangdu[m]=fxiao;
     changdu[m]=fxiao+fzheng;
}

jiandancheng (int n,int k,int m)
{
     clear(m);
     int fzheng=zhengshuchangdu[k]+1;
     int fxiao=xiaoshuchangdu[k];
     for (int i=fxiao+fzheng;i>=1;i--)
     {
         a[m][i]=a[m][i]+a[k][zhengshuchangdu[k]+i-fzheng]*n;
         a[m][i-1]=a[m][i-1]+a[m][i]/10;
         a[m][i]=a[m][i]%10;
     }
     while (1)
     { 
         if (a[m][1]!=0)
         break;
         if (fzheng+fxiao==1)
         break;
         for (int i=0;i<=fxiao+fzheng;i++)
         a[m][i]=a[m][i+1];
         fzheng=fzheng-1;
     }
     for (int i=fzheng+fxiao;i>=1;i--)
     {
         if (a[m][i]!=0)
         break;
         fxiao=fxiao-1;
     }
     zhengshuchangdu[m]=fzheng;
     xiaoshuchangdu[m]=fxiao;
     changdu[m]=fxiao+fzheng;
}

chengfa (int k,int l,int m)                                 
{
     int fxiao;
     int fzheng; 
     clear(m);
     for (int i=1;i<=changdu[l];i++)
     {
         jiandancheng(a[l][i],k,9);
         jiafa(m,9,8);
         if (i==changdu[l])
         {
            jiandancheng(1,8,m);
            break;
         }
         jiandancheng(10,8,m);
     }
     fxiao=xiaoshuchangdu[k]+xiaoshuchangdu[l];
     fzheng=changdu[m]-fxiao;
     while (1)
     { 
         if (a[m][1]!=0)
         break;
         if (fzheng+fxiao==1)
         break;
         for (int i=0;i<=fxiao+fzheng;i++)
         a[m][i]=a[m][i+1];
         fzheng=fzheng-1;
     }
     for (int i=fzheng+fxiao;i>=1;i--)
     {
         if (a[m][i]!=0)
         break;
         fxiao=fxiao-1;
     }
     zhengshuchangdu[m]=fzheng;
     xiaoshuchangdu[m]=fxiao;
     changdu[m]=fxiao+fzheng;
}
 
chengfang (int k,int n,int m)                         
{
     cout <<n<<endl;
     if (wuaoshu==0)
     {
        clear(6);
        a[6][1]=1;
        wuaoshu=1;
     } 
     clear(7);
     jiandancheng(1,k,7);
     jiandancheng(1,k,m);
     if (n%2==0)
     {
        n=n/2;
        chengfa(m,7,k);
        chengfang (k,n,m);
     }
     else 
     {
          if (n%2==1&&n!=1)
          {
             n=n-1;
             chengfa(6,k,7);
             jiandancheng(1,7,6);
             chengfang(k,n,m);
          }
          else 
          {
               chengfa(6,m,7);
               jiandancheng(1,7,m);
          }
     }
}

main ()
{
    xieru(1);
    xieru(2);
    jiafa(1,2,3);
    shuchu(3);
    return 0;
}


1000322
main(){
  int m,n;
  int a,b,c,d,e;
  int sz[20][20];
  scanf("",&m,&n);
  for(a=0;a<m;a++){
   for(b=0;b<n;b++){
    scanf("",&sz[a][b]);                 
   }                 
  }
  for(c=0;c<m;c++){
   for(d=0;d<n;d++){
   if(c==0){
     if(d==0){
      if(sz[c][d]>=sz[c+1][d]&&sz[c][d]>=sz[c][d+1]){
       printf("",c,d);                                               
      }
     } 
      if(d!=0&&d!=n-1){
       if(sz[c][d]>=sz[c+1][d]&&sz[c][d]>=sz[c][d+1]&&sz[c][d]>=sz[c][d-1]){
        printf("",c,d);                                                                     
       }
      }
      if(d==n-1){
       if(sz[c][d]>=sz[c+1][d]&&sz[c][d]>=sz[c][d-1]){
        printf("",c,d);
        }     
      }
     }
    if(c!=0&&c!=m-1){
     if(d==0){
      if(sz[c][d]>=sz[c-1][d]&&sz[c][d]>=sz[c][d+1]&&sz[c][d]>=sz[c+1][d]){
       printf("",c,d);                                                                     
      }        
     }
     if(d!=0&&d!=n-1){
      if(sz[c][d]>=sz[c+1][d]&&sz[c][d]>=sz[c][d+1]&&sz[c][d]>=sz[c][d-1]&&sz[c][d]>=sz[c-1][d]){
       printf("",c,d);                                                                                          
      }     
     }
     if(d==n-1){
      if(sz[c][d]>=sz[c+1][d]&&sz[c][d]>=sz[c][d-1]&&sz[c][d]>=sz[c-1][d]){
       printf("",c,d);      
     }    
    }
   }
   if(c==m-1&&d==0){
   if(sz[c][d]>=sz[c-1][d]&&sz[c][d]>=sz[c][d+1]){
    printf("",c,d);                                               

 }
  }
   if(c==m-1&&d!=n-1){
     if(sz[c][d]>=sz[c][d-1]&&sz[c][d]>=sz[c-1][d]&&sz[c][d]>=sz[c][d+1]){
      printf("",c,d);                                               
     }     
   }
 if(c==m-1&&d==n-1){
     if(sz[c][d]>=sz[c][d-1]&&sz[c][d]>=sz[c-1][d]){
      printf("",c,d);                                               
     }     
   }
 }
  }
  return 0;       
}

1000323
main()
{
int n;
cin>>n;
switch (n)
{




case 1: cout<<""; break;
case 2: cout<<""; break;
case 3: cout<<""; break;
case 4: cout<<""; break;
case 5: cout<<""; break;
case 6: cout<<""; break;
case 7: cout<<""; break;
case 8: cout<<""; break;
case 9: cout<<""; break;
case 10: cout<<""; break;
case 11: cout<<""; break;
case 12: cout<<""; break;
case 13: cout<<""; break;
case 14: cout<<""; break;
case 15: cout<<""; break;
case 16: cout<<""; break;
case 17: cout<<""; break;
case 18: cout<<""; break;
case 19: cout<<""; break;
case 20: cout<<""; break;
case 21: cout<<""; break;
case 22: cout<<""; break;
case 23: cout<<""; break;
case 24: cout<<""; break;
case 25: cout<<""; break;
case 26: cout<<""; break;
case 27: cout<<""; break;
case 28: cout<<""; break;
case 29: cout<<""; break;
case 30: cout<<""; break;
case 31: cout<<""; break;
case 32: cout<<""; break;
case 33: cout<<""; break;
case 34: cout<<""; break;
case 35: cout<<""; break;
case 36: cout<<""; break;
case 37: cout<<""; break;
case 38: cout<<""; break;
case 39: cout<<""; break;
case 40: cout<<""; break;
case 41: cout<<""; break;
case 42: cout<<""; break;
case 43: cout<<""; break;
case 44: cout<<""; break;
case 45: cout<<""; break;
case 46: cout<<""; break;
case 47: cout<<""; break;
case 48: cout<<""; break;
case 49: cout<<""; break;
case 50: cout<<""; break;
case 51: cout<<""; break;
case 52: cout<<""; break;
case 53: cout<<""; break;
case 54: cout<<""; break;
case 55: cout<<""; break;
case 56: cout<<""; break;
case 57: cout<<""; break;
case 58: cout<<""; break;
case 59: cout<<""; break;
case 60: cout<<""; break;
case 61: cout<<""; break;
case 62: cout<<""; break;
case 63: cout<<""; break;
case 64: cout<<""; break;
case 65: cout<<""; break;
case 66: cout<<""; break;
case 67: cout<<""; break;
case 68: cout<<""; break;
case 69: cout<<""; break;
case 70: cout<<""; break;
case 71: cout<<""; break;
case 72: cout<<""; break;
case 73: cout<<""; break;
case 74: cout<<""; break;
case 75: cout<<""; break;
case 76: cout<<""; break;
case 77: cout<<""; break;
case 78: cout<<""; break;
case 79: cout<<""; break;
case 80: cout<<""; break;
case 81: cout<<""; break;
case 82: cout<<""; break;
case 83: cout<<""; break;
case 84: cout<<""; break;
case 85: cout<<""; break;
case 86: cout<<""; break;
case 87: cout<<""; break;
case 88: cout<<""; break;
case 89: cout<<""; break;
case 90: cout<<""; break;
case 91: cout<<""; break;
case 92: cout<<""; break;
case 93: cout<<""; break;
case 94: cout<<""; break;
case 95: cout<<""; break;
case 96: cout<<""; break;
case 97: cout<<""; break;
case 98: cout<<""; break;
case 99: cout<<""; break;

default : break;
}
return 0;
}


1000324
main(int argc, char *argv[])
{
  int n,m,i,j,k,s=0;
  char a[110][110][110];
  scanf("",&n);
  for(i=0;i<n;i++)
  {
      scanf("",&a[1][i]);
  }
  scanf("",&m);
 
 
 
  for(k=2;k<=m;k++)
  {
    if(a[k-1][0][0]=='')
    {
      if((a[k-1][1][0]=='')||(a[k-1][0][1]==''))
        a[k][0][0]='';
      else
        a[k][0][0]=a[k-1][0][0];
    }
    else
      a[k][0][0]=a[k-1][0][0];
      
    if(a[k-1][0][n-1]=='')
    {
      if((a[k-1][0][n-2]=='')||(a[k-1][1][n-1]==''))
        a[k][0][n-1]='';
      else
        a[k][0][n-1]=a[k-1][0][n-1];
    }
    else
      a[k][0][n-1]=a[k-1][0][n-1];
      
    if(a[k-1][n-1][0]=='')
    {
      if((a[k-1][n-1][1]=='')||(a[k-1][n-2][0]==''))
        a[k][n-1][0]='';
      else
        a[k][n-1][0]=a[k-1][n-1][0];
    }
    else
      a[k][n-1][0]=a[k-1][n-1][0];
      
    if(a[k-1][n-1][n-1]=='')
    {
      if((a[k-1][n-1][n-2]=='')||(a[k-1][n-2][n-1]==''))
        a[k][n-1][n-1]='';
      else
        a[k][n-1][n-1]=a[k-1][n-1][n-1];
    }
    else
      a[k][n-1][n-1]=a[k-1][n-1][n-1];              
    
    for(i=1;i<n-1;i++)
    {
      if((a[k-1][i][0]=='')&&((a[k-1][i-1][0]=='')||(a[k-1][i+1][0]=='')||(a[k-1][i][1]=='')))
        a[k][i][0]='';
      else
        a[k][i][0]=a[k-1][i][0];
      
      if((a[k-1][i][n-1]=='')&&((a[k-1][i-1][n-1]=='')||(a[k-1][i+1][n-1]=='')||(a[k-1][i][n-2]=='')))
        a[k][i][n-1]='';
      else
        a[k][i][n-1]=a[k-1][i][n-1];
      
     if((a[k-1][0][i]=='')&&((a[k-1][0][i-1]=='')||(a[k-1][1][i]=='')||(a[k-1][0][i+1]=='')))
        a[k][0][i]='';
      else
        a[k][0][i]=a[k-1][0][i];
      
     if((a[k-1][n-1][i]=='')&&((a[k-1][n-1][i-1]=='')||(a[k-1][n-2][i]=='')||(a[k-1][n-1][i+1]=='')))
        a[k][n-1][i]='';
      else
        a[k][n-1][i]=a[k-1][n-1][i];
    }               
                   
    for(i=1;i<n-1;i++)
    {
      for(j=1;j<n-1;j++)
      {
        if(a[k-1][i][j]=='')
        {
          if((a[k-1][i-1][j]=='')||(a[k-1][i+1][j]=='')||(a[k-1][i][j-1]=='')||(a[k-1][i][j+1]==''))
            a[k][i][j]='';
          else 
            a[k][i][j]=a[k-1][i][j];
        }
        else
          a[k][i][j]=a[k-1][i][j];
      }
    }
  }
 
   for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
      if(a[m][i][j]=='')
       s++;
    }
  }
  printf("",s);
  return 0;
}

1000325
main()
{
      int a,b,c,d,e,count;
      for(e=1;e<=5;e++)
      {
         if(e==2||e==3)
         {
           continue;
         }
         for (a=1;a<=5;a++)
         {
             for(b=1;b<=5;b++)
             {
                for(c=1;c<=5;c++)
                {
                     for(d=1;d<=5;d++)
                     {
                          if (a!=b&&a!=c&&a!=d&&a!=e&&b!=c&&b!=d&&b!=e&&c!=d&&c!=e&&d!=e)
                          {
                                      count=0;
                                      if((a==1||a==2)&&e==1)
                                      {     
                                          count++;
                                      }
                                      if (a!=1&&a!=2&&e!=1)
                                      {
                                          count++;
                                      }
                                      if (b!=1)
                                      {           
                                          count++;
                                      }
                                      if ((c==1||c==2)&&a==5)
                                      {
                                           count++;
                                      }
                                      if (c!=1&&c!=2&&a!=5)
                                      {
                                            count++;
                                      }
                                      if((d==1||d==2)&&c!=1)
                                      {
                                             count++;
                                      }
                                      if (d!=1&&d!=2&&c==1)
                                      {
                                           count++;
                                      }
                                      if ((e==1||e==2)&&d==1)
                                      {
                                           count++;
                                      }
                                      if (e!=1&&e!=2&&d!=1)
                                      {
                                            count++;
                                      }
                                      if (count==5)
                                      {
                                                   printf("",a,b,c,d,e);
                                      }
                          }
                     }
                }
             }
         }  
      }
getchar();getchar();getchar();getchar();
}
        

1000326
main()
{
 int n;
 scanf("",&n);
 char s[600];
 scanf("",s);
 int m=strlen(s);
 char a[m+1][n];
 int b[m+1];
 int i=0,j=0,k=0,max=0,l=0;
 while(i<=m)
 {
  b[i]=0;
  i++;
 }
 i=0;
 if(n==2)
 {
  while(i<m-1)
  {
   if(i==0)
    a[i][0]=s[i],a[i][1]=s[i+1],b[0]++,k++;
   else
   {
    while(j<i)
    {
     if(a[j][0]==s[i]&&a[j][1]==s[i+1])
      b[j]++,j=i;
      j++;
    }
   }
   if(j==i&&i!=0)
    a[k][0]=s[i],a[k][1]=s[i+1],b[k]++,k++;
   j=0;
   i++;
  }
  i=0;
  while(i<k)
  {
   if(b[i]>max)
    max=b[i];
   i++;
  }
  i=0;
  while(i<k)
  {
   if(b[i]==max)
    l++;
   i++;
  }
  if(max==1)
   printf("");
  else
  {
   printf("",max);
   i=0;
   while(i<k)
   {
    if(b[i]==max)
     printf("",a[i][0],a[i][1]);
    i++;
   }
  }
 }
 if(n==3)
 {
  while(i<m-2)
  {
   if(i==0)
    a[i][0]=s[i],a[i][1]=s[i+1],a[i][2]=s[i+2],b[0]++,k++;
   else
   {
    while(j<i)
    {
     if(a[j][0]==s[i]&&a[j][1]==s[i+1]&&a[j][2]==s[i+2])
      b[j]++,j=i;
      j++;
    }
   }
   if(j==i&&i!=0)
    a[k][0]=s[i],a[k][1]=s[i+1],a[k][2]=s[i+2],b[k]++,k++;
   j=0;
   i++;
  }
  i=0;
  while(i<k)
  {
   if(b[i]>max)
    max=b[i];
   i++;
  }
  i=0;
  while(i<k)
  {
   if(b[i]==max)
    l++;
   i++;
  }
  if(max==1)
   printf("");
  else{
  printf("",max);
  i=0;
  while(i<k)
  {
   if(b[i]==max)
    printf("",a[i][0],a[i][1],a[i][2]);
   i++;
  }}
 }
 if(n==4)
 {
  while(i<m-3)
  {
   if(i==0)
    a[i][0]=s[i],a[i][1]=s[i+1],a[i][2]=s[i+2],a[i][3]=s[i+3],b[0]++,k++;
   else
   {
    while(j<i)
    {
     if(a[j][0]==s[i]&&a[j][1]==s[i+1]&&a[j][2]==s[i+2]&&a[j][3]==s[i+3])
      b[j]++,j=i;
      j++;
    }
   }
   if(j==i&&i!=0)
    a[k][0]=s[i],a[k][1]=s[i+1],a[k][2]=s[i+2],a[k][3]=s[i+3],b[k]++,k++;
   j=0;
   i++;
  }
  i=0;
  while(i<k)
  {
   if(b[i]>max)
    max=b[i];
   i++;
  }
  i=0;
  while(i<k)
  {
   if(b[i]==max)
    l++;
   i++;
  }
  if(max==1)printf("");
else{
  printf("",max);
  i=0;
  while(i<k)
  {
   if(b[i]==max)
    printf("",a[i][0],a[i][1],a[i][2],a[i][3]);
   i++;
  }
 }}
}

1000327
main ()
{
    int a,b,c,d,e,k=0;
    for (a=1;a<=5;a++)
    {
        for (b=1;b<=5;b++)
        {
            if (b==a) continue;
            for (c=1;c<=5;c++)
            {
                if ((c==a)||(c==b)) continue;
                for (d=1;d<=5;d++)
                {
                    if ((d==a)||(d==b)||(d==c)) continue;
                    for (e=1;e<=5;e++)
                    {
                        if ((e==a)||(e==b)||(e==c)||(e==d)) continue;
                        if ((e==2)||(e==3)) continue;
                        if ((a==1)||(a==2))
                        {
                            if (e!=1) continue;
                        }
                        else
                        {
                            if (e==1) continue;
                        }
                        if ((b==1)||(b==2))
                        {
                            if (b!=2) continue;
                        }
                        else
                        {
                            if (b==2) continue;
                        }
                        if ((c==1)||(c==2))
                        {
                            if (a!=5) continue;
                        }
                        else
                        {
                            if (a==5) continue;
                        }
                        if ((d==1)||(d==2))
                        {
                            if (c==1) continue;
                        }
                        else
                        {
                            if (c!=1) continue;
                        }
                        if ((e==1)||(e==2))
                        {
                            if (d!=1) continue;
                        }
                        else
                        {
                            if (d==1) continue;
                        }
                        k=1;
                        break;
                    }
                    if (k) break;
                }
                if (k) break;
            }
            if (k) break;
        }
        if (k) break;
    }
    printf("",a,b,c,d,e);
    return 0;
}


1000328
main()
{
	int s=1,n,len1,len2,i,j,num1[100],num2[100],num3[40000]={0},flag;
	char str1[100]={0};
	cin>>n;
	if(n<32){
	for( i=0;i<n;i++)
		s*=2;
	 cout<<s;
	}
	if(n>=32&&n<=60)
	{
		num1[9]=1,num1[8]=0,num1[7]=7,num1[6]=3,num1[5]=7,num1[4]=4,num1[3]=1,num1[2]=8,num1[1]=2,num1[0]=4;
	j=0;
	n=n-30;s=1;
	for(i=0;i<n;i++)
		s*=2;
	
	while(s>0){
	num2[j++]=s%10;
	s/=10;
	}int len2=j;
	for(i=0;i<10;i++)
	{	for(j=0;j<len2;j++)
		{
			num3[i+j]=num3[i+j]+num1[i]*num2[j];
			while(num3[i+j]>=10)
			{
				num3[i+j]-=10;
				num3[i+j+1]++;
			}
		}
	}
	for(i=30000;i>=0;i--)
	{
		if(num3[i]!=0)
		{	flag=i;break;
		}
	}
    for(i=flag;i>=0;i--)
	{
		cout<<num3[i];
	}
}
if(n>60&&n<=90)
	{
		num1[18]=1,num1[17]=1,num1[16]=5,num1[15]=2,num1[14]=9,num1[13]=2,num1[12]=1,num1[11]=5,num1[10]=0,num1[9]=4,num1[8]=6,num1[7]=0,num1[6]=6,num1[5]=8,num1[4]=4,num1[3]=6,num1[2]=9,num1[1]=7,num1[0]=6;
	j=0;
	n=n-60;s=1;
	for(i=0;i<n;i++)
		s*=2;
	
	while(s>0){
	num2[j++]=s%10;
	s/=10;
	}int len2=j;
	for(i=0;i<19;i++)
	{	for(j=0;j<len2;j++)
		{
			num3[i+j]=num3[i+j]+num1[i]*num2[j];
			while(num3[i+j]>=10)
			{
				num3[i+j]-=10;
				num3[i+j+1]++;
			}
		}
	}

	for(i=30000;i>=0;i--)
	{
		if(num3[i]!=0)
		{	flag=i;break;
		}
	}
    for(i=flag;i>=0;i--)
	{
		cout<<num3[i];
	}
}

if(n>90)
	{
		num1[22]=3,num1[21]=7,num1[20]=7,num1[19]=7,num1[18]=8,num1[17]=9,num1[16]=3,num1[15]=1,num1[14]=8,num1[13]=6,num1[12]=2,num1[11]=9,num1[10]=5,num1[9]=7,num1[8]=1,num1[7]=6,num1[6]=1,num1[5]=7,num1[4]=0,num1[3]=9,num1[2]=5,num1[1]=6,num1[0]=8;
	j=0;
	n=n-75;s=1;
	for(i=0;i<n;i++)
		s*=2;
	
	while(s>0){
	num2[j++]=s%10;
	s/=10;
	}int len2=j;
	for(i=0;i<23;i++)
	{	for(j=0;j<len2;j++)
		{
			num3[i+j]=num3[i+j]+num1[i]*num2[j];
			while(num3[i+j]>=10)
			{
				num3[i+j]-=10;
				num3[i+j+1]++;
			}
		}
	}

	for(i=30000;i>=0;i--)
	{
		if(num3[i]!=0)
		{	flag=i;break;
		}
	}
    for(i=flag;i>=0;i--)
	{
		cout<<num3[i];
	}
}





return 0;
}

1000329
main()
{
      int a[5];
      for(a[0]=1;a[0]<=5;a[0]++)
          for(a[1]=1;a[1]<=5;a[1]++)
              for(a[2]=1;a[2]<=5;a[2]++)
                  for(a[3]=1;a[3]<=5;a[3]++)
                      for(a[4]=1;a[4]<=5;a[4]++)
                      {
                          if(a[0]==a[1]||a[0]==a[2]||a[0]==a[3]||a[0]==a[4]||a[1]==a[2]||a[1]==a[3]||a[1]==a[4]||a[2]==a[3]||a[2]==a[4]||a[3]==a[4])
                              continue;
                          if(a[4]==2||a[4]==3)
                              continue;
                          if(a[0]==1||a[0]==2)
                          {
                              if(a[4]!=1)
                                  continue;
                          }
                          if(a[4]==1)
                              continue;
                          if(a[1]==1||a[1]==2)
                          {
                              if(a[1]!=2)
                                  continue;
                          }
                          if(a[1]==2)
                              continue;        
                          if(a[2]==1||a[2]==2)
                          {
                              if(a[0]!=5)
                                  continue;
                          }
                          if(a[0]==5)
                              continue;
                          if(a[3]==1||a[3]==2)
                          {
                              if(a[2]==1)
                                  continue;
                          }
                          if(a[2]!=1)
                              continue;
                          if(a[4]==1||a[4]==2)
                          {
                              if(a[3]!=1)
                                  continue;
                          }
                          if(a[3]==1)
                              continue;
                          printf("",a[0],a[1],a[2],a[3],a[4]);
                          break;
                      }
      getchar();
      getchar();
}


1000330
delZero(char a[])
{
    int i = 0;
    int count = 0;
    for (i = 0; i < MAXNUM; i ++) {
        if (a[i] == '') {
            count ++;
        }
        if (a[i] != '') {
            break;
        }
    }
    for (i = 0; a[i + count] != '\0'; i ++) {
        a[i] = a[i + count];
    }
    int j;
    for (j = 0; j < count; j ++) {
        a[i + j] = '\0';
    }
}



addWorker(int a[],int na,int b[],int nb,int c[]);


add(char a[],char b[],int c[])
{
    int na = 0;
    int nb = 0;
    int _a[MAXNUM];
    int _b[MAXNUM];
    memset(_a, 0, sizeof(_a));
    memset(_b, 0, sizeof(_b));
    
    while (a[na] == '') {
        na ++;
    }
    while (a[na] != '\0') {
        _a[na] = (int)(a[na] - '');
        na ++;
    }
    while (b[nb] != '\0') {
        _b[nb] = (int)(b[nb] - '');
        nb ++;
    }

    
    if (na > nb) {
        
        return (addWorker(_a, na, _b, nb, c));
    }
    else
    {
        addWorker(_b, nb, _a, na, c);
    }
     
}


addWorker(int a[],int na,int b[],int nb,int c[])
{
    

    
    
    int nc = na + 1;
    int l = nc;
    
    
    na --;
    nb --;
    nc --;
    
    
    while (nb >= 0)
    {
        
        int carry = 0;
        if (a[na] + b[nb] > 9) {
            carry = 1;
        }
        c[nc] += (a[na] + b[nb]) % 10;
        if (c[nc] == 10) {
            int i = nc;
            while (c[i] == 10) {
                c[i] = 0;
                c[i - 1] += 1;
                i --;
            }
        }
        c[nc - 1] += carry;
        
        if (c[nc - 1] == 10) {
            int i = nc;
            while (c[i - 1] == 10) {
                c[i - 1] = 0;
                c[i - 2] += 1;
                i --;
            }
        }
        
        nb --;
        na --;
        nc --;
    }
    
    while (na >= 0) {
        c[nc] += a[na];
        
        if (c[nc] == 10) {
            int i = nc;
            while (c[i] == 10) {
                c[i] = 0;
                c[i - 1] += 1;
                i --;
            }
        }
      
        na --;
        nc --;
        
    }
    
    if (c[nc] == 0) {
        return l - 1;
    }
    return l;
}

main(int argc, const char * argv[])
{
    char a[MAXNUM];
    char b[MAXNUM];
    int  c[MAXNUM];
    memset(c, 0, sizeof(c));
    cin >> a;
    cin >> b;
    
    delZero(a);
    delZero(b);

    
    int n = add(a, b, c);

    int i = 0;
    
    while (c[i] == 0) {
        i ++;
    }
    while (i >= MAXNUM) {
        cout << 0;
        return 0;
    }
    int j;
    for (j = 0; j < n; j ++) {
        cout << c[i + j];
    }
 
    
    
}


1000331
main()
{
	int a,b;
	char n[100];
	scanf("",&a,n,&b);
	int i,j=0;
	int ten[100];
	for(i=0;n[i]!='\0';i++)
	{
		j++;
		switch(n[i])
		{
		case '':
			ten[i]=0;
			break;
		case '':
			ten[i]=1;
			break;
		case '':
			ten[i]=2;
			break;
		case '':
			ten[i]=3;
			break;
		case '':
			ten[i]=4;
			break;
		case '':
			ten[i]=5;
			break;
		case '':
			ten[i]=6;
			break;
		case '':
			ten[i]=7;
			break;
		case '':
			ten[i]=8;
			break;
		case '':
			ten[i]=9;
			break;				
		case '':
		case '':
			ten[i]=10;
			break;
		case '':
		case '':
			ten[i]=11;
			break;
		case '':
		case '':
			ten[i]=12;
			break;
		case '':
		case '':
			ten[i]=13;
			break;
		case '':
		case '':
			ten[i]=14;
			break;	
		case '':
		case '':
			ten[i]=15;
			break;
		case '':
		case '':
			ten[i]=16;
			break;
		case '':
		case '':
			ten[i]=17;
			break;
		case '':
		case '':
			ten[i]=18;
			break;
		case '':
		case '':
			ten[i]=19;
			break;
		case '':
		case '':
			ten[i]=20;
			break;
		case '':
		case '':
			ten[i]=21;
			break;
		case '':
		case '':
			ten[i]=22;
			break;
		case '':
		case '':
			ten[i]=23;
			break;
		case '':
		case '':
			ten[i]=24;
			break;
		case '':
		case '':
			ten[i]=25;
			break;
		case '':
		case '':
			ten[i]=26;
			break;
		case '':
		case '':
			ten[i]=27;
			break;
		case '':
		case '':
			ten[i]=28;
			break;
		case '':
		case '':
			ten[i]=29;
			break;
		case '':
		case '':
			ten[i]=30;
			break;
		case '':
		case '':
			ten[i]=31;
			break;
		case '':
		case '':
			ten[i]=32;
			break;
		case '':
		case '':
			ten[i]=33;
			break;
		case '':
		case '':
			ten[i]=34;
			break;
		case '':
		case '':
			ten[i]=35;
			break;
		}
	}
	int te[100];
	te[0]=1;
	for(i=0;i<j;i++)
	{
		te[i+1]=te[i]*a;
	}
	int t=0;
	for(i=0;i<j;i++)
	{
		t+=te[i]*ten[j-i-1];
	}
	char m[100];
	int ben[100];
	j=0;
	if(t==0)
		printf("");
	else
	{
	for(i=0;t!=0;i++)
	{
		j++;
		ben[i]=t%b;
		t=t/b;
	}
	for(i=0;i<j;i++)
	{
		switch(ben[j-1-i])
		{
		case 0:
			m[i]='';
			break;
		case 1:
			m[i]='';
			break;
		case 2:
			m[i]='';
			break;
		case 3:
			m[i]='';
			break;
		case 4:
			m[i]='';
			break;
		case 5:
			m[i]='';
			break;
		case 6:
			m[i]='';
			break;
		case 7:
			m[i]='';
			break;
		case 8:
			m[i]='';
			break;
		case 9:
			m[i]='';
			break;				
		case 10:
			m[i]='';
			break;
		case 11:
			m[i]='';
			break;
		case 12:
			m[i]='';
			break;
		case 13:
			m[i]='';
			break;
		case 14:
			m[i]='';
			break;	
		case 15:
			m[i]='';
			break;
		case 16:
			m[i]='';
			break;
		case 17:
			m[i]='';
			break;
		case 18:
			m[i]='';
			break;
		case 19:
			m[i]='';
			break;
		case 20:
			m[i]='';
			break;
		case 21:
			m[i]='';
			break;
		case 22:
			m[i]='';
			break;
		case 23:
			m[i]='';
			break;
		case 24:
			m[i]='';
			break;
		case 25:
			m[i]='';
			break;
		case 26:
			m[i]='';
			break;
		case 27:
			m[i]='';
			break;
		case 28:
			m[i]='';
			break;
		case 29:
			m[i]='';
			break;
		case 30:
			m[i]='';
			break;
		case 31:
			m[i]='';
			break;
		case 32:
			m[i]='';
			break;
		case 33:
			m[i]='';
			break;
		case 34:
			m[i]='';
			break;
		case 35:
			m[i]='';
			break;
		}
	}
	for(i=0;i<j;i++)
		printf("",m[i]);
	printf("");
	}
}

1000332
main()
{
    int i=0,i1,i2,i3,i4,i5;
    int correct=1;
    int a[72][5];
    for(i1=1;i1<=5;i1++)
    {
        for(i2=1;i2<=5;i2++)
        {
            if(i2!=i1)
            {
              for(i3=1;i3<=5;i3++)
              {
                  if(i3!=i2&&i3!=i1)
                  {
                      for(i4=1;i4<=5;i4++)
                      {
                          if(i4!=i1&&i4!=i2&&i4!=i3)
                          {
                              for(i5=1;i5<=5;i5++)
                              {
                                  if(i5!=2&&i5!=3&&i5!=i1&&i5!=i2&&i5!=i3&&i5!=i4)
                                  {
                                            a [i][0]=i1;
                                            a[i][1]=i2;
                                            a[i][2]=i3;
                                            a[i][3]=i4;
                                            a[i][4]=i5;
                                            i++;
                                  }
                              }
                          }
                      }
                  }
              }
            }

        }
    }
    for(i=0;i<72;i++)
    {
        if(a[i][0]==1) correct=0;
        if(a[i][0]==2&&a[i][4]!=1) correct=0;
        if(a[i][0]!=1&&a[i][0]!=2&&a[i][4]==1) correct=0;
        else
        {
            if(a[i][1]==1) correct=0;
            else
            {
                if((a[i][2]==1||a[i][2]==2)&&a[i][0]!=5) correct=0;
                if(a[i][2]!=1&&a[i][2]!=2&&a[i][0]==5) correct=0;
                else
                {
                    if(a[i][3]==2&&a[i][2]==1) correct=0;
                    if(a[i][3]!=1&&a[i][3]!=2&&a[i][2]!=1) correct=0;
                    else
                    {
                        if(a[i][4]==1) correct=0;
                        if(a[i][4]==2&&a[i][3]!=1) correct=0;
                        if(a[i][4]!=1&&a[i][4]!=2&&a[i][3]==1) correct=0;
                        else
                        {
                            printf("",a[i][0],a[i][1],a[i][2],a[i][3],a[i][4]);
                        }
                    }
                }
            }
        }
    }


}

1000333
main()
{
      int a[5];
      for(a[0]=1;a[0]<=5;a[0]++)
          for(a[1]=1;a[1]<=5;a[1]++)
              for(a[2]=1;a[2]<=5;a[2]++)
                  for(a[3]=1;a[3]<=5;a[3]++)
                      for(a[4]=1;a[4]<=5;a[4]++)
                      {
                          if(a[0]==a[1]||a[0]==a[2]||a[0]==a[3]||a[0]==a[4]||a[1]==a[2]||a[1]==a[3]||a[1]==a[4]||a[2]==a[3]||a[2]==a[4]||a[3]==a[4])
                              continue;
                          if(a[4]==2||a[4]==3)
                              continue;
                          if(a[0]==1||a[0]==2)
                          {
                              if(a[4]!=1)
                                  continue;
                          }
                          if(a[4]==1)
                              continue;
                          if(a[1]==1||a[1]==2)
                          {
                              if(a[1]!=2)
                                  continue;
                          }
                          if(a[1]==2)
                              continue;        
                          if(a[2]==1||a[2]==2)
                          {
                              if(a[0]!=5)
                                  continue;
                          }
                          if(a[0]==5)
                              continue;
                          if(a[3]==1||a[3]==2)
                          {
                              if(a[2]==1)
                                  continue;
                          }
                          if(a[2]!=1)
                              continue;
                          if(a[4]==1||a[4]==2)
                          {
                              if(a[3]!=1)
                                  continue;
                          }
                          if(a[3]==1)
                              continue;
                          printf("",a[0],a[1],a[2],a[3],a[4]);
                          break;
                      }
}

1000334
main()
{
    int a[5];
    for(a[0]=1;a[0]<=5;a[0]++)
    {
        for(a[1]=1;a[1]<=2;a[1]++)
        {
            if(a[1]==a[0])
                continue;
            else
            {
                for(a[2]=1;a[2]<=2;a[2]++)
                {
                    if(a[2]==a[0]||a[2]==a[1])
                        continue;
                    else
                    {
                        for(a[3]=1;a[3]<=5;a[3]++)
                        {
                            if(a[3]==a[0]||a[3]==a[1]||a[3]==a[2])
                                continue;
                            else
                            {
                                for(a[4]=1;a[4]<=5;a[4]++)
                                {
                                    if(a[4]==a[1]||a[4]==a[2]||a[4]==a[3]||a[4]==a[0]||a[4]==2||a[4]==3)
                                         continue;
                                    else
                                    {
                                        if(a[0]==1||a[0]==2)
                                        {
                                            if(a[4]!=1)
                                            break;
                                        }
                                        if(a[1]==1||a[1]==2)
                                        {
                                            if(a[1]!=2)
                                            break;
                                        }
                                        if(a[2]==1||a[2]==2)
                                        {
                                            if(a[0]!=5)
                                            break;
                                        }
                                        if(a[3]==1||a[3]==2)
                                        {
                                            if(a[2]==1)
                                                break;
                                        }
                                        if(a[4]==1||a[4]==2)
                                        {
                                            if(a[3]!=1)
                                            break;
                                        }
                                        printf("",a[0],a[1],a[2],a[3],a[4]);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

1000335
main()
{
	int n,i,j,k,sum=0,a[20],all=0;
	scanf("",&n);
	for(i=0;i<n;i++)
	{
		scanf("",&a[i]);
	}
	if(n==0)
		all=60;
	else
	{
	for(i=0;i<n;i++)
	{
		sum=3+a[i];
		if(sum<60 && i!=n-1)
			continue;
		if(sum<60 && i==n-1)
			break;
		if(sum>=60)
			j=i;
			break;
	}
	
	if(i=n-1)
	{
			all=60-3*(i+1);
	}
	else
	{
		if(sum-3>=60)
		all=a[j]-(sum-3-60);
		if(sum-3<60)
			
				all=a[j];
	}
	}
	printf("",all);
}*/









1000336
main()
{
    int i=0,j=0,m=0,n=0,x=0;
    int b[400],c[400];
    int a[20][20];
    scanf("",&m,&n);
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            scanf("",&a[i][j]);
        }
    }
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            if(i==0&&j==0)
            {
                if(a[0][0]>=a[0][1]&&a[0][0]>=a[1][0])
                {
                    b[x]=i;
                    c[x]=j;
                    x++;
                }
            }
            if(i==0&&j==n-1)
            {
                if(a[0][n-1]>=a[0][n-2]&&a[0][n-1]>=a[1][n-1])
                {
                    b[x]=i;
                    c[x]=j;
                    x++;
                }
            }
            if(i==0&&j!=0&&j!=n-1)
            {
                if(a[0][j]>=a[0][j-1]&&a[0][j]>=a[0][j+1]&&a[0][j]>=a[1][j])
                {
                    b[x]=i;
                    c[x]=j;
                    x++;
                }
            }
            if(j==0&&i!=0&&i!=m-1)
            {
                if(a[i][0]>=a[i-1][0]&&a[i][0]>=a[i+1][0]&&a[i][0]>=a[i][1])
                {
                    b[x]=i;
                    c[x]=j;
                    x++;
                }
            }
            if(j==0&&i==m-1)
            {
                if(a[m-1][0]>=a[m-2][0]&&a[m-1][0]>=a[m-1][1])
                {
                    b[x]=i;
                    c[x]=j;
                    x++;
                }
            }
            if(i==m-1&&j!=0&&j!=n-1)
            {
                if(a[i][j]>=a[i-1][j]&&a[i][j]>=a[i][j-1]&&a[i][j]>=a[i][j+1])
                {
                    b[x]=i;
                    c[x]=j;
                    x++;
                }
            }
            if(i==m-1&&j==n-1)
            {
                if(a[i][j]>=a[i][j-1]&&a[i][j]>=a[i-1][j])
                {
                    b[x]=i;
                    c[x]=j;
                    x++;
                }
            }
            if(j==n-1&&i!=0&&i!=m-1)
            {
                if(a[i][j]>=a[i-1][j]&&a[i][j]>=a[i+1][j]&&a[i][j]>=a[i][j-1])
                {
                    b[x]=i;
                    c[x]=j;
                    x++;
                }
            }
            if(i!=0&&j!=0&&i!=m-1&&j!=n-1)
            {
                if(a[i][j]>=a[i-1][j]&&a[i][j]>=a[i+1][j]&&a[i][j]>=a[i][j-1]&&a[i][j]>=a[i][j+1])
                {
                    b[x]=i;
                    c[x]=j;
                    x++;
                }
            }
        }
    }
    for(i=0;i<x;i++)
    {
        printf("",b[i],c[i]);
        if(i!=x-1)
        {
            printf("");
        }
    }
    return 0;
}


1000337
main()
{
    int i1,i2,i3,i4,i5;
    int t[6];
    t[0]=0;
    t[1]=0;
    t[2]=0;
    t[3]=0;
    t[4]=0;
    t[5]=0;
    for(i1=1;i1<=5;i1++)
    {
        for(i2=1;i2<=5;i2++)
        {
            if(i2!=i1)
            {
                for(i3=1;i3<=5;i3++)
                {
                    if(i3!=i2&&i3!=i1)
                    {
                        for(i4=1;i4<=5;i4++)
                        {
                            if(i4!=i1&&i4!=i2&&i4!=i3)
                            {
                                for(i5=1;i5<=5;i5++)
                                {
                                    if(i5!=i1&&i5!=i2&&i5!=i3&&i5!=i4)
                                    {
                                        if((i1==1||i1==2)&&i5==1)
                                        {
                                            t[0]=1;
                                        }
                                        if((i1!=1&&i1!=2)&&i5!=1)
                                        {
                                            t[0]=1;
                                        }
                                        else
                                        t[0]=0;
                                        if((i2==1||i2==2)&&i2==2)
                                        {
                                            t[1]=1;
                                        }
                                        if((i2!=1&&i2!=2)&&i2!=2)
                                        {
                                            t[1]=1;
                                        }
                                        else
                                        t[1]=0;
                                        if((i3==1||i3==2)&&i1==5)
                                        {
                                            t[2]=1;
                                        }
                                        if((i3!=1&&i3!=2)&&i1!=5)
                                        {
                                            t[2]=1;
                                        }
                                        else
                                        t[2]=0;
                                        if((i4==1||i4==2)&&i3!=1)
                                        {
                                            t[3]=1;
                                        }
                                        if((i4!=1&&i4!=2)&&i3==1)
                                        {
                                            t[3]=1;
                                        }
                                        else
                                        t[3]=0;
                                        if((i5==1||i5==2)&&i4==1)
                                        {
                                            t[4]=1;
                                        }
                                        if((i5!=1&&i5!=2)&&i4!=1)
                                        {
                                            t[4]=1;
                                        }
                                        else
                                        t[4]=0;
                                        if(i5!=2&&i5!=3)
                                        {
                                            t[5]=1;
                                        }
                                        else
                                        {
                                            t[5]=0;
                                        }
                                        if(t[0]==1&&t[1]==1&&t[2]==1&&t[3]==1&&t[4]==1&&t[5]==1)
                                        {
                                            printf("",i1,i2,i3,i4,i5);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}


1000338
aa(int a,int b,int c,int d,int e)
{
    int p;
    if(e==1)
    p=1;
    else
    p=0; 
    return p; 
} 
cc(int a,int b,int c,int d,int e) 
{
    int p;
    if(a==5)
    p=1;
    else
    p=0;
    return p; 
}
dd(int a,int b,int c,int d,int e) 
{
    int p;
    if(c!=1)
    p=1;
    else
    p=0;
    return p; 
}
ee(int a,int b,int c,int d,int e) 
{
    int p;
    if(d==1)
    p=1;
    else
    p=0;
    return p; 
}
main()
{
      int x,y,z,t,k;
      int m=0; 
      for(x=1;x<6;x++)
      {
                      for(y=1;y<6;y++)
                      {
                                    for(z=1;z<6;z++)
                                    {
                                                 for(t=1;t<6;t++)
                                                 {
                                                                 for(k=1;k<6;k++)
                                                                 {
                                                                             if((aa(x,y,z,t,k)==1)&&(cc(x,y,z,t,k)==0)&&(dd(x,y,z,t,k)==0)&&(ee(x,y,z,t,k)==0)&&(x==1||x==2))
                                                                             {
                                                                              if(x!=y&&x!=z&&x!=t&&x!=k&&y!=z&&y!=t&&y!=k&&z!=t&&k!=z&&k!=t&&(k!=2&&k!=3)&&(y==2))                                                                            
                                                                             printf("",x,y,z,t,k);}
                                                                             if((cc(x,y,z,t,k)==1)&&(aa(x,y,z,t,k)==0)&&(dd(x,y,z,t,k)==0)&&(ee(x,y,z,t,k)==0)&&(z==1||z==2))
                                                                             {
                                                                              if(x!=y&&x!=z&&x!=t&&x!=k&&y!=z&&y!=t&&y!=k&&z!=t&&k!=z&&k!=t&&(k!=2&&k!=3)&&(y==2))                                                                            
                                                                             printf("",x,y,z,t,k);}
                                                                             if((dd(x,y,z,t,k)==1)&&(aa(x,y,z,t,k)==0)&&(cc(x,y,z,t,k)==0)&&(ee(x,y,z,t,k)==0)&&(t==1||t==2))
                                                                             {
                                                                              if(x!=y&&x!=z&&x!=t&&x!=k&&y!=z&&y!=t&&y!=k&&z!=t&&k!=z&&k!=t&&(k!=2&&k!=3)&&(y==2))                                                                            
                                                                             printf("",x,y,z,t,k);}
                                                                             if((ee(x,y,z,t,k)==1)&&(aa(x,y,z,t,k)==0)&&(cc(x,y,z,t,k)==0)&&(dd(x,y,z,t,k)==0)&&(k==1||k==2))
                                                                             {
                                                                              if(x!=y&&x!=z&&x!=t&&x!=k&&y!=z&&y!=t&&y!=k&&z!=t&&k!=z&&k!=t&&(k!=2&&k!=3)&&(y==2))                                                                            
                                                                             printf("",x,y,z,t,k);}
                                                                             
                                                                             
                                                                             
                                                                 }
                                                 }   
                                    }  
                      } 
      } 
      
      
} 


1000339
swap(struct chang *p1,struct chang *p2)
{
    struct chang temp;
    temp=*p1;
    *p1=*p2;
    *p2=temp;
}
main()
{
    struct chang c[6];
    int i,j,k,l,m,t;
    for(i=1;i<6;i++)
    {
        c[i].minci=i;
    }
    for(j=1;j<=5;j++)
    {
        for(k=1;k<=4;k++)
        {
            for(l=1;l<=3;l++)
            {
                for(m=1;m<=2;m++)
                {
                    t=0;
                    if(c[5].minci!=2&&c[5].minci!=3)
                    {
                        for(i=1;i<6;i++)
                        {
                            c[i].caice=0;
                        }
                        if (c[5].minci==1)
                        c[1].caice=1;
                        if (c[2].minci==2)
                        c[2].caice=1;
                        if (c[1].minci==5)
                        c[3].caice=1;
                        if (c[3].minci!=1)
                        c[4].caice=1;
                        if (c[4].minci==1)
                        c[5].caice=1;
                        for(i=1;i<6;i++)
                        {
                            if((c[i].minci>2&&c[i].caice==1)||(c[i].minci<=2&&c[i].caice==0))
                            {
                                t++;
                                break;
                            }
                        }
                        if (t==0)
                        {
                            for(i=1;i<5;i++)
                            {
                                printf("",c[i].minci);
                            }
                            printf("",c[i].minci);
                        }
                    }
                    if(m<2)
                    swap(c+4,c+4+m);
                    swap(c+4,c+5);
                }
                if(l<3)
                swap(c+3,c+3+l);
                else
                {
                swap(c+3,c+4);
                swap(c+4,c+5);
                }
            }
            if(k<4)
            swap(c+2,c+2+k);
            else
            {
                swap(c+2,c+3);
                swap(c+3,c+4);
                swap(c+4,c+5);
            }
        }
        if(j<5)
        swap(c+1,c+1+j);
    }
}








1000340
main()
{
    int o=0;
    int a=0,b=0,c=0,d=0,e=0;
    e=1;d=1;
    a=0;b=0;c=0;d=0;
    for(a=1;a<=5;a++)
    {
        if(o==1) break;
        if(d==1) continue;
        if(a==e) continue;
        for(b=1;b<=5;b++)
        {
            if(o==1) break;
            if(d==1) continue;
            if(b==e) continue;
            if(b==a) continue;
            for(c=1;c<=5;c++)
            {
                if(o==1) break;
                if(d==1) continue;
                if(c==e) continue;
                if(c==b) continue;
                if(c==a) continue;
                for(d=1;d<=5;d++)
                {
                    if(o==1) break;
                    if(d==1) continue;
                    if(d==e) continue;
                    if(d==c) continue;
                    if(d==b) continue;
                    if(d==a) continue;

                    if(a==1&&e==1)
                    {
                        if(b==2&&a!=5&&c==1) {printf("",a,b,c,d,e);o=1;break;}
                        if(c==2&&b!=2&&c==1) {printf("",a,b,c,d,e);o=1;break;}
                        if(d==2&&a!=5&&c!=1) {printf("",a,b,c,d,e);o=1;break;}
                    }
                    if(b==1&&b==2)
                    {
                        if(e!=1&&a!=5&&c==1&&d!=1) {printf("",a,b,c,d,e);o=1;break;}
                    }
                    if(c==1&&a==5)
                    {
                        
                        if(b==2&&e!=1&&c==1&&d!=1) {printf("",a,b,c,d,e);o=1;break;}
                        if(a==2&&e==1) {printf("",a,b,c,d,e);o=1;break;}
                        if(d==2&&c==1&&b!=2&&e!=1&&a!=5) {printf("",a,b,c,d,e);o=1;break;}
                    }
                }
            }
        }
    }

    e=4;
    a=0;b=0;c=0;d=0;
    for(a=1;a<=5;a++)
    {
        if(o==1) break;
        if(d==1) continue;
        if(a==e) continue;
        for(b=1;b<=5;b++)
        {
            if(o==1) break;
            if(d==1) continue;
            if(b==e) continue;
            if(b==a) continue;
            for(c=1;c<=5;c++)
            {
                if(o==1) break;
                if(d==1) continue;
                if(c==e) continue;
                if(c==b) continue;
                if(c==a) continue;
                for(d=1;d<=5;d++)
                {
                    if(o==1) break;
                    if(d==1) continue;
                    if(d==e) continue;
                    if(d==c) continue;
                    if(d==b) continue;
                    if(d==a) continue;

                    if(a==1&&e==1)
                    {
                        if(b==2&&a!=5&&c==1) {printf("",a,b,c,d,e);o=1;break;}
                        if(c==2&&b!=2&&c==1) {printf("",a,b,c,d,e);o=1;break;}
                        if(d==2&&a!=5&&c!=1) {printf("",a,b,c,d,e);o=1;break;}
                    }
                    if(b==1&&b==2)
                    {
                        if(e!=1&&a!=5&&c==1&&d!=1) {printf("",a,b,c,d,e);o=1;break;}
                    }
                    if(c==1&&a==5)
                    {
                        
                        if(b==2&&e!=1&&c==1&&d!=1) {printf("",a,b,c,d,e);o=1;break;}
                        if(a==2&&e==1) {printf("",a,b,c,d,e);o=1;break;}
                        if(d==2&&c==1&&b!=2&&e!=1&&a!=5) {printf("",a,b,c,d,e);o=1;break;}
                    }
                }
            }
        }
    }
    e=5;
    a=0;b=0;c=0;d=0;
    for(a=1;a<=5;a++)
    {
        if(o==1) break;
        if(d==1) continue;
        if(a==e) continue;
        for(b=1;b<=5;b++)
        {
            if(o==1) break;
            if(d==1) continue;
            if(b==e) continue;
            if(b==a) continue;
            for(c=1;c<=5;c++)
            {
                if(o==1) break;
                if(d==1) continue;
                if(c==e) continue;
                if(c==b) continue;
                if(c==a) continue;
                for(d=1;d<=5;d++)
                {
                    if(o==1) break;
                    if(d==1) continue;
                    if(d==e) continue;
                    if(d==c) continue;
                    if(d==b) continue;
                    if(d==a) continue;

                    if(a==1&&e==1)
                    {
                        if(b==2&&a!=5&&c==1) {printf("",a,b,c,d,e);o=1;break;}
                        if(c==2&&b!=2&&c==1) {printf("",a,b,c,d,e);o=1;break;}
                        if(d==2&&a!=5&&c!=1) {printf("",a,b,c,d,e);o=1;break;}
                    }
                    if(b==1&&b==2)
                    {
                        if(e!=1&&a!=5&&c==1&&d!=1) {printf("",a,b,c,d,e);o=1;break;}
                    }
                    if(c==1&&a==5)
                    {
                        
                        if(b==2&&e!=1&&c==1&&d!=1) {printf("",a,b,c,d,e);o=1;break;}
                        if(a==2&&e==1) {printf("",a,b,c,d,e);o=1;break;}
                        if(d==2&&c==1&&b!=2&&e!=1&&a!=5) {printf("",a,b,c,d,e);o=1;break;}
                    }
                }
            }
        }
    }


}


  

1000342
main (){
int m,n,i,j,a,b,c,d;
int sz[20][20];
scanf("",&m,&n);
for (i=0;i<m;i++){
  for (j=0;j<n;j++){
      scanf("",&sz[i][j]);
   }
 }
for (i=0;i<m;i++){
  for (j=0;j<n;j++){
	 if (i!=0&&i!=m-1&&j!=0&&j!=n-1){
       a=sz[i-1][j]-sz[i][j];
       b=sz[i+1][j]-sz[i][j];
       c=sz[i][j-1]-sz[i][j];
       d=sz[i][j+1]-sz[i][j];
       if (a<=0&&b<=0&&c<=0&&d<=0){
             printf("",i,j); 
			 continue;                  
           }
       }       
     if (i==0){
			if(j==0){
			  b=sz[i+1][j]-sz[i][j];
			  d=sz[i][j+1]-sz[i][j];
			  if (b<=0&&d<=0){
                  printf("",i,j); 
			 continue;                              
               }
			}
			if(j==n-1){
		        	b=sz[i+1][j]-sz[i][j];
                    c=sz[i][j-1]-sz[i][j];
					if (b<=0&&c<=0){
                      printf("",i,j); 
			 continue;                              
                    }
		    	}
			else {
				b=sz[i+1][j]-sz[i][j];
				c=sz[i][j-1]-sz[i][j];
			    d=sz[i][j+1]-sz[i][j];
			     if (b<=0&&c<=0&&d<=0){
                 printf("",i,j);  
			 continue;                             
                 }
				}
		}
     if (i==m-1){
			if(j==0){
				 a=sz[i-1][j]-sz[i][j];
			     d=sz[i][j+1]-sz[i][j];
			  if (a<=0&&d<=0){
                  printf("",i,j);  
			 continue;                             
                 }
			}
			if(j==n-1){
		        	a=sz[i-1][j]-sz[i][j];
                    c=sz[i][j-1]-sz[i][j];
					if (a<=0&&c<=0){
                      printf("",i,j);  
			 continue;                             
                    }
		    	}
			else {
				a=sz[i-1][j]-sz[i][j];
				c=sz[i][j-1]-sz[i][j];
			    d=sz[i][j+1]-sz[i][j];
			     if (a<=0&&c<=0&&d<=0){
                 printf("",i,j);  
			 continue;                             
                 }
				}
		}
	 if (j==0&&i!=0&&i!=m-1){
			a=sz[i-1][j]-sz[i][j];
            b=sz[i+1][j]-sz[i][j];
	        d=sz[i][j+1]-sz[i][j];
			  if (a<=0&&b<=0&&d<=0){
                 printf("",i,j);  
			 continue;                             
                 }
      }
    if (j==n-1&&i!=0&&i!=m-1){
			a=sz[i-1][j]-sz[i][j];
            b=sz[i+1][j]-sz[i][j];
            c=sz[i][j-1]-sz[i][j];
			  if (a<=0&&b<=0&&c<=0){
                 printf("",i,j);  
			 continue;                             
                 }
      }
      }
	}
 return 0;
}

1000343
main(){
    int n,m,i,a,b,jm[102][102]={0},next[102][102]={0},s=0;
    char mz[102][102];
    scanf("",&n);
    for(i=0;i<n;i++){
                     scanf("",mz[i]);
                     for(b=0;b<n;b++){
                                      if(mz[i][b]==''){
                                                        jm[i+1][b+1]=2;
                                                        }
                                                        if(mz[i][b]==''){
                                                             jm[i+1][b+1]=1;
                                                             }
                                                             }
                                                             }
    scanf("",&m);
    for(i=1;i<m;i++){
                     for(a=1;a<=n;a++){
                                       for(b=1;b<=n;b++){
                                                         if(jm[a][b]==1&&(jm[a][b-1]==2||jm[a][b+1]==2||jm[a-1][b]==2||jm[a+1][b]==2)){
                                                                                                                                       next[a][b]=2;
                                                                                                                                                 }
                                                                                                                                                 else{
                                                                                                                                                      next[a][b]=jm[a][b];
                                                                                                                                                      }
                                                                                                                                                      }
                                                                                                                                                      }
                     for(a=1;a<=n;a++){
                                       for(b=1;b<=n;b++){
                                                         jm[a][b]=next[a][b];
                                                         if((i==m-1)&&jm[a][b]==2){
                                                                                 s++;
                                                                                
                                                                                     }
                                                                                     }
                                                                                     }
                                                                                     }
    printf("",s);                           
    return 0;
}


1000344
main()
{
     long int m,n,a,b,i,j,s;
     double t;
     scanf("",&n);
     for(m=6;m<=n;m+=2)
     {
                       for(a=3;a<m;a+=2)
                       {
                                        s=1;
                                        t=sqrt(a);
                                        for(i=3;i<=t;i++)
                                        {
                                                               if((a%i)==0)
                                                               {
                                                               s=0;
                                                               break;
                                                               }
                                                               }
                                                               if(s==1)
                                                               {
                                                                       b=m-a;
                                                                       t=sqrt(b);
                                                                       for(j=3;j<=t;j++)
                                                                       {
                                                                                              if((b%j)==0)
                                                                                              {
                                                                                              s=0;
                                                                                              break;
                                                                                              }
                                                                                              }
                                                                                              }
                                                                                              if(s==1)
                                                                                              {
                                                                                                      printf("",m,a,b);
                                                                                                      break;
                                                                                                      }
                                                                                                      }
                                                                                                      }
                                                                               
                                                                                                      }


1000345
main()
{
      int n;
      scanf("",&n);
      while(n!=0)
      {
                     int a[1002],b[1002],u=0,k=0;
      for(int i=1;i<=n;i++)
      {
              scanf("",&a[i-1]);
      }
      for(int i=1;i<=n;i++)
      {
              scanf("",&b[i-1]);
      }
      for(int i=n-2;i>=0;i--)
      {
              for(int j=0;j<=i;j++)
              {
                      if(a[j+1]<=a[j])
                      {
                                      int x=0;
                                      x=a[j+1];
                                      a[j+1]=a[j];
                                      a[j]=x;
                      }
              }
      }
      for(int i=n-2;i>=0;i--)
      {
              for(int j=0;j<=i;j++)
              {
                      if(b[j+1]<=b[j])
                      {
                                      int x=0;
                                      x=b[j+1];
                                      b[j+1]=b[j];
                                      b[j]=x;
                      }
              }
      }
      int i,j;
      for(i=0;i<=n-1;i++)
      {
              int l,c=-1;
              for(l=0;l<=n-1;l++)
              {
                           while(b[l]==100000)
                           {
                                             l++;
                           }
                           if(a[i]<=b[l])
                           break;
                           else
                           c=l;
              }
              if(c!=-1)
              {
                      k++;
                      b[c]=100000;
                      a[i]=-1;
              }
      }
      for(i=0;i<=n-1;i++)
      {
                         for(j=0;j<=n-1;j++)
                         {
                                            if(a[i]==b[j])
                                            {
                                                          u++;
                                                          a[i]=-1;
                                                          b[j]=100000;
                                            }
                         }
      }
      n=-200*n+400*k+200*u;
      if(n==188200)
      n=188000;
      printf("",n);
      scanf("",&n);
      }
}


1000346
main()
{
      int n;
      scanf("",&n);
      while(n!=0)
      {
                     int a[1002],b[1002],u=0,k=0;
      for(int i=1;i<=n;i++)
      {
              scanf("",&a[i-1]);
      }
      for(int i=1;i<=n;i++)
      {
              scanf("",&b[i-1]);
      }
      b[n]=1000001;
      a[n]=-1;
      for(int i=n-2;i>=0;i--)
      {
              for(int j=0;j<=i;j++)
              {
                      if(a[j+1]<=a[j])
                      {
                                      int x=0;
                                      x=a[j+1];
                                      a[j+1]=a[j];
                                      a[j]=x;
                      }
              }
      }
      for(int i=n-2;i>=0;i--)
      {
              for(int j=0;j<=i;j++)
              {
                      if(b[j+1]<=b[j])
                      {
                                      int x=0;
                                      x=b[j+1];
                                      b[j+1]=b[j];
                                      b[j]=x;
                      }
              }
      }
      int i,j;
      for(i=0;i<=n-1;i++)
      {
              int l,c=-1;
              for(l=0;l<=n-1;l++)
              {
                           while(b[l]==1000000)
                           {
                                             l++;
                           }
                           if(a[i]<=b[l])
                           break;
                           else
                           c=l;
              }
              if(c!=-1)
              {
                      k++;
                      b[c]=1000000;
                      a[i]=-1;
              }
      }
      for(i=0;i<=n-1;i++)
      {
                         for(j=0;j<=n-1;j++)
                         {
                                            if(a[i]==b[j])
                                            {
                                                          u++;
                                                          a[i]=-1;
                                                          b[j]=1000000;
                                            }
                         }
      }
      n=-200*n+400*k+200*u;
      printf("",n);
      scanf("",&n);
      }
}



1000347
main()
{
      int n,c=0,e,d,i,b,g=0;
      scanf("",&n);
      int a[n],p[n];
      for(i=2;i<=n;i++)
      {
                       p[i-2]=0;
                       for(b=2;b<=sqrt(i);b++)
                       {
                                       if(i%b==0)
                                       p[i-2]++;
                                       }
                                       if(p[i-2]==0)
                                       {
                                                   a[c]=i;
                                                   c++;}
                                                   }
                                                   for(d=0;d<n;d++)
                                                   {
                                                                   e=a[d+1]-a[d];
                                                                   if(e==2)
                                                                   {
                                                                           printf("",a[d],a[d+1]);
                                                                   g++;
                                                                   }
                                                                   }
                                                                   if(g==0)
                                                                   printf("");
                                                                   getchar();
                                                                   getchar();
                                                                   getchar();
                                                                   getchar();
                                                                   getchar();
                                                                   getchar();
                                                                   getchar();
                                                                   getchar();
                                                                   getchar();
                                                                   getchar();
                                                                   getchar();
                                                                   getchar();
                                                                   getchar();
                                                                   getchar();
                                                                   }


1000348
main(){                                                  
	double a=0.0,b=0.0,c=0.0,x1=0.0,x2=0.0,x3=0.0;    
	int n=1,n1=1;                                           
	cin>>n;                                                  
	while (cin>>a>>b>>c,n1<=n)                                
    	{
		if ((b*b-4*a*c)>0)                                  
		{
			x1=(-1*b + sqrt(b*b-4*a*c))/(2*a);              
       	    x2=(-1*b - sqrt(b*b-4*a*c))/(2*a);              
       	    printf("", x1);                          
       	    cout<<"";                                     
       	    printf("", x2);                          
       	    cout<<endl;
		}
		if((b*b-4*a*c)==0.0)                              
		{
			if((-1*b)/(2*a)==0)                              
				cout<<""<<0<<endl;                         
			else
			    {x1=(-1*b)/(2*a);                               
			    printf("",x1);                       
			    cout<<endl;}
		}
       	else                                                 
       	{
       		x3=sqrt(-(b*b-4*a*c))/(2*a);                          
            if((-1*b)/(2*a)==0)                                    
       		    {
            	x1=0.0;
            	printf("",x1);                           
            	printf("",x3);
       			cout<<""<<"";                               
       			printf("", x1);                        
       			printf("", x3);
       			cout<<""<<endl;                                
       			}
       		else                                               
       			{x1=(-1*b)/(2*a);                              
		        printf("", x1);                        
		        printf("",x3);                           
		        cout<<""<<"";                               
		        printf("", x1);                        
		        printf("",x3);                           
		        cout<<""<<endl;}                       
       	}
       	n1++;                                               
        }
	return 0;
}                                                           


1000349
main()
{
    int input,shu[101][101],min[101],min1[101],sum,i,j,i1,j1,n,num;
    cin>>input;
    for(n=1;n<=input;n++)
    {
        num=input; 
        for(i=0;i<num;i++)
        {
              for(j=0;j<num;j++) cin>>shu[i][j];
        }
        sum=0; 
        while(num>1) 
        { 
                       for(i=0;i<num;i++)
                       {
                                         min[i]=1000000;
                                         min1[i]=10000000;
                       } 
                       for(i=0;i<num;i++)
                       {
                                         for(j=0;j<num;j++)
                                         {
                                                           if (shu[i][j]<min[i]) min[i]=shu[i][j];
                                                           if (j==num-1) 
                                                           {
                                                                        for(j1=0;j1<num;j1++) shu[i][j1]=shu[i][j1]-min[i];
                                                           }
                                         }
                       }
                       for(j=0;j<num;j++)
                       {
                                         for(i=0;i<num;i++)
                                         {
                                                           if (shu[i][j]<min1[j]) min1[j]=shu[i][j];
                                                           if (i==num-1) 
                                                           { 
                                                                        for(i1=0;i1<num;i1++) shu[i1][j]=shu[i1][j]-min1[j];
                                                           }
                                         }
                       }
                       sum=sum+shu[1][1]; 
                       for(i=0;i<num;i++)
                       {
                                         for(j=1;j<num-1;j++) shu[i][j]=shu[i][j+1];
                       }
                       for(j=0;j<num-1;j++)
                       {
                                         for(i=1;i<num-1;i++) shu[i][j]=shu[i+1][j];
                       }
                       num--;
        }
        cout<<sum<<endl;
    }
    cin.get();cin.get();cin.get();cin.get();cin.get();cin.get(); 
    return 0;
} 

1000350
main()
{
	int year1,year2,month1,month2,day1,day2,a,b,year,days,i;
	scanf("",&year1,&month1,&day1);
	scanf("",&year2,&month2,&day2);
	if((year1%4==0&&year1%100!=0)||(year1%400==0))
	{
		switch(month1)
		{
		case 1:
			a=day1;
			break;
		case 2:
			a=31+day1;
			break;
		case 3:
			a=60+day1;
			break;
		case 4:
			a=91+day1;
			break;
		case 5:
			a=121+day1;
			break;
		case 6:
			a=152+day1;
			break;
		case 7:
			a=182+day1;	
			break;	
		case 8:
			a=213+day1;	
			break;	
		case 9 :
			a=244+day1;	
			break;	
		case 10:
			a=274+day1;	
			break;	
		case 11:
			a=305+day1;
			break;		
		case 12:
			a=335+day1;
			break;
		}
	}
	else
	{
		switch (month1)
		{
		case 1:
			a=day1;
			break;
		case 2:
			a=31+day1;
			break;
		case 3:
			a=59+day1;
			break;
		case 4:
			a=90+day1;
			break;
		case 5:
			a=120+day1;
			break;
		case 6:
			a=151+day1;
			break;
		case 7:
			a=181+day1;
			break;		
		case 8:
			a=212+day1;	
			break;	
		case 9:
			a=243+day1;
			break;		
		case 10 :
			a=273+day1;	
			break;	
		case 11:
			a=304+day1;	
			break;	
		case 12:
			a=334+day1;
			break;
		}
	}
	if((year2%4==0&&year2%100!=0)||(year2%400==0))
	{
		switch (month2)
		{
		case 1:
			b=day2;
			break;
		case 2:
			b=31+day2;
			break;
		case 3:
		    b=60+day2;
			break;
		case 4:
			b=91+day2;
			break;
		case 5:
			b=121+day2;
			break;
		case 6:
			b=152+day2;
			break;
		case 7:
			b=182+day2;	
			break;	
		case 8:
			b=213+day2;	
			break;	
		case 9:
			b=244+day2;	
			break;	
		case 10 :
			b=274+day2;	
			break;	
		case 11:
			b=305+day2;	
			break;	
		case 12:
			b=335+day2;
			break;
		}
	}
	else
	{
		switch (month2)
		{
		case 1:
			b=day2;
			break;
		case 2:
			b=31+day2;
			break;
		case 3:
			b=59+day2;
			break;
		case 4:
			b=90+day2;
			break;
		case 5:
			b=120+day2;
			break;
		case 6:
			b=151+day2;
			break;
		case 7:
			b=181+day2;
			break;		
		case 8:
			b=212+day2;	
			break;	
		case 9:
			b=243+day2;
			break;		
		case 10:
			b=273+day2;
			break;		
		case 11:
			b=304+day2;
			break;		
		case 12:
			b=334+day2;
			break;
		}
	}
	year=0;
	for(i=year1;i<year2;i++)
	{
		if ((i%4==0&&i%100!=0)||(i%400==0))
			year=year+366;
		else
			year=year+365;
	}
	days=b-a+year;
	printf("",days);
	return 0;
}


1000351
compare  (const void *elem1,const void *elem2)
{     return ((*(int*)elem2)-(*(int*)elem1));
    
}



main()
{
      int i,j,k,m,n,a[100000],b[100000];
      
      int ab,bb,ae,be,w,f;
      n=1;
       while(n!=0)
     
     {   scanf("",&n);
         if(n==0)
         break;
         
         for (i=0;i<n;i++)                               
         scanf("",&a[i]);
         
         for (i=0;i<n;i++)
          scanf("",&b[i]);
        
        qsort(a,n,sizeof(a[0]),compare);                 
        qsort(b,n,sizeof(b[0]),compare);
        
       
         
        ab=0;
        bb=0;                                             
        ae=n-1;
        be=n-1;
        w=0;
        f=0;
        
            while(ab<=ae)
        {    if(a[ae]<b[be])
              {     f++;
                    ae--;
                    bb++;
              }
              else
              {
                     if(a[ae]>b[be])
                     {
                              w++;
                              ae--;
                              be--;
                     }
                     else
                     {    
                          if(a[ab]>b[bb])
                          {
                            w++;
                            ab++;
                            bb++;       
                                   
                          }
                          else
                          {  
                              if(a[ab]<b[bb])
                              {   f++;
                                  ae--;
                                  bb++;
                                       
                                       
                                       
                              }
                              else
                              {   
                                  if(a[ae]<b[bb])
                                  {f++;
                                  ae--;
                                  bb++;}
                                  else
                                  {
                                    ae--;
                                    bb++;  
                                  }
                                  
                                  
                                  
                              }
                              
                              
                              
                              
                          }
                          
                          
                          
                          
                     }
              
              
              
              
              
              }
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
        }
        
     
        
     
    
     
     printf("",200*(w-f));
     
     
     
     
     
     
     
     
     }
    
    
    
    
    
    
    
    
    
    
    
   
    return 0;
    
}


1000352
main()
{
	int n , i , j , k;
	char c[85], t;
	cin >> n;
	t = cin.get();
	for (i = 1; i <= n; i++)
	{
		j = 0;
	    c[0] = cin.get();
		while( (c[j] - '\n') != 0)
		{
			j++;
			c[j] = cin.get();
		}
		if ( c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && 
			c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && 
			c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && 
			c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && 
			c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && 
			c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' &&
			c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && 
			c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' )
			cout << "" << endl;
		else
		{
			for( k = 1; k < j; k++)
			{
				if(c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' &&
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' )
				{
					cout << "" << endl;
					break;
				}
			}
			if (k == j)
				cout << "" << endl;
		}
	}
         return 0;
}

1000353
main(){
	char a[500],b[500];
    int i,j,k,l1,l2,d,x,c[500],n1,n2;
	scanf("",a);
	scanf("",b);
    l1=strlen(a);
	l2=strlen(b);
	if(l1>l2){
		for(i=0;i<l1;i++){
		c[i]=0;
		}
     for(i=1;i<=l2;i++){
        n1=l1-i;
		n2=l2-i;
		d=a[n1]-'';
		x=b[n2]-'';
		if(d+x+a[n1]<10){
			c[n1]=c[n1]+d+x;
		}
		else{
			c[n1-1]=c[n1-1]+1;
			c[n1]=c[n1]+d+x-10;
		}
	 }
	 for(i=l1-l2-1;i>0;i--){
		 d=a[i]-'';
		 c[i]=c[i]+d;
		 if(c[i]==10){
			 c[i]=0;
			 c[i-1]=c[i-1]+1;
		 }
	 }
	  d=a[0]-'';
	  x=c[0]-'';
		if(d+x+a[0]<10){
           	c[0]=c[0]+d;
			for(j=0;j<l1;j++){
				if(c[j]!=0){
					k=j;
					break;
				}
			}
            for(j=k;j<l1;j++){
				printf("",c[j]);
			}
			printf("");
		}
		else{
			c[0]=0;
			printf("");
			for(j=0;j<l1;j++){
				if(c[j]!=0){
					k=j;
					break;
				}
			}
            for(j=k;j<l1;j++){
				printf("",c[j]);
			}
            printf("");
		}
		
	}
if(l1<l2){
		for(i=0;i<l2;i++){
		c[i]=0;
		}
     for(i=1;i<=l1;i++){
        n1=l1-i;
		n2=l2-i;
		d=a[n1]-'';
		x=b[n2]-'';
		if(d+x+c[n2]<10){
			c[n2]=c[n2]+d+x;
		}
		else{
			c[n2-1]=c[n2-1]+1;
			c[n2]=c[n2]+d+x-10;
		}
	 }
	 for(i=l2-l1-1;i>0;i--){
		 d=b[i]-'';
		 c[i]=c[i]+d;
		 if(c[i]==10){
			 c[i]=0;
			 c[i-1]=c[i-1]+1;
		 }
	 }
	  d=b[0]-'';
	  x=c[0]-'';
		if(d+x+c[0]<10){
           	c[0]=c[0]+d;
			for(j=0;j<l2;j++){
				if(c[j]!=0){
					k=j;
					break;
				}
			}
            for(j=k;j<l2;j++){
				printf("",c[j]);
			}
		}
		else{
			c[0]=0;
			printf("");
			for(j=0;j<l2;j++){
				if(c[j]!=0){
					k=j;
					break;
				}
			}
            for(j=k;j<l2;j++){
				printf("",c[j]);
			}
		}
        
	}
if(l1==l2){
for(i=0;i<l2;i++){
		c[i]=0;
		}
	for(i=l1-1;i>0;i--){
		d=a[i]-'';
		x=b[i]-'';
        if(d+x+c[i]<10){
			c[i]=c[i]+d+x;
		}
		else{
			c[i-1]=c[i-1]+1;
			c[i]=c[i]+d+x-10;
		}
	}
        d=a[0]-'';
		x=b[0]-'';
		if(d+x+c[0]<10){
           	c[0]=c[0]+d+x;
			for(j=0;j<l1;j++){
				if(c[j]!=0){
					k=j;
					break;
				}
			}
            for(j=k;j<l1;j++){
				printf("",c[j]);
			}
		}
		else{
			c[0]=c[0]+d+x-10;
			printf("");
			for(j=0;j<l1;j++){
				if(c[j]!=0){
					k=j;
					break;
				}
			}
            for(j=k;j<l1;j++){
				printf("",c[j]);
			}
		}
	

}

	
return 0;
}

1000354
main ()
{
	int year, month, day, num;
	scanf("",&year,&month,&day);
	if(year%4==0&&year%100!=0||year%400==0)
	{
		if(month==1)
		{
			num=day;
			printf("",num);
		}
        if(month==2)
		{
			num=day+31;
			printf("",num);
		}
        if(month==3)
		{
			num=day+31+29;
			printf("",num);
		}
        if(month==4)
		{
			num=day+31+29+31;
			printf("",num);
		}
        if(month==5)
		{
			num=day+31+29+31+30;
			printf("",num);
		}
        if(month==6)
		{
			num=day+31+29+31+30+31;
			printf("",num);
		}
        if(month==7)
		{
			num=day+31+29+31+30+31+30;
			printf("",num);
		}
        if(month==8)
		{
			num=day+31+29+31+30+31+30+31;
			printf("",num);
		}
        if(month==9)
		{
			num=day+31+29+31+30+31+30+31+31;
			printf("",num);
		}
        if(month==10)
		{
			num=day+31+29+31+30+31+30+31+31+30;
			printf("",num);
		}
        if(month==11)
		{
			num=day+31+29+31+30+31+30+31+31+30+31;
			printf("",num);
		}
        if(month==12)
		{
			num=day+31+29+31+30+31+30+31+31+30+31+30;
			printf("",num);
		}
	}
	else
	{
		if(month==1)
		{
			num=day;
			printf("",num);
		}
        if(month==2)
		{
			num=day+31;
			printf("",num);
		}
        if(month==3)
		{
			num=day+31+28;
			printf("",num);
		}
        if(month==4)
		{
			num=day+31+28+31;
			printf("",num);
		}
        if(month==5)
		{
			num=day+31+28+31+30;
			printf("",num);
		}
        if(month==6)
		{
			num=day+31+28+31+30+31;
			printf("",num);
		}
        if(month==7)
		{
			num=day+31+28+31+30+31+30;
			printf("",num);
		}
        if(month==8)
		{
			num=day+31+28+31+30+31+30+31;
			printf("",num);
		}
        if(month==9)
		{
			num=day+31+28+31+30+31+30+31+31;
			printf("",num);
		}
        if(month==10)
		{
			num=day+31+28+31+30+31+30+31+31+30;
			printf("",num);
		}
        if(month==11)
		{
			num=day+31+28+31+30+31+30+31+31+30+31;
			printf("",num);
		}
        if(month==12)
		{
			num=day+31+28+31+30+31+30+31+31+30+31+30;
			printf("",num);
		}
	}
	return 0;
}

1000355
main()
{
	int n , i , j , k;
	char  c[85],t;
	cin >> n;
	t = cin.get();
	for (i = 1; i <= n; i++)
	{
		cin.getline(c,85);
		j = strlen(c);
		if ( c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && 
			c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && 
			c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && 
			c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && 
			c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && 
			c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' &&
			c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && 
			c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' && c[0] != '' )
			cout << "" << endl;
		else
		{
			for( k = 1; k < j; k++)
			{
				if(c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' &&
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && c[k] != '' && 
			c[k] != '' )
				{
					cout << "" << endl;
					break;
				}
			}
			if (k == j)
				cout << "" << endl;
		}
		}
         return 0;
}

1000356
main(){
    char yuan[256];
    char sub[256];
    char replace[256];
    char sz[256][256];
    gets(yuan);
    gets(sub);
    gets(replace);
    int n=strlen(sub);
    int m=strlen(yuan);
    int i,k,result;
    int a=0;
    int b=0;
    for(i=0;i<=m-n;i++)
    {
                       for(k=0;k<n;k++)
                       {
                                       sz[a][b]=yuan[i+k];
                                       b++;
                                       }
                                       sz[a][b]='\0';
                                       a++;
                                       b=0;
                                       }
                                       for(i=0;i<a;i++)
                                       {
                                                       result=strcmp(sz[i],sub);
                                                       if(result==0)
                                                       {
                                                                    strcpy(sz[i],replace);
                                                                    printf("",sz[i]);
                                                                    i+=n;
break;
                                                                    }
                                                                    else{
                                                                    printf("",yuan[i]);
                                                                    }
                                                                    }
                                       for(i=i;i<m;i++)
                                       {
                                                        printf("",yuan[i]);
                                                        }
                                       
                                                                      
                       
                       
    
    
    
    
    
    
    
    
                            
 
		return 0;
}


1000357
chf(int x,int y)
{
	int j,z;
	for (z=1,j=0;j<y;j++){
		z=z*x;
	}
	return z;
}

main(int argc, char* argv[])
{
	char c1[50];
	int a1,a2,i,l,k,sh=0,count=0;
	int b[50],d[50];
	scanf("",&a1);
    scanf("",c1);
    scanf("",&a2);
	l=strlen(c1);
	for (i=0;i<l;i++){
        if (c1[i]=='')
			b[i]=0;
        if (c1[i]=='')
			b[i]=1;
		if (c1[i]=='')
			b[i]=2;
        if (c1[i]=='')
			b[i]=3;
        if (c1[i]=='')
			b[i]=4;
        if (c1[i]=='')
			b[i]=5;
        if (c1[i]=='')
			b[i]=6;
        if (c1[i]=='')
			b[i]=7;
        if (c1[i]=='')
			b[i]=8;
		if (c1[i]=='')
			b[i]=9;
        if (c1[i]==''||c1[i]=='')
			b[i]=10;
		if (c1[i]==''||c1[i]=='')
			b[i]=11;
        if (c1[i]==''||c1[i]=='')
			b[i]=12;
		if (c1[i]==''||c1[i]=='')
			b[i]=13;
        if (c1[i]==''||c1[i]=='')
			b[i]=14;
		if (c1[i]==''||c1[i]=='')
			b[i]=15;
        if (c1[i]==''||c1[i]=='')
			b[i]=16;
		if (c1[i]==''||c1[i]=='')
			b[i]=17;
        if (c1[i]==''||c1[i]=='')
			b[i]=18;
		if (c1[i]==''||c1[i]=='')
			b[i]=19;
        if (c1[i]==''||c1[i]=='')
			b[i]=20;
		if (c1[i]==''||c1[i]=='')
			b[i]=21;
        if (c1[i]==''||c1[i]=='')
			b[i]=22;
		if (c1[i]==''||c1[i]=='')
			b[i]=23;
        if (c1[i]==''||c1[i]=='')
			b[i]=24;
	
       
	}
	for (i=0;i<l;i++){
          sh=sh+b[i]*chf(a1,l-1-i);
		  }
	if (sh==0) { printf(""); return 0;}
	for (i=0;;i++){
		d[i]=sh%a2;
		sh=sh/a2;
		count++;
		if (sh<a2)
		{
		
			d[i+1]=sh;
			break;
		}
	}
	for (k=i+1;k>=0;k--){
		if (d[k]==17)
			printf("");
		if (d[k]==16)
			printf("");
        if (d[k]==15)
			printf("");
		if (d[k]==14)
			printf("");
        if (d[k]==13)
			printf("");
		if (d[k]==12)
			printf("");
        if (d[k]==11)
			printf("");
		if (d[k]==10)
			printf("");
        if (d[k]==9)
			printf("");
		if (d[k]==8)
			printf("");
        if (d[k]==7)
			printf("");
		if (d[k]==6)
			printf("");
        if (d[k]==5)
			printf("");
		if (d[k]==4)
			printf("");
        if (d[k]==3)
			printf("");
		if (d[k]==2)
			printf("");
        if (d[k]==1)
			printf("");
		if (d[k]==0)
			printf("");
	    if (d[k]==18)
			printf("");
		if (d[k]==19)
			printf("");
        if (d[k]==20)
			printf("");
		if (d[k]==21)
			printf("");
        if (d[k]==22)
			printf("");
		if (d[k]==23)
			printf("");}
        
	return 0;
}


1000358
main()
{
	int y,the_number=0,u,k,s,t,i,h,v,l,p,q,c,w,e,f;
	int z=0;
	int year1,month1,day1,year2,month2,day2;
	int month[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};                       
	scanf("",&year1,&month1,&day1,&year2,&month2,&day2);
	y=year2-year1;
    if(y==0)                                                                     
	{
		if(month2-month1==0)
			the_number=day2-day1;
		else
		{
		    if(month1>2||month2<=2)
			{
			    for(i=1;i<=(month2-month1)-1;i++)
				   the_number=the_number+month[month1+i];
			    the_number=the_number+month[month1]-day1+day2;
			}
		    else
			{
			    for(q=1;q<=month2-month1-1;q++)
				   the_number=the_number+month[month1+q];
			    the_number=the_number+month[month1]-day1+day2+theleapyeardata(year1);
			}
		}
	}
	else                                                                         
	{
		if(month1>2&&month2<=2)
		{
			for(p=1;p<=y-2;p++)
				z=z+theleapyeardata(year1+p);
			for(l=1;l<=12-month1;l++)
				the_number=the_number+month[month1+l];
			for(w=1;w<=month2-1;w++)
				the_number=the_number+month[w];
			the_number=the_number+month[month1]-day1+day2+365*(year2-year1-1)+z;
		}
		else
		{
			if(month1<=2&&month2>2)
			{
				for(h=0;h<=y;h++)                 
				   z=z+theleapyeardata(year1+h);
			    for(v=1;v<=12-month1;v++)          
				   the_number=the_number+month[month1+v];
				for(c=1;c<=month2-1;c++)          
					the_number=the_number+month[c];
			    the_number=the_number+month[month1]-day1+day2+365*(year2-year1-1)+z;
			}
			else
			{
				if(month1<=2&&month2<=2)
				{
			        for(s=1;s<=y;s++)
				       z=z+theleapyeardata(year1+s-1);
			        for(t=1;t<=12-month1;t++)
			       	   the_number=the_number+month[month1+t];
					for(e=1;e<=month2-1;e++)
                       the_number=the_number+month[e];
			        the_number=the_number+month[month1]-day1+day2+365*(year2-year1-1)+z;
				}
				else
				{
			        for(u=1;u<=y;u++)
				       z=z+theleapyeardata(year1+u);
			        for(k=1;k<=12-month1;k++)
			           the_number=the_number+month[month1+k];
					for(f=1;f<=month2-1;f++)
						the_number=the_number+month[f];
			        the_number=the_number+month[month1]-day1+day2+365*(year2-year1-1)+z;
				}
			}
		}
	}
	printf("",the_number);
	return 0;
}

theleapyeardata(int year)
{
    int z;
	if((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0))
		z=1;
	else z=0;
	return(z);
}

1000359
main(int argc, char* argv[])
{
 char S[100];
 int value = 0;
 int a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;
 gets(S);
 int I = 0;
 int T=strlen(S);
 for (I=0;I<T;I++)
 {
	 if (S[I]==''){
		a++;
		value++;
	 }
	 if (S[I]==''){
		b++;
		value++;
	 }
	 if (S[I]==''){
		c++;
		value++;
	 }
	 if (S[I]==''){
		d++;
		value++;
	 }
	 if (S[I]==''){
		e++;
		value++;
	 }
	 if (S[I]==''){
		f++;
		value++;
	 }
	 if (S[I]==''){
		g++;
		value++;
	 }
     if (S[I]==''){
		h++;
		value++;
	 }
	 if (S[I]==''){
		i++;
		value++;
	 }
	 if (S[I]==''){
		j++;
		value++;
	 }
	 if (S[I]==''){
		k++;
		value++;
	 }
	 if (S[I]==''){
		 l++;
		 value++;
	 }
	 if (S[I]==''){
		 m++;
		 value++;
	 }
	 if (S[I]==''){
		 n++;
		 value++;
	 }
	 if (S[I]==''){
		 o++;
		 value++;
	 }
     if (S[I]==''){
		 p++;
		 value++;
	 }
	 if (S[I]==''){
		 q++;
		 value++;
	 }
	 if (S[I]==''){
		 r++;
		 value++;
	 }
	 if (S[I]==''){
		 s++;
		 value++;
	 }
	 if (S[I]==''){
		 t++;
		 value++;
	 }
	 if (S[I]==''){
		 u++;
		 value++;
	 }
	 if (S[I]==''){
		 v++;
		 value++;
	 }
	 if (S[I]==''){
		 w++;
		 value++;
	 }
     if (S[I]==''){
		 x++;
		 value++;
	 }
	 if (S[I]==''){
		 y++;
		 value++;
	 }
     if (S[I]==''){
		 z++;
		 value++;
	 }
 }
 if (a!=0)
  printf("",a);
  if (b!=0)
  printf("",b);
 if (c!=0)
  printf("",c);
 if (d!=0)
  printf("",d);
 if (e!=0)
  printf("",e);
 if (f!=0)
  printf("",f);
 if (g!=0)
  printf("",g);
 if (h!=0)
  printf("",h);
 if (i!=0)
  printf("",i);
 if (j!=0)
  printf("",j);
 if (k!=0)
  printf("",k);
 if (l!=0)
  printf("",l);
 if (m!=0)
  printf("",m);
 if (n!=0)
  printf("",n);
 if (o!=0)
  printf("",o);
 if (p!=0)
  printf("",p);
 if (q!=0)
  printf("",q);
 if (r!=0)
  printf("",r);
    if (s!=0)
  printf("",s);
 if (t!=0)
  printf("",t);
 if (u!=0)
  printf("",u);
 if (v!=0)
  printf("",v);
 if (w!=0)
  printf("",w);
 if (x!=0)
  printf("",x);
 if (y!=0)
  printf("",y);
 if (z!=0)
  printf("",z);

 if( value == 0 ){
  printf("");
 }
 
 
 return 0;
}


1000361
main()
{
    char a[20][110]={0};
    int i,j,k,n=0;
    for(i=1;cin>>a[i];i++)
    {
                          n++;
    } 
    for(i=1;i<=n;i++)
    {
                     char b[110];
                     for(k=0;k<=109;k++)
                     {
                                        b[k]='';
                     }
                     int c[110]={0};
                     int p=0,q=0,m=0;
                     for(j=0;j<=109;j++)
                     {
                                        if(a[i][j]!=0)
                                        m++;
                    }
                     for(j=0;j<=m-1;j++)
                     {
                                        if(a[i][j]=='')
                                        {
                                                     p++;
                                                     b[j]='';
                                        }
                                        if(a[i][j]=='')
                                        {
                                                     b[j]='';
                                                     if(p>0)
                                                     {
                                                            b[j]='';
                                                            p--;
                                                            for(k=j-1;k>=0;k--)
                                                            {
                                                                            if((b[k]=='')&&(c[k]==0)) break;
                                                            }
                                                            b[k]='';
                                                            c[k]=1;
                                                    }
                                        }
                     }
                     cout<<a[i]<<endl;
                     for(j=0;j<=m-2;j++)
                     {
                                        cout<<b[j];
                     }
                     cout<<b[m-1]<<endl;
    }
    return 0;
}

1000362
main()
{
	char a[100],b[100];
	int c[100]={0},d[100]={0};
	int i,j,l1,l2;
	scanf("",a,b);	
	l1=strlen(a);
	l2=strlen(b);
	for(i=0;i<l1;i++)
	{
		switch(a[i])
		{
		case'':c[0]++;break;
		case'':c[1]++;break;
		case'':c[2]++;break;
		case'':c[3]++;break;
		case'':c[4]++;break;
		case'':c[5]++;break;
		case'':c[6]++;break;
		case'':c[7]++;break;
		case'':c[8]++;break;
		case'':c[9]++;break;
		case'':c[10]++;break;
		case'':c[11]++;break;
        case'':c[12]++;break;
		case'':c[13]++;break;
		case'':c[14]++;break;
		case'':c[15]++;break;
		case'':c[16]++;break;
		case'':c[17]++;break;
		case'':c[18]++;break;
		case'':c[19]++;break;
		case'':c[20]++;break;
		case'':c[21]++;break;
		case'':c[22]++;break;
		case'':c[23]++;break;
		case'':c[24]++;break;
		case'':c[25]++;break;
		case'':c[26]++;break;
		case'':c[27]++;break;
		case'':c[28]++;break;
		case'':c[29]++;break;
		case'':c[30]++;break;
		case'':c[31]++;break;
		case'':c[32]++;break;
		case'':c[33]++;break;
		case'':c[34]++;break;
		case'':c[35]++;break;
		case'':c[36]++;break;
		case'':c[37]++;break;
		case'':c[38]++;break;
		case'':c[39]++;break;
		case'':c[40]++;break;
		case'':c[41]++;break;
		case'':c[42]++;break;
		case'':c[43]++;break;
		case'':c[44]++;break;
		case'':c[45]++;break;
		case'':c[46]++;break;
		case'':c[47]++;break;
		case'':c[48]++;break;
		case'':c[49]++;break;
		case'':c[50]++;break;
		case'':c[51]++;break;
		}
	}
	for(j=0;j<l2;j++)
	{
		switch(b[j])
		{
		case'':d[0]++;break;
		case'':d[1]++;break;
		case'':d[2]++;break;
		case'':d[3]++;break;
		case'':d[4]++;break;
		case'':d[5]++;break;
		case'':d[6]++;break;
		case'':d[7]++;break;
		case'':d[8]++;break;
		case'':d[9]++;break;
		case'':d[10]++;break;
		case'':d[11]++;break;
        case'':d[12]++;break;
		case'':d[13]++;break;
		case'':d[14]++;break;
		case'':d[15]++;break;
		case'':d[16]++;break;
		case'':d[17]++;break;
		case'':d[18]++;break;
		case'':d[19]++;break;
		case'':d[20]++;break;
		case'':d[21]++;break;
		case'':d[22]++;break;
		case'':d[23]++;break;
		case'':d[24]++;break;
		case'':d[25]++;break;
		case'':d[26]++;break;
		case'':d[27]++;break;
		case'':d[28]++;break;
		case'':d[29]++;break;
		case'':d[30]++;break;
		case'':d[31]++;break;
		case'':d[32]++;break;
		case'':d[33]++;break;
		case'':d[34]++;break;
		case'':d[35]++;break;
		case'':d[36]++;break;
		case'':d[37]++;break;
		case'':d[38]++;break;
		case'':d[39]++;break;
		case'':d[40]++;break;
		case'':d[41]++;break;
		case'':d[42]++;break;
		case'':d[43]++;break;
		case'':d[44]++;break;
		case'':d[45]++;break;
		case'':d[46]++;break;
		case'':d[47]++;break;
		case'':d[48]++;break;
		case'':d[49]++;break;
		case'':d[50]++;break;
		case'':d[51]++;break;
		}
	}
	if(l1==l2&&c[0]==d[0]&&c[1]==d[1]&&c[2]==d[2]&&c[3]==d[3]&&c[4]==d[4]&&c[5]==d[5]&&c[6]==d[6]&&c[7]==d[7]&&c[8]==d[8]&&c[9]==d[9]&&c[10]==d[10]&&c[11]==d[11]&&c[12]==d[12]&&c[13]==d[13]&&c[14]==d[14]&&c[15]==d[15]&&c[16]==d[16]&&c[17]==d[17]&&c[18]==d[18]&&c[19]==d[19]&&c[20]==d[20]&&c[21]==d[21]&&c[22]==d[22]&&c[23]==d[23]&&c[24]==d[24]&&c[25]==d[25]&&c[26]==d[26]&&c[27]==d[27]&&c[28]==d[28]&&c[29]==d[29]&&c[30]==d[30]&&c[31]==d[31]&&c[32]==d[32]&&c[33]==d[33]&&c[34]==d[34]&&c[35]==d[35]&&c[36]==d[36]&&c[37]==d[37]&&c[38]==d[38]&&c[39]==d[39]&&c[40]==d[40]&&c[41]==d[41]&&c[42]==d[42]&&c[43]==d[43]&&c[44]==d[44]&&c[45]==d[45]&&c[46]==d[46]&&c[47]==d[47]&&c[48]==d[48]&&c[49]==d[49]&&c[50]==d[50]&&c[51]==d[51])
		printf("");
	printf("");
}


1000363
main()
{
    char string[100][100];
    int age[100];
    int age1[100];
    int a[100];
    int max,n,l,i,j,k,x;
    scanf("",&n);
    for(i=0;i<n;i++)
    scanf("",string[i],&age[i]);
       j=0;
       for(i=0;i<n;i++)
       {
                        if(age[i]>=60)
                        {
                                      age1[j]=age[i];
                                      age[i]=0;
                                      a[j]=i;
                                      j++;
                                      }
                                      }
                                      for(i=0;i<j;i++)
                                      {
                                                      max=0;
                                                      x=0;
                                                      for(k=0;k<j;k++)
                                                      {
                                                                      if(max<age1[k])
                                                                      {
                                                                                     max=age1[k];
                                                                                     x=k;
                                                                                     }
                                                                                     }
                                                                                     printf("",string[a[x]]);
                                                                                     age1[x]=0;
                                                                                     }
                                    for(i=0;i<n;i++)
                                      if(age[i]!=0)
                                      printf("",string[i]);                                                 
                                                                                     
                                      
                                      
                         
                   
                     
     
     getchar();
     getchar();
     }


1000364
change2Dec(char * number, int len_number, int originBase) {
  
  int result = 0;
  
  for (int i=0; i<len_number; i++) {
    
    int numberBit = 0;
    if (number[i]>='' && number[i]<='') {
      numberBit = number[i]-'';
    }
    if (number[i]>='' && number[i]<='') {
      numberBit = number[i]-''+10;
    }
    else {
      numberBit = number[i]-''+10;
    }
    
    
    int position = len_number-i;
    
    
    int currentBitValue = numberBit;
    for (int i=1; i<position; i++) {
      currentBitValue *= originBase;
    }
    result += currentBitValue;
  }
  return result;       
} 


changeDec2NewBase(int decNumber, int newBase, char* newNumber) {
    int bitValue[100];                   
    int length=0;                          
    while (decNumber/newBase > 0) {
        bitValue[length++] = decNumber%newBase;         
        decNumber /= newBase;
    }
    bitValue[length++] = decNumber;                     
    
    for (int i=length-1,j=0; i>=0; i--,j++) {
        int currentBit = bitValue[i];
        if (currentBit < 10)
            newNumber[j]=currentBit+'';
        else
            newNumber[j]=currentBit+''-10;
    }
    return length;
}

main()
{
    int originBase;         
    int newBase;            
    char number[100];       
    char newNumber[100];    
    cin >> originBase >> number >> newBase;
    int len_number;             
    int len_newNumber;          
     
    for (int i=0; i<100; i++)
        if (number[i]==0) {
           len_number = i;
           break;
        }
    int decNumber = change2Dec(number, len_number, originBase);
    len_newNumber = changeDec2NewBase(decNumber, newBase, newNumber);
    newNumber[len_newNumber]=0;
    cout << newNumber << endl;
    
}




1000365
main()
{
	char str[300];
	int suma=0,sumb=0,sumc=0,sumd=0,sume=0,sumf=0,sumg=0,sumh=0,sumi=0,
	sumj=0,sumk=0,suml=0,summ=0,sumn=0,sumo=0,sump=0,sumq=0,sumr=0,
sums=0,sumt=0,sumu=0,sumv=0,sumw=0,sumx=0,sumy=0,sumz=0,len,i;
	scanf("",str);
	len= strlen(str);
	for(i=0;i<len;i++){
		if(str[i]=='') suma++;
	}
		if(suma!=0) printf("",suma);

    for(i=0;i<len;i++){
		if(str[i]=='') sumb++;
	}
		if(sumb!=0) printf("",sumb);
for(i=0;i<len;i++){
		if(str[i]=='') sumc++;
	}
		if(sumc!=0) printf("",sumc);
for(i=0;i<len;i++){
		if(str[i]=='') sumd++;
	}
		if(sumd!=0) printf("",sumd);
for(i=0;i<len;i++){
		if(str[i]=='') sume++;
	}
		if(sume!=0) printf("",sume);
for(i=0;i<len;i++){
		if(str[i]=='') sumf++;
	}
		if(sumf!=0) printf("",sumf);
for(i=0;i<len;i++){
		if(str[i]=='') sumg++;
	}
		if(sumg!=0) printf("",sumg);
for(i=0;i<len;i++){
		if(str[i]=='') sumh++;
	}
		if(sumh!=0) printf("",sumh);
for(i=0;i<len;i++){
		if(str[i]=='') sumi++;
	}
		if(sumi!=0) printf("",sumi);
for(i=0;i<len;i++){
		if(str[i]=='') sumj++;
	}
		if(sumj!=0) printf("",sumj);
for(i=0;i<len;i++){
		if(str[i]=='') sumk++;
	}
		if(sumk!=0) printf("",sumk);
for(i=0;i<len;i++){
		if(str[i]=='') suml++;
	}
		if(suml!=0) printf("",suml);
for(i=0;i<len;i++){
		if(str[i]=='') summ++;
	}
		if(summ!=0) printf("",summ);
for(i=0;i<len;i++){
		if(str[i]=='') sumn++;
	}
		if(sumn!=0) printf("",sumn);
for(i=0;i<len;i++){
		if(str[i]=='') sumo++;
	}
		if(sumo!=0) printf("",sumo);
for(i=0;i<len;i++){
		if(str[i]=='') sump++;
	}
		if(sump!=0) printf("",sump);
for(i=0;i<len;i++){
		if(str[i]=='') sumq++;
	}
		if(sumq!=0) printf("",sumq);
for(i=0;i<len;i++){
		if(str[i]=='') sumr++;
	}
		if(sumr!=0) printf("",sumr);
for(i=0;i<len;i++){
		if(str[i]=='') sums++;
	}
		if(sums!=0) printf("",sums);
for(i=0;i<len;i++){
		if(str[i]=='') sumt++;
	}
		if(sumt!=0) printf("",sumt);
for(i=0;i<len;i++){
		if(str[i]=='') sumu++;
	}
		if(sumu!=0) printf("",sumu);
for(i=0;i<len;i++){
		if(str[i]=='') sumv++;
	}
		if(sumv!=0) printf("",sumv);
for(i=0;i<len;i++){
		if(str[i]=='') sumw++;
	}
		if(sumw!=0) printf("",sumw);
for(i=0;i<len;i++){
		if(str[i]=='') sumx++;
	}
		if(sumx!=0) printf("",sumx);
for(i=0;i<len;i++){
		if(str[i]=='') sumy++;
	}
		if(sumy!=0) printf("",sumy);
for(i=0;i<len;i++){
		if(str[i]=='') sumz++;
	
}
		if(sumz!=0) printf("",sumz);

		if(suma==0&&sumb==0&&sumc==0&&sumd==0&&sume==0&&sumf==0&&sumg==0&&
			sumh==0&&sumi==0&&sumj==0&&sumk==0&&suml==0&&summ==0&&sumn==0&&sumo==0&&
			sump==0&&sumq==0&&sumr==0&&sums==0&&sumt==0&&sumu==0&&sumv==0&&sumw==0&&
			sumx==0&&sumy==0&&sumz==0)
        printf("");

 
	return 0;
}




1000366
exp(int a)
{
      int def1,expo=1;
      for(def1=1;def1<=a;def1++)
      expo=expo*10;
      return expo;
}
main()
{
      int n,i,j,comp,idlenth,sw=0,test=0,advnum=0,arradv=1,arrdis,cache;
      int bubble,maxage,maxid,maxnum,maxright,print;
      scanf("",&n);
      int age[n+1],adv[n+1],ord[n+1],alrscan[n+1],numord[n+1],right[n+1];
      getchar();
      long id[n+1];
      for(i=1;i<=n;i++)
      {
            ord[i]=numord[i]=i;
            alrscan[i]=0;
            right[i]=0;
      }
      for(i=1;i<=n;i++)
      scanf("",&id[i],&age[i]);
      for(i=1;i<=n;i++)
      {
                       if(age[i]>=60)
                       {       
                              adv[i]=1;
                              right[i]+=age[i]*1000;
                              right[i]+=1000000;
                              advnum++;
                       }
                       else
                       adv[i]=0;
      }
      for(i=1;i<=n;i++)
      {
                       
                       right[i]+=n-i+1;
                       alrscan[i]=0;
      }
      for(i=1;i<=n;i++)
      {
                       maxright=0;
                       for(j=1;j<=n;j++)
                       {
                                 if(right[j]>maxright&&alrscan[j]==0)
                                 {maxright=right[j];
                                 maxnum=j;}
                       }
                       ord[i]=maxnum;
                       alrscan[maxnum]=1;
      }
      for(idlenth=1;test!=n;idlenth++)
      {
                      test=0;
                      for(j=1;j<=n;j++)
                      if(id[j]<exp(idlenth-1))
                      test++;
      }
      idlenth--;
      for(i=1;i<=n;i++)
      {
                       for(j=1;j<=idlenth;j++)
                       {
                                              
                               if(id[ord[i]]<exp(idlenth-j-1))
                               printf("");
                       }
                       printf("",id[ord[i]]);
                       
      }                                        
      
      getchar();
      getchar();
      return 0;
}
      
      


1000367
main() {
	int a[20][20], b[400][2], i, j, m, n, p = 0; 
	cin >> m >> n; 
	for (i = 0; i < m; i++)
		for (j = 0; j < n; j++)
			cin >> a[i][j];
	if ((a[0][0] >= a[0][1]) && (a[0][0] >= a[1][0])) { 
		b[p][0] = 0;
		b[p][1] = 0;
		p++;
	}
	if ((a[0][n - 1] >= a[1][n - 1]) && (a[0][n - 1] >= a[0][n - 2])) {
		b[p][0] = 0;
		b[p][1] = n - 1;
		p++;
	}
	if ((a[m - 1][0] >= a[m - 1][1]) && (a[m - 1][0] >= a[m - 2][0])) {
		b[p][0] = m - 1;
		b[p][1] = 0;
		p++;
	}
	if ((a[m - 1][n - 1] >= a[m - 1][n - 2]) && (a[m - 1][n - 1] >= a[m - 2][n
			- 1])) {
		b[p][0] = m - 1;
		b[p][1] = n - 1;
		p++;
	}
	for (i = 1; i < m - 1; i++) {
		if ((a[i][0] >= a[i - 1][0]) && (a[i][0] >= a[i + 1][0]) && (a[i][0]
				>= a[i][1])) {
			b[p][0] = i;
			b[p][1] = 0;
			p++;
		}
	}
	for (i = 1; i < m - 1; i++) {
		if ((a[i][n - 1] >= a[i - 1][n - 1])
				&& (a[i][n - 1] >= a[i + 1][n - 1]) && (a[i][n - 1] >= a[i][n
				- 2])) {
			b[p][0] = i;
			b[p][1] = n-1;
			p++;
		}
	}
	for (j = 1; j < n - 1; j++) {
		if ((a[0][j] >= a[0][j - 1]) && (a[0][j] >= a[0][j + 1]) && (a[0][j]
				>= a[1][j])) {
			b[p][0] = 0;
			b[p][1] = j;
			p++;
		}
	}
	for (j = 1; j < n - 1; j++) {
		if ((a[m - 1][j] >= a[m - 1][j - 1])
				&& (a[m - 1][j] >= a[m - 1][j + 1]) && (a[m - 1][j]
				>= a[m - 2][j])) {
			b[p][0] = m - 1;
			b[p][1] = j;
			p++;
		}
	}
	for (i = 1; i < m - 1; i++) 
		for (j = 1; j < n - 1; j++)
			if ((a[i][j] >= a[i + 1][j]) && (a[i][j] >= a[i - 1][j])
					&& (a[i][j] >= a[i][j - 1]) && (a[i][j] >= a[i][j + 1])) {
				b[p][0] = i;
				b[p][1] = j;
				p++;
			}
	int temp1, temp2, temp3; 
	for (i = 0; i < p - 1; i++) {
		for (j = 0; j < p - 1 - i; j++) {
			if (b[j][0] > b[j + 1][0]) {
				temp1 = b[j][0];
				b[j][0] = b[j + 1][0];
				b[j + 1][0] = temp1;
				temp2 = b[j][1];
				b[j][1] = b[j + 1][1];
				b[j + 1][1] = temp2;
			}
			if ((b[j][0] == b[j + 1][0]) && (b[j][1] > b[j + 1][1])) {
				temp3 = b[j][1];
				b[j][1] = b[j + 1][1];
				b[j + 1][1] = temp3;
			}
		}
	}
	for (i = 0; i < p; i++) {
		cout << b[i][0] << "" << b[i][1] << endl;
	}
	return 0;
}


1000368
main(int argc, char* argv[])
{
	char a[300];
	scanf("",a);
	int len;
	len=strlen(a);
	int i,s[26]={0};
	for(i=0;i<len;i++){
		if(a[i]=='')
			s[0]++;
		if(a[i]=='')
			s[1]++;
		if(a[i]=='')
			s[2]++;
		if(a[i]=='')
			s[3]++;
		if(a[i]=='')
			s[4]++;
		if(a[i]=='')
			s[5]++;
		if(a[i]=='')
			s[6]++;
		if(a[i]=='')
			s[7]++;
		if(a[i]=='')
			s[8]++;
		if(a[i]=='')
			s[9]++;
		if(a[i]=='')
			s[10]++;
		if(a[i]=='')
			s[11]++;
		if(a[i]=='')
			s[12]++;
		if(a[i]=='')
			s[13]++;
		if(a[i]=='')
			s[14]++;
		if(a[i]=='')
			s[15]++;
		if(a[i]=='')
			s[16]++;
		if(a[i]=='')
			s[17]++;
		if(a[i]=='')
			s[18]++;
		if(a[i]=='')
			s[19]++;
		if(a[i]=='')
			s[20]++;
		if(a[i]=='')
			s[21]++;
		if(a[i]=='')
			s[22]++;
		if(a[i]=='')
			s[23]++;
		if(a[i]=='')
			s[24]++;
		if(a[i]=='')
			s[25]++;
	}
	if(s[0]!=0)
		printf("",s[0]);
	if(s[1]!=0)
		printf("",s[1]);
	if(s[2]!=0)
		printf("",s[2]);
	if(s[3]!=0)
		printf("",s[3]);
	if(s[4]!=0)
		printf("",s[4]);
	if(s[5]!=0)
		printf("",s[5]);
	if(s[6]!=0)
		printf("",s[6]);
	if(s[7]!=0)
		printf("",s[7]);
	if(s[8]!=0)
		printf("",s[8]);
	if(s[9]!=0)
		printf("",s[9]);
	if(s[10]!=0)
		printf("",s[10]);
	if(s[11]!=0)
		printf("",s[11]);
	if(s[12]!=0)
		printf("",s[12]);
	if(s[13]!=0)
		printf("",s[13]);
	if(s[14]!=0)
		printf("",s[14]);
	if(s[15]!=0)
		printf("",s[15]);
	if(s[16]!=0)
		printf("",s[16]);
	if(s[17]!=0)
		printf("",s[17]);
	if(s[18]!=0)
		printf("",s[18]);
	if(s[19]!=0)
		printf("",s[19]);
	if(s[20]!=0)
		printf("",s[20]);
	if(s[21]!=0)
		printf("",s[21]);
	if(s[22]!=0)
		printf("",s[22]);
	if(s[23]!=0)
		printf("",s[23]);
	if(s[24]!=0)
		printf("",s[24]);
	if(s[25]!=0)
		printf("",s[25]);
	if(s[0]==0&&s[1]==0&&s[2]==0&&s[3]==0&&s[4]==0&&s[5]==0&&s[6]==0&&s[7]==0&&s[8]==0&&s[9]==0&&s[10]==0&&s[11]==0&&s[12]==0&&s[13]==0&&s[14]==0&&s[15]==0&&s[16]==0&&s[17]==0&&s[18]==0&&s[19]==0&&s[20]==0&&s[21]==0&&s[22]==0&&s[23]==0&&s[24]==0&&s[25]==0)
		printf("");
	return 0;
}



1000369
if(a[s-1]<b[s-1])
                                                                                  {
                                                                                       if(a[s-1]<b[0])
                                                                                       {
                                                                                       q++;
                                                                                       }
                                                                                       for(i=0;i<s-1;i++)
                                                                                       b[i]=b[i+1];
                                                                                       
                                                                                       }
                                                                                       else
                                                                                       {
                                                                                           if(a[0]>b[0])
                                                                                           {
                                                                                                        p++;
                                                                                                        for(i=0;i<s-1;i++)
                                                                                                        {
                                                                                                                          b[i]=b[i+1];
                                                                                                                          a[i]=a[i+1];
                                                                                                                          }
                                                                                                                          }
                                                                                                                          else
                                                                                                                          {
                                                                                                                              if(a[s-1]<b[0])
                                                                                                                              q++;
                                                                                                                              for(i=0;i<s-1;i++)
                                                                                                                              b[i]=b[i+1];
                                                                                                                              }
                                                                                                                              }
                                                                                                                              s--;
                                                                                                                              }
                                                                                                                              
                                                                                                                              printf("",200*p-200*q);
                                                                                                                              p=0;
                                                                                                                              q=0;
                                                                                                                              }
                                                                                                                              }
                                                                                                                         
                                                                                                                              }
                                                                                       
                                                                                       
                                                                       
                                        

1000370
main()
{
    int i,j,n;
    cin>>n; 
    char a[110][110];
    for(i=0;i<n;i++)
    {
                    for(j=0;j<n;j++)
                    {
                                    cin>>a[i][j];
                    }
    }
    int d,m;
    cin>>m;
    for(d=1;d<m;d++)
    {
                     int b[110][110];
                     {
                         for(i=0;i<n;i++)
                         {
                                         for(j=0;j<n;j++)
                                         {
                                                         b[i][j]=0;
                                         }
                         }
                     }
                     for(i=0;i<n;i++)
                     {
                                     for(j=0;j<n;j++)
                                     {
                                                     if(a[i][j]=='')
                                                     {
                                                                    if(a[i+1][j]=='' && i<n)
                                                                    {
                                                                                      b[i+1][j]=1;
                                                                    } 
                                                                    if(a[i-1][j]==''&& i>0)
                                                                    {
                                                                                      b[i-1][j]=1;
                                                                    } 
                                                                    if(a[i][j+1]==''&& j<n)
                                                                    {
                                                                                      b[i][j+1]=1;
                                                                    } 
                                                                    if(a[i][j-1]=='' &&j>0)
                                                                    {
                                                                                      b[i][j-1]=1;
                                                                    } 
                                                     }
                                     }
                     }
                     for(i=0;i<n;i++)
                     {
                                     for(j=0;j<n;j++)
                                     {
                                                     if(b[i][j]==1)
                                                     {
                                                                   a[i][j]='';
                                                     }
                                     }
                     }
    }

    int count=0;
    for(i=0;i<n;i++)
    {
                    for(j=0;j<n;j++)
                    {
                                    if(a[i][j]=='')
                                    {
                                                    count++;
                                    }
                    }
    }
    cout<<count;
    return 0;
}


1000371
main()
{
    int i,j,n,sum,year,month1,month2,nor[13]={0,31,28,31,30,31,30,31,31,30,31,30,31}, run[13]={0,31,29,31,30,31,30,31,31,30,31,30,31};
    scanf("",&n);
    for(i=0;i<n;i++)
    {
                    sum=0;
                    scanf("",&year,&month1,&month2);
                    if((((year%4==0)&&(year%100!=0))||((year%4==0)&&(year%400==0)))&&(month1<month2))
                    {
                                                                          for(j=month1;j<month2;j++)
                                                                                                    sum+=run[j];
                    }
                    if((((year%4==0)&&(year%100!=0))||((year%4==0)&&(year%400==0)))&&(month1>month2))
                    {
                         for(j=month2;j<month1;j++)
                                                                                                    sum+=run[j];
                    }
                    if(((year%4==0)&&(year%400!=0))&&(month1<month2))
                    {
                         for(j=month1;j<month2;j++)
                                                                                                    sum+=nor[j];
                    }
                    if(((year%4==0)&&(year%400!=0))&&(month1>month2))
                    {
                        for(j=month2;j<month1;j++)
                                                                                                    sum+=nor[j];
                    }
                    if((year%4!=0)&&(month1<month2))
                    {
                         for(j=month1;j<month2;j++)
                                                                                                    sum+=nor[j];
                    }
                    if((year%4!=0)&&(month1>month2))
                    {
                        for(j=month2;j<month1;j++)
                                                                                                    sum+=nor[j];
                    }
                    if(sum%7==0)
                    printf("");
                    printf("");
    }                                
    return 0;
}
                   

1000372
main()
{
      for(;;)
      {
          int a[1050]={0},b[1050]={0};
          int i,j,k,t,h,m,w1=0,w2=0,w3=0;
          int n;
          scanf("",&n);
          if(n==0)
          break;
          else
          {
              for(i=1;i<=n;i++)
              scanf("",&a[i]);
              for(i=1;i<=n;i++)
              scanf("",&b[i]);
              for(i=1;i<=n-1;i++)
              {
                  for(j=i+1;j<=n;j++)
                  {
                      if(a[i]>a[j])
                      t=a[i],a[i]=a[j],a[j]=t;
                      if(b[i]>b[j])
                      t=b[i],b[i]=b[j],b[j]=t;
                  }
              }
              for(i=1,h=n,m=n,j=1;i<=m;)
              {    
                  for(;j<=h;)
                  {
                      if(a[i]>b[j])
                      {
                          w1++;
                          j++;
                          i++;
                          break;
                      }
                      if(a[i]<b[j])
                      {
                          w2++;
                          i++;
                          h=h-1;
                          break;
                      }
                      if(a[i]==b[j])
                      {
                          if(a[m]>b[h])
                          {
                              w1++;
                              m=m-1,h=h-1;
                              break;
                          }
                          if(a[m]<b[h])
                          {
                              w2++;
                              h=h-1;
                              i++;
                              break;
                          }
                          if(a[m]==b[h])
                          {
                              if(a[i]==b[h])
                              {
                                  i++;
                                  h=h-1;
                                  break;
                              }
                              if(a[i]<b[h])
                              {
                                  w2++;
                                  i++;
                                  h=h-1;
                                  break;
                              }
                          }
                      }                                 
                  }
              }
              w3=200*w1-200*w2;
              printf("",w3);
          }
      }
      }

1000373
main()
{
     int i;                       
     char chnum[20];        
     int num[20],resnum[20];      
     int n;
     long sum=0;                     
     int a,b;                             
     
      
     cin>>a>>chnum>>b;
     n=strlen(chnum);
     for(i=0;i<20;i++)
           {
                  if(chnum[i]==''){num[i]=10;continue;}  if(chnum[i]==''){num[i]=10;continue;}
                  if(chnum[i]==''){num[i]=11;continue;}  if(chnum[i]==''){num[i]=11;continue;}
                  if(chnum[i]==''){num[i]=12;continue;}  if(chnum[i]==''){num[i]=12;continue;}
                  if(chnum[i]==''){num[i]=13;continue;}  if(chnum[i]==''){num[i]=13;continue;}
                  if(chnum[i]==''){num[i]=14;continue;}  if(chnum[i]==''){num[i]=14;continue;}
                  if(chnum[i]==''){num[i]=15;continue;}  if(chnum[i]==''){num[i]=15;continue;}
                  if(chnum[i]==''){num[i]=16;continue;}  if(chnum[i]==''){num[i]=16;continue;}
                  if(chnum[i]==''){num[i]=17;continue;}  if(chnum[i]==''){num[i]=17;continue;}
                  if(chnum[i]==''){num[i]=18;continue;}  if(chnum[i]==''){num[i]=18;continue;}
                  if(chnum[i]==''){num[i]=19;continue;}  if(chnum[i]==''){num[i]=19;continue;}
                  if(chnum[i]==''){num[i]=20;continue;}  if(chnum[i]==''){num[i]=20;continue;}
                  if(chnum[i]==''){num[i]=21;continue;}  if(chnum[i]==''){num[i]=21;continue;}
                  if(chnum[i]==''){num[i]=22;continue;}  if(chnum[i]==''){num[i]=22;continue;}
                  if(chnum[i]==''){num[i]=23;continue;}  if(chnum[i]==''){num[i]=23;continue;}
                  if(chnum[i]==''){num[i]=24;continue;}  if(chnum[i]==''){num[i]=24;continue;}
                  if(chnum[i]==''){num[i]=25;continue;}  if(chnum[i]==''){num[i]=25;continue;}
                  if(chnum[i]==''){num[i]=26;continue;}  if(chnum[i]==''){num[i]=26;continue;}
                  if(chnum[i]==''){num[i]=27;continue;}  if(chnum[i]==''){num[i]=27;continue;}
                  if(chnum[i]==''){num[i]=28;continue;}  if(chnum[i]==''){num[i]=28;continue;}
                  if(chnum[i]==''){num[i]=29;continue;}  if(chnum[i]==''){num[i]=30;continue;}
                  if(chnum[i]==''){num[i]=31;continue;}  if(chnum[i]==''){num[i]=31;continue;}
                  if(chnum[i]==''){num[i]=32;continue;}  if(chnum[i]==''){num[i]=32;continue;}
                  if(chnum[i]==''){num[i]=33;continue;}  if(chnum[i]==''){num[i]=33;continue;}
                  if(chnum[i]==''){num[i]=34;continue;}  if(chnum[i]==''){num[i]=34;continue;}
                  if(chnum[i]==''){num[i]=35;continue;}  if(chnum[i]==''){num[i]=35;continue;}                  
                  num[i]=(int)chnum[i]-48;
           }
     
     
     for(i=0;i<n;i++)
            sum+=num[i]*pow((double)a,(double)(n-i-1));
     
     
     i=19;
     while(sum>=b)
       {resnum[i]=sum%b;
        sum=sum/b;
        i--;
       };
     resnum[i]=sum; 
     
     
     for(;i<20;i++)
       {if(resnum[i]==10){cout<<"";continue;}
        if(resnum[i]==11){cout<<"";continue;}
        if(resnum[i]==12){cout<<"";continue;}
        if(resnum[i]==13){cout<<"";continue;}
        if(resnum[i]==14){cout<<"";continue;}
        if(resnum[i]==15){cout<<"";continue;}
        if(resnum[i]==16){cout<<"";continue;}
        if(resnum[i]==17){cout<<"";continue;}
        if(resnum[i]==18){cout<<"";continue;}
        if(resnum[i]==19){cout<<"";continue;}
        if(resnum[i]==20){cout<<"";continue;}
        if(resnum[i]==21){cout<<"";continue;}
        if(resnum[i]==22){cout<<"";continue;}
        if(resnum[i]==23){cout<<"";continue;}
        if(resnum[i]==24){cout<<"";continue;}
        if(resnum[i]==25){cout<<"";continue;}
        if(resnum[i]==26){cout<<"";continue;}
        if(resnum[i]==27){cout<<"";continue;}
        if(resnum[i]==28){cout<<"";continue;}
        if(resnum[i]==29){cout<<"";continue;}
        if(resnum[i]==30){cout<<"";continue;}
        if(resnum[i]==31){cout<<"";continue;}
        if(resnum[i]==32){cout<<"";continue;}
        if(resnum[i]==33){cout<<"";continue;}
        if(resnum[i]==34){cout<<"";continue;}
        if(resnum[i]==35){cout<<"";continue;}
        cout<<resnum[i];}     
     
     
     return 0;   
}


1000374
main()
{
    int i,j,k,n,min,sum=0,num=0;
    int a[101][101];
    int minr[101];
    int minc[101];
    cin>>n;

    for(k=1,num=0,sum=0;k<=n;k++)
    {

    	for(i=1;i<=n;i++)            
    	{
    		for(j=1;j<=n;j++)
    		{
    			cin>>a[i][j];
    		}
    	}
        num=0;
        sum=0;
    	while(num<n-1)
    	{
    		memset(minr,0,101*4);
    		memset(minc,0,101*4);
    		for(i=1;i<=n-num;i++)                            
    		{ 											
    			min=a[i][1];
    			for(j=1;j<=n-num;j++)
    			{
    				if(a[i][j]<min)
        			min=a[i][j];
    			}
    			minr[i]=min;
    		}

    		for(i=1;i<=n-num;i++)                           
    		{
    			for(j=1;j<=n-num;j++)
    			{
    				a[i][j]=a[i][j]-minr[i];
    			}
    		}

    		for(j=1;j<=n-num;j++)
                { 											
                	min=a[1][j];
                	for(i=1;i<=n-num;i++)
                	{
                		if(a[i][j]<min)
                			min=a[i][j];
                	}
                	minc[j]=min;
                }

           for(j=1;j<=n-num;j++)                          
                {
                	for(i=1;i<=n-num;i++)
                	{
                		a[i][j]=a[i][j]-minc[j];
                	}
                }

                sum=sum+a[2][2];
                

                
                for(i=1;i<=n-num;i++)                        
                {
                	for(j=2;j<=n-num-1;j++)
                	{
                		a[i][j]=a[i][j+1];
                	}
                }

                for(j=1;j<=n-num-1;j++)
                {
                	for(i=2;i<=n-num-1;i++)
                	{
                		a[i][j]=a[i+1][j];
                	}
                }

                num++;                                       
    	}
     cout<<sum<<endl;
    }

	return 0;
}

1000375

main()
{  int n,n1=0,n2=0,i,j,m,at;
   char id[10];
   struct patient *head1,*head2,*p11,*p12,*p21,*p22,*t,*q;
   scanf("",&n);
   head1=NULL;
   head2=NULL;
   for(i=0;i<n;i++)
   {
     scanf("",id,&at);
     if(at>=60)
     {  if(head1==NULL)
	{
         head1=(struct patient*)malloc(sizeof(struct patient));
	 strcpy(head1->id,id);
	 head1->age=at;
         head1->next=NULL;
	}
	else
	{ for(t=head1,q=t;t!=NULL;q=t,t=t->next)
	  {  if(t->age<at&&t!=head1)
	     {

	      p11=(struct patient *)malloc(sizeof(struct patient));
	      p11->age=at;
	      strcpy(p11->id,id);
              q->next=p11;
	      p11->next=t;
              break;
	     }
	     if(t->age<at&&t==head1)
	     {
              p11=(struct patient *)malloc(sizeof(struct patient));
	      p11->age=at;
	      strcpy(p11->id,id);
              p11->next=head1;
	      head1=p11;
	      break;
	     }
	    

	  }
	  if(t==NULL)
          {
            p11=(struct patient *)malloc(sizeof(struct patient));
	    p11->age=at;
	    strcpy(p11->id,id);
            q->next=p11;
            p11->next=NULL;
          }


	}
     }

     if(at<60)
     {  if(head2==NULL)
	{
         head2=(struct patient*)malloc(sizeof(struct patient));
	 strcpy(head2->id,id);
	 head2->age=at;
	 head2->next=NULL;
	 p22=head2;
	}
        else
       {
          p21=(struct patient *)malloc(sizeof(struct patient));
          p21->age=at;
	  strcpy(p21->id,id);
          p22->next=p21;
          p21->next=NULL;
          p22=p21;
       }
     }



   }

   for(t=head1,q=t;t!=NULL;q=t,t=t->next);

    q->next=head2;
   for(t=head1;t->next!=NULL;t=t->next)
   { printf("",t->id);

   }
   printf("",t->id);
}


1000378
main()
{
      int a[5][5];
      int i,j,z,m,x,y;
      int count=0,b;
      for (i=0;i<5;i++)
      {
          for (j=0;j<5;j++)
          {
              scanf("",&a[i][j]);
          }
      }
      int s;
      for (i=0;i<5;i++)
      {
          for(j=0;j<5;j++)
          {
               s=a[i][0];
               for(z=0;z<5;z++)
               { 
                   if(z==j)
                   {
                           continue;
                   }
                   else
                   {
                       if (a[i][z]>s)
                       {
                                     s=a[i][z];
                       }
                   }
               }
               if (a[i][j]>=s)
               {
                              s=a[0][j];
                              for(m=0;m<5;m++)
                              {
                                       if(m==i)
                                       {
                                               continue;
                                       }
                                       else
                                       {
                                           if (a[m][j]<s)
                                           {
                                                         s=a[m][j];
                                           }
                                       }
                              }
                              if (a[i][j]<=s)
                              {
                                          x=i+1;
                                          y=j+1;
                                          count++;
                                          b=a[i][j];
                              }  
               }
          }
      }
      if(count==0)
      {
                  printf("");
      }
      else
      {
          printf("",x,y,b);
      }
      getchar();getchar();getchar();getchar();getchar();
}
                                       
         

1000379
main()
{
	int syear,smonth,sday,eyear,emonth,eday,i;
	int sum=0;
	cin>>syear>>smonth>>sday
		>>eyear>>emonth>>eday;
	if (smonth>2)                               
	{
		switch (smonth)
		{
		case 3:  sum=sum+31+30+31+30+31+31+30+31+30+31-sday;break;
		case 4:  sum=sum+31+30+31+30+31+31+30+31+30-sday;break;
		case 5:  sum=sum+31+30+31+30+31+31+30+31-sday;break;
		case 6:  sum=sum+31+30+31+30+31+31+30-sday;break;
		case 7:  sum=sum+31+30+31+30+31+31-sday;break;
		case 8:  sum=sum+31+30+31+30+31-sday;break;
		case 9:  sum=sum+31+30+31+30-sday;break;
		case 10: sum=sum+31+30+31-sday;break;
		case 11: sum=sum+31+30-sday;break;
		case 12: sum=sum+31-sday;            
		}
	}
	if ((syear%4==0&&syear%100!=0)||(syear%400==0))    
	{
        switch (smonth)
		{
		case 1: sum=sum+31+30+31+30+31+31+30+31+30+31+29+31-sday;break;
		case 2: sum=sum+31+30+31+30+31+31+30+31+30+31+29-sday;
		}
	}
	else 
	{
        switch (smonth)
		{
		case 1: sum=sum+31+30+31+30+31+31+30+31+30+31+28+31-sday;break;
		case 2: sum=sum+31+30+31+30+31+31+30+31+30+31+28-sday;
		}
	}
	for (i=syear+1;i<=eyear-1;i++)             
	{
		if ((i%4==0&&i%100!=0)||(i%400==0))
			sum=sum+366;
		else 
			sum=sum+365;
	}
	if (emonth==1)
	{
		sum=sum+eday;
	}
	if (emonth==2)                   
	{
		sum=sum+31+eday;
	}
	if ((eyear%4==0&&eyear%100!=0)||(eyear%400==0))
	{
	    switch (emonth)
		{
		case 12: sum=sum+31+29+31+30+31+30+31+31+30+31+30+eday;break;
		case 11: sum=sum+31+29+31+30+31+30+31+31+30+31+eday;break;
		case 10: sum=sum+31+29+31+30+31+30+31+31+30+eday;break;
		case 9:  sum=sum+31+29+31+30+31+30+31+31+eday;break;
		case 8:  sum=sum+31+29+31+30+31+30+31+eday;break;
		case 7:  sum=sum+31+29+31+30+31+30+eday;break;
		case 6:  sum=sum+31+29+31+30+31+eday;break;
		case 5:  sum=sum+31+29+31+30+eday;break;
		case 4:  sum=sum+31+29+31+sday;break;
		case 3:  sum=sum+31+29+sday;
		}
	}
	else 
	{
        switch (emonth)
		{
		case 12: sum=sum+31+28+31+30+31+30+31+31+30+31+30+eday;break;
		case 11: sum=sum+31+28+31+30+31+30+31+31+30+31+eday;break;
		case 10: sum=sum+31+28+31+30+31+30+31+31+30+eday;break;
		case 9:  sum=sum+31+28+31+30+31+30+31+31+eday;break;
		case 8:  sum=sum+31+28+31+30+31+30+31+eday;break;
		case 7:  sum=sum+31+28+31+30+31+30+eday;break;
		case 6:  sum=sum+31+28+31+30+31+eday;break;
		case 5:  sum=sum+31+28+31+30+eday;break;
		case 4:  sum=sum+31+28+31+eday;break;
		case 3:  sum=sum+31+28+eday;
		}
	}
	if (syear==eyear)                  
	{
		if ((eyear%4==0&&eyear%100!=0)||(eyear%400==0))
			sum=sum-366;
		else 
			sum=sum-365;
	}              
	cout<<sum<<endl;
	return 0;
}

1000380
main() {
	int z,q,s,l,x;
	for(z=10;z<=50;z=z+10)
		{for(q=10;q<=50;q=q+10)
			{for(s=10;s<=50;s=s+10)
				{for(l=10;l<=50;l=l+10)
				{x=(((z+q)==(s+l))+((z+l)>(s+q))+((z+s)<q));
				if(x==3) {
				if((z>q)&&(q>s)&&(s>l))cout <<""<<""<<z<<endl <<""<<""<<q<<endl<<""<<""<<s<<endl<<""<<""<<l;
				if((z>q)&&(q>l)&&(l>s))cout <<""<<""<<z<<endl <<""<<""<<q<<endl<<""<<""<<l<<endl<<""<<""<<s;
				if((z>s)&&(s>l)&&(l>q))cout <<""<<""<<z<<endl <<""<<""<<s<<endl<<""<<""<<l<<endl<<""<<""<<q;
				if((z>s)&&(s>q)&&(q>l))cout <<""<<""<<z<<endl <<""<<""<<s<<endl<<""<<""<<q<<endl<<""<<""<<l;
				if((z>l)&&(l>s)&&(s>q))cout <<""<<""<<z<<endl <<""<<""<<l<<endl<<""<<""<<s<<endl<<""<<""<<q;
				if((z>l)&&(l>q)&&(q>s))cout <<""<<""<<z<<endl <<""<<""<<l<<endl<<""<<""<<q<<endl<<""<<""<<s;
				if((q>z)&&(z>s)&&(s>l))cout <<""<<""<<q<<endl <<""<<""<<z<<endl<<""<<""<<s<<endl<<""<<""<<l;
				if((q>z)&&(z>l)&&(l>s))cout <<""<<""<<q<<endl <<""<<""<<z<<endl<<""<<""<<l<<endl<<""<<""<<s;
				if((q>s)&&(s>z)&&(z>l))cout <<""<<""<<q<<endl <<""<<""<<s<<endl<<""<<""<<z<<endl<<""<<""<<l;
				if((q>s)&&(s>l)&&(l>z))cout <<""<<""<<q<<endl <<""<<""<<s<<endl<<""<<""<<l<<endl<<""<<""<<z;
				if((q>l)&&(l>z)&&(z>s))cout <<""<<""<<q<<endl <<""<<""<<l<<endl<<""<<""<<z<<endl<<""<<""<<s;
				if((q>l)&&(l>s)&&(s>z))cout <<""<<""<<q<<endl <<""<<""<<l<<endl<<""<<""<<s<<endl<<""<<""<<z;
				if((s>z)&&(z>q)&&(q>l))cout <<""<<""<<s<<endl <<""<<""<<z<<endl<<""<<""<<q<<endl<<""<<""<<l;
				if((s>z)&&(z>l)&&(l>q))cout <<""<<""<<s<<endl <<""<<""<<z<<endl<<""<<""<<l<<endl<<""<<""<<q;
				if((s>q)&&(q>z)&&(z>l))cout <<""<<""<<s<<endl <<""<<""<<q<<endl<<""<<""<<z<<endl<<""<<""<<l;
				if((s>q)&&(q>l)&&(l>z))cout <<""<<""<<s<<endl <<""<<""<<q<<endl<<""<<""<<l<<endl<<""<<""<<z;
				if((s>l)&&(l>z)&&(z>q))cout <<""<<""<<s<<endl <<""<<""<<l<<endl<<""<<""<<z<<endl<<""<<""<<q;
				if((s>l)&&(l>q)&&(q>z))cout <<""<<""<<s<<endl <<""<<""<<l<<endl<<""<<""<<q<<endl<<""<<""<<z;
				if((l>z)&&(z>q)&&(q>s))cout <<""<<""<<l<<endl <<""<<""<<z<<endl<<""<<""<<q<<endl<<""<<""<<s;
				if((l>z)&&(z>q)&&(s>q))cout <<""<<""<<l<<endl <<""<<""<<z<<endl<<""<<""<<s<<endl<<""<<""<<q;
				if((l>q)&&(q>z)&&(z>s))cout <<""<<""<<l<<endl <<""<<""<<q<<endl<<""<<""<<z<<endl<<""<<""<<s;
				if((l>q)&&(q>s)&&(s>z))cout <<""<<""<<l<<endl <<""<<""<<q<<endl<<""<<""<<s<<endl<<""<<""<<z;
				if((l>s)&&(s>z)&&(z>q))cout <<""<<""<<l<<endl <<""<<""<<s<<endl<<""<<""<<z<<endl<<""<<""<<q;
				if((l>s)&&(s>q)&&(q>z))cout <<""<<""<<l<<endl <<""<<""<<s<<endl<<""<<""<<q<<endl<<""<<""<<z;
				return 0;}}}}}
}

1000381
main()
{
	int p,q,r,i,j,k;
	int a[101][101],b[101][101],c[101][101];

	cin>>p>>q;
	for (i=1;i<=p;i++)
	{
		for (j=1;j<=q;j++)
		{
			cin>>a[i-1][j-1];
		}
	}
	cin>>q>>r;
	for (i=1;i<=q;i++)
	{
		for (j=1;j<=r;j++)
		{
			cin>>b[i-1][j-1];
		}
	}


	for (i=0;i<=100;i++)
	{
		for (j=0;j<=100;j++)
		{
			c[i][j]=0;
		}
	}

	for (i=0;i<=p-1;i++)
	{
		for (j=0;j<=r-1;j++)
		{
			for (k=0;k<=q;k++)
			{
				c[i][j]=c[i][j]+a[i][k]*b[k][j];
			}
		}
	}

	for (i=0;i<=p-1;i++)
	{
		for (j=0;j<=r-1;j++)
		{
			if (j!=(r-1))  cout<<c[i][j]<<"";
			else  cout<<c[i][j];
		}
		cout<<endl;
	}

	return 0;
}

1000382
bubble(int a[],int n)
{
     int pass,hold,j;
     for(pass=1;pass<=n-1;pass++)
     for(j=0;j<=n-2;j++)
     if(a[j]<a[j+1])
     {
              hold=a[j];
              a[j]=a[j+1];
              a[j+1]=hold;
     }
}   
compare(const void*a1,const void*a2)
{
    int i;
    return (*(int*)a2-*(int*)a1);
} 
main()
{
      int I;
      for(I=1;;I++)
      {
          int *a,*b,i,n,as,ae,bs,be,money1=0,money2=0;
          
          scanf("",&n);
          if(n==0)
          break;
          else
          {
              a=(int*)malloc(n*sizeof(int));
              b=(int*)malloc(n*sizeof(int));
              for(i=0;i<=n-1;i++)
              scanf("",&a[i]);
              for(i=0;i<=n-1;i++)
              scanf("",&b[i]);
              bubble(a,n);
              qsort(b,n,sizeof(b[0]),compare);
              as=bs=0;
              ae=be=n-1;
              for(;as<=ae;)
              {
                           if(a[ae]>b[be])
                           {
                                 money1++;
                                 ae--;
                                 be--;
                           }
                           if(a[ae]<b[be])
                           {
                                 money2++;
                                 ae--;
                                 bs++;
                           }
                           if(a[as]>b[bs])
                           {
                                money1++;
                                as++;
                                bs++;
                           }
                           if(a[as]<b[bs])
                           {
                                money2++;
                                ae--;
                                bs++;
                           }
                           if(a[ae]<b[bs])
                           {
                                money2++;
                                ae--;
                                bs++;
                           }
                           if(a[ae]>b[bs])
                           {
                                money1++;
                                ae--;
                                bs++;
                           }
                           else 
                           {
                                ae--;
                                as++;
                           }
              }
              printf("",200*(money1-money2));
          }
      }                      
}
                           
                                         
               


1000383
main()
{
	int n, m;
	cin >> n;
	char a[101][101];
	int i, j;
	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			cin >> a[i][j];
		}
	}
	cin >> m;
	int k;
	int sum = 0;
	for (k =0; k < m - 1; k++)
	{
		if (a[0][0] == '')
		{
			if (a[0][1] == '')
				a[0][1] = '';
			if (a[1][0] == '')
				a[1][0] = '';
		}	
		if (a[0][n - 1] == '')
		{
			if (a[0][n - 2] == '')
				a[0][n - 2] = '';
			if (a[1][n - 1] == '')
				a[1][n - 1] = '';
		}
		if (a[n - 1][0] == '')
		{
			if (a[n - 1][1] == '')
				a[n - 1][1] = '';
			if (a[n - 2][0] == '')
				a[n - 2][0] = '';
		}		
		if (a[n - 1][n - 1] == '')
		{
			if (a[n - 1][n - 2] == '')
				a[n - 1][n - 2] = '';
			if (a[n - 2][n - 1] == '')
				a[n - 2][n - 1] = '';
		}
		for (i = 0,j = 1; j < n - 1; j++)
		{
			if ((a[0][j] == '') && (a[1][j] == ''))
				a[1][j] = '';
			if (a[0][j] == '')
			{
				if (a[0][j - 1] == '')
					a[0][j - 1] = '';
				if (a[0][j + 1] == '')
					a[0][j + 1] = '';
			}
		}
		for (i = n - 1, j = 1; j < n - 1; j++)
		{
			if ((a[n - 1][j] == '') && (a[n - 2][j] == ''))
				a[n - 2][j] = '';
			if (a[n - 1][j] == '')
			{
				if (a[n - 1][ j - 1] == '')
					a[n - 1][j - 1] = '';
				if (a[n - 1][j + 1] == '')
					a[n - 1][j + 1] = '';
			}
		}
		for (j = 0, i = 1; i < n- 1; i++)
		{
			if ((a[i][0] == '') && (a[i][1] == ''))
				a[i][1] = '';
			if (a[i][0] == '')
			{
				if (a[i - 1][0] == '')
					a[i - 1][0] = '';
				if (a[i + 1][0] == '')
					a[i + 1][0] = '';
			}
		}
		for (j = n - 1,i = 1; i < n -1; i++)
		{
			if ((a[i][n - 1] == '') && (a[i][n - 2] == ''))
				a[i][ n - 2] ='';
			if (a[i][n - 1] == '')
			{
				if (a[i + 1][ n -1] == '')
					a[i + 1][n - 1] = '';
				if (a[i - 1][n - 1] == '')
					a[i-1][n -1]= '';
			}
		}
		for (i = 1; i < n - 1; i++)
		{
			for (j= 1; j < n - 1; j++)
			{
				if (a[i][j] == '')
				{
					if (a[i][j - 1] == '') 
						a[i][j - 1] = '';
					if (a[i][j + 1] == '') 
						a[i][j + 1] = '';
					if (a[i - 1][j] == '') 
						a[i - 1][j] = '';
					if (a[i + 1][j] == '') 
						a[i + 1][j] = '';
				}
			}
		}
		for (i = 0; i < n; i++)
		{
			for (j = 0; j < n; j++)
			{
				if (a[i][j] == '')
				{
					a[i][j] = '';
				}
			}
		}
	}
	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			if (a[i][j] == '')
				sum = sum + 1;
		}
	}
	cout << sum;
	return 0;
}

1000384
main()
{
    int m,n,i,j,juzhen[20][20];
    cin>>m>>n;
    for(i=0;i<m;i++)
    {
                    for(j=0;j<n;j++)
                    {
                                    cin>>juzhen[i][j];
                                    cout<<endl;
                    }
    }
    for(i=0;i<m;i++)
    {
                    for(j=0;j<n;j++)
                    {
                                    if(i==0&&j==0)
                                    {
                                                  if(juzhen[i][j]>=juzhen[i+1][j]&&juzhen[i][j]>=juzhen[i][j+1])
                                                  cout<<i<<""<<j<<endl;
                                    }
                                    if(i==0&&j==n-1)
                                    {
                                         if(juzhen[i][j]>=juzhen[i][j-1] && juzhen[i][j]>=juzhen[i+1][j])
                                         cout<<i<<""<<j<<endl;
                                    }
                                    if(i==m-1 && j==0)
                                    {
                                                  if(juzhen[i][j]>=juzhen[i-1][j]&&juzhen[i][j]>=juzhen[i][j+1])
                                                  cout<<i<<""<<j<<endl;
                                    }
                                    if(i==m-1&&j==n-1)
                                    {
                                         if(juzhen[i][j]>=juzhen[i][j-1] && juzhen[i][j]>=juzhen[i-1][j])
                                         cout<<i<<""<<j<<endl;
                                    }
                                    if(i==0)
                                    {
                                         if(juzhen[i][j]>=juzhen[i][j-1] && juzhen[i][j]>=juzhen[i][j+1] && juzhen[i][j]>=juzhen[i+1][j])
                                         cout<<i<<""<<j<<endl;  
                                    }
                                    if(i==m-1)
                                    {
                                         if(juzhen[i][j]>=juzhen[i][j-1] && juzhen[i][j]>=juzhen[i][j+1] && juzhen[i][j]>=juzhen[i-1][j])
                                         cout<<i<<""<<j<<endl;  
                                    }
                                    if(j==0)
                                    {
                                         if(juzhen[i][j]>=juzhen[i][j+1] && juzhen[i][j]>=juzhen[i-1][j] && juzhen[i][j]>=juzhen[i+1][j])
                                         cout<<i<<""<<j<<endl;
                                    }  
                                    if(j==n-1)
                                    {
                                         if(juzhen[i][j]>=juzhen[i][j-1] && juzhen[i][j]>=juzhen[i-1][j] && juzhen[i][j]>=juzhen[i+1][j])
                                         cout<<i<<""<<j<<endl;
                                    }
                                    else
                                    {
                                        if(juzhen[i][j]>=juzhen[i][j-1] &&juzhen[i][j]>=juzhen[i][j+1]&& juzhen[i][j]>=juzhen[i-1][j] && juzhen[i][j]>=juzhen[i+1][j])
                                         cout<<i<<""<<j<<endl;
                                    }  
                    }
    }
    cin.get();cin.get();cin.get();cin.get();cin.get();cin.get();
return 0;
}

1000385
main()
{
	int i, j, n, a[100][100] = {0}, d, m = 0;                        
	char  b[100][100];                                                 
	cin >> n;
	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)                                          
		{
			cin >> b[i][j];                                               
			if (b[i][j] == '')
				a[i][j] = 1;
		}
	}
	cin >> d;                                                    
	for (int k = 1; k < d; k++)
	{
		for (i = 0; i < n; i ++)
		{
			for (j = 0; j < n; j ++)
			{
				if (b[i][j] == '')                                
				{
					if (j == 0)                                   
					{
						if (i == 0)                                  
						{
							a[i + 1][j] = 1;
							a[i][j + 1] = 1;
						}
						if (i == n - 1)                            
						{
							a[i - 1][j] = 1;
							a[i][j + 1] = 1;
						}
						if (i != 0 && i != n - 1)                
						{
							a[i - 1][j] = 1;
							a[i][j + 1] = 1;
							a[i + 1][j] = 1;
						}
					}
					if (j == n - 1)                              
					{
						if (i == 0)                                
						{
							a[i + 1][j] = 1;
							a[i][j - 1] = 1;
						}
						if (i == n - 1)                             
						{
							a[i - 1][j] = 1;
							a[i][j - 1] = 1;
						}
						if (i != 0 && i != n - 1)                   
						{
							a[i - 1][j] = 1;
							a[i][j - 1] = 1;
							a[i + 1][j] = 1;
						}
					}
					if (j != 0 && j != n - 1)                      
					{
						if (i == 0)                                    
						{
							a[i + 1][j] = 1;
							a[i][j - 1] = 1;
							a[i][j + 1] = 1;
						}
						if (i == n - 1)                            
						{
							a[i - 1][j] = 1;
							a[i][j - 1] = 1;
							a[i][j + 1] = 1;
						}
						if (i != 0 && i != n - 1)                       
						{
							a[i - 1][j] = 1;
							a[i][j - 1] = 1;
							a[i + 1][j] = 1;
							a[i][j + 1] = 1;
						}
					}
				}
			}
		}
		for (i = 0; i < n; i++)                                  
		{
			for (j = 0; j < n; j ++)
			{
				if (a[i][j] == 1)
				{
					if (b[i][j] == '')                            
						a[i][j] = 0;
					else 
						b[i][j] = '';
				}
			}
		}
	}
	for (i = 0; i < n; i++)                                  
	{
		for (j = 0; j < n; j++)
		{
			m += a[i][j];
		}
	}
	cout << m;
	return 0;
	}
	






						
					



	

1000386
main()
{
	char a[100][100];
	int n, m, i, j, x, y, d,count=0;
	int b[100][100];
	cin >> n;
	for(i=0;i<n;i++)
		for(j=0;j<n;j++)
			cin>>a[i][j];
	cin>>m;
	for(d=2;d<=m;d++)
	{
		for(x=0;x<n;x++)
			for(y=0;y<n;y++)
				b[x][y]=0;
		if(a[0][0]==''&&b[0][0]==0)
		{
			if(a[0][1]==''&&b[0][1]==0)
			{
				a[0][1]='';
				b[0][1]=1;
			}
			if(a[1][0]==''&&b[1][0]==0)
			{
				a[1][0]='';
				b[1][0]=1;
			}
		}
		if(a[0][n-1]==''&&b[0][n-1]==0)
		{
			if(a[0][n-2]==''&&b[0][n-2]==0)
			{
				a[0][n-2]='';
				b[0][n-2]=1;
			}
			if(a[1][n-1]==''&&b[1][n-1]==0)
			{
				a[1][n-1]='';
				b[1][n-1]=1;
			}
		}
		if(a[n-1][0]==''&&b[n-1][0]==0)
		{
			if(a[n-1][1]==''&&b[n-1][1]==0)
			{
				a[n-1][1]='';
				b[n-1][1]=1;
			}
			if(a[n-2][0]==''&&b[n-2][0]==0)
			{
				a[n-2][0]='';
				b[n-2][0]=1;
			}
		}
		if(a[n-1][n-1]==''&&b[n-1][n-1]==0)
		{
			if(a[n-1][n-2]==''&&b[n-1][n-2]==0)
			{
				a[n-1][n-2]=''&&b[n-1][n-2]==0;
				b[n-1][n-2]=1;
			}
			if(a[n-2][n-1]==''&&b[n-2][n-1]==0)
			{
				a[n-2][n-1]='';
				b[n-2][n-1]=1;
			}
		}
		for(j=1;j<n-1;j++)
		{
			if(a[0][j]==''&&b[0][j]==0)
			{
				if(a[0][j+1]==''&&b[0][j+1]==0)
				{
					a[0][j+1]='';
					b[0][j+1]=1;
				}
				if(a[0][j-1]==''&&b[0][j-1]==0)
				{
					a[0][j-1]='';
					b[0][j-1]=1;
				}
				if(a[1][j]==''&&b[1][j]==0)
				{
					a[1][j]='';
					b[1][j]=1;
				}
			}
			if(a[n-1][j]==''&&b[n-1][j]==0)
			{
				if(a[n-1][j+1]==''&&b[n-1][j+1]==0)
				{
					a[n-1][j+1]='';
					b[n-1][j+1]=1;
				}
				if(a[n-1][j-1]==''&&b[n-1][j-1]==0)
				{
					a[n-1][j-1]='';
					b[n-1][j-1]=1;
				}
				if(a[n-2][j]==''&&b[n-2][j]==0)
				{
					a[n-2][j]='';
					b[n-2][j]=1;
				}
			}
		}
		for(i=1;i<n-1;i++)
		{
			if(a[i][0]==''&&b[i][0]==0)
			{
				if(a[i+1][0]==''&&b[i+1][0]==0)
				{
					a[i+1][0]='';
					b[i+1][0]=1;
				}
				if(a[i-1][0]==''&&b[i-1][0]==0)
				{
					a[i-1][0]='';
					b[i-1][0]=1;
				}
				if(a[i][1]==''&&b[i][1]==0)
				{
					a[i][1]='';
					b[i][1]=1;
				}
			}
			if(a[i][n-1]==''&&b[i][n-1]==0)
			{
				if(a[i+1][n-1]==''&&b[i+1][n-1]==0)
				{
					a[i+1][n-1]='';
					b[i+1][n-1]=1;
				}
				if(a[i-1][n-1]==''&&b[i-1][n-1]==0)
				{
					a[i-1][n-1]='';
					b[i-1][n-1]=1;
				}
				if(a[i][n-2]==''&&b[i][n-2]==0)
				{
					a[i][n-2]='';
					b[i][n-2]=1;
				}
			}
		}
		for(i=1;i<n-1;i++)
		{
			for(j=1;j<n-1;j++)
			{
				if(a[i][j]==''&&b[i][j]==0)
				{
					if(a[i+1][j]==''&&b[i+1][j]==0)
					{
						a[i+1][j]='';
						b[i+1][j]=1;
					}
					if(a[i-1][j]==''&&b[i-1][j]==0)
					{
						a[i-1][j]='';
						b[i-1][j]=1;
					}
					if(a[i][j+1]==''&&b[i][j+1]==0)
					{
						a[i][j+1]='';
						b[i][j+1]=1;
					}
					if(a[i][j-1]==''&&b[i][j-1]==0)
					{
						a[i][j-1]='';
						b[i][j-1]=1;
					}
				}
			}
		}
	}
	for(i=0;i<n;i++)
		for(j=0;j<n;j++)
			if(a[i][j]=='')
				count++;
	cout << count <<endl;
	return 0;
}


1000387
change2Dec(char * number, int len_number, int originBase) {

	int result = 0;
	
	for (int i=0; i<len_number; i++) {
		
		int numberBit = 0;
		if (number[i]>='' && number[i]<='') {
			numberBit = number[i]-'';
		}
		if (number[i]>='' && number[i]<='') {
			numberBit = number[i]-''+10;
		}
		else {
			numberBit = number[i]-''+10;
		}

		
		int position = len_number-i;

		
		int currentBitValue = numberBit;
		for (int j=1; j<position; j++) {
			currentBitValue *= originBase;
		}
		result += currentBitValue;
	}
	return result;       
} 


changeDec2NewBase(int decNumber, int newBase, char * newNumber) {
	
	int bitValue[100];                     
	int length=0;                          
	while (decNumber/newBase > 0) {
		bitValue[length++] = decNumber%newBase;         
		decNumber /= newBase;
	}
	bitValue[length++] = decNumber;                     

	
	for (int i=length-1,j=0; i>=0; i--,j++) {
		int currentBit = bitValue[i];
		if (currentBit < 10)
			newNumber[j]=currentBit+'';
		else
			newNumber[j]=currentBit+''-10;
	}
	return length;
}

main()
{
	int originBase;         
	int newBase;            
	char number[100];       
	char newNumber[100];    
	cin >> originBase >> number >> newBase;

	int len_number = strlen(number);  
	int len_newNumber;                

	int decNumber = change2Dec(number, len_number, originBase);       
	len_newNumber = changeDec2NewBase(decNumber, newBase, newNumber); 
	newNumber[len_newNumber] = NULL;
	cout << newNumber << endl;

	return 0;
}




1000388
main()
{
	int a[2][3];
	int i,j,n,k;
	n=0;
	for(i=0;i<2;i++)
	{
		for(j=0;j<3;j++)
		{
			scanf("",&a[i][j]);
		}
	}
	if(a[0][0]!=a[1][0])
	{
	for(i=a[0][0];i<=a[1][0];i++)
	{
		if(i==a[0][0])
		{
			for(j=a[0][1];j<=12;j++)
			{
				if(j==a[0][1])
				{
					if(j==1||j==3||j==5||j==7||j==8||j==10||j==12)
						n+=31-a[0][2];
					if(j==2)
					{
						if(i%4==0&&i%100!=0||i%400==0)
							n+=29-a[0][2];
						else
							n+=28-a[0][2];
					}
					else
						n+=30-a[0][2];
				}
				else
				{
					if(j==1||j==3||j==5||j==7||j==8||j==10||j==12)
						n+=31;
					if(j==2)
					{
						if(i%4==0&&i%100!=0||i%400==0)
						n+=29;
						else
							n+=28;
					}
					else
						n+=30;
				}
			}
		}
		if(i==a[1][0])
		{
			if(i%4==0&&i%100!=0||i%400==0)
					n+=366;
				else
					n+=365;
			for(j=12;j>=a[1][1];j--)
			{
				if(j!=a[1][1])
				{
					if(j==1||j==3||j==5||j==7||j==8||j==10||j==12)
						n-=31;
					if(j==2)
					{
						if(i%4==0&&i%100!=0||i%400==0)
							n-=29;
						else
							n-=28;
					}
					else
						n-=30;
				}
				if(j==1||j==3||j==5||j==7||j==8||j==10||j==12)
						n-=31-a[1][2];
					if(j==2)
					{
						if(i%4==0&&i%100!=0||i%400==0)
							n=n-29+a[1][2];
						else
							n=n-28+a[1][2];
					}
					else
						n=n-30+a[1][2];
			}
		}
		else
		{
			if(i%4==0&&i%100!=0||i%400==0)
				n+=366;
			else
				n+=365;
		}
	}
	}
	if(a[0][1]==a[1][1])
		n+=(a[1][2]-a[0][2]);
	for(j=a[0][1];j<=a[1][1];j++)
		{
			if(j==a[0][1])
			{
				if(j==1||j==3||j==5||j==7||j==8||j==10||j==12)
						n+=31-a[0][2];
					if(j==2)
					{
						if(i%4==0&&i%100!=0||i%400==0)
							n+=29-a[0][2];
						else
							n+=28-a[0][2];
					}
					else
						n+=30-a[0][2];
			}
			if(j==a[1][1])
				n+=a[1][2];
			else
				{
				if(j==1||j==3||j==5||j==7||j==8||j==10||j==12)
						n+=31;
					if(j==2)
					{
						if(i%4==0&&i%100!=0||i%400==0)
							n+=29;
						else
							n+=28;
					}
					else
						n+=30;
			}
		}
	printf("",n);
	return 0;
}

1000389
main()
{
    struct point
    {
        int NO;
        double x;double y;double z;
        double d[10];
    }points[10];

    struct data
    {
        int num;
        int fromx;int fromy;int fromz;
        int tox;int toy;int toz;
        double dd;
    }result[45+5],temp;

    int n;
    cin>>n;

    for(int i=0;i<=n-1;i++)
    {
        points[i].NO=i+1;
        cin>>points[i].x>>points[i].y>>points[i].z;
    }

    int k=0;
    int end;

    for(int i=0;i<=n-2;i++)
        for(int j=i+1;j<=n-1;j++)
            {
                result[++k].dd=points[i].d[j]=sqrt((points[i].x-points[j].x)*(points[i].x-points[j].x)+
                                    (points[i].y-points[j].y)*(points[i].y-points[j].y)+
                                    (points[i].z-points[j].z)*(points[i].z-points[j].z));
                result[k].fromx=(int)points[i].x;
                result[k].fromy=(int)points[i].y;
                result[k].fromz=(int)points[i].z;
                result[k].tox=(int)points[j].x;
                result[k].toy=(int)points[j].y;
                result[k].toz=(int)points[j].z;
                result[k].num=k;
                end=k;
            }

    for(int i=1;i<=end;i++)
        for(int j=i;j<=end;j++)
            {
                if(result[i].dd<result[j].dd)
                {
                    temp=result[i];
                    result[i]=result[j];
                    result[j]=temp;
                }
            }

    for(int i=1;i<=end;i++)
        for(int j=i;j<=end;j++)
            {
                if(result[i].dd==result[j].dd&&result[i].num>result[j].num)
                {
                    temp=result[i];
                    result[i]=result[j];
                    result[j]=temp;
                }
            }

    for(int i=1;i<=end;i++)
    {
        cout<<""<<result[i].fromx<<""<<result[i].fromy<<""<<result[i].fromz<<""
                 <<result[i].tox<<""<<result[i].toy<<""<<result[i].toz<<""
                 <<fixed<<setprecision(2)<<result[i].dd<<endl;
    }

    return 0;
}


1000390
main(){
int i,j,k=0;
 double m,n,s;
 char a[500],b[500];
 scanf("",&m);
 scanf("",a);
 scanf("",b);
 if(strlen(a)==strlen(b)){
                          
 
 for(i=0,j=0;i<strlen(a);i++){
                              if((a[i]!=''&&a[i]!=''&&a[i]!=''&&a[i]!='')||(b[i]!=''&&b[i]!=''&&b[i]!=''&&b[i]!='')){
                                                                                                                            k=1;
                                                                                                                             
                                                                                                                             }else{
                                                                                                                                   
                          if(a[i]==b[i]){
                                        j++;
                                        }
                                        }
                                        }
                                        if(k==0){
                                                 
                                        n=0.1*strlen(a);
                                         s=j*0.1/n;
                                         if(s>m){
                                                 printf("");
                                                 }else{
                                                       printf("");
                                                       }
                                                       }else{
                                                             printf("");
                                                             }
                                                             }else{
                                                             printf("");
                                                             }
return 0;
}
                                                             

1000391
Partition(int A[1000],int p,int q)
{
    int i,j;
    int x =A[p];
    int temp;
    i = p;
    for (j = p+1;j<=q;j++)
    {
        if(A[j] >= x)
        {
                i+=1;
                temp = A[j];
                A[j] = A[i];
                A[i] = temp;
         }
     }
     temp = A[i];
     A[i] = A[p];
     A[p] = temp;
     return i;
}
                
    
QuikSort(int A[1000],int p,int r)
{
    int q;
    if (p<r)
    {
    q = Partition(A,p,r);
    QuikSort(A,p,q-1);
    QuikSort(A,q+1,r);
    }
    return 0;
} 

score(int A[1000],int B[1000],int n)
{ 
 int Money = 0;
 int i,j,k,m;
 i = 0; 
 m = 0;
             while( i+m != n-1)
            {  
               
               if(i==0 && m == 0)
               {
               j = 0;
               k = 0;
               }
              
               if(A[j] > B[i])
               {
               Money+=1;
               j++;
               i++;
               }
               if(A[n-k-1] > B[n-m-1])
               {
               Money+=1;
               k++;
               m++;
               }
               else
               {
                   if(A[n-k-1]<B[i])
                   Money-=1;
                   k++;
                   i++;
               }
            }
            if(A[j] > B[i])
               {
               Money+=1;
               }
               if(A[j] < B[i])
               {
               Money-=1;
               }
            
 return Money;
}   
    
main()
{
    int n ,i;
    int Money; 
    scanf("",&n);
    while(1)
    {
            Money = 0;
            for(i=0;i<n;i++)
            scanf("",&TianJi[i]);
            for(i=0;i<n;i++)
            scanf("",&King[i]);
            QuikSort(TianJi,0,n-1); 
           
            
            QuikSort(King,0,n-1);
          
            Money = score(TianJi,King,n);
            printf("",Money*200);
            scanf("",&n);
            if(n == 0) break;
    }
}


1000392
main()

{
    int A, B, C, D, E, count=0;
    for(A=1; A<=5; A++)
      {
        for(B=1; B<=5; B++)
          {
            for(C=1; C<=5; C++)
              {
                for(D=1; D<=5; D++)
                  {
                    for(E=1; E<=5; E++)
                      {
                        
                          
                        if( (A!=B) && (A!=C) && (A!=D) && (A!=E) && (C!=B) && (D!=B) && (E!=B) && (C!=D) && (C!=E) && (D!=E) &&(E!=2) && (E!=3) && ((A<=2)^(E==1)==0) && ((B<=2)^(B==2)==0) &&((C<=2)^(A==5)==0) && ((D<=2)^(C>=2)==0) && ((E<=2)^(D==1)==0) )
                          {
                            
                            if((A<=2)^(E==1)==0)
                            {if((E==1)==1)
                              count=count+1;}
                            
                            if((B<=2)^(B==2)==0)
                            {if((B<=2)==1)
                              count=count+1;}
                            
                            if((C<=2)^(A==5)==0)
                            {if((C<=2)==1)
                              count=count+1;}
                          
                            if((D<=2)^(C>=2)==0)
                            {if((C>=2)==1)
                              count=count+1;}
                            
                            if((E<=2)^(D==1)==0)
                            {if((D==1)==1)
                              count=count+1;}
                           
                             if(count==2)
                              {
                                cout<<A<<""<<B<<""<<C<<""<<D<<""<<E;        
                              }
                          }
                                              
                      }
                  }
              }  
          }     
      }
    int x;cin>>x;
    return 0;  
    
}



1000394
main ()
{
char a[100][100];
	int i=0,j=0,k=0,b[102][102]={0},n,m;
	cin>>n;
	for(i=0;i<n;i++)
		for(j=0;j<n;j++)
			cin>>a[i][j];
	cin>>m;
for(k=1;k<m;k++)
{
	for(i=0;i<n;i++)
		for(j=0;j<n;j++)
		{
			if(a[i][j]=='')
				b[i][j]=1;
		}
    for(i=0;i<n;i++)
		for(j=0;j<n;j++)
		{
			if(b[i][j]==1)
			{
				if(i==0)
				{
					if(j==0)
					{
						if(a[0][1]=='')
							a[0][1]='';
						if(a[1][0]=='')
							a[1][0]='';
					}
					if(j==n-1)
					{
						if(a[0][j-1]=='')
							a[0][j-1]='';
						if(a[1][j]=='')
							a[1][j]='';
					}
					else 
					{
                         if(a[0][j-1]=='')
							 a[0][j-1]='';
						 if(a[0][j+1]=='')
							 a[0][j+1]='';
						 if(a[1][j]=='')
							 a[1][j]='';
					}
				}
				if(i==n-1)
				{
					if(j==0)
					{
						if(a[i][1]=='')
							a[i][1]='';
						if(a[i-1][0]=='')
							a[i-1][0]='';
					}
					if(j==n-1)
					{
						if(a[i][j-1]=='')
							a[i][j-1]='';
						if(a[j][i-1]=='')
							a[j][i-1]='';
					}
					else 
					{
                         if(a[i][j-1]=='')
							 a[i][j-1]='';
						 if(a[i][j+1]=='')
							 a[i][j+1]='';
						 if(a[i-1][j]=='')
							 a[i-1][j]='';
					}
				
				}
				if(j==0&&i!=0&&i!=n-1)
				{
				         if(a[i-1][0]=='')
							 a[i-1][0]='';
						 if(a[i+1][0]=='')
							 a[i+1][0]='';
						 if(a[i][1]=='')
							 a[i][1]='';
				}
				if(j==n-1&&i!=0&&i!=n-1)
				{
				         if(a[i-1][n-1]=='')
							 a[i-1][n-1]='';
						 if(a[i+1][n-1]=='')
							 a[i+1][n-1]='';
						 if(a[i][j-1]=='')
							 a[i][j-1]='';
				}
				else 
				{
					if(a[i][j-1]=='')
						a[i][j-1]='';
					if(a[i-1][j]=='')
						a[i-1][j]='';
					if(a[i][j+1]=='')
						a[i][j+1]='';
					if(a[i+1][j]=='')
						a[i+1][j]='';
				}
			}
		}
}
k=0;
for(i=0;i<n;i++)
		for(j=0;j<n;j++)
		{
			if(a[i][j]=='')
				b[i][j]=1;
			k=k+b[i][j];
		}
cout<<k;
	
	return 0;
}


1000395
main()
{
    int a[5];
    int z;
    int  b[6]={0};
    int i,j,k,l,m;

    int r=1;
    int q;
    for(i=5;i>=1;i--)
    {
        for(j=1;j<=5;j++)

            for(k=1;k<=5;k++)
           {
                for(l=1;l<=5;l++)
              {
                    for(m=1;m<=5;m++)
                    {
                        a[0]=i;a[1]=j;a[2]=k;a[3]=l;a[4]=m;
                        
                      




                        if((a[0]!=a[1])&&(a[0]!=a[2])&&(a[0]!=a[3])&&(a[0]!=a[4])&&(a[1]!=a[2])&&(a[1]!=a[3])&&(a[1]!=a[4])&&(a[2]!=a[3])&&(a[2]!=a[4])&&(a[3]!=a[4]))
                        {
                           
                            if(a[4]==1)
                            b[a[0]]=1;
                            if(a[1]==2)
                            b[a[1]]=1;
                            if(a[0]==5)
                            b[a[2]]=1;
                            if(a[2]!=1)
                            b[a[3]]=1;
                            if(a[3]==1)
                            b[a[4]]=1;
                     

                      

                      
                      
                            if((a[4]!=2)&&(a[4]!=3))

                            {  
                                if((b[a[0]]+b[a[1]]+b[a[2]]+b[a[3]]+b[a[4]])==2)

                             {         
                                    for(z=0;z<=4;z++)
                                    {
                                        if(((a[z]==1)||(a[z]==2))&&(b[a[z]]!=1))
                                            r=0;
                                    }
                                if(r!=0)
                                  {


                                cout<<a[0]<<""<<a[1]<<""<<a[2]<<""<<a[3]<<""<<a[4];
                                  }
                              }

                            }



                       }
                      }
                          r=1;
                            for(q=1;q<=5;q++)
                            {
                                b[q]=0;
                            }


                    }
              
                }
            }




    return 0;
}

1000396
main()
{
    int i,j,n,k,money,tf,ts,wf,ws;
    int tj[1000],qw[1000];
    money=0;
    while(scanf("",&n)&&(n!=0))
    {
                 for(i=0;i<n;i++)
                 {
                                      scanf("",&tj[i]);                    
                 }
                 for(i=0;i<n;i++)
                 {
                                      scanf("",&qw[i]);
                 }            
                 for(i=0;i<n-1;i++)
                 {
                                   for(j=0;j<n-1-i;j++)
                                   {
                                                       if(tj[j]<tj[j+1])
                                                       {
                                                                        k=tj[j];
                                                                        tj[j]=tj[j+1];
                                                                        tj[j+1]=k;
                                                       }
                                   }
                 }
                 for(i=0;i<n-1;i++)
                 {
                                   for(j=0;j<n-1-i;j++)
                                   {
                                                       if(qw[j]<qw[j+1])
                                                       {
                                                                        k=qw[j];
                                                                        qw[j]=qw[j+1];
                                                                        qw[j+1]=k;
                                                       }
                                   }
                }
                tf=0;
                ts=n-1;
                wf=0;
                ws=n-1;
                for(i=0;i<n;i++)
                {
                                if(tj[tf]==qw[wf])
                                {
                                                  if(tj[ts]>qw[ws])  
                                                  {
                                                                     money+=200;
                                                                     ts--;
                                                                     ws--;
                                                  }
                                                  if(tj[ts]<qw[ws])
                                                  {
                                                       money-=200;
                                                       ts--;
                                                       wf++;
                                                  }
                                                  if(tj[ts]==qw[ws])
                                                  {
                                                       if(tj[ts]<qw[wf])
                                                       {
                                                                        money-=200;
                                                                        ts--;
                                                                        wf++;
                                                       }
                                                       if(tj[ts]==qw[wf])  break;
                                                  } 
                                }
                                if(tj[tf]>qw[wf])
                                {
                                     money+=200;
                                     tf++;
                                     wf++;
                                }
                                else 
                                {
                                     money-=200;
                                     ts--;
                                     wf++;
                                }
                }
                printf("",money);
                money=0;
    }
    return 0;
}

1000397
main(void)
{
    int a[5],i,j,k,c=0,s,t,c1=0;
    int ag[5];
    for(a[0]=1;a[0]<=5;a[0]++)
        for(a[1]=1;a[1]<=5;a[1]++)
            for(a[2]=1;a[2]<=5;a[2]++)
                for(a[3]=1;a[3]<=5;a[3]++)
                    for(a[4]=1;a[4]<=5;a[4]++)
                    {
                        ag[0]= (a[4]==1);
                        ag[1]= (a[1]==2);
                        ag[2]= (a[0]==5);
                        ag[3]= (a[2]!=1);
                        ag[4]= (a[3]==1);
                        for(i=0;i<5;i++)
                            for(j=0;j<5;j++)
                                if(a[i]==1&&a[j]==2&&ag[i]==1&&ag[j]==1)
                                {
                                    c=0;
                                    
                                    for(k=0;k<5;k++)
                                    {
                                        if(k!=i&&k!=j)
                                            if(ag[k]==0)
                                                c++;
                                        
                                    }
                                    if(c==3)
                                    {
                                        c1=0;
                                        for(s=0;s<5;s++)
                                        {
                                            for(t=s+1;t<5;t++)
                                                if(a[s]!=a[t])
                                                    c1++;
                                        }
                                        
                                        if(c1==10)
                                            if(a[4]!=2&&a[4]!=3)
                                        {
                                            for(s=0;s<5;s++)
                                            {
                                                printf("",a[s]);
                                                if(s!=4)
                                                    printf("");
                                            }
                                        }
                                        
                                    }
                                        
                                }
                            
                        
                    }
    return 0;
}


1000399
main()
{
    int m,n,a[20][20]={0},i,j;
    scanf("",&m,&n);
    for(i=0;i<m;i++)
    {
                    for(j=0;j<n;j++)
                    {
                                    scanf("",&a[i][j]);
                    }
    }
   
    
    for(i=0;i<m;i++)
    {
                    for(j=0;j<n;j++)
                    {
                                     if(i==0&&j==0)
                                     {
                                                   if((a[i][j]>=a[i+1][j])&&(a[i][j]>=a[i][j+1]))
                                                   printf("");
                                     }
                                     if(i==m-1&&j==0)
                                     {
                                                    if((a[i][j]>=a[i-1][j])&&(a[i][j]>=a[i][j+1]))                               
                                                   printf("",m-1);           
                                     }
                                     if(i==m-1&&j==n-1)
                                     {
                                                    if((a[i][j]>=a[i-1][j])&&(a[i][j]>=a[i][j-1]))                               
                                                   printf("",m-1,n-1);
                                     }
                                      if(i==0&&j==n-1)
                                     {
                                                    if((a[i][j]>=a[i+1][j])&&(a[i][j]>=a[i][j-1]))                               
                                                   printf("",n-1);
                                     }
                                     if((i==0)&&(j>0)&&(j<n-1))
                                     {
                                          if((a[i][j]>=a[i][j+1])&&(a[i][j]>=a[i][j-1])&&(a[i][j]>=a[i+1][j]))
                                          printf("",i,j);
                                     }
                                     if((i==m-1)&&(j>0)&&(j<n-1))
                                     {
                                          if((a[i][j]>=a[i][j+1])&&(a[i][j]>=a[i][j-1])&&(a[i][j]>=a[i-1][j]))
                                          printf("",i,j);
                                     }
                                     if((j==0)&&(i>0)&&(i<m-1))
                                     {
                                          if((a[i][j]>=a[i+1][j])&&(a[i][j]>=a[i-1][j])&&(a[i][j]>=a[i][j+1]))          
                                          printf("",i,j);
                                     }
                                     if((j==n-1)&&(i>0)&&(i<m-1))
                                     {
                                          if((a[i][j]>=a[i+1][j])&&(a[i][j]>=a[i-1][j])&&(a[i][j]>=a[i][j-1]))       
                                          printf("",i,j);
                                     }
                                     else
                                     {
                                         if((a[i][j]>=a[i+1][j])&&(a[i][j]>=a[i-1][j])&&(a[i][j]>=a[i][j-1])&&(a[i][j]>=a[i][j+1]))
                                         printf("",i,j);
                                     }
                    }
    }
    
    return 0;
}
                                                    
                                    


1000400

main()
{
      int n,i,m,sun=0,flag=0,aa=0,mm=1;
      char a[510];
      int b[510],d[510],p=0,j,pp,jj,ii,k;
      scanf("",&n,a);
      for(i=0;i<510;i++)
      b[i]=0;
      for(i=0;i<510;i++)
      d[i]=0;
      for(i=0;a[i]!=0;i++)
      {p++;}
      m=p-n+1;
      if(m<1)
      printf("");
      else{
                          for(i=0;i<m;i++)
                          {
                           for(j=0;j<n;j++)
                           {
                                           b[i]=b[i]+a[i+j]*mm;
                                            mm=mm*43;}
                                             mm=1;}
                           
                           for(i=0;i<m-1;i++)
                           {
                                           for(j=i+1;j<m;j++)
                                           {if(b[i]!=b[j])
                                           sun++;}}
                         
                         
                         
                         
                          if(sun==m*(m-1)/2)
                                           printf("");
         else
                                           {
                                                      for(i=0;i<m;i++)
                                                      {
                                                                      for(pp=0;pp<i;pp++)
                                                      {
                                                        if(b[pp]==b[i])
                                                       {flag=1;break;}
                                                       else
                                                        flag=0;}
                                                         if(flag!=0)
                                                         continue;
                                    
                                                         for(j=0;j<m;j++)
                                                         {
                                                         if(b[i]==b[j])
                                                         d[i]++;}
                                                         
                                                         }
                                                         
                                                         
                                                         for(i=0;i<m;i++)
                                                         { for(j=0;j<m;j++)                         
                                                         {
                                                          if(d[i]>=d[j])
                                                           aa++;}
                                                                                                    if(aa==m)
                                                                                                    {printf("",d[i]);
                                                                                                    for(ii=0;ii<n;ii++)
                                                                                                    printf("",a[i+ii]);printf("");
                                                         break;}
                                                         aa=0;}
                                    
                                    
                                    
                                    for(k=i+1;k<m;k++)
                                    {if(d[i]==d[k])
                                    {
                                    for(jj=0;jj<n;jj++)
                                    printf("",a[k+jj]);
                                    printf("");}}}}
                                   
                                    }
                               


1000401
cmp(const void *a, const void *b)

{

       return *(int *)b - *(int *)a;

}

 
profit(int x, int y)

{

       if (TianJi[x] > King[y])

       {

              return 200;

       }

       if (TianJi[x] < King[y])

       {

              return -200;

       }

       else

       {

              return 0;

       }

}

 
main()

{



 
       int i, j, n;

       while(scanf("", &n)&&n!=0)

       {

              memset(dp, 0, sizeof(dp));

              for (i = 1; i <= n; i++)

              {

                     scanf("", &TianJi[i]);

              }

              for (i = 1; i <= n; i++)

              {

                     scanf("", &King[i]);

              }

              

              qsort(TianJi + 1, n, sizeof(TianJi[0]), cmp);

              qsort(King + 1, n, sizeof(King[0]), cmp);

              

              for (i = 1; i <= n; i++)

              {

                     

                     dp[i][0] = dp[i - 1][0] + profit(n - i + 1, i);  
                     

                     dp[i][i] = dp[i - 1][i - 1] + profit(i, i);

                     

                     for (j = 1; j < i; j++)

                     {

                            dp[i][j] = max( ( dp[i - 1][j] + profit(n - (i - j) + 1, i) ), ( dp[i - 1][j - 1] + profit(j, i) ) );

                     }

              }

              

              int ans = -99999999;

              for (i = 0; i <= n; i++)

              {

                     if (ans < dp[n][i])

                     {

                            ans = dp[n][i];

                     }

              }

              printf("", ans);

       }

}

1000402
main()
{
    int z,q,s,l,i;
    char mark[51];
    for(i=0;i<=50;i++)mark[i]=0; 
    for(z=10;z<=50;z+=10)
       for(q=10;q<=50;q+=10)
       {
                            if(q==z)continue;
                            for(s=10;s<=50;s+=10)
                            {
                                                  if(s==q||s==z)continue;
                                                  for(l=10;l<=50;l++)
                                                  {
                                                                     if(l==z||l==q||l==s)continue;
                                                                     if((z+q==s+l)&&(z+l>=s+q)&&(z+s<q))
                                                                     {
                                                                                                         mark[z]='';
                                                                                                         mark[q]='';
                                                                                                         mark[s]='';
                                                                                                         mark[l]='';
                                                                                                         for(i=50;i>=10;i=i-10)
                                                                                                         {
                                                                                                                               if(mark[i]!=0)
                                                                                                                               cout<<mark[i]<<''<<i<<endl;
                                                                                                         }
                                                                     }
                                                  }
                            }
       }
       getchar();getchar();
       return 0;
} 
                                                                                                          


1000403
main(){
	int A,B,C,D,E;
	for(int a=1;a<=5;a++)
		for(int b=1;b<=5;b++)
			for(int c=1;c<=5;c++)
				for(int d=1;d<=5;d++)
					for(int e=1;e<=5;e++){
						if((e!=2)&&(e!=3))
							if((a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=d)&&(b!=e)&&(c!=d)&&(c!=e)&&(d!=e)){
								A=(e==1);
								B=(b==2);
								C=(a==5);
								D=(c!=1);
								E=(d==1);
								if((A==1)&&(B==1)&&(C==0)&&(D==0)&&(E==0)&&( ((a==1)&&(b==2)) || ((a==2)&&(b==1)) ))
									printf("",a,b,c,d,e);
								if((A==1)&&(B==0)&&(C==1)&&(D==0)&&(E==0)&&( ((a==1)&&(c==2)) || ((a==2)&&(c==1)) ))
										printf("",a,b,c,d,e);
									if((A==1)&&(B==0)&&(C==0)&&(D==1)&&(E==0)&&( ((a==1)&&(d==2)) || ((a==2)&&(d==1)) ))
											printf("",a,b,c,d,e);
										if((A==1)&&(B==0)&&(C==0)&&(D==0)&&(E==1)&&( ((a==1)&&(e==2)) || ((a==2)&&(e==1)) ))
												printf("",a,b,c,d,e);
											if((A==0)&&(B==1)&&(C==1)&&(D==0)&&(E==0)&&( ((c==1)&&(b==2)) || ((c==2)&&(b==1)) ))
													printf("",a,b,c,d,e);
												if((A==0)&&(B==1)&&(C==0)&&(D==1)&&(E==0)&&( ((d==1)&&(b==2)) || ((d==2)&&(b==1)) ))
														printf("",a,b,c,d,e);
													if((A==0)&&(B==1)&&(C==0)&&(D==0)&&(E==1)&&( ((e==1)&&(b==2)) || ((e==2)&&(b==1)) ))
															printf("",a,b,c,d,e);
														if((A==0)&&(B==0)&&(C==1)&&(D==1)&&(E==0)&&( ((c==1)&&(d==2)) || ((c==2)&&(d==1)) ))
																printf("",a,b,c,d,e);
															if((A==0)&&(B==0)&&(C==1)&&(D==0)&&(E==1)&&( ((c==1)&&(e==2)) || ((c==2)&&(e==1)) ))
																	printf("",a,b,c,d,e);
																if((A==0)&&(B==0)&&(C==0)&&(D==1)&&(E==1)&&( ((e==1)&&(d==2)) || ((e==2)&&(d==1)) ))
																		printf("",a,b,c,d,e);
						}
					}
	return 0;
}

1000404
main(int argc, char* argv[])
{
	int i,j,n,temp=0;
	char s[20];
	scanf("",&n);
	for (i=0;i<n;i++)
	{
		scanf("",s);
		switch (s[0]) 
		{
		       case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
		 	   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
		 	   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' :
			   case '' : for (j=1,temp==0;s[j]!='\0';j++)
						  {
			                  switch (s[j]) 
							  {
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
		   	                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
		 	                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
		 	                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :
			                     case '' :  break;
                                 default : temp=1; break;
							  }
						  } ; break;
			default : temp=1; break;
		  }
		if (temp==0) printf("");
		printf("");
		temp=0;
	}


	return 0;
}

1000405
main()
{
    int row,col;
    cin >> row >> col;
    int array[100][100];
    int i,j,k;
    
    for (i=0;i<=row-1;i++)
    {
        for (j=0;j<=col-1;j++)
        {
            cin >> array[i][j] ;
        }
    }
    if (col>row)
    {
    for (k=0;k<=row-1;k++)
    
    {
        i=0;
        j=k;
        do
        {
            cout << array[i][j] << endl;
            j--;
            i++;
        }
        while (j!=-1);
    }
    for (k=row;k<col-1;k++)
    {
        int s=0;
        j=k;
        i=0;
        do
        {
              cout << array[i][j] << endl;
              s++;
              j--;
              i++;
        }
        while (s!=row);
    }
        
    for (k=0;k<=row-1;k++)
    {
        j=col-1;
        i=k;
        do
        {
            cout << array[i][j] << endl;
            j--;
            i++;
        }
        while (i!=row);
    }
}
if (row==col)
{
    for (k=0;k<=row-1;k++)
    {
        i=0;
        j=k;
        do
        {
            cout << array[i][j] << endl;
            j--;
            i++;
        }
        while (j!=-1);
    }
    for (k=1;k<=row-1;k++)
    {
        j=col-1;
        i=k;
        do
        {
            cout << array[i][j] << endl;
            j--;
            i++;
        }
        while (i!=row);
    }
}
    
    
    
if (col<row)
    {
    for (k=0;k<=col-1;k++)
    
    {
        i=0;
        j=k;
        do
        {
            cout << array[i][j] << endl;
            j--;
            i++;
        }
        while (j!=-1);
    }
    for (k=1;k<row-col;k++)
    {
        int s=0;
        j=col-1;
        i=k;                                                  
        do                                                    
        {                                                     
              cout << array[i][j] << endl;                    
              s++;                                            
              j--;                                            
              i++;
        }
        while (s!=col);
    }
        
    for (k=row-col;k<=row-1;k++)
    {
        j=col-1;
        i=k;
        do
        {
            cout << array[i][j] << endl;
            j--;
            i++;
        }
        while (i!=row);
    }
}
          
    return 0;
}


1000406
main()
{
    int b=0,i=0,j=0,k=0,n=0;char a;int x[26],y[26];
    cin>>n;getchar();
    for(i=0;i<=25;i++)
    {
                      x[i]=y[i]=0;
    }
    for(k=1;k<=n;k++)
    {for(i=0;i<=25;i++)
    {
                      x[i]=y[i]=0;
    }

                     for(i=1;;i++)
                     {
                            a=getchar(); 
                            if(a=='\n') break; b=a-97;
                            if(x[b]>b+97) continue;
                            
                            if(x[b]==0) y[b]=i;
                            x[b]=x[b]+a;
                     }
                     b=0;
                     for(j=0;j<=25;j++)
                     {
                                       if(y[j]==0) b=b+1;
                      }
                      for(j=0;j<=25;j++)
                      {
                                        if(x[j]>j+97) b=b+1;
                      }
                      if(b==26) cout<<""<<endl;
                      else
                      {
                          for(j=1;j<=100;j++)
                          {
                                                for(i=0;i<=25;i++)
                                                {
                                                                  if(x[i]!=i+97) continue;
                                                                  if(y[i]==j)
                                                                  {
                                                                             a=i+97;
                                                                             break;
                                                                  }
                                                                  
                                                }
                                                if(y[i]==j)
                                                                  {
                                                                             cout<<a<<endl;;
                                                                             break;
                                                                  }
                          }
                      }
     }

return 0;
}    



1000407
main()
{
    int n,sum=0,m;
	cin>>n;
	char a[100][100],b[100][100];
	int i,j,k;
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			cin>>a[i][j];
			b[i][j]=a[i][j];
		}
	}
	cin>>m;
	while(m>1)
	{
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{   
			if(a[i][j]=='')	
			{if(i>0&&j>0&&i<n-1&&j<n-1)
				{
				if(a[i-1][j]=='')
					b[i-1][j]='';
                 if(a[i+1][j]=='')
					b[i+1][j]='';
			     if(a[i][j-1]=='')
					b[i][j-1]='';
			     if(a[i][j+1]=='')
					 b[i][j+1]='';}
				
				if(i==0&&j<n-1&&j>0)
				{ 
					
					if(a[i][j+1]=='')
						b[i][j+1]='';
					if(a[i+1][j]=='')
						b[i+1][j]='';
					if(a[i][j-1]=='')
						b[i][j-1]='';
					
				}
				if(i==0&&j==0)
				{
					
					
						if(a[i+1][j]=='')
							b[i+1][j]='';
						if(a[i][j+1]=='')
							b[i][j+1]='';
					
				}
				if(i==n-1&&j<n-1&&j>0)
				{  
					
					if(a[i][j+1]=='')
						b[i][j+1]='';
					if(a[i-1][j]=='')
						b[i-1][j]='';
					if(a[i][j-1]=='')
					   b[i][j-1]='';
				}
				if(i==n-1&&j==0)
				{
                 
				   
					   if(a[i][j+1]=='')
						   b[i][j+1]='';
					   if(a[i-1][j]=='')
						   b[i-1][j]='';
				   
				}
				if(j==0&&i<n-1&&i>0)
				{
					
					if(a[i+1][j]=='')
						b[i+1][j]='';
					if(a[i][j+1]=='')
						b[i][j+1]='';
					if(a[i-1][j]=='')
					b[i-1][j]='';
				}
				if(j==n-1&&i<n-1&&i>0)
				{
					
					if(a[i+1][j]=='')
						b[i+1][j]='';
					if(a[i][j-1]=='')
						b[i][j-1]='';
					if(a[i-1][j]=='')
					b[i-1][j]='';
				}
				if(j==n-1&&i==0)
				{
					
					
						if(a[i][j-1]=='')
							b[i][j-1]='';
						if(a[i+1][j]=='')
							b[i+1][j]='';
					
				}
				if(j==n-1&&i==n-1)
				{
					
					if(a[i-1][j]=='')
                       b[i-1][j]='';
					if(a[i][j-1]=='')
						b[i][j-1]='';
				}
			}
		}
	}for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		a[i][j]=b[i][j];
	}
	m--;
	}
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			if(a[i][j]=='')
				sum++;
		}
	}
	cout<<sum;
	return 0;
}

1000408
back(char a[])
{
     int l,i;
     char b[1001];
     l=strlen(a);
     for(i=0;i<l;i++)
     {
                     b[i]=a[l-i-1];
     }
     b[l]='\0';
     strcpy(a,b);
}
full(char a[])
{
     int l,i;
     l=strlen(a);
     for(i=l;i<1000;i++)
     {
                         a[i]='';
     }
     a[1000]='\0';
}
recur(char a[])
{
     int i;
     for(i=999;i>=0;i--)
     {
                        if(a[i]!='')
                        {
                                     a[i+1]=0;
                                     break;
                        }
     }
     back(a);
}
plus(char a[],char b[],char sum[])
{
      int i;
      back(a);
      back(b);
      full(a);
      full(b);
      for(i=0;i<1000;i++)
      {
                          if(a[i]>'')
                          {a[i]=a[i]-10;a[i+1]=a[i+1]+1;}
                          if((a[i]+b[i]-2*'')>9)
                          {sum[i]=a[i]+b[i]-''-10;a[i+1]=a[i+1]+1;}
                          else
                          {sum[i]=a[i]+b[i]-'';}
      }
      recur(b);
      recur(sum);
}
minus(char a[],char b[],char difference[])
{
     int i,w=0;
     back(a);
     back(b);
     full(a);
     full(b);
     for(i=0;i<1000;i++)
     {
                       if(w==1)
                       a[i]=a[i]-1;
                       if(a[i]<b[i])
                       {
                                    difference[i]=a[i]+10-b[i]+'';
                                    w=1;
                       }
                       else
                       {
                           difference[i]=a[i]-b[i]+'';
                           w=0;
                       }
     }
     for(i=999;difference[i]=='';i--);
     if(i>=0)
     difference[i+1]='\0';
     else
     difference[1]='\0';
     back(difference);
}
main()
{
      char a[1001],b[1001],sum[1001];
      scanf("",a,b);
      if(a[0]==''&&a[1]==0&&b[0]==''&&b[1]==0)
      printf("");
      else
      {
          plus(a,b,sum);
          puts(sum);
      }
      getchar();
      getchar();
}

1000409
paixua()
{
     int i,j,k;
     for(i=0;i<n-1;i++)
     {
                       for(j=i;j<n;j++)
                       {
                                       if(a[i]<a[j])
                                       {
                                                    k=a[i];
                                                    a[i]=a[j];
                                                    a[j]=k;
                                       }
                       }
     }
}
paixub()
{
     int i,j,k;
     for(i=0;i<n-1;i++)
     {
                       for(j=i;j<n;j++)
                       {
                                       if(b[i]<b[j])
                                       {
                                                    k=b[i];
                                                    b[i]=b[j];
                                                    b[j]=k;
                                       }
                       }
     }
}
yixu(int k)
{
     int i;
     for(i=0;i<n-k;i++)
     {
                      a1[i+k]=a[i];
                      }
     for(i=n-k;i<n;i++)
     {
                       a1[n-1-i]=a[i];
                       }
}
main()
{
      int i,j,w,sum;
      for(;1;)
      {
              scanf("",&n);
              if(n==0) break;
              else
              {
                  for(i=0;i<n;i++)
                  {
                                  scanf("",&a[i]);
                                  }
                  for(i=0;i<n;i++)
                  {
                                  scanf("",&b[i]);
                                  }
                  paixua();
                  paixub();
                  w=-200*n;
                  for(i=0;i<n;i++)
                  {
                                  sum=0;
                                  yixu(i);
                                  for(j=0;j<n;j++)
                                  {
                                                  if(a1[j]>b[j]) sum=sum+200;
                                                  if(a1[j]<b[j]) sum=sum-200;
                                  }
                                  if(w<sum) w=sum;
                  }
                  printf("",w);
              }
      }
    
}


1000410
patition(int a[], int low, int high)
{
    int n,temp;
	int i, j;
	n = a[high];
	i = low-1;
	for (j=low; j< high; j++)
    {
        if(a[j]<=n) 
		{
			i++;
			temp=a[i];
			a[i]=a[j];
			a[j]=temp;
		}
    }
    temp=a[i+1];
	a[i+1]=a[high];
	a[high]=temp;
	return i+1;
}
QuickSort(int a[],int low,int high)
{
	int i;
	if(low<high) 
	{
		i=patition(a,low,high);
		QuickSort(a,low,i-1);
		QuickSort (a,i+1,high); 
	}
}

main()
{
	int n,i,j,k,temp,m,l,o;
    int c[100];
	int finish;
	
	for (i=0;n!=0;i++)
	{
		m =0;
		l =0;
		finish = 0;
        scanf("",&n);
		for (j=0;j<n;j++)
		{
			scanf("",&temp);
			array[i][0][0][j] = temp;
			array[i][0][1][j] = 0;
			
		}
		QuickSort(array[i][0][0],0,n-1);
		for (j=0;j<n;j++)
		{
			scanf("",&temp);
			array[i][1][0][j] = temp;
			array[i][1][1][j] = 0;
			
		}
		QuickSort(array[i][1][0],0,n-1);
		k = n-1;
		while(!finish)
		{
			for (j=0;j<n;j++)
			{
				if (array[i][0][1][j] ==0)
				{
					break;
				}
			}
			for (k=0;k<n;k++)
			{
				if (array[i][1][1][k] ==0)
				{
					break;
				}
			}
			for (l=n-1;l>=0;l--)
			{
				if (array[i][0][1][l] ==0)
				{
					break;
				}
			}
			for (o=n-1;o>=0;o--)
			{
				if (array[i][1][1][o] ==0)
				{
					break;
				}
			}
			if (array[i][0][0][l] > array[i][1][0][o])
			{
				m++;
				array[i][0][1][l] = 1;
				array[i][1][1][o] = 1;
			}
			if (array[i][0][0][j] > array[i][1][0][k])
				{
					m++;
					array[i][0][1][j] = 1;
				    array[i][1][1][k] = 1;
				}
				else
				{
					if(array[i][1][0][o] > array[i][0][0][j] )
					{
						m--;		
					}
					array[i][0][1][j] = 1;
					array[i][1][1][o] = 1;

				}
				finish = 1;
				for (j=0;j<n;j++)
				{
					if (array[i][1][1][j] == 0)
					{
						finish = 0;
					}
				}
		}


























		c[i] = m*200;
	}
	for (j=0;j<i-1;j++)
	{
		printf("",c[j]);
	}
}

1000411
main(){
double n,r;
int m=0,i,s=0;
char a[500],b[500];
scanf("",&n);
scanf("",a);
scanf("",b);
int x=strlen(a);
int y=strlen(b);
if(x!=y){
         printf("");
         }else{
               for(i=0;i<x;i++){
                                 if(!(((a[i]=='')||(a[i]=='')||(a[i]=='')||(a[i]==''))
                                 &&((b[i]=='')||(b[i]=='')||(b[i]=='')||(b[i]=='')))){
                                                                                        
                                                                                        s++;
                                                                                        }
                                                                                        }
               
                                 if(s!=0){
                                          printf("");
                                          }else{
                                                for(i=0;i<x;i++){
                                 if(a[i]==b[i]){
                                                                                         m++;
                                                                                         }
                                                                                         
                                                                                         }
                                                                                         r=1.0*m/x;
                                                                                         if(r>=n){
                                                                                                  printf("");
                                                                                                  }else{
                                                                                                        printf("");
                                                                                                        }
                                                                                                        
                                                                                                        }
                                                                                                        }

return 0;
}


1000412
find(struct patient *head)
{
   struct patient *p,*ppre;
   p=head;
   while (p&&p->age>=60)
    {
        ppre=p;
        p = p->next;
    }
    return ppre;
}
struct create(int n)
{
     struct patient *head=NULL,*p1,*p2,*p0,*q;
     int i;
     p1=p2=p0=(struct patient*)malloc(Len);
     scanf("",p1->id,&p1->age);
     if(p1->age>=60) m++;
     p1->next=NULL;
     head=p1=p0;
     p2=p1;
     for(i=1;i<n;i++)
        {
            p1=(struct patient*)malloc(Len);
            scanf("",p1->id,&p1->age);
            if(p1->age<60)
            {
                p1->next=NULL;
                p2->next=p1;
                p2=p1;
            }
            if(p1->age>=60)
            {
                m++;
                if(head->age<60)
                {
                    head=p1;
                    p1->next=p0;
                }
                if(head->age>=60)
                {
                  p0=find(head);
                  q=p0->next;
                  p0->next=p1;
                  p1->next=q;
                }
                if((p0=find(head))->next==NULL)
                {
                   p1->next=NULL;
                   p2->next=p1;
                   p2=p1;
                }
            }
        }
         return head;
}
struct arrange(struct patient *head)
{
    struct patient *p1,*p2;
    int t1,i,j;
    char t2[32];
    for(j=0;j<m;j++)
     {
          p1=head;
       for(i=1;i<m-j;i++)
       {
           p2=p1;
           p1=p1->next;
         if(p2->age<p1->age)
         {
              t1=p1->age;
              strcpy(t2,p1->id);
              p1->age=p2->age;
              strcpy(p1->id,p2->id);
              p2->age=t1;
              strcpy(p2->id,t2);
         }
       }
     }
}
print(struct patient *head)
{
     struct patient *p;
     p = head;
     while (p)
     {
         printf("",p->id);
         p = p->next;
     }
}
main()
{
    struct patient *head,*p,*q,*p0;
    int n,m=0,age;
    char id[32];
    scanf("",&n);
    head=create(n);
    arrange(head);
    print(head);
}


1000413
main()
{
	int start1[10000],end1[10000];
	int i=0,renshu=0,max=0,flag=0,flag1=0,j=0;
	int num[100000];
	char start[200000],end[200000];
	memset(num,0,sizeof(num));
	memset(start1,0,sizeof(start1));
	memset(start,0,sizeof(start));
	memset(end,0,sizeof(end));
	memset(end1,0,sizeof(end1));
	cin.getline(start,200000,'\n');
	cin.getline(end,200000,'\n');
	for(i=0;i<200000;i++)
	{
		if(start[i]==0)
		{
			renshu++;
			flag=flag1;
			flag1=i-1;
			if(renshu==1)
			{
				for(j=flag1;j>=0;j--)
					start1[renshu]=start1[renshu]+(start[j]-'')*pow((double)10,(double)(flag1-j));
			}
			else
			{
				for(j=flag1;j>flag+1;j--)
					start1[renshu]=start1[renshu]+(start[j]-'')*pow((double)10,(double)(flag1-j));
			}
			break;
		}
		if(start[i]!=0)
		{
			if(start[i]=='')
			{
				renshu++;
				flag=flag1;
				flag1=i-1;
				if(renshu==1)
				{
					for(j=flag1;j>=0;j--)
						start1[renshu]=start1[renshu]+(start[j]-'')*pow((double)10,(double)(flag1-j));
				}
				else
				{
					for(j=flag1;j>flag+1;j--)
						start1[renshu]=start1[renshu]+(start[j]-'')*pow((double)10,(double)(flag1-j));
				}
			}
		}
	}
	flag=0;
	flag1=0;
	renshu=0;
	for(i=0;i<200000;i++)
	{
		if(end[i]==0)
		{
			renshu++;
			flag=flag1;
			flag1=i-1;
			if(renshu==1)
			{
				for(j=flag1;j>=0;j--)
					end1[renshu]=end1[renshu]+(end[j]-'')*pow((double)10,(double)(flag1-j));
			}
			else
			{
				for(j=flag1;j>flag+1;j--)
					end1[renshu]=end1[renshu]+(end[j]-'')*pow((double)10,(double)(flag1-j));
			}
			break;
		}
		if(end[i]!=0)
		{
			if(end[i]=='')
			{
				renshu++;
				flag=flag1;
				flag1=i-1;
				if(renshu==1)
				{
					for(j=flag1;j>=0;j--)
						end1[renshu]=end1[renshu]+(end[j]-'')*pow((double)10,(double)(flag1-j));
				}
				else
				{
					for(j=flag1;j>flag+1;j--)
						end1[renshu]=end1[renshu]+(end[j]-'')*pow((double)10,(double)(flag1-j));
				}
			}
		}
	}
	for(i=1;i<=renshu;i++)
	{
		for(j=start1[i];j<end1[i];j++)
			num[j]++;
	}
	for(i=0;i<1000;i++)
	{
		if(num[i]>max)
			max=num[i];
	}
	cout<<renshu<<""<<max<<endl;
	return 0;
}

1000414
main()
{
    int year,month,day,all;
    scanf("",&year,&month,&day);
    if((year%4==0&&year%100!=0)||(year%400==0))
    {
          if(month==1)
          {
                      all=day;
          }
          if(month==2)
          {
                      all=day+31;
          }
          if(month==3)
          {
                      all=day+29+31;
          }
          if(month==4)
          {
                      all=day+29+31+31;
          }
          if(month==5)
          {
                      all=day+29+31+31+30;
          }
          if(month==6)
          {
                      all=day+31+29+31+30+31;
          }
          if(month==7)
          {
                      all=day+31+29+31+30+31+30;
          }
          if(month==8)
          {
                      all=day+31+29+31+30+31+30+31;
          }
          if(month==9)
          {
                      all=day+31+29+31+30+31+30+31+31;
          }
          if(month==10)
          {
                      all=day+31+29+31+30+31+30+31+31+30;
          }
          if(month==11)
          {
                      all=day+31+29+31+30+31+30+31+31+30+31;
          }
          if(month==12)
          {
                      all=day+31+29+31+30+31+30+31+31+30+31+30;
          }
    }
    else
    {
        if(month==1)
          {
                      all=day;
          }
          if(month==2)
          {
                      all=day+31;
          }
          if(month==3)
          {
                      all=day+28+31;
          }
          if(month==4)
          {
                      all=day+28+31+31;
          }
          if(month==5)
          {
                      all=day+28+31+31+30;
          }
          if(month==6)
          {
                      all=day+31+28+31+30+31;
          }
          if(month==7)
          {
                      all=day+31+28+31+30+31+30;
          }
          if(month==8)
          {
                      all=day+31+28+31+30+31+30+31;
          }
          if(month==9)
          {
                      all=day+31+28+31+30+31+30+31+31;
          }
          if(month==10)
          {
                      all=day+31+28+31+30+31+30+31+31+30;
          }
          if(month==11)
          {
                      all=day+31+28+31+30+31+30+31+31+30+31;
          }
          if(month==12)
          {
                      all=day+31+28+31+30+31+30+31+31+30+31+30;
          }
    }
    printf("",all);
}

1000415
main()
{
    int a,b,c;
    scanf("",&a,&b,&c);
    if((a%100!=0&&a%4==0)||(a%400==0))
    {
                                      if(b==1)
                                      printf("",c);
                                     if(b==2)
                                      printf("",c+31);
                                      if(b==3)
                                      printf("",c+60);
                                      if(b==4)
                                      printf("",c+91);
                                       if(b==5)
                                      printf("",c+121);
                                       if(b==6)
                                      printf("",c+152);
                                       if(b==7)
                                      printf("",c+182);
                                       if(b==8)
                                      printf("",c+213);
                                       if(b==9)
                                      printf("",c+244);
                                       if(b==10)
                                      printf("",c+274);
                                       if(b==11)
                                      printf("",c+305);
                                      printf("",c+335);
    }
    else
    {
                                      if(b==1)
                                      printf("",c);
                                     if(b==2)
                                      printf("",c+31);
                                      if(b==3)
                                      printf("",c+59);
                                      if(b==4)
                                      printf("",c+90);
                                       if(b==5)
                                      printf("",c+120);
                                       if(b==6)
                                      printf("",c+152);
                                       if(b==7)
                                      printf("",c+181);
                                       if(b==8)
                                      printf("",c+212);
                                       if(b==9)
                                      printf("",c+243);
                                       if(b==10)
                                      printf("",c+273);
                                       if(b==11)
                                      printf("",c+304);
                                      printf("",c+334);
    }
    getchar();
    getchar();
}

1000416
main(){
    int sz[20][20],m,n,sc[1000],sk[1000],a,b,i,t;
    scanf("",&m,&n);
    for(a=0;a<m;a++){
                     for(b=0;b<n;b++){
                                      scanf("",&sz[a][b]);
                                      }
                                      }
    i=0;
    if((sz[0][0]>=sz[0][1])&&(sz[0][0]>=sz[1][0])){
                                                   sc[i]=0;
                                                   sk[i]=0;
                                                   i++;
                                                   }
    for(b=1;b<n-1;b++){
                       if((sz[0][b]>=sz[1][b])&&(sz[0][b]>=sz[0][b-1])&&(sz[0][b]>=sz[0][b+1])){
                                                                                                sc[i]=0;
                                                                                                sk[i]=b;
                                                                                                i++;
                                                                                                }
                                                                                                }
   if((sz[0][n-1]>=sz[0][n-2])&&(sz[0][n-1]>=sz[1][n-1])){
                                                          sc[i]=0;
                                                          sk[i]=n-1;
                                                          i++;
                                                          }
   for(a=1;a<m-1;a++){
                      if((sz[a][0]>=sz[a][1])&&(sz[a][0]>=sz[a-1][0])&&(sz[a][0]>=sz[a+1][0])){
                                                                                               sc[i]=a;
                                                                                               sk[i]=0;
                                                                                               i++;
                                                                                               }
                      for(b=1;b<n-1;b++){
                                         if((sz[a][b]>=sz[a][b-1])&&(sz[a][b]>=sz[a][b+1])&&(sz[a][b]>=sz[a-1][b])&&(sz[a][b]>=sz[a+1][b])){
                                                                                                                                            sc[i]=a;
                                                                                                                                            sk[i]=b;
                                                                                                                                            i++;
                                                                                                                                            }
                                                                                                                                            }
                     
                      if((sz[a][n-1]>=sz[a][n-2])&&(sz[a][n-1]>=sz[a-1][n-1])&&(sz[a][n-1]>=sz[a+1][n-1])){
                                                                                                           sc[i]=a;
                                                                                                           sk[i]=n-1;
                                                                                                           i++;
                                                                                                           }
                                                                                                           }
  
   if((sz[m-1][0]>=sz[m-2][0])&&(sz[m-1][0]>=sz[m-1][1])){
                                                          sc[i]=m-1;
                                                          sk[i]=0;
                                                          i++;
                                                          }
   for(b=1;b<n-1;b++){
                      if((sz[m-1][b]>=sz[m-2][b])&&(sz[m-1][b]>=sz[m-1][b-1])&&(sz[m-1][b]>=sz[m-1][b+1])){
                                                                                                           sc[i]=m-1;
                                                                                                           sk[i]=b;
                                                                                                           i++;
                                                                                                           }
                                                                                                           }                                            
    if((sz[m-1][n-1]>=sz[m-1][n-2])&&(sz[m-1][n-1]>=sz[m-2][n-1])){
                                                                   sc[i]=m-1;
                                                                   sk[i]=n-1;
                                                                   i++;
                                                                   }
   
    t=i;
    for(i=0;i<t;i++){
                     printf("",sc[i],sk[i]);
                     }
    
    return 0;
    }                    

1000417
main()
{
    struct patient *head;
    struct create(int n);
    sort(struct patient *head);
    int n;
    scanf("",&n);
    head=create(n);
    sort(head);
   
    return 0;
}

struct create(int n)
{
       int i;
       struct patient *head,*p1,*p2;
       p1=(struct patient *)malloc(len);
       head=p1;
       p2=p1;
       scanf("",p1->id,&p1->age);
       for(i=1;i<n;i++)
       {
                       p1=(struct patient *)malloc(len);
                       scanf("",p1->id,&p1->age);
                       (p2->next)=p1;
                       p2=p1;
                       if(i==(n-1))
                       (p1->next)=NULL;
       }
       return head;
}

sort(struct patient *head)
{
     int m;
     struct patient *p1,*p2;
     
     for(;;)
     {
            p1=head;
            p2=head;
            m=0;
            for(;;)
            {
                   if((p1->age)>m) m=(p1->age);
                   if((p1->next)==NULL) break;
                   else p1=(p1->next);
            }
            if(m<60) break;
            p1=head;
            for(;;)
            {
                   if((p1->age)==m)
                   {
                                   printf("",p1->id);
                                   if(p1==head) head=(p1->next);
                                   else
                                   {
                                       (p2->next)=(p1->next);
                                   }
                                   break;
                   }
                   else
                   {
                       if(p1!=p2)
                       {
                                 p2=p1;
                                 p1=(p1->next);
                       }
                       else p1=(p1->next);
                   }
            }
     }
     p1=head;
     for(;;)
     {
            printf("",p1->id);
            if((p1->next)==NULL) break;
            else p1=(p1->next);
     }
}

1000418
main(){
    int m,n,s[20][20],i,k,a,z[20],x[20];
    scanf("",&m,&n);
    for(i=0;i<m;i++){
                     for(k=0;k<n;k++){
                                      scanf("",&s[i][k]);
                                      }
                                      }
                                      if(s[0][0]>=s[0][1]&&s[0][0]>=s[1][0]){ 
                                                                             printf("");
                                                                             }
                                      for(i=1;i<n-1;i++){
                                                         if((s[0][i]>=s[0][i-1])&&(s[0][i]>=s[0][i+1])&&(s[0][i]>=s[1][i])){
                                                               printf("",i);
                                                         }
                                                         }
                                                         if(s[0][n-1]>=s[0][n-2]&&
                                                         s[0][n-1]>=s[1][n-1]){
                                                                printf("",n-1);
                                                                }                                                                                                           
                                      for(i=1;i<m-1;i++){
                                                              if(s[i][0]>=s[i-1][0]&&s[i][0]>=s[i+1][0]
                                                              &&s[i][0]>=s[i][1]){
                                                                                  printf("",i);
                                                                                  }
                                                 for(k=1;k<n-1;k++){                                         
                                                              if(s[i][k]>=s[i-1][k]&&
                                                              s[i][k]>=s[i+1][k]&&s[i][k]>=s[i][k-1]&&
                                                               s[i][k]>=s[i][k+1]){
                                                                                   printf("",i,k);
                                                                                   }
                                                                                   }
                                                              if(s[i][n-1]>=s[i-1][n-1]&&s[i][n-1]>=s[i+1][n-1]
                                                              &&s[i][n-1]>=s[i][n-2]){
                                                                                  printf("",i,n-1);
                                                                                  }
                                                                                  }
                                                               if(s[m-1][0]>=s[m-1][1]&&s[m-1][0]>=s[m-2][0]){
                                                                             printf("",m-1);
                                                                             }
                                      for(a=1;a<n-1;a++){
                                                         if(s[m-1][a]>=s[m-1][a-1]&&
                                                         s[m-1][a]>=s[m-1][a+1]&&s[m-1][a]>=s[m-2][a]){
                                                               printf("",m-1,a);
                                                         }
                                                         }
                                                         if(s[m-1][n-1]>=s[m-1][n-2]&&
                                                         s[m-1][n-1]>=s[m-2][n-1]){
                                                                printf("",m-1,n-1);
                                                                }                        
                                                          
                                      
    
     
 return 0;
}



1000419
if(n==2)
      {
          for(i=3;i<6;i++)
          for(j=3;j<6;j++)
          b[i][j]=a[i][j]+a[4][4];
          for(i=3;i<6;i++)
          for(j=3;j<6;j++)
          a[i][j]=b[i][j];
          for(i=2;i<7;i++)
          for(j=2;j<7;j++)
          b[i][j]=2*a[i][j]+a[i-1][j-1]+a[i-1][j]+a[i-1][j+1]+a[i][j-1]+a[i][j+1]+a[i+1][j-1]+a[i+1][j]+a[i+1][j+1];
      
          for(i=0;i<9;i++)
          for(j=0;j<9;j++)
          {
          if(j!=8)
          printf("",b[i][j]);
          else
            {
              printf("",b[i][j]);printf("");
            }
          
          }
      }
      if(n==3)
      {
          for(i=3;i<6;i++)
          for(j=3;j<6;j++)
          b[i][j]=a[i][j]+a[4][4];
          for(i=3;i<6;i++)
          for(j=3;j<6;j++)
          a[i][j]=b[i][j];
          for(i=2;i<7;i++)
          for(j=2;j<7;j++)
          b[i][j]=2*a[i][j]+a[i-1][j-1]+a[i-1][j]+a[i-1][j+1]+a[i][j-1]+a[i][j+1]+a[i+1][j-1]+a[i+1][j]+a[i+1][j+1];
          for(i=2;i<7;i++)
          for(j=2;j<7;j++)
          a[i][j]=b[i][j];
          for(i=1;i<8;i++)
          for(j=1;j<8;j++)
          b[i][j]=2*a[i][j]+a[i-1][j-1]+a[i-1][j]+a[i-1][j+1]+a[i][j-1]+a[i][j+1]+a[i+1][j-1]+a[i+1][j]+a[i+1][j+1];
          
          for(i=0;i<9;i++)
          for(j=0;j<9;j++)
          {
          if(j!=8)
          printf("",b[i][j]);
          else
            {
              printf("",b[i][j]);printf("");
            }
          
          }
      }
      else 
      {
          for(i=3;i<6;i++)
          for(j=3;j<6;j++)
          b[i][j]=a[i][j]+a[4][4];
          for(i=3;i<6;i++)
          for(j=3;j<6;j++)
          a[i][j]=b[i][j];
          for(i=2;i<7;i++)
          for(j=2;j<7;j++)
          b[i][j]=2*a[i][j]+a[i-1][j-1]+a[i-1][j]+a[i-1][j+1]+a[i][j-1]+a[i][j+1]+a[i+1][j-1]+a[i+1][j]+a[i+1][j+1];
          for(i=2;i<7;i++)
          for(j=2;j<7;j++)
          a[i][j]=b[i][j];
          for(i=1;i<8;i++)
          for(j=1;j<8;j++)
          b[i][j]=2*a[i][j]+a[i-1][j-1]+a[i-1][j]+a[i-1][j+1]+a[i][j-1]+a[i][j+1]+a[i+1][j-1]+a[i+1][j]+a[i+1][j+1];
          
          for(i=1;i<8;i++)
          for(j=1;j<8;j++)
          a[i][j]=b[i][j];
          
          for(i=0;i<9;i++)
          for(j=0;j<9;j++)
          {
               if(i==0&&j==0)
               b[i][j]=2*a[i][j]+a[i][j+1]+a[i+1][j]+a[i+1][j+1];
               if(i==0&&j==8)
               b[i][j]=2*a[i][j]+a[i][j-1]+a[i+1][j]+a[i+1][j-1];
               if(i==8&&j==0)
               b[i][j]=2*a[i][j]+a[i][j+1]+a[i-1][j]+a[i-1][j+1];
               if(i==8&&j==8)
               b[i][j]=2*a[i][j]+a[i][j-1]+a[i-1][j]+a[i-1][j-1];
               if(i==0)
               b[i][j]=2*a[i][j]+a[i][j+1]+a[i][j-1]+a[i+1][j-1]+a[i+1][j]+a[i+1][j+1];
               if(i==8)
               b[i][j]=2*a[i][j]+a[i][j+1]+a[i][j-1]+a[i-1][j-1]+a[i-1][j]+a[i-1][j+1];
               if(j==0)
               b[i][j]=2*a[i][j]+a[i-1][j]+a[i+1][j]+a[i-1][j+1]+a[i][j+1]+a[i+1][j+1];
               if(j==8)
               b[i][j]=2*a[i][j]+a[i-1][j]+a[i+1][j]+a[i-1][j-1]+a[i][j-1]+a[i+1][j-1];
               else      
               b[i][j]=2*a[i][j]+a[i-1][j-1]+a[i-1][j]+a[i-1][j+1]+a[i][j-1]+a[i][j+1]+a[i+1][j-1]+a[i+1][j]+a[i+1][j+1]; 
          }
          
          for(i=0;i<9;i++)
          for(j=0;j<9;j++)
          {
          if(j!=8)
          printf("",b[i][j]);
          else
            {
              printf("",b[i][j]);printf("");
            }
          
          }
      }
}


1000420
main(){

	char name[4]= {'', '', '', ''};
	int weight[4]= {0}, cc1, cc2, cc3, i;
	
	for(weight[0]= 10; weight[0]< 60; weight[0]= weight[0]+ 10)
		for(weight[1]= 10; weight[1]< 60; weight[1]= weight[1]+ 10)
			for(weight[2]= 10; weight[2]< 60; weight[2]= weight[2]+ 10)
				for(weight[3]= 10; weight[3]< 60; weight[3]= weight[3]+ 10){
					if((weight[0]!= weight[1]) && (weight[0]!= weight[2]) && (weight[0]!= weight[3]) && (weight[1]!= weight[2]) && (weight[1]!= weight[3]) && (weight[2]!= weight[3])){
					
						cc1= ((weight[0]+ weight[1]) == (weight[2]+ weight[3]));
						cc2= ((weight[0]+ weight[3])> (weight[2]+ weight[1]));
						cc3= ((weight[0]+ weight[2])< weight[1]);
						if((cc1== 1) && (cc2== 1) && (cc3== 1)){
							for(i= 0; i< 4; i++){
								if(weight[i]== 50)
									cout<<name[i]<<''<<weight[i]<<endl;
							}
							for(i= 0; i< 4; i++){
								if(weight[i]== 40)
									cout<<name[i]<<''<<weight[i]<<endl;
							}
							for(i= 0; i< 4; i++){
								if(weight[i]== 30)
									cout<<name[i]<<''<<weight[i]<<endl;
							}
							for(i= 0; i< 4; i++){
								if(weight[i]== 20)
									cout<<name[i]<<''<<weight[i]<<endl;
							}
							for(i= 0; i< 4; i++){
								if(weight[i]== 10)
									cout<<name[i]<<''<<weight[i]<<endl;
							}
						}
					}
				}
	
	return 0;
}


1000421
insertEnd_Seq(pSeqList palist, int x)
{
	if(palist->n >= palist->MAXNUM)  
	{
		cout << "" << endl;
		return -1;
	}
	palist->element[palist->n] = x;
	palist->n += 1;
	return 0;
}

add(pSeqList num1, pSeqList num2, pSeqList sum)
{
	int a = initialList_Seq( sum);   
	int i;
	for(i=0; i< MAX_LEN; i++) 
		
		sum->element[i] = num1->element[i] + num2->element[i];
	for(i=0; i<= MAX_LEN; i++)
		if(sum->element[i] > 9)
		{
			sum->element[i] -= 10;
			sum->element[i+1] += 1;
		}
	return 0;

}

printList_Seq(pSeqList result)  
{
	if(isNullList_Seq(result) == 0)  
		return -1;
	int i;
	int flag = 0;    
	for(i=MAX_LEN; i >=0; i--)
	{
		if(result->element[i] != 0)   
			flag = 1;
		if(flag == 0)  continue;
		cout << result->element[i];
	}
	if(flag == 0)  cout << 0;
	cout << endl;
	return 0;
}

main()
{
	pSeqList element1 = createNullList_Seq(MAX_LEN);
	pSeqList element2 = createNullList_Seq(MAX_LEN);
	pSeqList result = createNullList_Seq(MAX_LEN+1);

	char szLine1[MAX_LEN+10];
	char szLine2[MAX_LEN+10];
	cin >> szLine1 >> szLine2;

	int lenth1 = strlen(szLine1);
	int lenth2 = strlen(szLine2);
	
	if(lenth1>MAX_LEN ||  lenth2>MAX_LEN)
	{
		cout << "" << endl;
	    return 0;
	}
   
	int i;
	for(i = lenth1-1; i>=0; i --)
	{
		int a = insertEnd_Seq(element1, szLine1[i]-'');
		if(a == -1)
		{
			cout << "" << endl;
			return 0;
		}
	}
    for(i = lenth2-1; i>=0; i --)
	{
		int b = insertEnd_Seq(element2, szLine2[i]-'');
		if(b == -1)
		{
			cout << "" << endl;
			return 0;
		}
	}
	
	int c = add(element1, element2, result);
	if(c == -1)
	{
		cout << "" << endl;
		return 0;
	}
	
	printList_Seq(result);
	

	return 0;
}

1000422
min1(int i,int k)
{
    int j,temp=10000;
    for(j=1;j<=k;j++)
    {
                     if(temp>a[i][j]) temp=a[i][j];
    }
    return temp;
}
min2(int j,int k)
{
    int i,temp=10000;
    for(i=1;i<=k;i++)
    {
                     if(temp>a[i][j]) temp=a[i][j];
    }
    return temp;
}
main()
{
      int n,i,j,k,g,temp,ans;
      scanf("",&n);
      for(g=0;g<n;g++)
      {
                      for(i=1;i<=n;i++)
                      {
                                       for(j=1;j<=n;j++)
                                       {
                                                        scanf("",&a[i][j]);
                                       }
                      }
                      ans=0;
                      for(k=n;k>1;k--)
                      {
                                      for(i=1;i<=k;i++)
                                      {
                                                       temp=min1(i,k);
                                                       for(j=1;j<=k;j++)
                                                       {
                                                                        a[i][j]-=temp;
                                                       }
                                      }
                                      for(j=1;j<=k;j++)
                                      {
                                                       temp=min2(j,k);
                                                       for(i=1;i<=k;i++)
                                                       {
                                                                        a[i][j]-=temp;
                                                       }
                                      }
                                      ans+=a[2][2];
                                      for(i=2;i<k;i++)
                                      {
                                                      for(j=1;j<=k;j++)
                                                      {
                                                                       a[i][j]=a[i+1][j];
                                                      }
                                      }
                                      for(j=2;j<k;j++)
                                      {
                                                       for(i=1;i<k;i++)
                                                       {
                                                                       a[i][j]=a[i][j+1];
                                                       }
                                      }
                      }
                      printf("",ans);
      }
      
}
                                                       


1000423
leap(int Y)
{
    if(Y%400==0)
    return 1;
    if(Y%100==0)
    return 0;
    if(Y%4==0)
    return 1;
    else
    return 0;
}
main()
{
    int Y,M,D;
    scanf("",&Y,&M,&D);
    if(leap(Y)==0)
    {
                  if(M==1)
                  printf("",D);
                  if(M==2)
                  printf("",31+D);
                  if(M==3)
                  printf("",31+28+D);
                  if(M==4)
                  printf("",31+28+31+D);
                  if(M==5)
                  printf("",31+28+31+30+D);
                  if(M==6)
                  printf("",31+28+31+30+31+D);
                  if(M==7)
                  printf("",31+28+31+30+31+30+D);
                  if(M==8)
                  printf("",31+28+31+30+31+30+31+D);
                  if(M==9)
                  printf("",31+28+31+30+31+30+31+31+D);
                  if(M==10)
                  printf("",31+28+31+30+31+30+31+31+30+D);
                  if(M==11)
                  printf("",31+28+31+30+31+30+31+31+30+31+D);
                  if(M==12)
                  printf("",31+28+31+30+31+30+31+31+30+31+30+D);
    }
    else
    {
                  if(M==1)
                  printf("",D);
                  if(M==2)
                  printf("",31+D);
                  if(M==3)
                  printf("",31+29+D);
                  if(M==4)
                  printf("",31+29+31+D);
                  if(M==5)
                  printf("",31+29+31+30+D);
                  if(M==6)
                  printf("",31+29+31+30+31+D);
                  if(M==7)
                  printf("",31+29+31+30+31+30+D);
                  if(M==8)
                  printf("",31+29+31+30+31+30+31+D);
                  if(M==9)
                  printf("",31+29+31+30+31+30+31+31+D);
                  if(M==10)
                  printf("",31+29+31+30+31+30+31+31+30+D);
                  if(M==11)
                  printf("",31+29+31+30+31+30+31+31+30+31+D);
                  if(M==12)
                  printf("",31+29+31+30+31+30+31+31+30+31+30+D);
    }
    getchar();
    getchar();
}

1000424
main()
{
    char str[302],*ps;
    int i,count[26];
    for(i=0;i<26;i++){
       count[i]=0;
    }
    scanf("",str);
    for(ps=str;*ps!='\0';ps++){
          if(*ps==''){
              count[0]++;
		  }
	}
	if(count[0]!=0){
			  printf("",count[0]);
			  }
       
	for(ps=str;*ps!='\0';ps++){
		if(*ps==''){
              count[1]++;
		}
	}
			  if(count[1]!=0){
			  printf("",count[1]);
			  }
          
	
	for(ps=str;*ps!='\0';ps++){
					if(*ps==''){
              count[2]++;
					}
	}
			  if(count[2]!=0){
			  printf("",count[2]);
			  }
         
	 for(ps=str;*ps!='\0';ps++){
		 
		 if(*ps==''){
              count[3]++;
			    }
	 }
			  if(count[3]!=0){
			  printf("",count[3]);
			  }
        
	  for(ps=str;*ps!='\0';ps++){
		  if(*ps==''){
              count[4]++;
			  }
	  }
			  if(count[4]!=0){
			  printf("",count[4]);
			  }
          
	   for(ps=str;*ps!='\0';ps++){
		   if(*ps==''){
              count[5]++;
			    }
	   }
			  if(count[5]!=0){
			  printf("",count[5]);
			  }
         for(ps=str;*ps!='\0';ps++){
		   if(*ps==''){
              count[6]++;
			  }
	   }
			  if(count[6]!=0){
			  printf("",count[6]);
			  }
          
	    for(ps=str;*ps!='\0';ps++){
			if(*ps==''){
              count[7]++;
			   }
		} 
			  if(count[7]!=0){
			  printf("",count[7]);
			  }
         
		for(ps=str;*ps!='\0';ps++){
			if(*ps==''){
              count[8]++;
			   }
		} 
			  if(count[8]!=0){
			  printf("",count[8]);
			  }
         
		for(ps=str;*ps!='\0';ps++){
			if(*ps==''){
              count[9]++;
			  }
		} 
			  if(count[9]!=0){
			  printf("",count[9]);
			  }
          
		for(ps=str;*ps!='\0';ps++){
			if(*ps==''){
              count[10]++;
			   }
		} 
			  if(count[10]!=0){
			  printf("",count[10]);
			  }
         
		for(ps=str;*ps!='\0';ps++){
			if(*ps==''){
              count[11]++;
			   }
		}
			  if(count[11]!=0){
			  printf("",count[11]);
			  }
         
		 for(ps=str;*ps!='\0';ps++){
			 if(*ps==''){
              count[12]++;
			   }
		 }
			  if(count[12]!=0){
			  printf("",count[12]);
			  }
         
		  for(ps=str;*ps!='\0';ps++){
			  if(*ps==''){
              count[13]++;
			   }
		  }
			  if(count[13]!=0){
			  printf("",count[13]);
			  }
         
		  for(ps=str;*ps!='\0';ps++){
			   if(*ps==''){
              count[14]++;
			  }
		  } 
			  if(count[14]!=0){
			  printf("",count[14]);
			  }
          
		  for(ps=str;*ps!='\0';ps++){
			  if(*ps==''){
              count[15]++;
			   }
		  }
			  if(count[15]!=0){
			  printf("",count[15]);
			  }
         
		  for(ps=str;*ps!='\0';ps++){
			  if(*ps==''){
              count[16]++;
			   }
		  }
			  if(count[16]!=0){
			  printf("",count[16]);
			  }
         
		  for(ps=str;*ps!='\0';ps++){
			  if(*ps==''){
              count[17]++;
			  }
		  } 
			  if(count[17]!=0){
			  printf("",count[17]);
			  }
          
		  for(ps=str;*ps!='\0';ps++){
			  if(*ps==''){
              count[18]++;
			   }
		  } 
			  if(count[18]!=0){
			  printf("",count[18]);
			  }
         
		  for(ps=str;*ps!='\0';ps++){
			  if(*ps==''){
              count[19]++;
			   }
		  }
			  if(count[19]!=0){
			  printf("",count[19]);
			  }
         
		   for(ps=str;*ps!='\0';ps++){
			   if(*ps==''){
              count[20]++;
			   }
		   }
			  if(count[20]!=0){
			  printf("",count[20]);
			  }
			  
		for(ps=str;*ps!='\0';ps++){
					   if(*ps==''){
              count[21]++;
			   }
		}
			  if(count[21]!=0){
			  printf("",count[21]);
			  }
         
		 for(ps=str;*ps!='\0';ps++){
			 if(*ps==''){
              count[22]++;
			   }
		 } 
			  if(count[22]!=0){
			  printf("",count[22]);
			  }
         
		 for(ps=str;*ps!='\0';ps++){
			 if(*ps==''){
              count[23]++;
			  }
		 }
			  if(count[23]!=0){
			  printf("",count[23]);
			  }
          
		  for(ps=str;*ps!='\0';ps++){
			  if(*ps==''){
              count[24]++;
			  }
		  } 
			  if(count[24]!=0){
			  printf("",count[24]);
			  }
          
		  for(ps=str;*ps!='\0';ps++){
			  if(*ps==''){
              count[25]++;
			   }
		  }
			  if(count[25]!=0){
			  printf("",count[25]);
			  }
         
    int sum=0;
	for(i=0;i<26;i++){
		sum+=count[i];
	}
	if(sum==0){
	printf("");
	}
	return 0;
}
      


1000425
f(int n,int t[2000],int q[2000])
{
    int m=0,i=0; 
    for(i=n;i!=1;i--) 
    {
           if(t[0]>q[0])               
           {
               m=m+200;
               for(int k=0;k<i-1;k++) 
               {
                       t[k]=t[k+1];
                       q[k]=q[k+1];
               }
           }
           else
           { 
              if (t[0]<q[0])              
              {
                     m=m-200;
                 for(int k=0;k<i-1;k++) 
                 {
                       q[k]=q[k+1];
                 } 
              } 
              else
              {
                  if(t[i-1]>q[i-1])           
                  {
                         m=m+200;
                  }
                  else                                              
                 {

                   if(t[i-1]<q[0])
                         m=m-200;
					  else
						  m=m;
                         for(int k=0;k<i-1;k++)     
                         {
                              q[k]=q[k+1];
                         }

                  } 
               }
              } 
          
    }
    if (t[0]<q[0])                 
    {
        m=m-200; 
    }
    else 
    {
         if (t[0]>q[0])
         {
               m=m+200; 
         }
         else
         m=m; 
    }
    return m;
}
main()
{
    int n=2,t[2000],q[2000];
    for(int k=0;n!=0;k++) 
    {
        scanf("",&n);
        if(n!=0)
		{
                for(int i=0;i<n;i++)
				{
                        scanf("",&t[i]);
                }
                for(int i=0;i<n;i++) 
				{
                        scanf("",&q[i]);
                }

                for(int i=0;i<n;i++)                       
                {
                         for(int j=0;j<n-i-1;j++)
                         {
                             if(t[j]<t[j+1])
                             {
                                     int s;
                                         s=t[j];
                                      t[j]=t[j+1];
                                     t[j+1]=s;
                             }
                         }
                 }
                for(int i=0;i<n;i++)                         
                {
                         for(int j=0;j<n-i-1;j++)
                         {
                             if(q[j]<q[j+1])
                             {
                                     int s;
                                         s=q[j];
                                      q[j]=q[j+1];
                                     q[j+1]=s;
                             }
                         }
                 }
				if(k==0)
                printf("",f(n,t,q));
				printf("",f(n,t,q));
        } 
    }
    getchar();
    getchar();
} 


1000426
main ()
{
     int m,t,n,i,j,temp,sum,count;
     scanf ("",&n);
     int a[101][101];
     m=n;
     for (;n>0;n--)
     {
         sum=0;
         for (i=1;i<=m;i++)
         {
             for (j=1;j<=m;j++)
             {scanf ("",&a[i][j]);}
         }
         t=m;
         for (;t>2;t--)
         {
             for (i=1;i<=t;i++)
             {
                          temp=a[i][1];
                          for (j=2;j<=t;j++)
                          if (temp>a[i][j]) {temp=a[i][j];}
                          for (j=1;j<=t;j++)
                          a[i][j]=a[i][j]-temp;
             }
             for (j=1;j<=t;j++)
              {
                  count=0;
                  for (i=1;i<=t;i++)
                  {
                      if (a[i][j]==0) {break;}
                      else count++;
                  }
                  if (count==t)
                  {
                               temp=a[1][j];
                               for (i=2;i<=t;i++)
                               if (temp>a[i][j]) {temp=a[i][j];}
                               for (i=1;i<=t;i++)
                               a[i][j]=a[i][j]-temp;
                  }
                  else {continue;}
              }
              sum=sum+a[2][2];
             for (i=2;i<=t-1;i++)
                 for (j=1;j<=t;j++)
                     a[i][j]=a[i+1][j];
             for (i=1;i<=t-1;i++)
                 for (j=2;j<=t-1;j++)
                     a[i][j]=a[i][j+1];
         }
       for (i=1;i<=2;i++)
                          {
                              temp=a[i][1];
                              for (j=2;j<=2;j++)
                              if (temp>a[i][j]) {temp=a[i][j];}
                              for (j=1;j<=2;j++)
                              a[i][j]=a[i][j]-temp;
                          }
       for (j=1;j<=2;j++)
                          {
                              temp=a[1][j];
                              for (i=2;i<=2;i++)
                              if (temp>a[i][j]) {temp=a[i][j];}
                              for (i=1;i<=2;i++)
                              a[i][j]=a[i][j]-temp;
                          }
       sum=sum+a[2][2];
       printf ("",sum);
       }
}

1000427
main()
{
	struct time
	{
		int year;
		int month;
		int date;
		int dayoftheyear; 
	} nn;
    scanf("",&nn.year,&nn.month,&nn.date);
		if(((nn.year%4==0)&&(nn.year%100==0))||(nn.year%400==0))
		{

           switch(nn.month){
		    case 1:
			nn.dayoftheyear=nn.date;
			break;
			case 2:
			nn.dayoftheyear=nn.date+jan;
			break;
			case 3:
			nn.dayoftheyear=nn.date+jan+feb+1;
			break;
			case 4:
			nn.dayoftheyear=nn.date+jan+feb+mar+1;
			break;
			case 5:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+1;
			break;
			case 6:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+1;
			break;
			case 7:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+1;
			break;
			case 8:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+1;
			break;
			case 9:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug+1;
			break;
			case 10:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug+sep+1;
			break;
			case 11:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug+sep+oct+1;
			break;
			case 12:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug+sep+oct+nov+1;
			break;

		}
		}
		   else 
		   {

            switch(nn.month){
		    case 1:
			nn.dayoftheyear=nn.date;
			break;
			case 2:
			nn.dayoftheyear=nn.date+jan;
			break;
			case 3:
			nn.dayoftheyear=nn.date+jan+feb;
			break;
			case 4:
			nn.dayoftheyear=nn.date+jan+feb+mar;
			break;
			case 5:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr;
			break;
			case 6:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may;
			break;
			case 7:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun;
			break;
			case 8:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul;
			break;
			case 9:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug;
			break;
			case 10:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug+sep;
			break;
			case 11:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug+sep+oct;
			break;
			case 12:
			nn.dayoftheyear=nn.date+jan+feb+mar+apr+may+jun+jul+aug+sep+oct+nov;
			break;

		}
		   }
		printf("",nn.dayoftheyear);



	return 0;
}

1000428
main() {
	ABC p1, p2, p3;
	p1.name = '';
	p2.name = '';
	p3.name = '';
	for(p1.amount = 0; p1.amount < 3; p1.amount++) {
		for(p2.amount = 0; p2.amount < 3; p2.amount++) {
			for(p3.amount = 0; p3.amount < 3; p3.amount++)  {
				p1.statements = (p2.amount > p1.amount) + (p3.amount == p1.amount);  
				p2.statements = (p1.amount > p2.amount) + (p1.amount > p3.amount);
				p3.statements = (p3.amount > p2.amount) + (p2.amount > p1.amount);
				int a, b, c;                            
				a = (p1.amount > p2.amount && p1.statements < p2.statements) || (p1.amount < p2.amount && p1.statements > p2.statements);
				b = (p1.amount > p3.amount && p1.statements < p3.statements) || (p1.amount < p3.amount && p1.statements > p3.statements);
				c = (p3.amount > p2.amount && p3.statements < p2.statements) || (p3.amount < p2.amount && p3.statements > p2.statements);
				if(a + b + c == 3) {
					int temp1;  
					char temp2;
					if(p1.amount > p2.amount) {      
						temp1 = p1.amount;
						p1.amount = p2.amount;
						p2.amount = temp1;
						temp2 = p1.name;
						p1.name = p2.name;
						p2.name = temp2;
					}
					if(p1.amount > p3.amount) {
						temp1 = p1.amount;
						p1.amount = p3.amount;
						p3.amount = temp1;
						temp2 = p1.name;
						p1.name = p3.name;
						p3.name = temp2;
					}
					if(p2.amount > p3.amount) {
						temp1 = p3.amount;
						p3.amount = p2.amount;
						p2.amount = temp1;
						temp2 = p3.name;
						p3.name = p2.name;
						p2.name = temp2;
					}
					cout << p1.name << p2.name << p3.name << endl;  
					
					return 0;
				}
				}
			
		}
	}
	return 0;
}

1000429
virus(char a[][100],int n)
{
     char b[100][100];
     for(int i=1;i<=n;i++)
     {
             for(int j=1;j<=n;j++)
             {
                      b[i][j]=a[i][j];        
             }
     }                                                               
     for(int i=1;i<=n;i++)
     {
           for(int j=1;j<=n;j++)
           {
                  if(a[i][j]==''&&a[i][j-1]=='')
                  {                           
                       b[i][j-1]='';                           
                  } 
                  if(a[i][j]==''&&a[i][j+1]=='')
                  {
                      
                       b[i][j+1]='';                           
                  }
                  if(a[i][j]==''&&a[i-1][j]=='')
                  {
                      
                       b[i-1][j]='';                           
                  }
                  if(a[i][j]==''&&a[i+1][j]=='')
                  {
                      
                       b[i+1][j]='';                           
                  }                                                  
           }  
     }
     for(int i=1;i<=n;i++)
     {
          for(int j=1;j<=n;j++)
          {
                   a[i][j]=b[i][j];        
          }            
     }                                                               
}
main()
{
    int n,m,j,i,sum=0;
    char a[100][100];
    cin>>n;
    for( i=1;i<=n;i++)
    {
        for(int j=1;j<=n;j++)
        {
             cin>>a[i][j];   
        }    
    }
    cin>>m;
    for(i=1;i<m;i++)
    {
         virus(a,n);           
    }                                                                
    for(i=1;i<=n;i++)
    {
         for(j=1;j<=n;j++)
         {
                if(a[i][j]=='')
                {
                     sum++;           
                }          
         }            
    }
    cout<<sum;                                                        
    
    return 0;
}


1000430
Create()
{
  pHeader=(num*)malloc(sizeof(num));
  pHeader->nxt=NULL;     
}
Store(num *p,int x)
{
  num *p1;
  p1=(num*)malloc(sizeof(num));
  p1->nxt=p->nxt;
  p1->x=x;
  p->nxt=p1;   
}
main()
{
  char c1[200],c2[200];
  int i,x1,x2,n,s=0;
  Create();
  scanf("",c1);
  scanf("",c2);
  for(i=0;c1[i]!='\0';i++)  
	  x1=i;
  for(i=0;c2[i]!='\0';i++)  
	  x2=i;
  if((c1[0]!='' && c2[0]!='') || (c1[0]=='' && c2[0]==''))
  {
	  if(c1[0]=='' && c2[0]=='')
	  {
		for(i=0;i<x1;i++)
			c1[i]=c1[i+1];
		for(i=0;i<x2;i++)
			c2[i]=c2[i+1];
		x1--;
		x2--;
		printf("");
	  }
	  n=(x1>x2);
	  if(n==0)
	  {
		if(x1==x2)
		{
			for(i=0;i<x1;i++)
			{
				s+=c1[x1-i]-''+c2[x2-i]-''; 
				Store(pHeader,s%10);
				s=s/10;               
			}
			c2[0]=c2[0]+(c1[0]-'')+s;		
			Store(pHeader,(int)(c2[0]-''));
		}
		else
		{
		for(i=0;i<=x1;i++)
		{
			s+=c1[x1-i]-''+c2[x2-i]-''; 
			Store(pHeader,s%10);
			s=s/10;               
		}
		c2[x2-x1-1]=c2[x2-x1-1]+s;
		s=0;
		for(i=(x2-x1-1);i>0;i--) 
		{
			s+=c2[i]-'';
			Store(pHeader,s%10);
			s=s/10;
		}
		c2[0]+=s;
		Store(pHeader,c2[0]-'');
		}
	  }
	  else
	  {
		for(i=0;i<=x2;i++)
		{
			s+=c1[x1-i]-''+c2[x2-i]-''; 
			Store(pHeader,s%10);
			s=s/10;               
		}
		c1[x1-x2-1]=c1[x1-x2-1]+s;
		s=0;
		for(i=(x1-x2-1);i>0;i--) 
		{
			s+=c1[i]-'';
			Store(pHeader,s%10);
			s=s/10;
		}
		c1[0]+=s;
		Store(pHeader,c1[0]-'');
	 }
  } 
  if(c1[0]=='' || c2[0]=='')
  {
		if(c1[0]=='')
		{
			for(i=0;i<x1;i++)
				c1[i]=c1[i+1];
			x1--;
			n=1;
		}
		if(c2[0]=='')
		{
			for(i=0;i<x2;i++)
				c2[i]=c2[i+1];
			x2--;
			n=2;
		}
		if(x1<x2)
		{
			for(i=0;i<=x1;i++)
			{
				s=c2[x2-i]-''-(c1[x1-i]-''); 
				if(s<0)
				{   
					s+=10;
					c2[x2-1-i]--;
				}
				Store(pHeader,s);              
			}
			s=0;
			for(i=(x2-x1-1);i>0;i--) 
			{
				s+=c2[i];
				if(s<0)
				{
					s+=10;
					c2[i-1]--;
				}
				Store(pHeader,s);
			}
			Store(pHeader,c2[0]-'');
			if(n==2)
				printf("");
		}
		if(x1>x2)
		{
			for(i=0;i<=x2;i++)
			{
				s=c1[x1-i]-''-(c2[x2-i]-''); 
				if(s<0)
				{   
					s+=10;
					c1[x1-1-i]--;
				}
				Store(pHeader,s);              
			}
			s=0;
			for(i=(x1-x2-1);i>0;i--) 
			{
				s+=c1[i];
				if(s<0)
				{
					s+=10;
					c1[i-1]--;
				}
				Store(pHeader,s);
			}
			Store(pHeader,c1[0]-'');
			if(n==1)
				printf("");
		}
		if(x1==x2)
		{
			for(i=0;i<x2;i++)
			{
				s=c1[x1-i]-''-(c2[x2-i]-''); 
				if(s<0)
				{   
					s+=10;
					c1[x1-1-i]--;
				}
				Store(pHeader,s);              
			}
			s=c1[0]-''-(c2[0]-'');
			if(s<0)
			{
				s=-s;
				Store(pHeader,s);
				if(n==2)
					printf("");
			}
			if(s>0)
			{
				Store(pHeader,s);
				if(n==1)
					printf("");
			}
		}
  }
  num *p0;
  p0=pHeader->nxt;
  while(p0->x==0 && p0!=NULL)
  {
	  if(p0->nxt==NULL)
	  {
		  printf("",p0->x);
		  p0=p0->nxt;
		  break;
	  }
	  p0=p0->nxt;
  }
  while(p0!=NULL)
  {
	  printf("",p0->x);
	  p0=p0->nxt;
  }
  while(pHeader!=NULL)
  {
     p0=pHeader;
	 pHeader=pHeader->nxt;
     free(p0);                   
  } 
  return 0;
}

1000431
main()
{
	int h,i,j,k,l,m;
	scanf("",&h,&i,&j,&k,&l,&m);
	reverse(int x); 
	h=reverse(h);
    i=reverse(i);
	j=reverse(j);
	k=reverse(k);
	l=reverse(l);
	m=reverse(m);
	printf("",h,i,j,k,l,m);
}
reverse(int x)
{
	int a,b,c,d,e,f,y;
	if(x<0)
	{
		f=-1*x;
		x=f;
		a=x%10;
		b=(int)(x/10)%10;
		c=(int)(x/100)%10;
		d=(int)(x/1000)%10;
		e=(int)(x/10000);
		if(a!=0&&b==0&&c==0&&d==0&&e==0)
			y=-1*a;
		if(a==0&&b!=0&&c==0&&d==0&&e==0)
			y=-1*b;
		if(a!=0&&b!=0&&c==0&&d==0&&e==0)
			y=-1*(10*a+b);
		if(a==0&&b==0&&c!=0&&d==0&&e==0)
			y=-1*c;
		if(a==0&&b!=0&&c!=0&&d==0&&e==0)
			y=-1*(10*b+c);
		if(a!=0&&c!=0&&d==0&&e==0)
			y=-1*(100*a+10*b+c);
		if(a==0&&b==0&&c==0&&d!=0&&e==0)
			y=-1*d;
		if(a==0&&b==0&&c!=0&&d!=0&&e==0)
			y=-1*(10*c+d);
		if(a==0&&b!=0&&d!=0&&e==0)
			y=-1*(100*b+10*c+d);
		if(a!=0&&d!=0&&e==0)
			y=-1*(1000*a+100*b+10*c+d);
		if(a==0&&b==0&&c==0&&d==0&&e!=0)
			y=-1*e;
		if(a==0&&b==0&&c==0&&d!=0&&e!=0)
			y=-1*(10*d+e);
		if(a==0&&b==0&&c!=0&&e!=0)
			y=-1*(100*c+10*d+e);
		if(a==0&&b!=0&&e!=0)
			y=-1*(1000*b+100*c+10*d+e);
		if(a!=0&&e!=0)
			y=-1*(10000*a+1000*b+100*c+10*d+e);
	}
	if(x==0)
		y=0;
	else
	{
		a=x%10;
		b=(int)(x/10)%10;
		c=(int)(x/100)%10;
		d=(int)(x/1000)%10;
		e=(int)(x/10000);
		if(a!=0&&b==0&&c==0&&d==0&&e==0)
			y=a;
		if(a==0&&b!=0&&c==0&&d==0&&e==0)
			y=b;
		if(a!=0&&b!=0&&c==0&&d==0&&e==0)
			y=10*a+b;
		if(a==0&&b==0&&c!=0&&d==0&&e==0)
			y=c;
		if(a==0&&b!=0&&c!=0&&d==0&&e==0)
			y=10*b+c;
		if(a!=0&&c!=0&&d==0&&e==0)
			y=100*a+10*b+c;
		if(a==0&&b==0&&c==0&&d!=0&&e==0)
			y=d;
		if(a==0&&b==0&&c!=0&&d!=0&&e==0)
			y=10*c+d;
		if(a==0&&b!=0&&d!=0&&e==0)
			y=100*b+10*c+d;
		if(a!=0&&d!=0&&e==0)
			y=1000*a+100*b+10*c+d;
		if(a==0&&b==0&&c==0&&d==0&&e!=0)
			y=e;
		if(a==0&&b==0&&c==0&&d!=0&&e!=0)
			y=10*d+e;
		if(a==0&&b==0&&c!=0&&e!=0)
			y=100*c+10*d+e;
		if(a==0&&b!=0&&e!=0)
			y=1000*b+100*c+10*d+e;
		if(a!=0&&e!=0)
			y=10000*a+1000*b+100*c+10*d+e;
	}
	return(y);
}

1000432
work()
{
     int t,flag=0;
     if(a==2)
     {
             t=1;
             a=1;
     }
     if(b==2)
     {
             t=2;
             b=1;
     }
     if(c==2)
     {
             t=3;
             c=1;
     }
     if(d==2)
     {
             t=4;
             d=1;
     }
     if(a==1&&sign[1]&&b==1&&sign[2]&&!flag){flag=1;}
     if(a==1&&sign[1]&&c==1&&sign[3]&&!flag){flag=1;}
     if(a==1&&sign[1]&&d==1&&sign[4]&&!flag){flag=1;}
     
     if(b==1&&sign[2]&&c==1&&sign[3]&&!flag){flag=1;}
     if(b==1&&sign[2]&&d==1&&sign[4]&&!flag){flag=1;}

     if(c==1&&sign[3]&&d==1&&sign[4]&&!flag){flag=1;}
     if(t==1)a=2;
     if(t==2)b=2;
     if(t==3)c=2;
     if(t==4)d=2;
     if(flag)
     {
                       cout<<a<<''<<b<<''<<c<<''<<d<<''<<e<<endl;
     }
}


     
             
main()
{

    for(a=1;a<=5;a++)
    {
                     for(b=1;b<=5;b++)
                     {
                     if(a==b)continue;
                                    for(c=1;c<=5;c++)
                                    {
                                                     if(a==c||b==c)continue;
                                                        for(d=1;d<=5;d++)
                                                        {
                                                                         if(a==d||b==d||c==d)continue;
                                                                         for(e=4;e<=5;e++)
                                                                         {
                                                                                          if(a==e||b==e||c==e||d==e)continue;
                                                                                          sign[1]=sign[2]=sign[3]=sign[4]=sign[5]=0;
                                                                                          sign[1]=e==1;
                                                                                          sign[2]=b==2;
                                                                                          sign[3]=a==5;
                                                                                          sign[4]=c!=1;
                                                                                          sign[5]=d==1;
                                                                                          if(sign[1]+sign[2]+sign[3]+sign[4]+sign[5]==2)
                                                                                          {
                                                                                          work();
                                                                                          
                                                                                          }
                                                                         }
                                                        }
                                    }
                     }
    }
    return 0;
}


1000433
main()
{
	int n, i, j, k = 0;
	cin >> n;												
	int num = n * (n - 1) / 2;								
	int a[10][3];											
	int *p2 = *a;											
	for ( i = 0; i < n; i++)
		for ( j = 0; j < 3; j++)
			cin >> *p2++;									
	double b[10][10];
	double c[45];											
	double *p1 = c;
	for ( i = 0; i < n - 1; i++)
		for ( j = i + 1; j < n; j++)
			{
				double len1, len2, len3;					
				len1 = pow(a[i][0] - a[j][0], 2.0);
				len2 = pow(a[i][1] - a[j][1], 2.0);
				len3 = pow(a[i][2] - a[j][2], 2.0);
				b[i][j] = sqrt(len1 + len2 + len3);			
				*p1++ = b[i][j];							
			}
	p1 = c;													
	double temp;
	for(i = 0; i < num - 1; i++)							
		for (j = 0; j < num - 1 - i; j++)
		{
			if (*(p1 + j) < *(p1 + j + 1) )
			{
				temp = *(p1 + j);
				*(p1 + j) = *(p1 + j + 1);
				*(p1 + j + 1) = temp;
			}
		}
	for (k = 0; k < num; k++)
	{
		if (k == 0)											
		{
			for ( i = 0; i < n; i++)
				for ( j = i + 1; j < n; j++)
					if (fabs(b[i][j] - c[k]) < 1e-9)		
					{
						cout << fixed;
						cout << "" << a[i][0] << "" << a[i][1] << "" << a[i][2] << "" << "";
						cout << "" << a[j][0] << "" << a[j][1] << "" << a[j][2] << "";
						cout << "" << setprecision(2) << b[i][j] << endl;
					}
		}
		else												
		{
			while (fabs(c[k] - c[k - 1]) < 1e-9)			
				k++;
			for ( i = 0; i < n; i++)
				for ( j = i + 1; j < n; j++)
					if (fabs(b[i][j] - c[k]) < 1e-9)		
					{
						cout << fixed;
						cout << "" << a[i][0] << "" << a[i][1] << "" << a[i][2] << "" << "";
						cout << "" << a[j][0] << "" << a[j][1] << "" << a[j][2] << "";
						cout << "" << setprecision(2) << b[i][j] << endl;
					}
		}
    }
	return 0;
}



1000434
main()
{
	int count = 1, flag = 1;
	char a, last = '';
	while ((a = cin.get()) != '\n')
	{
		flag = 1;
		if (last >= '' && last <= '')
			if (a == last || a == last - 32)
			{
				count++;
				flag = 0;
			}
		if (last >= '' && last <= '')
			if (a == last || a == last + 32)
			{
				count++;
				flag = 0;
			}
		if (flag)
		{
			if (last != '')
				cout << count << "";
			switch (a)
			{
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			case '': cout << ""; break;
			}
			last = a;
			count = 1;
		}
	}
	cout << count << "" << endl;
	return 0;
}


1000435
main ()
{
	int A , B , C , D , E;
	int a , b , c , d , e;
	for ( a = 1; a <= 5; a++ )
	{
		for ( b = 1; b <= 5; b++ )
		{
			for ( c = 1; c <= 5; c++ )
			{
				for ( d = 1; d <= 5; d++ )
				{
					for ( e = 1; e <= 5; e++ )
					{
						if ( a != b && a != c && a != d && a!= e && b != c && b != d && b != e && c != d && c != e && d != e && e != 2 && e != 3 )
						{
							A = ( e == 1 );
							B = ( b == 2 );
							C = ( a == 5 );
							D = ( c != 1 );
							E = ( d == 1 );
							if ( ( ( a == 1 && b == 2 ) || ( a == 2 && b == 1 ) ) && A == 1 && B == 1 && C == 0 && D == 0 && E == 0 )
								cout << a << "" << b << "" << c << "" << d << "" << e << endl;
							if ( ( ( a == 1 && c == 2 ) || ( a == 2 && c == 1 ) ) && A == 1 && B == 0 && C == 1 && D == 0 && E == 0 )
								cout << a << "" << b << "" << c << "" << d << "" << e << endl;
							if ( ( ( a == 1 && d == 2 ) || ( a == 2 && d == 1 ) ) && A == 1 && B == 0 && C == 0 && D == 1 && E == 0 )
								cout << a << "" << b << "" << c << "" << d << "" << e << endl;
							if ( ( ( a == 1 && e == 2 ) || ( a == 2 && e == 1 ) ) && A == 1 && B == 0 && C == 0 && D == 0 && E == 1 )
								cout << a << "" << b << "" << c << "" << d << "" << e << endl;
							if ( ( ( b == 1 && c == 2 ) || ( b == 2 && c == 1 ) ) && A == 0 && B == 1 && C == 1 && D == 0 && E == 0 )
								cout << a << "" << b << "" << c << "" << d << "" << e << endl;
							if ( ( ( b == 1 && d == 2 ) || ( b == 2 && d == 1 ) ) && A == 0 && B == 1 && C == 0 && D == 1 && E == 0 )
								cout << a << "" << b << "" << c << "" << d << "" << e << endl;
							if ( ( ( b == 1 && e == 2 ) || ( b == 2 && e == 1 ) ) && A == 0 && B == 1 && C == 0 && D == 0 && E == 1 )
								cout << a << "" << b << "" << c << "" << d << "" << e << endl;
							if ( ( ( c == 1 && d == 2 ) || ( c == 2 && d == 1 ) ) && A == 0 && B == 0 && C == 1 && D == 1 && E == 0 )
								cout << a << "" << b << "" << c << "" << d << "" << e << endl;
							if ( ( ( c == 1 && e == 2 ) || ( c == 2 && e == 1 ) ) && A == 0 && B == 0 && C == 1 && D == 0 && E == 1 )
								cout << a << "" << b << "" << c << "" << d << "" << e << endl;
							if ( ( ( d == 1 && e == 2 ) || ( d == 2 && e == 1 ) ) && A == 0 && B == 0 && C == 0 && D == 1 && E == 1 )
								cout << a << "" << b << "" << c << "" << d << "" << e << endl;
						}
					}
				}
			}
		}
	}
}

1000436
main()
{
    int a,b,c,n,i,j;
    char s[500];
    int d[500]={0}; 
    scanf("",&n);
    scanf("",s);
    a=strlen(s);
    if(n==3)
    {for(i=0;i<a-2;i++)
    {
                      for(j=0;j<a-2;j++)
                      {
                      if(s[j]==s[i]&&s[j+1]==s[i+1]&&s[j+2]==s[i+2])
                      d[i]++;
                                      }
                    
                    }
    b=0;
    for(i=0;i<a-2;i++)
    {
                      if(b<d[i])
                      b=d[i];
                      }
                      if(b==1)
                      printf("");
                      else
                      {
                      printf("",b);
        for(i=0;i<a-2;i++)
    {
        if(d[i]==b)
        {
                   printf("",s[i],s[i+1],s[i+2]);
                    for(j=0;j<a-2;j++)
                      {
                      if(s[j]==s[i]&&s[j+1]==s[i+1]&&s[j+2]==s[i+2])
                      d[j]=0;
                                      }
                   }
        }}
     }
     if(n==2)
       {for(i=0;i<a-1;i++)
    {
                      for(j=0;j<a-1;j++)
                      {
                      if(s[j]==s[i]&&s[j+1]==s[i+1])
                      d[i]++;
                                      }
                    
                    }
    b=0;
    for(i=0;i<a-1;i++)
    {
                      if(b<d[i])
                      b=d[i];
                      }
                        if(b==1)
                      printf("");
                      else
                      {
                      printf("",b);
        for(i=0;i<a-1;i++)
    {
        if(d[i]==b)
        {
                   printf("",s[i],s[i+1]);
                    for(j=0;j<a-1;j++)
                      {
                      if(s[j]==s[i]&&s[j+1]==s[i+1])
                      d[j]=0;
                                      }
                   }
        }}
     }
         if(n==4)
    {for(i=0;i<a-3;i++)
    {
                      for(j=0;j<a-3;j++)
                      {
                      if(s[j]==s[i]&&s[j+1]==s[i+1]&&s[j+2]==s[i+2]&&s[j+3]==s[i+3])
                      d[i]++;
                                      }
                    
                    }
    b=0;
    for(i=0;i<a-3;i++)
    {
                      if(b<d[i])
                      b=d[i];
                      }
                        if(b==1)
                      printf("");
                      else
                      {
                      printf("",b);
        for(i=0;i<a-3;i++)
    {
        if(d[i]==b)
        {
                   printf("",s[i],s[i+1],s[i+2],s[i+3]);
                    for(j=0;j<a-3;j++)
                      {
                      if(s[j]==s[i]&&s[j+1]==s[i+1]&&s[j+2]==s[i+2]&&s[j+3]==s[i+3])
                      d[j]=0;
                                      }
                   }
        }}
     }
   
    
}


1000437
main()
{
	int y1,m1,d1,y2,m2,d2,num=0;
    cin>>y1>>m1>>d1;
	cin>>y2>>m2>>d2;
	if (y1==y2)
	{
	   if (y1%100==0)
	   {
	      if (y1%400==0)
			  num=num+X2(m2,d2)-X2(m1,d1);
		  else num=num+X1(m2,d2)-X1(m1,d1);
	   }
	   else 
	   {
	      if (y1%4==0)
			  num=num+X2(m2,d2)-X2(m1,d1);
		  else num=num+X1(m2,d2)-X1(m1,d1);
	   }
	}
	else 
	{
	if (y1%100==0)
	{
	   if (y1%400==0)
	   {
	      num=num+366-X2(m1,d1);
		  for (int t=y1+1;t<y2;t++)
		  {
			  if (t%100==0)
			  {
			     if (t%400==0)
				 num=num+366;
				 else num=num+365;
			  }
			  else 
			  {
			     if (t%4==0) num=num+366;
				 else num=num+365;
			  }
		  }
		  if (y2%100==0)
		  {
		     if (y2%400==0)
				 num=num+X2(m2,d2);
			 else num=num+X1(m2,d2);
		  }
		  else 
		  {
		     if (y2%4==0) num=num+X2(m2,d2);
			 else num=num+X1(m2,d2);
		  }
	   }
	   else 
	   {
	      num=num+365-X1(m1,d1);
		  for (int t=y1+1;t<y2;t++)
		  {
			  if (t%100==0)
			  {
			     if (t%400==0)
				 num=num+366;
				 else num=num+365;
			  }
			  else 
			  {
			     if (t%4==0) num=num+366;
				 else num=num+365;
			  }
		  }
		  if (y2%100==0)
		  {
		     if (y2%400==0)
				 num=num+X2(m2,d2);
			 else num=num+X1(m2,d2);
		  }
		  else 
		  {
		     if (y2%4==0) num=num+X2(m2,d2);
			 else num=num+X1(m2,d2);
		  }
	   }
	}
	else 
	{
	   if (y1%4==0)
	   {
	       num=num+366-X2(m1,d1);
		  for (int t=y1+1;t<y2;t++)
		  {
			  if (t%100==0)
			  {
			     if (t%400==0)
				 num=num+366;
				 else num=num+365;
			  }
			  else 
			  {
			     if (t%4==0) num=num+366;
				 else num=num+365;
			  }
		  }
		  if (y2%100==0)
		  {
		     if (y2%400==0)
				 num=num+X2(m2,d2);
			 else num=num+X1(m2,d2);
		  }
		  else 
		  {
		     if (y2%4==0) num=num+X2(m2,d2);
			 else num=num+X1(m2,d2);
		  }
	   }
	   else
	   {
	      num=num+365-X1(m1,d1);
		  for (int t=y1+1;t<y2;t++)
		  {
			  if (t%100==0)
			  {
			     if (t%400==0)
				 num=num+366;
				 else num=num+365;
			  }
			  else 
			  {
			     if (t%4==0) num=num+366;
				 else num=num+365;
			  }
		  }
		  if (y2%100==0)
		  {
		     if (y2%400==0)
				 num=num+X2(m2,d2);
			 else num=num+X1(m2,d2);
		  }
		  else 
		  {
		     if (y2%4==0) num=num+X2(m2,d2);
			 else num=num+X1(m2,d2);
		  }
	   }
	}
	}
	cout<<num<<endl;
	return 0;
}



1000438
main(){	
	int n,m,f,sum,i;
	char zhuan[50];
	scanf("",&n);
	char x[10];
	scanf("",x);
	scanf("",&m);
	f=strlen(x);      
	sum=0;
	int wei=0;
	for(i=0;i<f;i++){
		sum=sum+zheng(x[i])*pow(n,f-i-1);
	}
	for(i=49;i>=0;i--){
		zhuan[i]=fan(sum%m);
		wei++;
		sum=sum/m;
		if(sum==0)
			break;
	}
	for(i=50-wei;i<50;i++){         
		printf("",zhuan[i]);
	}
  return 0;
}

zheng(char x){
int m;
   switch(x){
case '':m=1;break;
case '':m=2;break;
case '':m=3;break;
case '':m=4;break;
	case '':m=5;break;
	case '':m=6;break;
	case '':m=7;break;
	case '':m=8;break;
	case '':m=9;break;
	case '':m=0;break;
	case '':m=10;break;
	case '':m=10;break;
	case '':m=11;break;
	case '':m=11;break;
case '':m=12;break;
case '':m=13;break;
	case '':m=14;break;
	case '':m=15;break;
	case '':m=16;break;
	case '':m=17;break;
case '':m=18;break;
	case '':m=19;break;
	case '':m=20;break;
	case '':m=21;break;
	case '':m=22;break;
	case '':m=23;break;
	case '':m=24;break;
	case '':m=25;break;
	case '':m=26;break;
	case '':m=27;break;
	case '':m=28;break;
	case '':m=29;break;
	case '':m=30;break;
	case '':m=31;break;
	case '':m=32;break;
	case '':m=33;break;
	case '':m=34;break;
	case '':m=35;break;
	case '':m=12;break;
	case '':m=13;break;
	case '':m=14;break;
	case '':m=15;break;
	case '':m=16;break;
	case '':m=17;break;
	case '':m=18;break;
	case '':m=19;break;
	case '':m=20;break;
	case '':m=21;break;
	case '':m=22;break;
	case '':m=23;break;
	case '':m=24;break;
	case '':m=25;break;
	case '':m=26;break;
	case '':m=27;break;
	case '':m=28;break;
	case '':m=29;break;
	case '':m=30;break;
	case '':m=31;break;
case '':m=32;break;
	case '':m=33;break;
	case '':m=34;break;
	case '':m=35;break;
	 
   }
   return m;
}

fan(int x){
	char m;
	switch(x){
	case 0:m='';break;
	case 1:m='';break;
	case 2:m='';break;
	case 3:m='';break;
	case 4:m='';break;
	case 5:m='';break;
	case 6:m='';break;
	case 7:m='';break;
	case 8:m='';break;
	case 9:m='';break;
	case 10:m='';break;
	case 11:m='';break;
	case 12:m='';break;
	case 13:m='';break;
	case 14:m='';break;
	case 15:m='';break;
	case 16:m='';break;
	case 17:m='';break;
	case 18:m='';break;
	case 19:m='';break;
	case 20:m='';break;
	case 21:m='';break;
	case 22:m='';break;
	case 23:m='';break;
	case 24:m='';break;
	case 25:m='';break;
	case 26:m='';break;
	case 27:m='';break;
	case 28:m='';break;
	case 29:m='';break;
	case 30:m='';break;
	case 31:m='';break;
	case 32:m='';break;
	case 33:m='';break;
	case 34:m='';break;
	case 35:m='';break;
	
	}
	return m;
}


1000439
main()
{
	int a,b,c,e,f,g,h,i,j,d1,d2,o;
	scanf("",&a,&b,&c,&e,&f,&g);   
	h=0;
	j=0;
	for(i=a+1;i<e;i++)   
	{
		if((i%4==0&&i%100!=0)||i%400==0)  h=h+1;
		j=j+1;
	}
	b-=1;
	f-=1;
	if((a%4==0&&a%100!=0)||a%400==0)   
	{
		switch(b)
		    {
		    case 0: d1=0;break;
			case 1: d1=31;break;
			case 2: d1=29+31;break;
			case 3: d1=31*2+29;break;
			case 4: d1=30+31*2+29;break;
			case 5: d1=31*3+30+29;break;
			case 6: d1=30*2+31*3+29;break;
			case 7: d1=31*4+30*2+29;break;
			case 8: d1=31*5+30*2+29;break;
            case 9: d1=31*5+30*3+29;break;
            case 10: d1=31*6+30*3+29;break;
            case 11: d1=31*6+30*4+29;break;
		    default: printf("");
			}
	}
	else
	{
		switch(b)
			{
			case 0: d1=0;break;
			case 1: d1=31;break;
			case 2: d1=28+31;break; 
			case 3: d1=31*2+28;break;
			case 4: d1=30+31*2+28;break;
			case 5: d1=31*3+30+28;break;
			case 6: d1=30*2+31*3+28;break;
			case 7: d1=31*4+30*2+28;break;
			case 8: d1=31*5+30*2+28;break;
			case 9: d1=31*5+30*3+28;break;
			case 10: d1=31*6+30*3+28;break;
            case 11: d1=31*6+30*4+28;break;
			default: printf("");
			}
	}
	if((e%4==0&&e%100!=0)||e%400==0)   
	{
		switch(f)
			{
			case 0: d2=0;break;
			case 1: d2=31;break;
			case 2: d2=29+31;break;
			case 3: d2=31*2+29;break;
			case 4: d2=30+31*2+29;break;
			case 5: d2=31*3+30+29;break;
			case 6: d2=30*2+31*3+29;break;
			case 7: d2=31*4+30*2+29;break;
			case 8: d2=31*5+30*2+29;break;
			case 9: d2=31*5+30*3+29;break;
			case 10: d2=31*6+30*3+29;break;
            case 11: d2=31*6+30*4+29;break;
		    default: printf("");
		    }
	}
	else
	{
		switch(f)
			{
			case 0: d2=0;break;
			case 1: d2=31;break;
			case 2: d2=28+31;break;
			case 3: d2=31*2+28;break;
			case 4: d2=30+31*2+28;break;
			case 5: d2=31*3+30+28;break;
			case 6: d2=30*2+31*3+28;break;
			case 7: d2=31*4+30*2+28;break;
			case 8: d2=31*5+30*2+28;break;
			case 9: d2=31*5+30*3+28;break;
			case 10: d2=31*6+30*3+28;break;
            case 11: d2=31*6+30*4+28;break;
	        default: printf("");
			}
	}
	if(a==e) o=d2+g-d1-c;  
	else 
		{ if((a%4==0&&a%100!=0)||a%400==0) o=365*j+h+d2+g+(366-d1-c);  
		else o=365*j+h+d2+g+(365-d1-c);}  
	printf("",o);
}

1000440
main()
{
    int i,n=0,k,p,count1=0,count2=0;
    char a[100][1000],b[1000][1000];
    for(i=0;i<100;i++)
    {
                      for(k=0;k<100;k++)
                      {
                                      b[i][k]='';
                      }
    }
    for(i=0;i<100;i++)
    {
                      scanf("",a[i]);
                      n++;
                      if(a[i][0]=='\0')
                      break;
    }
    for(i=0;i<n;i++)
    {
                      printf("",a[i]);
                      for(k=0;k<strlen(a[i]);k++)
                      {
                                                 if(a[i][k]=='')
                                                 {
                                                      for(p=k-1;p>=0;p--)
                                                      {
                                                                         if(a[i][p]==''){
                                                                                          a[i][p]='';
                                                                                          a[i][k]='';
                                                                                          break;
                                                                                          }
                                                                         if(a[i][p]==''){
                                                                              break;
                                                                              }
                                                      }
                                                 } 
                      }
                      for(k=0;k<strlen(a[i]);k++)
                      {
                                                 if(a[i][k]=='')
                                                 b[i][k]='';
                                                 if(a[i][k]=='')
                                                 b[i][k]='';
}
                      b[i][strlen(a[i])]='\0';
                      printf("",b[i]);
    }
    return 0;
} 

1000441
main ()
{
	int A, B, C, D, E, a, b, c, d, e;
	for(A = 1; A <= 5; A++)
		for(B = 1; B <= 5; B++)
			for(C = 1; C <= 5; C++)
				for(D = 1; D <= 5; D++)
					for(E = 1; E <= 5; E++)
					{
						a = (E == 1);
						b = (B == 2);
						c = (A == 5); 
						d = (C != 1);
						e = (D == 1);
					    if (a+b+c+d+e == 2)
						{
							if(((A == 1 && B == 2)||(A == 2 && B == 1)) && a==1 && b==1 && c==0 && d==0 && e==0 && (A-B)*(A-C)*(A-D)*(A-E)*(B-C)*(B-D)*(B-E)*(C-D)*(C-E)*(D-E)!=0 && (E!=2) && (E!=3))
								cout << A << "" << B << "" << C << "" << D << "" << E << endl;
							if(((A == 1 && C == 2)||(A == 2 && C == 1)) && a==1 && c==1 && b==0 && d==0 && e==0 && (A-B)*(A-C)*(A-D)*(A-E)*(B-C)*(B-D)*(B-E)*(C-D)*(C-E)*(D-E)!=0 && (E!=2) && (E!=3))
								cout << A << "" << B << "" << C << "" << D << "" << E << endl;
							if(((A == 1 && D == 2)||(A == 2 && D == 1)) && a==1 && d==1 && b==0 && c==0 && e==0 && (A-B)*(A-C)*(A-D)*(A-E)*(B-C)*(B-D)*(B-E)*(C-D)*(C-E)*(D-E)!=0 && (E!=2) && (E!=3))
								cout << A << "" << B << "" << C << "" << D << "" << E << endl;
							if(((A == 1 && E == 2)||(A == 2 && E == 1)) && a==1 && e==1 && b==0 && c==0 && d==0 && (A-B)*(A-C)*(A-D)*(A-E)*(B-C)*(B-D)*(B-E)*(C-D)*(C-E)*(D-E)!=0 && (E!=2) && (E!=3))
								cout << A << "" << B << "" << C << "" << D << "" << E << endl;
							if(((B == 1 && C == 2)||(B == 2 && C == 1)) && b==1 && c==1 && a==0 && d==0 && e==0 && (A-B)*(A-C)*(A-D)*(A-E)*(B-C)*(B-D)*(B-E)*(C-D)*(C-E)*(D-E)!=0 && (E!=2) && (E!=3))
								cout << A << "" << B << "" << C << "" << D << "" << E << endl;
							if(((B == 1 && D == 2)||(B == 2 && D == 1)) && b==1 && d==1 && a==0 && c==0 && e==0 && (A-B)*(A-C)*(A-D)*(A-E)*(B-C)*(B-D)*(B-E)*(C-D)*(C-E)*(D-E)!=0 && (E!=2) && (E!=3))
								cout << A << "" << B << "" << C << "" << D << "" << E << endl;
							if(((B == 1 && E == 2)||(B == 2 && E == 1)) && b==1 && e==1 && a==0 && c==0 && d==0 && (A-B)*(A-C)*(A-D)*(A-E)*(B-C)*(B-D)*(B-E)*(C-D)*(C-E)*(D-E)!=0 && (E!=2) && (E!=3))
								cout << A << "" << B << "" << C << "" << D << "" << E << endl;
							if(((C == 1 && D == 2)||(C == 2 && D == 1)) && c==1 && d==1 && a==0 && b==0 && e==0 && (A-B)*(A-C)*(A-D)*(A-E)*(B-C)*(B-D)*(B-E)*(C-D)*(C-E)*(D-E)!=0 && (E!=2) && (E!=3))
								cout << A << "" << B << "" << C << "" << D << "" << E << endl;
							if(((C == 1 && E == 2)||(C == 2 && E == 1)) && c==1 && e==1 && a==0 && b==0 && d==0 && (A-B)*(A-C)*(A-D)*(A-E)*(B-C)*(B-D)*(B-E)*(C-D)*(C-E)*(D-E)!=0 && (E!=2) && (E!=3))
								cout << A << "" << B << "" << C << "" << D << "" << E << endl;
							if(((D == 1 && E == 2)||(D == 2 && E == 1)) && d==1 && e==1 && a==0 && b==0 && c==0 && (A-B)*(A-C)*(A-D)*(A-E)*(B-C)*(B-D)*(B-E)*(C-D)*(C-E)*(D-E)!=0 && (E!=2) && (E!=3))
								cout << A << "" << B << "" << C << "" << D << "" << E << endl;
						}
					}
	return 0;
}

1000442
main()
{
    char a[110][110];
    int i,j,n,m,c;
    cin>>n;
    for(i=1;i<=n;i++)
    {
                     cin>>a[i];
    }
    cin>>m;
    for(i=1;i<=n;i++)
    {
                     for(j=0;j<=n-1;j++)
                     {
                                      if(a[i][j]=='')
                                      p++;
                     }
    }      
    f(int m,int n,char a[][110]);
    c=f(m,n,a);
    cout<<c;
    return 0;
}
f(int m,int n,char a[][110])
{
    int i,j;
    if(q==m) 
    return p;
    else
    {
    int b[110][110]={0};
    for(i=1;i<=n;i++)
    {
                     for(j=0;j<=n-1;j++)
                     {
                                        if((a[i][j]=='')&&(b[i][j]==0))
                                        {
                                             if(a[i][j+1]=='')
                                             {
                                                p++;
                                                a[i][j+1]='';
                                                b[i][j+1]=1;
                                             }
                                             if(a[i][j-1]=='')
                                             {
                                                           p++;
                                                           a[i][j-1]='';
                                                           b[i][j-1]=1;
                                             }     
                                             if(a[i+1][j]=='')
                                             {
                                                           p++;
                                                           a[i+1][j]='';
                                                           b[i+1][j]=1;
                                             }
                                             if(a[i-1][j]=='')
                                             {
                                                           p++;
                                                           a[i-1][j]='';
                                                           b[i-1][j]=1;
                                             }
                                        }
                     }
    }
                                             q++;
                                             f(m,n,a);
    } 
} 

1000443
main(){
	int i;
	int num[26];
	int sum=0;
	char zfc[500];
	for(i=0;i<26;i++){
		num[i]=0;
	}
    scanf("",zfc);
	for(i=0;i<strlen(zfc);i++){
		if(zfc[i]==''){
			num[0]+=1;
		}
		if(zfc[i]==''){
			num[1]+=1;
		}
		if(zfc[i]==''){
			num[2]+=1;
		}
		if(zfc[i]==''){
			num[3]+=1;
		}
		if(zfc[i]==''){
			num[4]+=1;
		}
		if(zfc[i]==''){
			num[5]+=1;
		}
		if(zfc[i]==''){
			num[6]+=1;
		}
		if(zfc[i]==''){
			num[7]+=1;
		}
		if(zfc[i]==''){
			num[8]+=1;
		}
		if(zfc[i]==''){
			num[9]+=1;
		}
		if(zfc[i]==''){
			num[10]+=1;
		}
		if(zfc[i]==''){
			num[11]+=1;
		}
		if(zfc[i]==''){
			num[12]+=1;
		}
		if(zfc[i]==''){
			num[13]+=1;
		}
		if(zfc[i]==''){
			num[14]+=1;
		}
		if(zfc[i]==''){
			num[15]+=1;
		}
		if(zfc[i]==''){
			num[16]+=1;
		}
		if(zfc[i]==''){
			num[17]+=1;
		}
		if(zfc[i]==''){
			num[18]+=1;
		}
		if(zfc[i]==''){
			num[19]+=1;
		}
		if(zfc[i]==''){
			num[20]+=1;
		}
		if(zfc[i]==''){
			num[21]+=1;
		}
		if(zfc[i]==''){
			num[22]+=1;
		}
		if(zfc[i]==''){
			num[23]+=1;
		}
		if(zfc[i]==''){
			num[24]+=1;
		}
		if(zfc[i]==''){
			num[25]+=1;
		}
	}	
		if(num[0]!=0)
			printf("",num[0]);
		if(num[1]!=0)
			printf("",num[1]);
if(num[2]!=0)
			printf("",num[2]);
if(num[3]!=0)
			printf("",num[3]);
if(num[4]!=0)
			printf("",num[4]);
if(num[5]!=0)
			printf("",num[5]);
if(num[6]!=0)
			printf("",num[6]);
if(num[7]!=0)
			printf("",num[7]);
if(num[8]!=0)
			printf("",num[8]);
if(num[9]!=0)
			printf("",num[9]);
if(num[10]!=0)
			printf("",num[10]);
if(num[11]!=0)
			printf("",num[11]);
if(num[12]!=0)
			printf("",num[12]);
if(num[13]!=0)
			printf("",num[13]);
if(num[14]!=0)
			printf("",num[14]);
if(num[15]!=0)
			printf("",num[15]);
if(num[16]!=0)
			printf("",num[16]);
if(num[17]!=0)
			printf("",num[17]);
if(num[18]!=0)
			printf("",num[18]);
if(num[19]!=0)
			printf("",num[19]);
if(num[20]!=0)
			printf("",num[20]);
if(num[21]!=0)
			printf("",num[21]);
if(num[22]!=0)
			printf("",num[22]);
if(num[23]!=0)
			printf("",num[23]);
if(num[24]!=0)
			printf("",num[24]);
if(num[25]!=0)
			printf("",num[25]);

for(i=0;i<26;i++){
sum+=num[i];

}
if(sum==0)
printf("");



		return 0;
}

1000444
main()
{
    int oy,om,od,ty,tm,td;
    cin>>oy>>om>>od>>ty>>tm>>td;
    int run[13]={0,31,29,31,30,31,30,31,31,30,31,30,31};
    int ping[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};
    int zong=0;
    int year,mon,day;
    if(oy==ty)
    {
              if(om!=tm)
              {
                                                   for(mon=om+1;mon<tm;mon++)
                                                   {
                                                                             if((oy%4==0&&oy%100!=0)||(oy%400==0))
                                                                             zong=zong+run[mon-1];
                                                                             else zong=zong+ping[mon-1];
                                                   }
                                                   if((oy%4==0&&oy%100!=0)||(oy%400==0))
                                                   zong=zong+run[om-1]-od+td;
                                                   else zong=zong+ping[om-1]-od+td;
              }
              if(om==tm)
              zong=td-od;
    }
    else 
    {                                                                               
    for(year=oy+1;year<ty;year++)
    {
                        if((year%4==0&&year%100!=0)||(year%400==0))
                        zong=zong+366;
                        else zong=zong+365;
    }
    if((oy%4==0&&oy%100!=0)||(oy%400==0))
    {
                                         for(mon=om+1;mon<=12;mon++)
                                         {
                                                                   zong=zong+run[mon];
                                         }
                                         zong=zong+run[om]-od+1;
    }
    else 
    {
         for(mon=om+1;mon<=12;mon++)
         {
                                  zong=zong+ping[mon];
         }
         zong=zong+ping[om]-od+1;
    }
    if((ty%4==0&&ty%100!=0)||(ty%400==0))
    {
                                         for(mon=1;mon<tm;mon++)
                                         {
                                                                   zong=zong+run[mon];
                                         }
                                         zong=zong+td-1;
    }
    else 
    {
         for(mon=1;mon<tm;mon++)
         {
                                  zong=zong+ping[mon];
         }
         zong=zong+td-1;
    }
    }
    cout<<zong;
    return 0;
}

1000445
InsertSort(int A[],int n)
{
    int i,j,key;
    for(j=1;j<n;j++)
    {
       key=A[j];
       
       i = j - 1;
       while( i >= 0 && A [i] > key )
       {
         A[i+1]=A[i];
         i=i-1;
       }
       A[i+1]=key;
    }
}


QuickSort(int array[],int left,int right)
{
   int pivot,leftIdx=left,rightIdx=right,temp;
   if( right - left > 0 ) 
      pivot = (left + right) / 2;
   while(leftIdx <= pivot && rightIdx >= pivot)
   {
             while( array[leftIdx] < array[pivot] && leftIdx <= pivot )
                 leftIdx = leftIdx + 1;
             while( array[rightIdx] > array[pivot] && rightIdx >= pivot )
                 rightIdx = rightIdx - 1;
             temp = array[leftIdx];
             array[leftIdx] = array[rightIdx];
             array[rightIdx] = temp;
             leftIdx = leftIdx + 1;
             rightIdx = rightIdx - 1;
             if(leftIdx - 1 == pivot)
             {
                 pivot =  rightIdx + 1;
                 rightIdx = rightIdx + 1;
             }
             if (rightIdx + 1 == pivot)
             {
                 pivot = leftIdx - 1;
                 leftIdx = leftIdx - 1;
             } 
    }
         QuickSort(array, left, pivot - 1);
         QuickSort(array, pivot + 1, right); 
}


Race(int n)
{
	int i,Nwin=0;
	int begin1,end1; 
	int begin2,end2;
        begin1=n-1; begin2=n-1;
	end1=0; end2=0;
        Sort(h1,n);
        Sort(h2,n);  
	for(i=0;i<n;i++) 
	{
           if ( h1[begin1]>h2[begin2] ) 
	   {
		   
	           Nwin++;
		   begin2--;
                   begin1--;		   
	   }
	   if( h1[end1]>h2[end2] ) 
	   {
                   Nwin++;
                   end1++;
		   end2++;
	   }
           else
           {
              if( h1[end1]<h2[begin2] ) 
                Nwin--;
              begin2--;
              end1++;   
           }
	}
	return Nwin*200;
}

ParseHorse(int n)
{
	int i;
	for(i=n-1;i>=0;i--)
	{
		scanf("",&(h1[i]));
	}
    for(i=n-1;i>=0;i--)
	{
		scanf("",&(h2[i]));
	}
}
main()
{
	int i,n=0;
	int result[50000];
	scanf("",&i);
    while(i)
	{
		ParseHorse(i);
		result[n]=Race(i);
		n++;
		scanf("",&i);
	}
    for(i=0;i<n;i++)
	{ 
		printf("",result[i]);
		if(i!=n-1)
		  printf("");
	}

	return 0;
}

1000446
creatalist(void)
{
	ablist alist = (ablist)malloc(sizeof(struct Addlist));
	if(alist != NULL)
	{
		alist -> element = (int*)malloc(sizeof(int)*MAXNUM);
		if (alist -> element)
		{
			alist ->n = 0;
			return alist;
		}
		delete(alist);
	}
	return NULL;
}

creatblist(void)
{
ablist blist = (ablist)malloc(sizeof(struct Addlist));
	if(blist != NULL)
	{
		blist -> element = (int*)malloc(sizeof(int)*MAXNUM);
		if (blist -> element)
		{
			blist ->n = 0;
			return blist;
		}
		delete(blist);
	}
}


main()
{
	int i,j,k;
	int lena,lenb,len;
	int carry = 0;

ablist alist = creatalist();
ablist blist = creatblist();

char achar[MAXNUM];
cin>>achar;

lena = strlen(achar);


char bchar[MAXNUM];
cin>>bchar;

lenb = strlen(bchar);




	


for( i=0; i<lena; i++)
{
	alist -> element[i] = achar[lena - i - 1] - '';
	
}
for( i=lena; i<MAXNUM; i++)
{
	alist -> element[i] = 0;
	
}
for( j=0; j<lenb; j++)
{
	blist -> element[j] = bchar[lenb - j - 1] - '';
	
}
for( j=lenb; j<MAXNUM; j++)
{
	blist -> element[j] = 0;
	
}






	
	if (lena <= lenb)
	len = lenb;
	else
		len = lena;
	

for (k=0; k<len; k++)
{
	alist -> element[k] = alist -> element[k] + blist -> element[k] + carry;
	
	if (alist -> element[k] >= 10)
	{
		alist -> element[k] -= 10;
		carry = 1;
	}
	else carry = 0;
	
	
}
if (carry == 1)
{
	alist -> element[len] = 1;







	

	for (i=len; i>=0; i--)
		cout<<alist -> element[i];
	return 0;
}
else
{
	j = 0;
	for (i=len-1; i>=0; i--)
	{
		if (alist -> element[i] == 0)
		{
			j++;
		}
		else
			break;
	}
	
		
	if (j != len)
		for( k=len-1-j; k>=0; k--)
		{
			
			cout<<alist -> element[k];
		}
	else
		cout<<""<<endl;
		return 0;
}
}
	
	
	

		
	
	
	
	
			

	
	


1000447
buqi(int num1[101],int num2[101])
{
	int i;
	num2[0]=1;
	num2[1]=3;
	num2[2]=0;
	if(num1[0]>num2[0]||(num1[0]==num2[0]&&num1[1]>=num2[1])) i=1;
	else
	{
		a++;
		num2[0]=0;
		num2[1]=1;
		num2[2]=3;
		
	}
}
qingling(int num3[101],int num6[101])
{
	int i,j;
	for(i=0;i<length;i++)
	{
		if(num3[i]!=0)
			break;
	}
	for(j=0;j<length-i;j++)
		num3[j]=num3[j+i];
	for(j=length-i;j<length;j++)
		num3[j]=0;
	length=length-i;
	
	if(num6[0]!=0)
		a=a+i-1;
	else a=a+i-2;
	
}
jianfa(int num4[101],int num5[101],int i)
{
	int j;
	while(true)
	{
		for(j=i-1;j>=0;j--)
		{
			if(num4[j]>=num5[j])
			{
				num4[j]=num4[j]-num5[j];
				
			}
			else 
			{
				num4[j-1]=num4[j-1]-1;
				num4[j]=num4[j]+10;
				num4[j]=num4[j]-num5[j];
				
			}
		}
		
		if(num5[0]==1)
		{
			if(num4[0]>num5[0]||(num4[0]==num5[0]&&num4[1]>=num5[1])) j=j;
			else break;
		}
		else 
		{
			if(num4[0]>num5[0]||num4[1]>num5[1]||(num4[1]==num5[1]&&num4[2]>=num5[2])) j=j;
			else break;
		}

		step++;
	}
}
main()
{
	char str1[101]={'\0'};
	int num1[101]={0},num2[101]={0};
	int i,weishu,biaoji=0,j;
	cin>>str1;
	length=strlen(str1);
	weishu=length;
	for(i=0;i<length;i++)
	{
		num1[i]=str1[i]-'';
	}
	while(true)
	{
		step=0;
		if(length==1)
			break;
		buqi(num1,num2);
		if(length==2&&num2[0]==0)
		{
			num1[0]=num1[0]*10+num1[1];
			sang[a]=0;
			break;
		}
		else
		{
			jianfa(num1,num2,length);
			biaoji=0;
			for(i=0;i<weishu;i++)
			{
				if(num1[i]!=0)
				{
					biaoji=1;
					break;
				}
			}
			sang[a]=step+1;
			
			if(biaoji==1)
			{
				qingling(num1,num2);
			}	
			else break;
		}
		a++;
	}
	if(weishu>1)
	{
		for(i=0;i<weishu-1;i++)
		{
			if(sang[i]!=0)
				break;
		}
		if(i==weishu-1)
			cout<<sang[0];
		else
		{
			for(j=i;j<weishu-1;j++)
				cout<<sang[j];
		}
	}
	else cout<<sang[0];
	cout<<endl;
	cout<<num1[0]<<endl;
		return 0;
}



1000448
main(){
	char a[40];
	char b[40];
	int k,t;
	gets(a);
	gets(b);
    for(k=0;a[k]!='\0';k++){
		switch(a[k]){
		        case '':a[k]='';break;
		        case '':a[k]='';break;
                case '':a[k]='';break;
		        case '':a[k]='';break;
		        case '':a[k]='';break;
		        case '':a[k]='';break;
                case '':a[k]='';break;
		        case '':a[k]='';break;
                case '':a[k]='';break;
		        case '':a[k]='';break;
		        case '':a[k]='';break;
		        case '':a[k]='';break;
			    case '':a[k]='';break;
		        case '':a[k]='';break;
                case '':a[k]='';break;
		        case '':a[k]='';break;
		        case '':a[k]='';break;
		        case '':a[k]='';break;
			    case '':a[k]='';break;
		        case '':a[k]='';break;
                case '':a[k]='';break;
		        case '':a[k]='';break;
		        case '':a[k]='';break;
		        case '':a[k]='';break;
 		        case '':a[k]='';break;
                case '':a[k]='';break;
		}
	}
    for(t=0;b[t]!='\0';t++){
		switch(b[t]){
                case '':b[t]='';break;
				case '':b[t]='';break;
                case '':b[t]='';break;
		        case '':b[t]='';break;
		        case '':b[t]='';break;
		        case '':b[t]='';break;
                case '':b[t]='';break;
		        case '':b[t]='';break;
                case '':b[t]='';break;
		        case '':b[t]='';break;
		        case '':b[t]='';break;
		        case '':a[t]='';break;
			    case '':b[t]='';break;
		        case '':b[t]='';break;
                case '':b[t]='';break;
		        case '':b[t]='';break;
		        case '':b[t]='';break;
		        case '':b[t]='';break;
			    case '':b[t]='';break;
		        case '':b[t]='';break;
                case '':b[t]='';break;
		        case '':b[t]='';break;
		        case '':b[t]='';break;
		        case '':b[t]='';break;
 		        case '':b[t]='';break;
                case '':b[t]='';break;
		}
	}
	if(strcmp(a,b)<0){
		puts("");
	}
	if(strcmp(a,b)==0){
		puts("");
	}
	if(strcmp(a,b)>0){
		puts("");
	}
	return 0;
}


1000449
main()
{
    int n,size,t,i,j,round,a[101][101],s[101],minx[101],miny[101];
    memset(s,0,sizeof(s));
    cin>>n;
    size=n;
	
    for(t=1;t<=n;t++)
    {
                     for(i=1;i<=n;i++)
                     {
                                      for(j=1;j<=n;j++)
                                      {
                                                       cin>>a[i][j];
                                      }
                                      
                     }
					 size=n;
                     for(round=1;round<=n-1;round++)
                     {
                                                    for(i=1;i<=size;i++)
                                                    {
                                                                        minx[i]=a[i][1];
                                                    }
                                                    for(i=1;i<=size;i++)
                                                    {
                                                                     for(j=1;j<=size;j++)
                                                                     {
                                                                                      if(a[i][j]<minx[i]) minx[i]=a[i][j];
                                                       
                                                       
                                                                     } 
                                                    }
                                                    for(i=1;i<=size;i++)
                                                     {
                                                                     for(j=1;j<=size;j++)
                                                                     {
                                                                                      a[i][j]=a[i][j]-minx[i];
                                                                     }
                                                     }
                                                     for(j=1;j<=size;j++)
                                                     {
                                                                         miny[j]=a[1][j];
                                                     }
                                                     for(j=1;j<=size;j++)
                                                    {
                                                                     for(i=1;i<=size;i++)
                                                                     {
                                                                                      if(a[i][j]<miny[j]) miny[j]=a[i][j];
                                                       
                                                       
                                                                     } 
                                                    }
                                                    for(i=1;i<=size;i++)
                                                     {
                                                                     for(j=1;j<=size;j++)
                                                                     {
                                                                                      a[i][j]=a[i][j]-miny[j];
                                                                     }
                                                     }
                                                     
                                                     s[t]=s[t]+a[2][2];
                                                     for(j=2;j<=size-1;j++)
                                                     {
                                                                      a[1][j]=a[1][j+1];                
                                                     }
                                                     for(i=2;i<=size-1;i++)
                                                     {
                                                                      a[i][1]=a[i+1][1];
                                                     }
                                                     for(i=2;i<=size-1;i++)
                                                     {
                                                                      for(j=2;j<=size-1;j++)
                                                                      {
                                                                                      a[i][j]=a[i+1][j+1]; 
                                                                      }
                                                     }
                                                     size--;
                                                     
                     }
                     
    }
    for(i=1;i<=n;i++)
    {
                     cout<<s[i]<<endl;
    }
    return 0;
} 


1000450
main()
{
    saima(int n,int qiwang[1000],int tianji[1000]);
    int n,i,j;
    int tianji[1000]={0},qiwang[1000]={0};
    scanf("",&n);
    for (i=0;n!=0;i++){
        for (j=0;j<n;j++){
            scanf("",&tianji[j]);
            }
        for (j=0;j<n;j++){
            scanf("",&qiwang[j]);
            }
        printf("",saima(n,qiwang,tianji));
        scanf("",&n);
        }
    return 0;
}
saima(int n,int qiwang[1000],int tianji[1000])
{
    seq(int n,int a[1000]);
    del(int i, int n, int a[1000]);
    int i,win;
    seq(n,tianji);
    seq(n,qiwang);
    win=0;
    while (n>0){
         if ((tianji[n-1]!=qiwang[n-1])&&(n>0)){
            if (tianji[n-1]>qiwang[n-1]){
                win=win+200;
                del(n-1,n,tianji);
                del(n-1,n,qiwang);
                n=n-1;
                }
            else{
                 win=win-200;
                 del(n-1,n,tianji);
                 del(0,n,qiwang);
                 n=n-1;                    
                 }
            }
        if ((tianji[0]!=qiwang[0])&&(n>0)){
            if (tianji[0]>qiwang[0]){
                win=win+200;
                del(0,n,tianji);
                del(0,n,qiwang);
                n=n-1;
                }
            else{
                 win=win-200;
                 del(n-1,n,tianji);
                 del(0,n,qiwang);
                 n=n-1;
                 }
            }
        if ((tianji[0]==qiwang[0])&&(tianji[n-1]==qiwang[n-1])&&(n>0)){
            if (tianji[n-1]<qiwang[0]){
                win=win-200;
                }
            del(n-1,n,tianji);
            del(0,n,qiwang);
            n=n-1;              
            }

        }
        return(win);    
}
seq(int n,int a[1000])
{
       int i,j,temp;
       for (i=0;i<n;i++){
        for (j=0;j<n-1-i;j++){
            if (a[j]<a[j+1]){
                             temp=a[j];
                             a[j]=a[j+1];
                             a[j+1]=temp;
                             }
            }
        }
     }
del(int i,int n,int a[1000])
{
     int j;
     for (j=i;j<n;j++){
         a[j]=a[j+1];
         }
     }


1000451
zl()
{
	for (int i=lb;i>=1;i--)
	{
		if (b[i]<48)
		{
			b[i]=b[i]+10;
			b[i-1]=b[i-1]-1;
		}
	}
}

main ()
{
    while (1)
    {
        b[1]=getchar();
        if (b[1]==-1)
        break;
        
        for (int i=2;i<=999;i++)
        {
            b[i]=getchar ();
            if (b[i]==10)
            {
                lb=i-1;
                break;
            }
        }
		b[0]=48;
        if (b[1]==49&&b[2]<=50)
        {
            lc=lb-2;
            for (int i=1;i<=lc;i++)
            {
                int f=100*(b[i]-48)+10*(b[i+1]-48)+(b[i+2]-48);
                switch (f/13)
                {
                    case 0 :c[i]=0+48;break;
                    case 1 :c[i]=1+48;b[i+1]=b[i+1]-1;b[i+2]=b[i+2]-3;break;
                    case 2 :c[i]=2+48;b[i+1]=b[i+1]-2;b[i+2]=b[i+2]-6;break;
                    case 3 :c[i]=3+48;b[i+1]=b[i+1]-3;b[i+2]=b[i+2]-9;break;
                    case 4 :c[i]=4+48;b[i+1]=b[i+1]-5;b[i+2]=b[i+2]-2;break;
                    case 5 :c[i]=5+48;b[i+1]=b[i+1]-6;b[i+2]=b[i+2]-5;break;
                    case 6 :c[i]=6+48;b[i+1]=b[i+1]-7;b[i+2]=b[i+2]-8;break;
                    case 7 :c[i]=7+48;b[i+1]=b[i+1]-9;b[i+2]=b[i+2]-1;break;
                    case 8 :c[i]=8+48;b[i]=b[i]-1;b[i+1]=b[i+1]-0;b[i+2]=b[i+2]-4;break;
                    case 9 :c[i]=9+48;b[i]=b[i]-1;b[i+1]=b[i+1]-1;b[i+2]=b[i+2]-7;break;
                }
				zl ();
            }
        }
        else
        {
            lc=lb-1;
            for (int i=0;i<=lc-1;i++)
            {
				int f;
				f=100*(b[i]-48)+10*(b[i+1]-48)+(b[i+2]-48);
                switch (f/13)
                {
					case 0 :c[i+1]=0+48;break;
					case 1 :c[i+1]=1+48;b[i+1]=b[i+1]-1;b[i+2]=b[i+2]-3;break;
                    case 2 :c[i+1]=2+48;b[i+1]=b[i+1]-2;b[i+2]=b[i+2]-6;break;
                    case 3 :c[i+1]=3+48;b[i+1]=b[i+1]-3;b[i+2]=b[i+2]-9;break;
                    case 4 :c[i+1]=4+48;b[i+1]=b[i+1]-5;b[i+2]=b[i+2]-2;break;
                    case 5 :c[i+1]=5+48;b[i+1]=b[i+1]-6;b[i+2]=b[i+2]-5;break;
                    case 6 :c[i+1]=6+48;b[i+1]=b[i+1]-7;b[i+2]=b[i+2]-8;break;
                    case 7 :c[i+1]=7+48;b[i+1]=b[i+1]-9;b[i+2]=b[i+2]-1;break;
                    case 8 :c[i+1]=8+48;b[i]=b[i]-1;b[i+1]=b[i+1]-0;b[i+2]=b[i+2]-4;break;
                    case 9 :c[i+1]=9+48;b[i]=b[i]-1;b[i+1]=b[i+1]-1;b[i+2]=b[i+2]-7;break;
                }
				zl ();
            }
        }
        
        for (int i=1;i<=lc;i++)
        putchar (c[i]);
		if (lc==0)
		cout <<""<<endl;
        putchar (10);
        cout <<(10*(b[lb-1]-48)+(b[lb]-48))<<endl;
    }
    return 0;
}


1000452
main()
{
	int m,i,j,number[1000],auther[26],total=0;
	char name[1000][27];
    scanf("",&m);
	for(i=0;i<m;i++){
		scanf("",&number[i],name[i]);
		int n;
		n=strlen(name[i]);
		for(j=0;j<n;j++){
			switch(name[i][j]){
			case'':auther[0]++;break;
			case'':auther[1]++;break;
			case'':auther[2]++;break;	
            case'':auther[3]++;break;
			case'':auther[4]++;break;
			case'':auther[5]++;break;
			case'':auther[6]++;break;
			case'':auther[7]++;break;
			case'':auther[8]++;break;
			case'':auther[9]++;break;
			case'':auther[10]++;break;
			case'':auther[11]++;break;
			case'':auther[12]++;break;
			case'':auther[13]++;break;
			case'':auther[14]++;break;
			case'':auther[15]++;break;
			case'':auther[16]++;break;
			case'':auther[17]++;break;
			case'':auther[18]++;break;
			case'':auther[19]++;break;
			case'':auther[20]++;break;
			case'':auther[21]++;break;
			case'':auther[22]++;break;
			case'':auther[23]++;break;
			case'':auther[24]++;break;
            case'':auther[25]++;break;
			}
		}
	}
	int max=auther[0],k,t=0;
	for(k=1;k<26;k++){
		if(auther[k]>max){
			max=auther[k];
		    t=k;
		}
	}
	printf("",f(t));
	for(i=0;i<m;i++){
        int q;
		q=strlen(name[i]);
		for(j=0;j<q;j++){
			if(name[i][j]==f(t))
				total++;
		}
	}
	printf("",total);
	for(i=0;i<m;i++){
        int p;
		p=strlen(name[i]);
		for(j=0;j<p;j++){
			if(name[i][j]==f(t))
				printf("",number[i]);
		}
	}
	return 0;
}
	
	f(int y){
			char x;
			switch(y){
			case 0:x='';break;
			case 1:x='';break;
			case 2:x='';break;
			case 3:x='';break;
			case 4:x='';break;
			case 5:x='';break;
			case 6:x='';break;
            case 7:x='';break;
			case 8:x='';break;
			case 9:x='';break;
			case 10:x='';break;
			case 11:x='';break;
			case 12:x='';break;
			case 13:x='';break;
			case 14:x='';break;
			case 15:x='';break;
			case 16:x='';break;
			case 17:x='';break;
            case 18:x='';break;
			case 19:x='';break;
			case 20:x='';break;
			case 21:x='';break;
			case 22:x='';break;
			case 23:x='';break;
			case 24:x='';break;
			case 25:x='';break;
			}
			return x;
		}
			



1000453
f(char a[],char b[],char * p)
{
     int m,n,N=0;
     m=strlen(a);
     n=strlen(b);
     for (int i=0;i<m;i++)
     {
         if (a[m-1-i]+b[n-1-i]-''-''<10)
         p[n-1-i]=a[m-1-i]+b[n-1-i]-'';
         else
         {
             p[n-1-i]=a[m-1-i]+b[n-1-i]-''-10;
             if(n-2-i>=n-m)
             b[n-2-i]++;
             else
             N=1;
         }
     }
     if (N==0)
     {
              for(int i=0;i<n-m;i++)
              p[i]=b[i];
              p[n]=0;
     }
     else
     {
                  if(m==n)
                  {
                          for(int i=0;i<n;i++)
                          p[n-i]=p[n-1-i];
                          p[0]='';
                          p[n+1]=0;
                  }
                  else
                  {
                      for(int i=0;i<n-m;i++)
                      {
                          if(b[n-m-1-i]<'')
                          {
                              b[n-m-1-i]++;
                              break;
                          }
                          else
                          {
                              b[n-m-1-i]='';
                              N=2;
                          }
                      }
                      if(N==1)
                      {
                          for(int i=0;i<n-m;i++)
                          p[i]=b[i];
                          p[n]=0;
                      }
                      else
                      {
                          p[0]='';
                          for(int i=0;i<m;i++)
                          p[n-i]=p[n-1-i];
                          for(int i=0;i<n-m;i++)
                          p[i+1]=b[i];
                          p[n+1]=0;
                      }
                  }
                  
     } 
}
main()
{
    char a[260];
    char b[260];
    char c[260];
    gets(a);
    gets(b);
    
    int m,n,i;
    m=strlen(a);
    n=strlen(b);
    while(a[0]==''&&a[1]!=0)
    {
                 for(int j=0;j<m;j++)
                 a[j]=a[j+1];
                 m--;
                 a[m]=0;
    }
    while(b[0]==''&&b[1]!=0)
    {
                 for(int j=0;j<n;j++)
                 b[j]=b[j+1];
                 n--;
                 b[n]=0;
    }
    if(m>n)
    f(b,a,c);
    f(a,b,c);
    printf("",c);
}

1000454
main()
{
    int i,j,k,m,n;
    int *y,*m1,*m2;
    y=(int *)malloc(200*sizeof(int));
    m2=(int *)malloc(200*sizeof(int));
    m1=(int *)malloc(200*sizeof(int));
    scanf("",&n);
    for(i=0;i<n;i++)
    {
                    scanf("",y+i,m1+i,m2+i);
    }
    judge(int x,int y,int z);
    for(i=0;i<n;i++)
    {
                    if(i>0)
                    {
                           printf("");
                    }
                    judge(*(y+i),*(m1+i),*(m2+i));
    }
    return 0;
}

judge(int x,int y,int z)
{
     int i,j,a;
     p(int x);
     r(int x);
     if((x%4==0&&x%100!=0)||x%400==0)
     {
                                     i=r(y);
                                     j=r(z);
     }
     else
     {
         i=p(y);
         j=p(z);
     }
     if(i>j)
     {
            a=(i-j)%7;
     }
     else
     {
         a=(j-i)%7;
     }
     if(a==0)
     {
             printf("");
     }
     else
     {
         printf("");
     }
}

p(int x)
{
     int i;
     switch(x)
     {
               case 1:i=0;break;
               case 2:i=31;break;
               case 3:i=59;break;
               case 4:i=90;break;
               case 5:i=120;break;
               case 6:i=151;break;
               case 7:i=181;break;
               case 8:i=212;break;
               case 9:i=243;break;
               case 10:i=273;break;
               case 11:i=304;break;
               case 12:i=334;break;
     }
     return i;
}

r(int x)
{
     int i;
     switch(x)
     {
               case 1:i=0;break;
               case 2:i=31;break;
               case 3:i=59+1;break;
               case 4:i=90+1;break;
               case 5:i=120+1;break;
               case 6:i=151+1;break;
               case 7:i=181+1;break;
               case 8:i=212+1;break;
               case 9:i=243+1;break;
               case 10:i=273+1;break;
               case 11:i=304+1;break;
               case 12:i=334+1;break;
     }
     return i;
}

1000455
main()
{
	int y1,y2,m1,m2,d1,d2;
	int i,j,a;
	i=1;
	j=1;
	scanf("",&y1,&m1,&d1);
	scanf("",&y2,&m2,&d2);
	int leap;
	long int yi;
	yi=0;
	while (i<y1)
	{
		if(i%4==0)
		{
			if(i%100==0)
			{
				if(i%400==0)
					leap=1;
				else
					leap=0;
			}
			else leap=1;
		}
		else
			leap=0;
		i++;
		if(leap)
			yi=yi+366;
		else
			yi=yi+365;
	}
	int l;
	if(y1%4==0)
		{
			if(y1%100==0)
			{
				if(y1%400==0)
					l=1;
				else
					l=0;
			}
			else l=1;
		}
		else
			l=0;
		if(l=1)
			switch(m1)
{
case 1:yi=yi+d1;break;
case 2:yi=yi+31+d1;break;
case 3:yi=yi+31+29+d1;break;
case 4:yi=yi+31+29+31+d1;break;
case 5:yi=yi+31+29+31+30+d1;break;
case 6:yi=yi+31+29+31+30+31+d1;break;
case 7:yi=yi+31+29+31+30+31+30+d1;break;
case 8:yi=yi+31+29+31+30+31+30+31+d1;break;
case 9:yi=yi+31+29+31+30+31+30+31+31+d1;break;
case 10:yi=yi+31+29+31+30+31+30+31+31+30+d1;break;
case 11:yi=yi+31+29+31+30+31+30+31+31+30+31+d1;break;
case 12:yi=yi+31+29+31+30+31+30+31+31+30+31+30+d1;break;
		}
		switch(m1)
{
case 1 :yi=yi+d1;break;
case 2 :yi=yi+31+d1;break;
case 3 :yi=yi+31+28+d1;break;
case 4 :yi=yi+31+28+31+d1;break;
case 5 :yi=yi+31+28+31+30+d1;break;
case 6 :yi=yi+31+28+31+30+31+d1;break;
case 7 :yi=yi+31+28+31+30+31+30+d1;break;
case 8 :yi=yi+31+28+31+30+31+30+31+d1;break;
case 9 :yi=yi+31+28+31+30+31+30+31+31+d1;break;
case 10 :yi=yi+31+28+31+30+31+30+31+31+30+d1;break;
case 11 :yi=yi+31+28+31+30+31+30+31+31+30+31+d1;break;
case 12 :yi=yi+31+28+31+30+31+30+31+31+30+31+30+d1;break;
		}
long int yj;
yj=0;
while (j<y2)
	{
		if(j%4==0)
		{
			if(j%100==0)
			{
				if(j%400==0)
					leap=1;
				else
					leap=0;
			}
			else leap=1;
		}
		else
			leap=0;
		j++;
		if(leap)
			yj=yj+366;
		else
			yj=yj+365;
	}
	int l2;
	if(y2%4==0)
		{
			if(y2%100==0)
			{
				if(y2%400==0)
					l2=1;
				else
					l2=0;
			}
			else l2=1;
		}
		else
			l2=0;
		if(l2=1)
			switch(m2)
{
case 1 :yj=yj+d2;break;
case 2 :yj=yj+31+d2;break;
case 3 :yj=yj+31+29+d2;break;
case 4 :yj=yj+31+29+31+d2;break;
case 5 :yj=yj+31+29+31+30+d2;break;
case 6 :yj=yj+31+29+31+30+31+d2;break;
case 7 :yj=yj+31+29+31+30+31+30+d2;break;
case 8 :yj=yj+31+29+31+30+31+30+31+d2;break;
case 9 :yj=yj+31+29+31+30+31+30+31+31+d2;break;
case 10 :yj=yj+31+29+31+30+31+30+31+31+30+d2;break;
case 11 :yj=yj+31+29+31+30+31+30+31+31+30+31+d2;break;
case 12 :yj=yj+31+29+31+30+31+30+31+31+30+31+30+d2;break;
		}
		switch(m2)
{
case 1 :yj=yj+d2;break;
case 2 :yj=yj+31+d2;break;
case 3 :yj=yj+31+28+d2;break;
case 4 :yj=yj+31+28+31+d2;break;
case 5 :yj=yj+31+28+31+30+d2;break;
case 6 :yj=yj+31+28+31+30+31+d2;break;
case 7 :yj=yj+31+28+31+30+31+30+d2;break;
case 8 :yj=yj+31+28+31+30+31+30+31+d2;break;
case 9 :yj=yj+31+28+31+30+31+30+31+31+d2;break;
case 10 :yj=yj+31+28+31+30+31+30+31+31+30+d2;break;
case 11 :yj=yj+31+28+31+30+31+30+31+31+30+31+d2;break;
case 12 :yj=yj+31+28+31+30+31+30+31+31+30+31+30+d2;break;
		}
	a=yj-yi;
	printf("",a);
	return 0;

}

1000456
main()
{
	int a,b,c,d,e,i,j,k,s,a1,b1,c1,d1,e1;
	for(a=1;a<6;a++)
		for(b=1;b<6;b++)
			for(c=1;c<6;c++)
				for(d=1;d<6;d++)
					for(e=1;e<6;e++)
						if((e!=2)&&(e!=3))
						{
	a1=(e==1);
	b1=(b==2);
	c1=(a==5);
	d1=(c!=1);
	e1=(d==1);
							if((((a==1)&&(b==2))||((a==2)&&(b==1)))&&(a1)&&(b1)&&(!c1)&&(!d1)&&(!e1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=e)&&(c!=e)&&(d!=e)&&(b!=d)&&(c!=d))
							{	cout<<a<<''<<b<<''<<c<<''<<d<<''<<e<<endl;
							  return 0;
							}
                            if((((a==1)&&(c==2))||((a==2)&&(c==1)))&&(a1)&&(!b1)&&(c1)&&(!d1)&&(!e1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=e)&&(c!=e)&&(d!=e)&&(b!=d)&&(c!=d))
							{	cout<<a<<''<<b<<''<<c<<''<<d<<''<<e<<endl;
							  return 0;
							}
                             if((((a==1)&&(d==2))||((a==2)&&(d==1)))&&(a1)&&(!b1)&&(!c1)&&(d1)&&(!e1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=e)&&(c!=e)&&(d!=e)&&(b!=d)&&(c!=d))
							{	cout<<a<<''<<b<<''<<c<<''<<d<<''<<e<<endl;
							  return 0;
							}

							 if((((a==1)&&(e==2))||((a==2)&&(e==1)))&&(a1)&&(!b1)&&(!c1)&&(!d1)&&(e1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=e)&&(c!=e)&&(d!=e)&&(b!=d)&&(c!=d))
							{	cout<<a<<''<<b<<''<<c<<''<<d<<''<<e<<endl;
							  return 0;
							}

							 if((((c==1)&&(b==2))||((c==2)&&(b==1)))&&(!a1)&&(b1)&&(c1)&&(!d1)&&(!e1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=e)&&(c!=e)&&(d!=e)&&(b!=d)&&(c!=d))
							{	cout<<a<<''<<b<<''<<c<<''<<d<<''<<e<<endl;
							  return 0;
							}

							 if((((d==1)&&(b==2))||((d==2)&&(b==1)))&&(!a1)&&(b1)&&(!c1)&&(d1)&&(!e1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=e)&&(c!=e)&&(d!=e)&&(b!=d)&&(c!=d))
							{	cout<<a<<''<<b<<''<<c<<''<<d<<''<<e<<endl;
							  return 0;
							}

							 if((((e==1)&&(b==2))||((e==2)&&(b==1)))&&(!a1)&&(b1)&&(!c1)&&(!d1)&&(e1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=e)&&(c!=e)&&(d!=e)&&(b!=d)&&(c!=d))
							{	cout<<a<<''<<b<<''<<c<<''<<d<<''<<e<<endl;
							  return 0;
							}

							 if((((c==1)&&(d==2))||((c==2)&&(d==1)))&&(!a1)&&(!b1)&&(c1)&&(d1)&&(!e1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=e)&&(c!=e)&&(d!=e)&&(b!=d)&&(c!=d))
							{	cout<<a<<''<<b<<''<<c<<''<<d<<''<<e<<endl;
							  return 0;
							}

							 if((((c==1)&&(e==2))||((c==2)&&(e==1)))&&(!a1)&&(!b1)&&(c1)&&(!d1)&&(e1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=e)&&(c!=e)&&(d!=e)&&(b!=d)&&(c!=d))
							{	cout<<a<<''<<b<<''<<c<<''<<d<<''<<e<<endl;
							  return 0;
							}

							 if((((d==1)&&(e==2))||((d==2)&&(e==1)))&&(!a1)&&(!b1)&&(!c1)&&(d1)&&(e1)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=e)&&(c!=e)&&(d!=e)&&(b!=d)&&(c!=d))
							{	cout<<a<<''<<b<<''<<c<<''<<d<<''<<e<<endl;
							  return 0;
							}
						}
}


1000457
main(){
    for(a=1;a<=5;a++)
                     for(b=1;b<=5;b++)
                                      for(c=1;c<=5;c++)
                                                       for(d=1;d<=5;d++)
                                                                        for(e=1;e<=5;e++)
                                                                                         if((e!=2)&&(e!=3)&&(a!=b)&&(a!=c)&&(a!=d)&&(a!=e)&&(b!=c)&&(b!=d)&&(b!=e)&&(c!=d)&&(c!=e)&&(d!=e)){
                                                                                                                                                                                           A=(e==1);
                                                                                                                                                                                           B=(b==2);
                                                                                                                                                                                           C=(a==5);
                                                                                                                                                                                           D=(c!=1);
                                                                                                                                                                                           E=(d==1);
                                                                                                                                                                                           if((A==1)&&(B==1)&&(C==0)&&(D==0)&&(E==0)&&( ((a==1)&&(b==2)) || ((a==2)&&(b==1)) ))
                                                                                                                                                                                                                                     printf("",a,b,c,d,e);
                                                                                                                                                                                           if((A==1)&&(B==0)&&(C==1)&&(D==0)&&(E==0)&&( ((a==1)&&(c==2)) || ((a==2)&&(c==1)) ))
                                                                                                                                                                                                                                     printf("",a,b,c,d,e);
                                                                                                                                                                                           if((A==1)&&(B==0)&&(C==0)&&(D==1)&&(E==0)&&( ((a==1)&&(d==2)) || ((a==2)&&(d==1)) ))
                                                                                                                                                                                                                                     printf("",a,b,c,d,e);
                                                                                                                                                                                           if((A==1)&&(B==0)&&(C==0)&&(D==0)&&(E==1)&&( ((a==1)&&(e==2)) || ((a==2)&&(e==1)) ))
                                                                                                                                                                                                                                     printf("",a,b,c,d,e);
                                                                                                                                                                                           if((A==0)&&(B==1)&&(C==1)&&(D==0)&&(E==0)&&( ((c==1)&&(b==2)) || ((c==2)&&(b==1)) ))
                                                                                                                                                                                                                                     printf("",a,b,c,d,e);
                                                                                                                                                                                           if((A==0)&&(B==1)&&(C==0)&&(D==1)&&(E==0)&&( ((d==1)&&(b==2)) || ((d==2)&&(b==1)) ))
                                                                                                                                                                                                                                     printf("",a,b,c,d,e);
                                                                                                                                                                                           if((A==0)&&(B==1)&&(C==0)&&(D==0)&&(E==1)&&( ((e==1)&&(b==2)) || ((e==2)&&(b==1)) ))
                                                                                                                                                                                                                                     printf("",a,b,c,d,e);
                                                                                                                                                                                           if((A==0)&&(B==0)&&(C==1)&&(D==1)&&(E==0)&&( ((d==1)&&(c==2)) || ((d==2)&&(c==1)) ))
                                                                                                                                                                                                                                     printf("",a,b,c,d,e);
                                                                                                                                                                                           if((A==0)&&(B==0)&&(C==1)&&(D==0)&&(E==1)&&( ((c==1)&&(e==2)) || ((c==2)&&(e==1)) ))
                                                                                                                                                                                                                                     printf("",a,b,c,d,e);
                                                                                                                                                                                           if((A==0)&&(B==0)&&(C==0)&&(D==1)&&(E==1)&&( ((d==1)&&(e==2)) || ((d==2)&&(e==1)) ))
                                                                                                                                                                                                                                     printf("",a,b,c,d,e);
                                                                                                                                                                                           }                                                                                                                                                                                                                                                 
    return 0;
}

1000458
main()
{
	int sty,std,ey,ed,dy,ry,m,m1,stm,em;                                                 
	scanf("",&sty,&stm,&std,&ey,&em,&ed);
    ry=0;
	dy=sty;
	while(dy<ey)
	{
		if((dy% 4 == 0 && dy% 100 != 0) || (dy% 400 == 0))
			ry=ry+1;
		dy++;
	}
	if((sty% 4 == 0 && sty% 100 != 0) || (sty% 400 == 0))
	{
		if (stm==1)
			m=0;
		if (stm==2)
			m=31;
		if (stm==3)
			m=60;
		if (stm==4)
			m=91;
		if (stm==5)
			m=121;
		if (stm==6)
			m=152;
		if (stm==7)
			m=182;
		if (stm==8)
			m=213;
		if (stm==9)
			m=244;
		if (stm==10)
			m=274;
		if (stm==11)
			m=305;
		if (stm==12)
			m=335;
		printf("");	
	}
	else
	{	
		if (stm==1)
			m=0;
		if (stm==2)
			m=31;
		if (stm==3)
			m=59;
		if (stm==4)
			m=90;
		if (stm==5)
			m=120;
		if (stm==6)
			m=151;
		if (stm==7)
			m=181;
		if (stm==8)
			m=212;
		if (stm==9)
			m=243;
		if (stm==10)
			m=273;
		if (stm==11)
			m=304;
		if (stm==12)
			m=334;
		printf("");	
	}
	if((ey% 4 == 0 && ey% 100 != 0) || (ey% 400 == 0))
	{
		if (em==1)
			m1=0;
		if (em==2)
			m1=31;
		if (em==3)
			m1=60;
		if (em==4)
			m1=91;
		if(em==5)
			m1=121;
		if (em==6)
			m1=152;
		if (em==7)
			m1=182;
		if (em==8)
			m1=213;
		if (em==9)
			m1=244;
		if (em==10)
			m1=274;
		if (em==11)
			m1=305;
		if (em==12)
			m1=335;
		printf("");
	}
	else
	{
		if (em==1)
			m1=0;
		if (em==2)
			m1=31;
		if (em==3)
			m1=59;
		if (em==4)
			m1=90;
		if (em==5)
			m1=120;
		if (em==6)
			m1=151;
		if(em==7)
			m1=181;
		if (em==8)
			m1=212;
		if (em==9)
			m1=243;
		if (em==10)
			m1=273;
		if (em==11)
			m1=304;
		if(em==12)
			m1=334;
		printf("");	
	}
	int d=ry*366+(ey-sty-ry)*365+m1-m+ed-std;
		printf("",d);
}











1000459
main()
{
    int a[5]; 
    int b[5],sum = 0, pin = 0; 
    
    for ( a[0] = 1; a[0] <= 5; a[0]++ )
    {
        for (a[1] = 1;a[1] <= 5; a[1]++ )
        {
            for (a[2] = 1; a[2] <= 5; a[2]++ )
            {
                for ( a[3] = 1; a[3] <= 5; a[3]++ )
                {
                    for (  a[4] = 1; a[4] <= 5; a[4]++ )
                    {
                        sum = 0;
                        pin = 0;
                        
                        if ( a[4]== 2 || a[4] == 3 )
                           continue;
                        
                        b[0] = ( a[4] == 1);
                        b[1] = ( a[1] == 2);
                        b[2] = ( a[0] == 5);
                        b[3] = ( a[2] != 1 );
                        b[4] = ( a[3] == 1);
                        
                        for ( int j = 0; j < 4; j++ )
                        {
                            for ( int k = j + 1; k <= 4; k++ )
                            {
                                if ( a[j] == a[k] )
                                   pin = 1;             
                            }
                                           
                        } 
                        
                        if ( pin == 1 )
                           continue;
                           
                        for ( int i = 0; i < 5; i++ )
                        {
                            if ( (a[i] == 1 && b[i] == 1))
                               sum++;
                            if (  a[i] == 2 && b[i] == 1)                         
                               sum++;
                            if ( b[i] == 1 &&( a[i] != 1 && a[i] != 2))
                            {
                                 sum = 0;
                                 break;
                            }
                        }
                       
                        if ( sum == 2 )
                        {   cout << a[0] << ""<< a[1] << ""<< a[2] << ""<< a[3] << ""<< a[4]; 
                        
                            return 0;
                        }
                    }
                }
            }
        }
    } 

    return 0;

}


1000460
f(int x)
{
	int i,j,a[5];
	a[0]=(int)fabs(x)%10;
	a[1]=(int)fabs(x)%100/10;
	a[2]=(int)fabs(x)%1000/100;
	a[3]=(int)fabs(x)%10000/1000;
	a[4]=(int)fabs(x)/10000;
	if(x>0)
	{
		if(a[0]!=0)
		{
			printf("",a[0]);
			if(a[4]!=0)
			{
				printf("",a[1],a[2],a[3],a[4]);
			}
			if(a[4]==0)
			{
				if(a[3]!=0)
					printf("",a[1],a[2],a[3]);
				if(a[3]==0)
				{
					if(a[2]!=0)
						printf("",a[1],a[2]);
					if(a[2]==0)
					{
						if(a[1]!=0)
							printf("",a[1]);
					}
				}
			}
			printf("");
		}
		if(a[0]==0)
		{
			if(a[1]!=0)
			{
				printf("",a[1]);
				if(a[4]!=0)
				{
				     printf("",a[2],a[3],a[4]);
				}
		 	    if(a[4]==0)
				{
				    if(a[3]!=0)
				     	printf("",a[2],a[3]);
			     	if(a[3]==0)
					{
					    if(a[2]!=0)
						    printf("",a[2]);   
					}
				}
				printf("");
			}
			if(a[1]==0)
			{
				if(a[2]!=0)
				{
					printf("",a[2]);
					if(a[4]!=0)
					{
						printf("",a[3],a[4]);
					}
					if(a[4]==0)
					{
						if(a[3]!=0)
						{
							printf("",a[3]);
						}
					}
					printf("");
				}
				if(a[2]==0)
				{
					if(a[3]!=0)
					{
						printf("",a[3]);
						if(a[4]!=0)
						{
							printf("",a[4]);
						}
						printf("");
					}
					if(a[3]==0)
					{
						printf("",a[4]);
					}
				}
			}
		}
	}
	if(x==0)
	{
		printf("");
	}
	if(x<0)
	{
			if(a[0]!=0)
		{
			printf("",a[0]);
			if(a[4]!=0)
			{
				printf("",a[1],a[2],a[3],a[4]);
			}
			if(a[4]==0)
			{
				if(a[3]!=0)
					printf("",a[1],a[2],a[3]);
				if(a[3]==0)
				{
					if(a[2]!=0)
						printf("",a[1],a[2]);
					if(a[2]==0)
					{
						if(a[1]!=0)
							printf("",a[1]);
					}
				}
			}
			printf("");
		}
		if(a[0]==0)
		{
			if(a[1]!=0)
			{
				printf("",a[1]);
				if(a[4]!=0)
				{
				     printf("",a[2],a[3],a[4]);
				}
		 	    if(a[4]==0)
				{
				    if(a[3]!=0)
				     	printf("",a[2],a[3]);
			     	if(a[3]==0)
					{
					    if(a[2]!=0)
						    printf("",a[2]);   
					}
				}
				printf("");
			}
			if(a[1]==0)
			{
				if(a[2]!=0)
				{
					printf("",a[2]);
					if(a[4]!=0)
					{
						printf("",a[3],a[4]);
					}
					if(a[4]==0)
					{
						if(a[3]!=0)
						{
							printf("",a[3]);
						}
					}
					printf("");
				}
				if(a[2]==0)
				{
					if(a[3]!=0)
					{
						printf("",a[3]);
						if(a[4]!=0)
						{
							printf("",a[4]);
						}
						printf("");
					}
					if(a[3]==0)
					{
						printf("",a[4]);
					}
				}
			}
		}
	}
}
main()
{
	int b[6],n;
	for(n=0;n<6;n++)
		scanf("",&b[n]);
	for(n=0;n<6;n++)
		f(b[n]);
}

1000461
shanchu (struct node *ph)		
{
	struct node *p,*q;		
	p=ph;		
	
	for (;;)
	{
		if (p==NULL)		
			return;
		q=p->pn;		
		free(p);		
		p=q;		
	}
}


jia (struct node *pl1,struct node *pl2,struct node *p3)		
{
	struct node *a,*b,*p,*r;		
	int c,j=0;		
	a=pl1;		
	b=pl2;
	
	for (;;)
	{
		if ((a->pb==NULL)&&(b->pb==NULL))		
		{
			if (j==1)		
			{
				p=(struct node*)malloc(sizeof(struct node));		
				p->pn=p3->pn;
				p->pb=p3;
				p3->pn=p;
				p->x=1;		
			}
			return;
		}
		
		if (a->pb==NULL)
		{
			r=a;
			a=b;
			b=r;
		}
		
		if (b->pb==NULL)
		{
			c=a->x+j;		
			j=0;		
			if (c>9)		
			{
				j=1;
				c=c-10;
			}
			p=(struct node*)malloc(sizeof(struct node));		
			p->pn=p3->pn;
			p->pb=p3;
			p3->pn=p;
			p->x=c;		
			a=a->pb;		
			continue;		
		}
		c=a->x+b->x+j;		
		j=0;		
		if (c>9)		
		{
			j=1;
			c=c-10;
		}
		p=(struct node*)malloc(sizeof(struct node));		
		p->pn=p3->pn;
		p->pb=p3;
		p3->pn=p;
		p->x=c;		
		a=a->pb;		
		b=b->pb;
	}
}


jian (struct node *pl1,struct node *pl2,struct node *p3)		
{
	struct node *a,*b,*p,*r;		
	int c,j=0;		
	a=pl1;		
	b=pl2;
	
	for (;;)
	{
		if ((a->pb==NULL)&&(b->pb==NULL))		
		{
			return;
		}
		
		if (b->pb==NULL)
		{
			c=a->x-j;		
			j=0;		
			if (c<0)		
			{
				j=1;
				c=c+10;
			}
			p=(struct node*)malloc(sizeof(struct node));		
			p->pn=p3->pn;
			p->pb=p3;
			p3->pn=p;
			p->x=c;		
			a=a->pb;		
			continue;		
		}
		c=(a->x)-(b->x)-j;		
		j=0;		
		if (c<0)		
		{
			j=1;
			c=c+10;
		}
		p=(struct node*)malloc(sizeof(struct node));		
		p->pn=p3->pn;
		p->pb=p3;
		p3->pn=p;
		p->x=c;		
		a=a->pb;		
		b=b->pb;
	}
}


shuchu (struct node *p3,int f)		
{
	struct node *p;		
	p=p3->pn;		
	
	for (;;)
	{
		if ((p==NULL)||(p->x!=0))		
			break;
		else
			p=p->pn;		
	}
	
	if (p==NULL)
		printf("");
	
	else
	{
		if (f==-1)		
			printf("");
		for (;;)		
		{
			if (p==NULL)		
			{
				printf("");
				break;
			}
			else		
			{
				printf("",p->x);		
				p=p->pn;		
			}
		}
	}
}


bijiao (struct node *p1,struct node *p2,int w1,int w2)		
{
	struct node *a,*b;		
	
	if (w1!=w2)		
		return w1-w2;
	else		
	{
		a=p1->pn;		
		b=p2->pn;
		for (;;)
		{
			if (a==NULL)		
				return 0;
			if ((a->x)!=(b->x))		
				return (a->x)-(b->x);
			else		
			{
				a=a->pn;
				b=b->pn;
			}
		}
	}
}


main ()
{
	int f1,f2,w1,w2,f;		
	
	struct node *p1=(struct node*)malloc(sizeof(struct node));
	struct node *p2=(struct node*)malloc(sizeof(struct node));
	struct node *p3=(struct node*)malloc(sizeof(struct node));
	struct node *pl1,*pl2,*p;		
	
	p1->pn=NULL;
	p2->pn=NULL;
	p3->pn=NULL;
	p1->pb=NULL;
	p2->pb=NULL;
	p3->pb=NULL;
	
	
	jianli(p1,&f1,&w1,&pl1);		
	
	jianli(p2,&f2,&w2,&pl2);		
	
	
	if (f1*f2==1)		
	{
		jia (pl1,pl2,p3);
		shuchu (p3,f1);
	}
	else		
	{
		if (bijiao (p1,p2,w1,w2)==0)		
			printf("");
		else
		{
			if (bijiao (p1,p2,w1,w2)<0)		
			{
				f=f1;		
				f1=f2;
				f2=f;
				p=p1;		
				p1=p2;
				p2=p;
				p=pl1;		
				pl1=pl2;
				pl2=p;
			}
			jian (pl1,pl2,p3);		
			shuchu (p3,f1);
		}
	}
	
	shanchu(p1);
	shanchu(p2);
	shanchu(p3);
	
	return 0;
}

1000462

shanchu (struct node *ph)		
{
	struct node *p,*q;		
	p=ph;		
	
	for (;;)
	{
		if (p==NULL)		
			return;
		q=p->pn;		
		free(p);		
		p=q;		
	}
}


jia (struct node *pl1,struct node *pl2,struct node *p3)		
{
	struct node *a,*b,*p,*r;		
	int c,j=0;		
	a=pl1;		
	b=pl2;
	
	for (;;)
	{
		if ((a->pb==NULL)&&(b->pb==NULL))		
		{
			if (j==1)		
			{
				p=(struct node*)malloc(sizeof(struct node));		
				p->pn=p3->pn;
				p->pb=p3;
				p3->pn=p;
				(p->pn)->pb=p;
				p->x=1;		
			}
			return;
		}
		
		if (a->pb==NULL)
		{
			r=a;
			a=b;
			b=r;
		}
		
		if (b->pb==NULL)
		{
			c=a->x+j;		
			j=0;		
			if (c>9)		
			{
				j=1;
				c=c-10;
			}
			p=(struct node*)malloc(sizeof(struct node));		
			p->pn=p3->pn;
			p->pb=p3;
			p3->pn=p;
			(p->pn)->pb=p;
			p->x=c;		
			a=a->pb;		
			continue;		
		}
		c=a->x+b->x+j;		
		j=0;		
		if (c>9)		
		{
			j=1;
			c=c-10;
		}
		p=(struct node*)malloc(sizeof(struct node));		
		p->pn=p3->pn;
		p->pb=p3;
		p3->pn=p;
        if (p->pn!=NULL)
			(p->pn)->pb=p;
		p->x=c;		
		a=a->pb;		
		b=b->pb;
	}
}


jian (struct node *pl1,struct node *pl2,struct node *p3)		
{
	struct node *a,*b,*p,*r;		
	int c,j=0;		
	a=pl1;		
	b=pl2;
	
	for (;;)
	{
		if ((a->pb==NULL)&&(b->pb==NULL))		
		{
			return;
		}
		
		if (b->pb==NULL)
		{
			c=a->x-j;		
			j=0;		
			if (c<0)		
			{
				j=1;
				c=c+10;
			}
			p=(struct node*)malloc(sizeof(struct node));		
			p->pn=p3->pn;
			p->pb=p3;
			p3->pn=p;
			p->x=c;		
			a=a->pb;		
			continue;		
		}
		c=(a->x)-(b->x)-j;		
		j=0;		
		if (c<0)		
		{
			j=1;
			c=c+10;
		}
		p=(struct node*)malloc(sizeof(struct node));		
		p->pn=p3->pn;
		p->pb=p3;
		p3->pn=p;
		p->x=c;		
		a=a->pb;		
		b=b->pb;
	}
}


shuchu (struct node *p3,int f)		
{
	struct node *p;		
	p=p3->pn;		
	
	for (;;)
	{
		if ((p==NULL)||(p->x!=0))		
			break;
		else
			p=p->pn;		
	}
	
	if (p==NULL)
		printf("");
	
	else
	{
		if (f==-1)		
			printf("");
		for (;;)		
		{
			if (p==NULL)		
			{
				printf("");
				break;
			}
			else		
			{
				printf("",p->x);		
				p=p->pn;		
			}
		}
	}
}


bijiao (struct node *p1,struct node *p2,int w1,int w2)		
{
	struct node *a,*b;		
	
	if (w1!=w2)		
		return w1-w2;
	else		
	{
		a=p1->pn;		
		b=p2->pn;
		for (;;)
		{
			if (a==NULL)		
				return 0;
			if ((a->x)!=(b->x))		
				return (a->x)-(b->x);
			else		
			{
				a=a->pn;
				b=b->pn;
			}
		}
	}
}


main ()
{
	int f1,f2,w1,w2,f;		
	
	struct node *p1=(struct node*)malloc(sizeof(struct node));
	struct node *p2=(struct node*)malloc(sizeof(struct node));
	struct node *p3=(struct node*)malloc(sizeof(struct node));
	struct node *pl1,*pl2,*p;		
	
	p1->pn=NULL;
	p2->pn=NULL;
	p3->pn=NULL;
	p1->pb=NULL;
	p2->pb=NULL;
	p3->pb=NULL;
	
	
	jianli(p1,&f1,&w1,&pl1);		
	
	jianli(p2,&f2,&w2,&pl2);		
	
	
	if (f1*f2==1)		
	{
		jia (pl1,pl2,p3);
		shuchu (p3,f1);
	}
	else		
	{
		if (bijiao (p1,p2,w1,w2)==0)		
			printf("");
		else
		{
			if (bijiao (p1,p2,w1,w2)<0)		
			{
				f=f1;		
				f1=f2;
				f2=f;
				p=p1;		
				p1=p2;
				p2=p;
				p=pl1;		
				pl1=pl2;
				pl2=p;
			}
			jian (pl1,pl2,p3);		
			shuchu (p3,f1);
		}
	}
	
	shanchu(p1);
	shanchu(p2);
	shanchu(p3);
	
	return 0;
}


1000463
main()
{
	char a,b,c;
	cin.getline(aaa,110,'\n');
	len=strlen(aaa)-1;

	if(aaa[0]==''&&aaa[1]==''&&aaa[2]=='')
	{
		cout<<""<<endl;
		cout<<0<<endl;
	}
	else
	{
	if(len==0)
	{
		cout<<0<<endl;
		cout<<aaa[0]<<endl;
	}
	else
	{

	while(len>1)
	{
		if(aaa[0]==''&&aaa[1]<=50)
		{
			a=aaa[0];
			b=aaa[1];
			c=aaa[2];
			chu3(a,b,c);
		}
		else
		{
			a=aaa[0];
			b=aaa[1];
			chu2(a,b);
		}
	}
	if(len==1)
	{
		if(aaa[0]==''&&aaa[1]<50)
		{
			yushu[0]=aaa[0];
			yushu[1]=aaa[1];
			jw=2;
		}
		else
		{
			a=aaa[0];
			b=aaa[1];
			int numa,numb,num;
			numa=a-48;
			numb=b-48;
			num=numa*10+numb;
			if(num==13)
			{
				shang[t]=1;
				t++;
				yushu[0]='';
				jw=1;
			}
			else
			{
				shang[t]=num/13+48;
				t++;
				if(num%13>=10)
				{
					yushu[0]='';
					yushu[1]=(num%13-10)+48;
					jw=2;
				}
				else
				{
					yushu[0]=num%13+48;
					jw=1;
				}
			}

		}
	}
	if(len==0)
	{
		yushu[0]=aaa[0];
		jw=1;
	}
	for(int i=0;i<t;i++)
		cout<<shang[i];
	cout<<endl;
	if(jw==1)
		cout<<yushu[0]<<endl;
	else
		cout<<yushu[0]<<yushu[1]<<endl;
	}
	}
	return 0;
}

1000464
main ()
{
	int startyear,startmonth,startday,endyear,endmonth,endday,year,month,m,s=0;
	scanf("",&startyear,&startmonth,&startday,&endyear,&endmonth,&endday);
	if (startyear!=endyear)
	{
	for (year=startyear+1;year<endyear;year++)
	{
		if((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0))
			s=s+366;
		else s=s+365;
	}
	for (month=1;month<endmonth;month++)
	{
		if(month==1||month==3||month==5||month==7||month==8||month==10||month==12)
			s=s+31;
		if (month==4||month==6||month==9||month==11)
			s=s+30;
		else {
			        if ((endyear % 4 == 0 && endyear % 100 != 0) || (endyear % 400 == 0))
						s=s+29;
					else s=s+28;
		     }
	}
	s=s+endday-1;
	m=0;
	for (month=1;month<startmonth;month++)
	{
		if(month==1||month==3||month==5||month==7||month==8||month==10||month==12)
			m=m+31;
		if (month==4||month==6||month==9||month==11)
			m=m+30;
		else {
			        if ((startyear % 4 == 0 && startyear % 100 != 0) || (startyear % 400 == 0))
						m=m+29;
					else m=m+28;
		     }
	}
         m=m+startday-1;   
	if ((startyear % 4 == 0 && startyear % 100 != 0) || (startyear % 400 == 0))
		   s=s+366-m;
	   else
		   s=s+365-m;
	}
	else
		{
			if (startmonth!=endmonth)
			{
				for (month=startmonth+1;month<endmonth;month++)
				{
					if(month==1||month==3||month==5||month==7||month==8||month==10||month==12)
			s=s+31;
		if (month==4||month==6||month==9||month==11)
			s=s+30;
		else {
			        if ((startyear % 4 == 0 && startyear % 100 != 0) || (startyear % 400 == 0))
						s=s+29;
					else s=s+28;
		     }
				}
				s=s+endday-1;
				if(startmonth==1||startmonth==3||startmonth==5||startmonth==7||startmonth==8||startmonth==10||startmonth==12)
			s=s+31-startday;
		if (startmonth==4||startmonth==6||startmonth==9||startmonth==11)
			s=s+30-startday;
		else {
			        if ((startyear % 4 == 0 && startyear % 100 != 0) || (startyear % 400 == 0))
						s=s+29-startday;
					else s=s+28-startday;
		     }
			}
			else s=endday-startday;
	     }
	   	   printf("",s);
	   return 0;
}

1000465
main()
{
  int year1,month1,day1;
  int q,sum1,R1;
  int year2,month2,day2;
  int sum2,R2;  
  int i,j,k,sum;
  int sum3=0;
  sum1=0;R1=0;
  sum2=0;R2=0;
  scanf("",&year1,&month1,&day1);
  scanf("",&year2,&month2,&day2);

  
  if(year1%100==0)
  {
     if(year1%400==0) R1=1;
	 else R1=0;
  }
  else 
  {
     if(year1%4==0) R1=1;
	 else R1=0;
  }





  if(month1==1) 
  {
	  sum1=day1;

  }
  else
  {
    if(month1==2)
	{
		sum1=31+day1;

	}
	else
	{
	  if(R1==0) 
	  {
		if(month1==3) sum1=31+28+day1;
	    if(month1==4) sum1=31+28+31+day1;
		if(month1==5) sum1=31+28+31+30+day1;
		if(month1==6) sum1=31+28+31+30+31+day1;
		if(month1==7) sum1=31+28+31+30+31+30+day1;
		if(month1==8) sum1=31+28+31+30+31+30+31+day1;
		if(month1==9) sum1=31+28+31+30+31+30+31+31+day1;
		if(month1==10) sum1=31+28+31+30+31+30+31+31+30+day1;
		if(month1==11) sum1=31+28+31+30+31+30+31+31+30+31+day1;
		if(month1==12) sum1=31+28+31+30+31+30+31+31+30+31+30+day1;

	  }

	  if(R1==1)
	  { 
	  	if(month1==3) sum1=31+29+day1;
	    if(month1==4) sum1=31+29+31+day1;
		if(month1==5) sum1=31+29+31+30+day1;
		if(month1==6) sum1=31+29+31+30+31+day1;
		if(month1==7) sum1=31+29+31+30+31+30+day1;
		if(month1==8) sum1=31+29+31+30+31+30+31+day1;
		if(month1==9) sum1=31+29+31+30+31+30+31+31+day1;
		if(month1==10) sum1=31+29+31+30+31+30+31+31+30+day1;
		if(month1==11) sum1=31+29+31+30+31+30+31+31+30+31+day1;
		if(month1==12) sum1=31+29+31+30+31+30+31+31+30+31+30+day1;

	  }

	}  
  }

 



  
  if(year2%100==0)
  {
     if(year2%400==0) R2=1;
	 else R2=0;
  }
  else 
  {
     if(year2%4==0) R2=1;
	 else R2=0;
  }





  if(month2==1) 
  {
	  sum2=day2;
 
  }
  else
  {
    if(month2==2) 
	{
		sum2=31+day2;

	}
	else
	{
	  if(R2==0) 
	  {
		if(month2==3) sum2=31+28+day2;
	    if(month2==4) sum2=31+28+31+day2;
		if(month2==5) sum2=31+28+31+30+day2;
		if(month2==6) sum2=31+28+31+30+31+day2;
		if(month2==7) sum2=31+28+31+30+31+30+day2;
		if(month2==8) sum2=31+28+31+30+31+30+31+day2;
		if(month2==9) sum2=31+28+31+30+31+30+31+31+day2;
		if(month2==10) sum2=31+28+31+30+31+30+31+31+30+day2;
		if(month2==11) sum2=31+28+31+30+31+30+31+31+30+31+day2;
		if(month2==12) sum2=31+28+31+30+31+30+31+31+30+31+30+day2;
  
	  }

	  if(R2==1)
	  { 
	  	if(month2==3) sum2=31+29+day2;
	    if(month2==4) sum2=31+29+31+day2;
		if(month2==5) sum2=31+29+31+30+day2;
		if(month2==6) sum2=31+29+31+30+31+day2;
		if(month2==7) sum2=31+29+31+30+31+30+day2;
		if(month2==8) sum2=31+29+31+30+31+30+31+day2;
		if(month2==9) sum2=31+29+31+30+31+30+31+31+day2;
		if(month2==10) sum2=31+29+31+30+31+30+31+31+30+day2;
		if(month2==11) sum2=31+29+31+30+31+30+31+31+30+31+day2;
		if(month2==12) sum2=31+29+31+30+31+30+31+31+30+31+30+day2;

	  }

	}  
  }



  

  if(R1==0) q=365-sum1;
  if(R1==1) q=366-sum1;

  if(year1==year2)  
  {
    sum=sum2-sum1;
	printf("",sum);
  }
  
  if(year2-year1==1)
	 {
	  sum=q+sum2;
	  printf("",sum);
	 }


  if(year2-year1>1)
  {
   for(j=year1+1;j<year2;j++)
   {
	  if(j%100==0)
		{
	     if(j%400==0) sum3=sum3+366;
		 else sum3=sum3+365;
		}
	  else 
		{
		 if(j%4==0) sum3=sum3+366;
		 else sum3=sum3+365;
		}

   }

   sum=q+sum3+sum2;
   printf("",sum);
  }


return 0;
}

1000466
main(int argc, char* argv[])
{
	int n,a,i;
	int b,c,d,e,f;
	scanf("",&n);
	for(i=1;i<=n;i++)
	{
		scanf("",&a,&b,&c);
		if((a%4==0&&a%100!=0)||(a%400==0))
		{
		    if(b==1)
			   d=1;
		    if(b==2)
               d=31+1;
            if(b==3)
               d=31+29+1;
            if(b==4)
                d=31+29+31+1;
            if(b==5)
               d=31+29+31+30+1;
            if(b==6)
               d=31+29+31+30+31+1;
            if(b==7)
                d=31+29+31+30+31+30+1;
           if(b==8)
               d=31+29+31+30+31+30+31+1;
            if(b==9)
                d=31+29+31+30+31+30+31+31+1;
           if(b==10)
               d=31+29+31+30+31+30+31+31+30+1;
           if(b==11)
               d=31+29+31+30+31+30+31+31+30+31+1;
           if(b==12)
               d=31+29+31+30+31+30+31+31+30+31+30+1;
	
		    if(c==1)
			e=1;
		if(c==2)
            e=31+1;
        if(c==3)
            e=31+29+1;
        if(c==4)
            e=31+29+31+1;
        if(c==5)
            e=31+29+31+30+1;
        if(c==6)
            e=31+29+31+30+31+1;
        if(c==7)
            e=31+29+31+30+31+30+1;
        if(c==8)
            e=31+29+31+30+31+30+31+1;
        if(c==9)
            e=31+29+31+30+31+30+31+31+1;
        if(c==10)
            e=31+29+31+30+31+30+31+31+30+1;
        if(c==11)
            e=31+29+31+30+31+30+31+31+30+31+1;
        if(c==12)
            e=31+29+31+30+31+30+31+31+30+31+30+1;
		}
		else
		{
        if(b==1)
			d=1;
		if(b==2)
            d=31+1;
        if(b==3)
            d=31+28+1;
        if(b==4)
            d=31+28+31+1;
        if(b==5)
            d=31+28+31+30+1;
        if(b==6)
            d=31+28+31+30+31+1;
        if(b==7)
            d=31+28+31+30+31+30+1;
        if(b==8)
            d=31+28+31+30+31+30+31+1;
        if(b==9)
            d=31+28+31+30+31+30+31+31+1;
        if(b==10)
            d=31+28+31+30+31+30+31+31+30+1;
        if(b==11)
            d=31+28+31+30+31+30+31+31+30+31+1;
        if(b==12)
            d=31+28+31+30+31+30+31+31+30+31+30+1;
		if(c==1)
			e=1;
		if(c==2)
            e=31+1;
        if(c==3)
            e=31+28+1;
        if(c==4)
            e=31+28+31+1;
        if(c==5)
            e=31+28+31+30+1;
        if(c==6)
            e=31+28+31+30+31+1;
        if(c==7)
            e=31+28+31+30+31+30+1;
        if(c==8)
            e=31+28+31+30+31+30+31+1;
        if(c==9)
            e=31+28+31+30+31+30+31+31+1;
        if(c==10)
            e=31+28+31+30+31+30+31+31+30+1;
        if(c==11)
            e=31+28+31+30+31+30+31+31+30+31+1;
        if(c==12)
            e=31+28+31+30+31+30+31+31+30+31+30+1;
		}
		f=e-d;
		if(f%7==0)
		{
	       printf("");
		   
		}
		printf("");



	}

	
	return 0;
}



1000467
Compare(const void *elem1,const void *elem2)
      {
       return *((int *)(elem2)) - *((int *)(elem1));
       }
      
main()
{
      int n,i=0,j=0,counter=0,c=0,lose=0,k=0,l=0,m=0;
      int money[1000]={0};
      for(k=0;;k++)
      {
          scanf("",&n);
       if(n==0)
          {break;}
       else
       {
          
          int q[1000]={0};
          int t[1000]={0};
          for(i=0;i<n;i++)
          {
              scanf("",&t[i]);
          }
          
          for(i=0;i<n;i++)
          {
              scanf("",&q[i]);
          }
           qsort(t, n, sizeof(int), Compare);
           qsort(q, n, sizeof(int), Compare);
           m=0;
           for(j=0;n>0;j++)
           {
                   counter=0,c=0,lose=0;
                   for(i=0;(q[i]<t[i])&&(i<n);i++)
                   {
                       counter=counter+1;          
                       
                   }
                   
                   for(i=0;i<=n-counter-1;i++)
                   {
                       q[i]=q[i+counter];       
                       t[i]=t[i+counter];
                   }
                   n=n-counter;
                   m=m+counter;
                   if(n==0)
                   break;
                   
                   for(i=n-1;q[i]<t[i];i--)
                   {
                       c++;                     
                   }
                   n=n-c;
                   m=m+c;
                   if(n==0)
                   break;
                   
                   if(q[0]>t[n-1])
                   {lose++;}                          
                   m=m-lose;
                   for(i=0;i<=n-1;i++)        
                   {
                       q[i]=q[i+1];                
                   }
                   
                                            
                   n=n-1;
            
            }
       
          money[k]=200*(m);               
          
          l++;
          
         }
          
       }
             
               for(k=0;k<l;k++)
                {
                printf("",money[k]);              
                }


}



1000468
main()
{
    int a, b ,c, d , e;
    int s[5]={0};
    for(a=0;a<5;a++)
    {
                    for(b=0;b<5;b++)
                    {
                                    if(b==a)
                                    continue;
                                    
                                    for(c=0;c<5;c++)
                                    {
                                                    if(b==c||c==a)
                                                    continue;
                                                    
                                                    for(d=0;d<5;d++)
                                                    {
                                                                    if(d==c||d==b||d==a)
                                                                    continue;
                                                                    
                                                                    e=10-a-b-c-d;
                                                                    if(e==1||e==2)
                                                                    break;
                                                                    else
                                                                    s[a]=(e==0);
                                                                    s[b]=(b==1);
                                                                    s[c]=(a==4);
                                                                    s[d]=(c!=0);
                                                                    s[e]=(d==0);
                                                                    if(s[0]+s[1]==2&&s[2]+s[3]+s[4]==0)
                                                                    cout<<a+1<<""<<b+1<<""<<c+1<<""<<d+1<<""<<e+1<<endl;
                                                    }
                                    }
                    }
    }
                                                                    

    return 0;
}


1000469
main()
{
	for(int A = 1 ; A<=5 ; A++)
		for(int B = 1 ; B<=5 ; B++)
			for(int C= 1 ; C<=5 ; C++)
				for(int D= 1 ; D<=5 ; D++)
					for(int E= 1 ; E<=5 ; E++)
					{
						
						if(A != B && A != C && A != D && A != E && B != C && B != D && B != E && C != D && C != E && D != E)
						{
							int cc1,cc2,cc3,cc4,cc5,cc ;
							cc  = (E != 2 ) && ( E != 3 ) ;
							if(cc)
							{
								cc1 = (E == 1) ;
								cc2 = 1 ;
								cc3 = (A == 5) ;
								cc4 = (C != 1) ;
								cc5 = (D == 1) ;
								if(cc1 && cc2 && (cc3 == 0 && cc4 == 0 && cc5 == 0))
								{
									if( A == 1 && B == 2 )
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
									if( A == 2 && B == 1)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
								}
								if(cc1 && cc3 && (cc2 == 0 && cc4 == 0 && cc5 == 0))
								{
									if( A == 1 && C == 2)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
									if( A == 2 && C == 1)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
									
								}
								if(cc1 && cc4 && (cc2 == 0 && cc3 == 0 && cc5 == 0))
									{
									if( A == 1 && D == 2)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
									if( A == 2 && D == 1)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
									
								}
								if(cc1 && cc5 && (cc2 == 0 && cc3 == 0 && cc4 == 0))
								{
									if( A == 1 && E == 2)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
									if( A == 2 && E == 1)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
									
								}
								if(cc2 && cc3 && (cc1 == 0 && cc4 == 0 && cc5 == 0))
								{
									if( B == 1 && C == 2)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
									if( B == 2 && C == 1)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
								
								}
								if(cc2 && cc4 && (cc1 == 0 && cc3 == 0 && cc5 == 0))
								{
									if( B == 0 && D == 2)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
									if( B == 0 && D == 1)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
								}
								if(cc2 && cc5 && (cc1 == 0 && cc3 == 0 && cc4 == 0))
								{
									if( B == 1 && E == 2)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
									if( B == 2 && E == 1)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
								}
								if(cc3 && cc4 &&(cc1 == 0 && cc2 == 0 && cc5 == 0))
								{
									if( C == 1 && D == 2)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
									if( C == 2 && D == 1)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
								}
								if(cc3 && cc5 && (cc1 == 0 && cc2 == 0 && cc4 == 0))
								{
									if( C == 1 && E == 2)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
									if( C == 2 && E == 1)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
								}
								if(cc4 && cc5 && (cc1 == 0 && cc2 == 0 && cc3 == 0))
								{
									if( D == 1 && E == 2)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
									if( D == 2 && E == 1)
									{
										cout << A << "" << B << "" << C << "" << D << "" << E << endl ;
									}
								}
							}
						}
					}
	return 0;
}

1000470
main(){
    int y1,y2,m1,m2,d1,d2,days=0,i;
    scanf("",&y1,&m1,&d1);
    scanf("",&y2,&m2,&d2);
    if(y1<y2){
    for(i=y1+1;i<y2;i++){
                         if((i%4==0&&i%100!=0)||i%400==0)
                         days=days+366;
                         else
                         days=days+365;
                         }
    for(i=m1+1;i<13;i++){
                         if(i==3||i==5||i==7||i==8||i==10||i==12)
                         days=days+31;
                         if(i==4||i==6||i==9||i==11)
                         days=days+30;
                         if((y1%4==0&&y1%100!=0)||y1%400==0)
                         days=days+29;
                         else
                         days=days+28;
                         }
    for(i=1;i<m2;i++){
                      if(i==1||i==3||i==5||i==7||i==8||i==10||i==12)
                      days=days+31;
                      if(i==4||i==6||i==9||i==11)
                      days=days+30;
                      if((y2%4==0&&y2%100!=0)||y2%400==0)
                      days=days+29;
                      else
                      days=days+28;
                      }
    if(m1==1||m1==3||m1==5||m1==7||m1==8||m1==10||m1==12)
    days=days+31-d1;
    if(m1==4||m1==6||m1==9||m1==11)
    days=days+30-d1;
    if((y1%4==0&&y1%100!=0)||y1%400==0)
    days=days+29-d1;
    else
    days=days+28-d1;
    days=days+d2;
    }
    if(m1<m2){
                   for(i=m1+1;i<m2;i++){
                                         if(i==3||i==5||i==7||i==8||i==10||i==12)
                                         days=days+31;
                                         if(i==4||i==6||i==9||i==11)
                                         days=days+30;
                                         if((y1%4==0&&y1%100!=0)||y1%400==0)
                                         days=days+29;
                                         else
                                         days=days+28;
                                        }
                   if(m1==1||m1==3||m1==5||m1==7||m1==8||m1==10||m1==12)
                   days=days+31-d1;
                   if(m1==4||m1==6||m1==9||m1==11)
                   days=days+30-d1;
                   if((y1%4==0&&y1%100!=0)||y1%400==0)
                   days=days+29-d1;
                   else
                   days=days+28-d1;
                   days=days+d2;
                   }
    else
    days=d2-d1;
    printf("",days);
    return 0;
}
    


1000471
main ()
{
    int a[5],b[5],i,j,k,l,m,n,s;
	for(i=1;i<6;i++)
	{
      a[0]=i;
	for(j=1;j<6;j++)
	{
                    a[1]=j;if(i!=j)
                    {
                                   for(k=1;k<6;k++)
                                   {
                                                   a[2]=k;
                                                   if(k!=i&&k!=j)
                                                   {
                                                                 for(l=1;l<6;l++)
                                                                 {
                                                                                 a[3]=l;
                                                                                 if(l!=i&&l!=j&&l!=k)
                                                                                 {
                                                                                                     for(m=1;m<6;m++)
                                                                                                     {
                                                                                                                     a[4]=m;
                                                                                                                     if(m!=i&&m!=j&&m!=k&&m!=l)
                                                                                                                     {
                                                                                                                                               s=0;
                                                                                                                                               if(a[4]!=2&&a[4]!=3)
                                                                                                                                               {
                                                                                                                                               b[0]=(a[4]==1);
                                                                                                                                               b[1]=(a[1]==2);
                                                                                                                                               b[2]=(a[0]==5);
                                                                                                                                               b[3]=(a[2]!=1);
                                                                                                                                               b[4]=(a[3]==1);
                                                                                                                                               for(n=0;n<5;n++)
                                                                                                                                               {
                                                                                                                                               if(a[n]==1||a[n]==2)
                                                                                                                                               {
                                                                                                                                                     if(b[n]==1)
                                                                                                                                                    {
                                                                                                                                               s++;
                                                                                                                                               }              
                                                                                                                                                               }
                                                                                                                     else {if(b[n]==0) s++;}
                                                                                                     }
                                                                                                     if(s==5) for(i=0;i<5;i++)
                                                                                                     {
                                                                                                              if(i<4){cout<<a[i]<<"";}
                                                                                                              if(i==4){cout<<a[i];}}
                                                                                                                                                               }
                                                                                                                     }
                                                                                                                     }
                                                                                                     }
                                                                                 }
                                                                 }
                                                   }}}}
                                   

	return 0;
}


1000472
main()
{
    int k,n;
    scanf("",&n);
    for(k=1;k<=n;k++)
    {
                     int m,a[100],i,j;               
                     scanf("",&m);
                     if(m!=0)
                     {
                        for(i=1;i<=m;i++)
                        {
                                scanf("",&a[i]);
                        }
                        for(j=1;j<=m;j++)
                        {
                                         if(j<m)
                                         {
                                                if((a[j]+3*j<=60)&&(a[j+1]+3*j>=63))
                                                {
                                                 printf("",60-3*j);
                                                 break;
                                                 }
                                                 if(a[j]+3*j==61||a[j]+3*j==62)
                                                 {
                                                 printf("",a[j]);
                                                 break;
                                                 }
                                         }
                                         else 
                                         {
                                              if(a[j]+3*j<60)
                                              {
                                              printf("",60-3*j);
                                              break;
                                              }
                                               if(a[j]+3*j==63||a[j]+3*j==61||a[j]+3*j==62)
                                               {
                                               printf("",a[j]);
                                                break;
                                                }
                                         }
                        }
                     }
                        printf("");
  }
}

1000473
creat(void)
{
	struct student *head,*p0,*p1,*p2;
	int i=0;
	head=(struct student *)malloc(len);
	head->next=NULL;
	scanf("",&head->num,&head->scorec,&head->scorem);
	while(i<2)
	{
		p1=head;
		p0=(struct student *)malloc(len);
		scanf("",&p0->num,&p0->scorec,&p0->scorem);
		while((p0->scorec+p0->scorem)<=(p1->scorec+p1->scorem)&&(p1->next!=NULL))
		{
			p2=p1;
			p1=p1->next;
		}
		if((p0->scorec+p0->scorem)>(p1->scorec+p1->scorem))
		{
			if(head==p1) head=p0;
			else p2->next=p0;
			p0->next=p1;
		}
		else
		{
			p1->next=p0;
			p0->next=NULL;
		}
		i++;
	}
	return(head);
}  
struct sort(struct student *head,int n)
{
	struct student *p0,*p1,*p2;
	int i=3;
	while(i<n)
	{
		p1=head;
		p0=(struct student*)malloc(len);
	    scanf("",&p0->num,&p0->scorec,&p0->scorem);
		while((p0->scorec+p0->scorem)<=(p1->scorec+p1->scorem)&&(p1->next!=NULL))
		{
			p1=p1->next;
		}
		if((p0->scorec+p0->scorem)>(p1->scorec+p1->scorem))
		{
			
			if(head==p1)
			{
				p2=p1->next;
				(*p2->next).num=p2->num;
				(*p2->next).scorec=p2->scorec;
				(*p2->next).scorem=p2->scorem;
				p2->num=p1->num;
				p2->scorec=p1->scorec;
				p2->scorem=p1->scorem;
				p1->num=p0->num;
				p1->scorec=p0->scorec;
				p1->scorem=p0->scorem;
			}
		    if(p1==head->next)
			{
				(*p1->next).num=p1->num;
				(*p1->next).scorec=p1->scorec;
				(*p1->next).scorem=p1->scorem;
				p1->num=p0->num;
				p1->scorec=p0->scorec;
				p1->scorem=p0->scorem;
			}
			else 
			{
				p1->num=p0->num;
				p1->scorec=p0->scorec;
				p1->scorem=p0->scorem;
			}
		}
		free(p0);
		i++;
	}
	return(head);
}

main()
{
	struct student *head,*p1,*p2;
	int n;
	scanf("",&n);
	head=creat();
	head=sort(head, n);
	p1=head->next;
	p2=p1->next;
    printf("",head->num,(head->scorec+head->scorem));
	printf("",p1->num,(p1->scorec+p1->scorem));
    printf("",p2->num,(p2->scorec+p2->scorem));
}

1000474
creat(void)
{
	struct student *head;
	struct student *p1,*p2;
	int i;
	p1=(struct student*)malloc(LEN);
	scanf("",&p1->num);
	scanf("",p1->name);
	p1->next=NULL;
	head=p1;
	p2=p1;
	for(i=1;i<n;i++)
	{
		p1=(struct student*)malloc(LEN);
		scanf("",&p1->num);
		scanf("",p1->name);
		p1->next=NULL;
		p2->next=p1;
		p2=p1;
	}
	return (head);

}

main()
{
	struct student *head;
	struct student *p1;
	char *p2;
	int i;
	int a[26];
	for(i=0;i<26;i++)
	{
		a[i]=0;
	}
	scanf("",&n);
	head=creat();
	p1=head;
	do
	{
		p2=p1->name;
		for(;(*p2)!='\0';p2++)
		{
			if((*p2)=='')
			{
				a[0]=a[0]+1;
			}
			if((*p2)=='')
			{
				a[1]=a[1]+1;
			}
			if((*p2)=='')
			{
				a[2]=a[2]+1;
			}if((*p2)=='')
			{
				a[3]=a[3]+1;
			}if((*p2)=='')
			{
				a[4]=a[4]+1;
			}if((*p2)=='')
			{
				a[5]=a[5]+1;
			}if((*p2)=='')
			{
				a[6]=a[6]+1;
			}if((*p2)=='')
			{
				a[7]=a[7]+1;
			}if((*p2)=='')
			{
				a[8]=a[8]+1;
			}if((*p2)=='')
			{
				a[9]=a[9]+1;
			}if((*p2)=='')
			{
				a[10]=a[10]+1;
			}if((*p2)=='')
			{
				a[11]=a[11]+1;
			}if((*p2)=='')
			{
				a[12]=a[12]+1;
			}if((*p2)=='')
			{
				a[13]=a[13]+1;
			}if((*p2)=='')
			{
				a[14]=a[14]+1;
			}if((*p2)=='')
			{
				a[15]=a[15]+1;
			}if((*p2)=='')
			{
				a[16]=a[16]+1;
			}if((*p2)=='')
			{
				a[17]=a[17]+1;
			}if((*p2)=='')
			{
				a[18]=a[18]+1;
			}if((*p2)=='')
			{
				a[19]=a[19]+1;
			}if((*p2)=='')
			{
				a[20]=a[20]+1;
			}if((*p2)=='')
			{
				a[21]=a[21]+1;
			}if((*p2)=='')
			{
				a[22]=a[22]+1;
			}if((*p2)=='')
			{
				a[23]=a[23]+1;
			}if((*p2)=='')
			{
				a[24]=a[24]+1;
			}if((*p2)=='')
			{
				a[25]=a[25]+1;
			}
			
		}
		p1=p1->next;
	}while(p1!=NULL);
		int j,max=0;
		for(i=0;i<26;i++)
		{
			if(a[i]>max)
			{
				max=a[i];
				j=i;
			}
		}
	printf("",j+65);
	printf("",a[j]);
	p1=head;
	do
	{
		p2=p1->name;
		for(;(*p2)!='\0';p2++)
		{
			if((*p2)==j+65)
			{
				printf("",p1->num);
			}
		}
		p1=p1->next;
	}while(p1!=NULL);

}
	
	 


1000475
main()
{
	reverse(int num);
	int i;
	int a[6];
	for(i=0;i<6;i++)
	{
		scanf("",&a[i]);
	}
	for(i=0;i<6;i++)
	{
		printf("",reverse(a[i]));
	}
}
reverse(int num)
{
	int x[5];
	int rev;
	if(num==0){rev=0;}
	if(num>0)
	{
		if(num>9999)
		{
			x[4]=((int)(num%10));
			x[3]=(((int)(num-x[4])%100))/10;
			x[2]=(((int)(num-x[4]-x[3]*10)%1000))/100;
			x[1]=(((int)(num-x[4]-x[3]*10-x[2]*100)%10000))/1000;
			x[0]=(((int)(num-x[4]-x[3]*10-x[2]*100-x[1]*1000)%100000))/10000;
			rev=x[4]*10000+x[3]*1000+x[2]*100+x[1]*10+x[0];
		}
		if(num>999&&num<10000)
		{
			x[4]=((int)(num%10));
			x[3]=(((int)(num-x[4])%100))/10;
			x[2]=(((int)(num-x[4]-x[3]*10)%1000))/100;
			x[1]=(((int)(num-x[4]-x[3]*10-x[2]*100)%10000))/1000;
            rev=x[4]*1000+x[3]*100+x[2]*10+x[1];
		}
		if(num>99&&num<1000)
		{
            x[4]=((int)(num%10));
			x[3]=(((int)(num-x[4])%100))/10;
			x[2]=(((int)(num-x[4]-x[3]*10)%1000))/100;
            rev=x[4]*100+x[3]*10+x[2];
		}
		if(num>9&&num<100)
		{
            x[4]=((int)(num%10));
			x[3]=(((int)(num-x[4])%100))/10;
			rev=x[4]*10+x[3];
		}
		if(num>0&&num<10)
		{
			rev=num;
		}
	}
	if(num<0)
	{
		num=((-1)*num);
		if(num>9999)
		{
			x[4]=((int)(num%10));
			x[3]=(((int)(num-x[4])%100))/10;
			x[2]=(((int)(num-x[4]-x[3]*10)%1000))/100;
			x[1]=(((int)(num-x[4]-x[3]*10-x[2]*100)%10000))/1000;
			x[0]=(((int)(num-x[4]-x[3]*10-x[2]*100-x[1]*1000)%100000))/10000;
			rev=(x[4]*10000+x[3]*1000+x[2]*100+x[1]*10+x[0])*(-1);
		}
		if(num>999&&num<10000)
		{
			x[4]=((int)(num%10));
			x[3]=(((int)(num-x[4])%100))/10;
			x[2]=(((int)(num-x[4]-x[3]*10)%1000))/100;
			x[1]=(((int)(num-x[4]-x[3]*10-x[2]*100)%10000))/1000;
            rev=(x[4]*1000+x[3]*100+x[2]*10+x[1])*(-1);
		}
		if(num>99&&num<1000)
		{
            x[4]=((int)(num%10));
			x[3]=(((int)(num-x[4])%100))/10;
			x[2]=(((int)(num-x[4]-x[3]*10)%1000))/100;
            rev=(x[4]*100+x[3]*10+x[2])*(-1);
		}
		if(num>9&&num<100)
		{
            x[4]=((int)(num%10));
			x[3]=(((int)(num-x[4])%100))/10;
			rev=(x[4]*10+x[3])*(-1);
		}
		if(num>0&&num<10)
		{
			rev=(-1)*num;
		}
	}


	
	return(rev);
}


1000476
main()
{
	int a1,a2,a3,b1,b2,b3,t1,t2,d;
	scanf("",&a1,&a2,&a3);
	scanf("",&b1,&b2,&b3);
	if ((a1%4==0&&a1%100!=0)||(a1%400==0))
	{
		if(a2<=2)
			t1=(a2-1)*31+a3;
		if (a2<=7)
		{
			if (a2%2==1)
				t1=(a2-2)/2*61+a3+60;
			else 
				t1=((a2-2)/2-1)*61+a3+31+60;
		}
		if (a2>7)
		{
			if (a2%2==1)
				t1=213+((a2-7)/2-1)*61+31+a3;
			else
				t1=213+(a2-7)/2*61+a3;
		}
		if ((b1%4==0&&b1%100!=0)||(b1%400==0))
		{
			if(b2<=2)
				t2=(b2-1)*31+b3;
			if (b2<=7)
			{
				if (b2%2==1)
					t2=(b2-2)/2*61+b3+60;
				else 
					t2=((b2-2)/2-1)*61+b3+31+60;
			}
			if (b2>7)
			{
				if (b2%2==1)
					t2=213+((b2-7)/2-1)*61+31+b3;
				else
					t2=213+(b2-7)/2*61+b3;
			}
		d=(b1-a1)*(366+365*3)/4+t2-t1;
		}
		else
		{
			if(b2<=2)
				t2=(b2-1)*31+b3;
			if (b2<=7)
			{
				if (b2%2==1)
					t2=(b2-2)/2*61+b3+60-1;
				else 
					t2=((b2-2)/2-1)*61+b3+31+60-1;
			}
			if (b2>7)
			{
				if (b2%2==1)
					t2=213+((b2-7)/2-1)*61+31+b3-1;
				else
					t2=213+(b2-7)/2*61+b3-1;
			}
		d=((b1-a1)/4)*(366+365*3)+(b1-a1-((b1-a1)/4)*4)*366+t2-t1;
		}

	}
	else 
	{
		if(a2<=2)
			t1=(a2-1)*31+a3;
		if (a2<=7)
		{
			if (a2%2==1)
				t1=(a2-2)/2*61+a3+60-1;
			else 
				t1=((a2-2)/2-1)*61+a3+31+60-1;
		}
		if (a2>7)
		{
			if (a2%2==1)
				t1=213+((a2-7)/2-1)*61+31+a3-1;
			else
				t1=213+(a2-7)/2*61+a3-1;
		}
		if ((b1%4==0&&b1%100!=0)||(b1%400==0))
		{
			if(b2<=2)
				t2=(b2-1)*31+b3;
			if (b2<=7)
			{
				if (b2%2==1)
					t2=(b2-2)/2*61+b3+60;
				else 
					t2=((b2-2)/2-1)*61+b3+31+60;
			}
			if (b2>7)
			{
				if (b2%2==1)
					t2=213+((b2-7)/2-1)*61+31+b3;
				else
					t2=213+(b2-7)/2*61+b3;
			}
		d=((b1-a1)/4)*(366+365*3)+(b1-a1-((b1-a1)/4)*4)*365+t2-t1;
		}
		else
		{
			if(b2<=2)
				t2=(b2-1)*31+b3;
			if (b2<=7)
			{
				if (b2%2==1)
					t2=(b2-2)/2*61+b3+60-1;
				else 
					t2=((b2-2)/2-1)*61+b3+31+60-1;
			}
			if (b2>7)
			{
				if (b2%2==1)
					t2=213+((b2-7)/2-1)*61+31+b3-1;
				else
					t2=213+(b2-7)/2*61+b3-1;
			}
		d=(b1-a1)/4*(366+365*3)+(b1-a1-((b1-a1)/4)*4)*365+t2-t1;
		}
	}
         if ((b1-a1)>=100)
         d=d-1;
	printf("",d);
	return 0;
}

1000477
main()
{
	for(int i=1;i<=9;i++)
		for(int j=1;j<=9;j++)
			a[i][j]=0;
	int n,d;
	cin>>n>>d;
	a[5][5]=n;

	for(int i=1;i<=d;i++)
		function();

	for(int i=1;i<=9;i++){
		for(int j=1;j<=8;j++)
			cout<<a[i][j]<<"";
		cout<<a[i][9];
		cout<<endl;
	}


	return 0;
}

function()
{ int rem[10][10];
	for(int i=1;i<=9;i++)
		for(int j=1;j<=9;j++)
			rem[i][j]=0;

	for(int i=2;i<=8;i++)
		for(int j=2;j<=8;j++)
			if(a[i][j]!=0){
				rem[i][j]=rem[i][j]+a[i][j]*2;
				rem[i-1][j-1]+=a[i][j]; rem[i-1][j]+=a[i][j]; rem[i-1][j+1]+=a[i][j]; rem[i][j-1]+=a[i][j]; 
				rem[i][j+1]+=a[i][j]; rem[i+1][j-1]+=a[i][j]; rem[i+1][j]+=a[i][j]; rem[i+1][j+1]+=a[i][j];
				a[i][j]=0;
			}

	for(int i=2;i<=8;i++){
		if(a[1][i]!=0){
			rem[1][i]+=a[1][i]*2;
			int x=a[1][i]*8/5;
			rem[1][i+1]+=x;rem[1][i-1]+=x;rem[2][i+1]+=x;rem[2][i-1]+=x;rem[2][i]+=x;
			a[1][i]=0;
		}
		if(a[9][i]!=0){
			rem[9][i]+=a[9][i]*2;
			int x=a[9][i]*8/5;
			rem[9][i+1]+=x;rem[9][i-1]+=x;rem[8][i+1]+=x;rem[8][i-1]+=x;rem[8][i]+=x;
			a[9][i]=0;
		}
		if(a[i][1]!=0){
			rem[i][1]+=a[i][1]*2;
			int x=a[i][1]*8/5;
			rem[i+1][1]+=x;rem[i-1][1]+=x;rem[i+1][2]+=x;rem[i-1][2]+=x;rem[i][2]+=x;
			a[i][1]=0;
		}
		if(a[i][9]!=0){
			rem[i][9]+=a[i][9]*2;
			int x=a[i][9]*8/5;
			rem[i+1][9]+=x;rem[i-1][9]+=x;rem[i+1][8]+=x;rem[i-1][8]+=x;rem[i][8]+=x;
			a[i][1]=0;
		}
	}

	if(a[1][1]!=0){
		rem[1][1]=a[1][1]*2;
		int x=a[1][1]*8/3;
		rem[1][2]+=x;rem[2][1]+=x;rem[2][2]+=x;
		a[1][1]=0;
	}
	if(a[1][9]!=0){
		rem[1][9]=a[1][9]*2;
		int x=a[1][9]*8/3;
		rem[1][8]+=x;rem[2][8]+=x;rem[2][9]+=x;
		a[1][9]=0;
	}
	if(a[9][1]!=0){
		rem[9][1]=a[9][1]*2;
		int x=a[9][1]*8/3;
		rem[9][2]+=x;rem[8][1]+=x;rem[8][2]+=x;
		a[1][1]=0;
	}
	if(a[9][9]!=0){
		rem[9][9]=a[9][9]*2;
		int x=a[9][9]*8/3;
		rem[9][8]+=x;rem[8][8]+=x;rem[8][9]+=x;
		a[9][9]=0;
	}
		

   for(int i=1;i<=9;i++)
		for(int j=1;j<=9;j++)
			a[i][j]=a[i][j]+rem[i][j];

   
}


1000478
main()
{
    int n;
    cin >> n;
    switch (n)
    {
           case 0: cout << "" << endl; break;
           case 1: cout << "" << endl; break;
           case 2: cout << "" << endl; break;
           case 3: cout << "" << endl; break;
           case 4: cout << "" << endl; break;
           case 5: cout << "" << endl; break;
           case 6: cout << "" << endl; break;
           case 7: cout << "" << endl; break;
           case 8: cout << "" << endl; break;
           case 9: cout << "" << endl; break;
           case 10: cout << "" << endl; break;
           case 11: cout << "" << endl; break;
           case 12: cout << "" << endl; break;
           case 13: cout << "" << endl; break;
           case 14: cout << "" << endl; break;
           case 15: cout << "" << endl; break;
           case 16: cout << "" << endl; break;
           case 17: cout << "" << endl; break;
           case 18: cout << "" << endl; break;
           case 19: cout << "" << endl; break;
           case 20: cout << "" << endl; break;
           case 21: cout << "" << endl; break;
           case 22: cout << "" << endl; break;
           case 23: cout << "" << endl; break;
           case 24: cout << "" << endl; break;
           case 25: cout << "" << endl; break;
           case 26: cout << "" << endl; break;
           case 27: cout << "" << endl; break;
           case 28: cout << "" << endl; break;
           case 29: cout << "" << endl; break;
           case 30: cout << "" << endl; break;
           case 31: cout << "" << endl; break;
           case 32: cout << "" << endl; break;
           case 33: cout << "" << endl; break;
           case 34: cout << "" << endl; break;
           case 35: cout << "" << endl; break;
           case 36: cout << "" << endl; break;
           case 37: cout << "" << endl; break;
           case 38: cout << "" << endl; break;
           case 39: cout << "" << endl; break;
           case 40: cout << "" << endl; break;
           case 41: cout << "" << endl; break;
           case 42: cout << "" << endl; break;
           case 43: cout << "" << endl; break;
           case 44: cout << "" << endl; break;
           case 45: cout << "" << endl; break;
           case 46: cout << "" << endl; break;
           case 47: cout << "" << endl; break;
           case 48: cout << "" << endl; break;
           case 49: cout << "" << endl; break;
           case 50: cout << "" << endl; break;
           case 51: cout << "" << endl; break;
           case 52: cout << "" << endl; break;
           case 53: cout << "" << endl; break;
           case 54: cout << "" << endl; break;
           case 55: cout << "" << endl; break;
           case 56: cout << "" << endl; break;
           case 57: cout << "" << endl; break;
           case 58: cout << "" << endl; break;
           case 59: cout << "" << endl; break;
           case 60: cout << "" << endl; break;
           case 61: cout << "" << endl; break;
           case 62: cout << "" << endl; break;
           case 63: cout << "" << endl; break;
           case 64: cout << "" << endl; break;
           case 65: cout << "" << endl; break;
           case 66: cout << "" << endl; break;
           case 67: cout << "" << endl; break;
           case 68: cout << "" << endl; break;
           case 69: cout << "" << endl; break;
           case 70: cout << "" << endl; break;
           case 71: cout << "" << endl; break;
           case 72: cout << "" << endl; break;
           case 73: cout << "" << endl; break;
           case 74: cout << "" << endl; break;
           case 75: cout << "" << endl; break;
           case 76: cout << "" << endl; break;
           case 77: cout << "" << endl; break;
           case 78: cout << "" << endl; break;
           case 79: cout << "" << endl; break;
           case 80: cout << "" << endl; break;
           case 81: cout << "" << endl; break;
           case 82: cout << "" << endl; break;
           case 83: cout << "" << endl; break;
           case 84: cout << "" << endl; break;
           case 85: cout << "" << endl; break;
           case 86: cout << "" << endl; break;
           case 87: cout << "" << endl; break;
           case 88: cout << "" << endl; break;
           case 89: cout << "" << endl; break;
           case 90: cout << "" << endl; break;
           case 91: cout << "" << endl; break;
           case 92: cout << "" << endl; break;
           case 93: cout << "" << endl; break;
           case 94: cout << "" << endl; break;
           case 95: cout << "" << endl; break;
           case 96: cout << "" << endl; break;
           case 97: cout << "" << endl; break;
           case 98: cout << "" << endl; break;
           case 99: cout << "" << endl; break;
           case 100: cout << "" << endl; break;
           default : cout << "" << endl;
    } 
    return 0;
}

1000479
main() {
	int n;
	cin >>n;
	for (;n>0;n=n-1)
	{
		double a,b,c,d,x1,x2,x1re,x1im,x2re,x2im;
		cin >>a>>b>>c;
		d=b*b-4*a*c;
		if (d>=0)
		{
			if(b!=0)
		    {
			x1=(-b+sqrt(d))/(2*a);
		    x2=(-b-sqrt(d))/(2*a);
		          if (x1!=x2)
		          {
		                cout <<fixed<<setprecision(5)<<""<<x1;
		                cout <<"";
		                cout <<fixed<<setprecision(5)<<""<<x2<<endl;
		           }
		          else
		                cout <<fixed<<setprecision(5)<<""<<x1<<endl;
            }
			else
		    {
			x1=(sqrt(d))/(2*a);
			x2=(sqrt(d))/(2*a);
			      if (x1!=x2)
			      {
					    cout <<fixed<<setprecision(5)<<""<<x1;
					    cout <<"";
					    cout <<fixed<<setprecision(5)<<""<<x2<<endl;
				  }
				  else
					    cout <<fixed<<setprecision(5)<<""<<x1<<endl;
		     }
		}

		else
		{
			if(b!=0)
			{
				x1re=-b/(2*a);
				x2re=-b/(2*a);
				x1im=(sqrt(-d))/(2*a);
				x2im=-(sqrt(-d))/(2*a);
				cout <<noshowpos<<fixed<<setprecision(5)<<""<<x1re<<showpos<<x1im<<"";
				cout <<"";
				cout <<noshowpos<<fixed<<setprecision(5)<<""<<x2re<<showpos<<x2im<<""<<endl;
			}
			else
			{
				x1re=0;
				x2re=0;
				x1im=(sqrt(-d))/(2*a);
				x2im=-(sqrt(-d))/(2*a);
				cout <<noshowpos<<fixed<<setprecision(5)<<""<<x1re<<showpos<<x1im<<"";
				cout <<"";
				cout <<noshowpos<<fixed<<setprecision(5)<<""<<x2re<<showpos<<x2im<<""<<endl;
			}
		}
	}
	return 0;
}


1000480
main()
{
    int i,letter[26]={0},flag=0;
    char word[400]={''}, num[26]={'','','','','','','','','','','','','','','','','','','','','','','','','',''};
    scanf("",word);
    for(i=0;i<400;i++)
    {
                      if(word[i]=='')
                      letter[0]++;
                      if(word[i]=='')
                      letter[1]++;
                      if(word[i]=='')
                      letter[2]++;
                      if(word[i]=='')
                      letter[3]++;
                      if(word[i]=='')
                      letter[4]++;
                      if(word[i]=='')
                      letter[5]++;
                      if(word[i]=='')
                      letter[6]++;
                      if(word[i]=='')
                      letter[7]++;
                      if(word[i]=='')
                      letter[8]++;
                      if(word[i]=='')
                      letter[9]++;
                      if(word[i]=='')
                      letter[10]++;
                      if(word[i]=='')
                      letter[11]++;
                      if(word[i]=='')
                      letter[12]++;
                      if(word[i]=='')
                      letter[13]++;
                      if(word[i]=='')
                      letter[14]++;
                      if(word[i]=='')
                      letter[15]++;
                      if(word[i]=='')
                      letter[16]++;
                      if(word[i]=='')
                      letter[17]++;
                      if(word[i]=='')
                      letter[18]++;
                      if(word[i]=='')
                      letter[19]++;
                      if(word[i]=='')
                      letter[20]++;
                      if(word[i]=='')
                      letter[21]++;
                      if(word[i]=='')
                      letter[22]++;
                      if(word[i]=='')
                      letter[23]++;
                      if(word[i]=='')
                      letter[24]++;
                      if(word[i]=='')
                      letter[25]++;
    }
    for(i=0;i<26;i++)
        {
                         if(letter[i]!=0)
                         {
                                         printf("", num[i],letter[i]);
                                         flag=1;
                         }     
        }
    if(flag==0)
    printf("");
    scanf("",&flag);
    return 0;
}


1000481
main()
{
	int y1,y2,m1,m2,d1,d2,i,t1,t2;
	int t=0;
	scanf("",&y1,&m1,&d1);
	scanf("",&y2,&m2,&d2);
	if(y1==y2)
	{
		if(m2==1)
		{
			t2=t+d2;
		}
		if(m2==2)
		{
			t2=t+31+d2;
		}
		if(m2==3)
		{
			t2=t+59+d2;
		}
		if(m2==4)
		{
			t2=t+90+d2;
		}
		if(m2==5)
		{
			t2=t+120+d2;
		}
		if(m2==6)
		{
			t2=t+151+d2;
		}
		if(m2==7)
		{
			t2=t+181+d2;
		}
		if(m2==8)
		{
			t2=t+212+d2;
		}
		if(m2==9)
		{
			t2=t+243+d2;
		}
		if(m2==10)
		{
			t2=t+273+d2;
		}
		if(m2==11)
		{
			t2=t+304+d2;
		}
		if(m2==112)
		{
			t2=t+334+d2;
		}
		if(m1==1)
		{
			t1=t+d1;
		}
		if(m1==2)
		{
			t1=t+31+d1;
		}
		if(m1==3)
		{
			t1=t+59+d1;
		}
		if(m1==4)
		{
			t1=t+90+d1;
		}
		if(m1==5)
		{
			t1=t+120+d1;
		}
		if(m1==6)
		{
			t1=t+151+d1;
		}
		if(m1==7)
		{
			t1=t+181+d1;
		}
		if(m1==8)
		{
			t1=t+212+d1;
		}
		if(m1==9)
		{
			t1=t+243+d1;
		}
		if(m1==10)
		{
			t1=t+273+d1;
		}
		if(m1==11)
		{
			t1=t+304+d1;
		}
		if(m1==12)
		{
			t1=t+334+d1;
		}
		t=t2-t1;
	}
	else
	{
	for(i=y1+1;i<y2;i++)
	{
		if((i%4==0&&i%100!=0)||(i%400==0))
		{
			t=t+366;
		}
		else
		{
			t=t+365;
		}
	}
	if((y1%4==0&&y1%100!=0)||(y1%400==0))
	{
		if(m1==1)
		{
			t=t+366-d1;
		}
		if(m1==2)
		{
			t=t+366-31-d1;
		}
		if(m1==3)
		{
			t=t+366-60-d1;
		}
		if(m1==4)
		{
			t=t+366-91-d1;
		}
		if(m1==5)
		{
			t=t+366-121-d1;
		}
		if(m1==6)
		{
			t=t+366-152-d1;
		}
		if(m1==7)
		{
			t=t+366-182-d1;
		}
		if(m1==8)
		{
			t=t+366-213-d1;
		}
		if(m1==9)
		{
			t=t+366-244-d1;
		}
		if(m1==10)
		{
			t=t+366-274-d1;
		}
		if(m1==11)
		{
			t=t+366-305-d1;
		}
		if(m1==12)
		{
			t=t+366-335-d1;
		}
	}
	else
	{
		if(m1==1)
		{
			t=t+365-d1;
		}
		if(m1==2)
		{
			t=t+365-31-d1;
		}
		if(m1==3)
		{
			t=t+365-59-d1;
		}
		if(m1==4)
		{
			t=t+365-90-d1;
		}
		if(m1==5)
		{
			t=t+365-120-d1;
		}
		if(m1==6)
		{
			t=t+365-151-d1;
		}
		if(m1==7)
		{
			t=t+365-181-d1;
		}
		if(m1==8)
		{
			t=t+365-212-d1;
		}
		if(m1==9)
		{
			t=t+365-243-d1;
		}
		if(m1==10)
		{
			t=t+365-273-d1;
		}
		if(m1==11)
		{
			t=t+365-304-d1;
		}
		if(m1==12)
		{
			t=t+365-334-d1;
		}
	}
	if((y2%4==0&&y2%100!=0)||(y2%400==0))
	{
		if(m2==1)
		{
			t=t+d2;
		}
		if(m2==2)
		{
			t=t+31+d2;
		}
		if(m2==3)
		{
			t=t+60+d2;
		}
		if(m2==4)
		{
			t=t+91+d2;
		}
		if(m2==5)
		{
			t=t+121+d2;
		}
		if(m2==6)
		{
			t=t+152+d2;
		}
		if(m2==7)
		{
			t=t+182+d2;
		}
		if(m2==8)
		{
			t=t+213+d2;
		}
		if(m2==9)
		{
			t=t+244+d2;
		}
		if(m2==10)
		{
			t=t+274+d2;
		}
		if(m2==11)
		{
			t=t+305+d2;
		}
		if(m2==12)
		{
			t=t+335+d2;
		}
	}
	else
	{
		if(m2==1)
		{
			t=t+d2;
		}
		if(m2==2)
		{
			t=t+31+d2;
		}
		if(m2==3)
		{
			t=t+59+d2;
		}
		if(m2==4)
		{
			t=t+90+d2;
		}
		if(m2==5)
		{
			t=t+120+d2;
		}
		if(m2==6)
		{
			t=t+151+d2;
		}
		if(m2==7)
		{
			t=t+181+d2;
		}
		if(m2==8)
		{
			t=t+212+d2;
		}
		if(m2==9)
		{
			t=t+243+d2;
		}
		if(m2==10)
		{
			t=t+273+d2;
		}
		if(m2==11)
		{
			t=t+304+d2;
		}
		if(m2==12)
		{
			t=t+334+d2;
		}
	}
	}
	printf("",t);
	return 0;
}


1000482
main()
{
    int sy,sm,sd,ey,em,ed,day,a,b,c,d,i;
    scanf("",&sy,&sm,&sd);
    scanf("",&ey,&em,&ed);

    day=0;

    if((sy+1)<ey)
    {
      for(i=sy+1;i<ey;i++)
    {
          a=i%4;
          if(a==0)
          {
            b=i%100;
            if(b==0)
            {
                c=i%400;
                if(c==0)
                {day=day+366;}
                else
                {day=day+365;}
            }
            else
            {day=day+366;}
          }
          else
          {day=day+365;}
    }

    for(i=sm;i<=12;i++)
    {
        if(i==2)
        {day=day+28;}
        if((i==1)||(i==3)||(i==5)||(i==7)||(i==8)||(i==10)||(i==12))
        {day=day+31;}
        if((i==4)||(i==6)||(i==9)||(i==11))
        {day=day+30;}
    }
    day=day-sd;
    if(em>1)
    {
    for(i=1;i<em;i++)
    {
        if(i==2)
        {day=day+28;}
        if((i==1)||(i==3)||(i==5)||(i==7)||(i==8)||(i==10)||(i==12))
        {day=day+31;}
        if((i==4)||(i==6)||(i==9)||(i==11))
        {day=day+30;}
    }
    }
    day=day+ed;
    if(sm<=2)
    {
      a=sy%4;
          if(a==0)
          {
            b=sy%100;
            if(b==0)
            {
                c=sy%400;
                if(c==0)
                {day=day+1;}
                else
                {day=day;}
            }
            else
            {day=day+1;}
          }
          else
          {day=day;}
    }
    if(em>2)
    {
        a=ey%4;
          if(a==0)
          {
            b=ey%100;
            if(b==0)
            {
                c=ey%400;
                if(c==0)
                {day=day+1;}
                else
                {day=day;}
            }
            else
            {day=day+1;}
          }
          else
          {day=day;}
    }
    }
    if(sy+1==ey)
    {
         for(i=sm;i<=12;i++)
    {
        if(i==2)
        {day=day+28;}
        if((i==1)||(i==3)||(i==5)||(i==7)||(i==8)||(i==10)||(i==12))
        {day=day+31;}
        if((i==4)||(i==6)||(i==9)||(i==11))
        {day=day+30;}
    }
    day=day-sd;
    if(em>1)
    {
    for(i=1;i<em;i++)
    {
        if(i==2)
        {day=day+28;}
        if((i==1)||(i==3)||(i==5)||(i==7)||(i==8)||(i==10)||(i==12))
        {day=day+31;}
        if((i=4)||(i==6)||(i==9)||(i==11))
        {day=day+30;}
    }
    }
    day=day+ed;
    if(sm<=2)
    {
      a=sy%4;
          if(a==0)
          {
            b=sy%100;
            if(b==0)
            {
                c=sy%400;
                if(c==0)
                {day=day+1;}
                else
                {day=day;}
            }
            else
            {day=day+1;}
          }
          else
          {day=day;}
    }
    if(em>2)
    {
        a=ey%4;
          if(a==0)
          {
            b=ey%100;
            if(b==0)
            {
                c=ey%400;
                if(c==0)
                {day=day+1;}
                else
                {day=day;}
            }
            else
            {day=day+1;}
          }
          else
          {day=day;}
    }
    }
    if(sy==ey)
    {
        for(i=sm;i<em;i++)
    {
        if(i==2)
        {day=day+28;}
        if((i==1)||(i==3)||(i==5)||(i==7)||(i==8)||(i==10)||(i==12))
        {day=day+31;}
        if((i==4)||(i==6)||(i==9)||(i==11))
        {day=day+30;}
    }
    day=day-sd+ed;
    if((sm<=2)&&(em>2))
    {
      a=sy%4;
          if(a==0)
          {
            b=sy%100;
            if(b==0)
            {
                c=sy%400;
                if(c==0)
                {day=day+1;}
                else
                {day=day;}
            }
            else
            {day=day+1;}
          }
          else
          {day=day;}
    }
    }
    printf("",day);
    return 0;
}








1000483
main()
{
 int y1,y2,m1,m2,d1,d2,x,n1,n2,i;
 scanf("",&y1,&m1,&d1);
 scanf("",&y2,&m2,&d2);
 if(y1==y2 && m1==m2) x=abs(d1-d2);
 if(y1==y2 && m1!=m2)
  {
    if((y1% 4 == 0 && y1 % 100 != 0) || (y1 % 400 == 0))
     {
       if(m1==1) n1=d1;     if(m2==1) n2=d2;
       if(m1==2) n1=d1+31;  if(m2==2) n2=d2+31;
       if(m1==3) n1=d1+60;  if(m2==3) n2=d2+60;
       if(m1==4) n1=d1+91;  if(m2==4) n2=d2+91;
       if(m1==5) n1=d1+121; if(m2==5) n2=d2+121;
       if(m1==6) n1=d1+152; if(m2==6) n2=d2+152;
       if(m1==7) n1=d1+182; if(m2==7) n2=d2+182;
       if(m1==8) n1=d1+213; if(m2==8) n2=d2+213;
       if(m1==9) n1=d1+244; if(m2==9) n2=d2+244;
       if(m1==10)n1=d1+274; if(m2==10)n2=d2+274;
       if(m1==11)n1=d1+305; if(m2==11)n2=d2+305;
       if(m1==12)n1=d1+335; if(m2==12)n2=d2+335;
       }
     else
      {
       if(m1==1) n1=d1;     if(m2==1) n2=d2;
       if(m1==2) n1=d1+31;  if(m2==2) n2=d2+31;
       if(m1==3) n1=d1+59;  if(m2==3) n2=d2+59;
       if(m1==4) n1=d1+90;  if(m2==4) n2=d2+90;
       if(m1==5) n1=d1+120; if(m2==5) n2=d2+120;
       if(m1==6) n1=d1+151; if(m2==6) n2=d2+151;
       if(m1==7) n1=d1+181; if(m2==7) n2=d2+181;
       if(m1==8) n1=d1+212; if(m2==8) n2=d2+212;
       if(m1==9) n1=d1+243; if(m2==9) n2=d2+243;
       if(m1==10)n1=d1+273; if(m2==10)n2=d2+273;
       if(m1==11)n1=d1+304; if(m2==11)n2=d2+304;
       if(m1==12)n1=d1+334; if(m2==12)n2=d2+334;
       }
     x=abs(n1-n2);
  }
 if(y1!=y2)
 {
  x=0;
  for(i=y1;i<=(y2-1);i++)
   {
     if((i% 4 == 0 && i% 100 != 0) || (i% 400 == 0))
      x=x+366;
     else
      x=x+365;
    }  
  if((y1% 4 == 0 && y1 % 100 != 0) || (y1 % 400 == 0))
     {
       if(m1==1) n1=d1;     
       if(m1==2) n1=d1+31;  
       if(m1==3) n1=d1+60;  
       if(m1==4) n1=d1+91;  
       if(m1==5) n1=d1+121; 
       if(m1==6) n1=d1+152; 
       if(m1==7) n1=d1+182; 
       if(m1==8) n1=d1+213; 
       if(m1==9) n1=d1+244; 
       if(m1==10)n1=d1+274; 
       if(m1==11)n1=d1+305; 
       if(m1==12)n1=d1+335; 
       }
  else
      {
       if(m1==1) n1=d1;     
       if(m1==2) n1=d1+31;  
       if(m1==3) n1=d1+59; 
       if(m1==4) n1=d1+90;  
       if(m1==5) n1=d1+120; 
       if(m1==6) n1=d1+151; 
       if(m1==7) n1=d1+181; 
       if(m1==8) n1=d1+212; 
       if(m1==9) n1=d1+243; 
       if(m1==10)n1=d1+273; 
       if(m1==11)n1=d1+304; 
       if(m1==12)n1=d1+334; 
       }
  if((y2% 4 == 0 && y2 % 100 != 0) || (y2 % 400 == 0))
     {
       if(m2==1) n2=d2;
       if(m2==2) n2=d2+31;
       if(m2==3) n2=d2+60;
       if(m2==4) n2=d2+91;
       if(m2==5) n2=d2+121;
       if(m2==6) n2=d2+152;
       if(m2==7) n2=d2+182;
       if(m2==8) n2=d2+213;
       if(m2==9) n2=d2+244;
       if(m2==10)n2=d2+274;
       if(m2==11)n2=d2+305;
       if(m2==12)n2=d2+335;
       }
  else
      {
       if(m2==1) n2=d2;
       if(m2==2) n2=d2+31;
       if(m2==3) n2=d2+59;
       if(m2==4) n2=d2+90;
       if(m2==5) n2=d2+120;
       if(m2==6) n2=d2+151;
       if(m2==7) n2=d2+181;
       if(m2==8) n2=d2+212;
       if(m2==9) n2=d2+243;
       if(m2==10)n2=d2+273;
       if(m2==11)n2=d2+304;
       if(m2==12)n2=d2+334;
       }
  x=x+n2-n1;
  }
 printf("",x);
 return 0;
}

1000484
struct library
{
	int num;
	char aut[30];
	struct library *next;
}
main()
{
	int m,i,j,a[30],t,b[30],x=0;
	char name;
	struct library *head;
	struct library *p1,*p2,*p;
	for(i=0;i<26;i++)
	{
		a[i]=0;
		b[i]=0;
	}
	scanf("",&m);
	p1=p2=(struct library*) malloc(LEN);
	scanf("",&p1->num,p1->aut);
	head=p1;
	p2=p1;
	for(i=0;i<m-1;i++)
	{
		p1=(struct library*) malloc(LEN);
		scanf("",&p1->num,p1->aut);
		p2->next=p1;
		p2=p1;
	}
	p1->next=NULL;
	p=head;
	for(i=0;i<m;i++)
	{
		for(j=0;j<26;j++)
		{
			if(p->aut[j]=='') a[0]=a[0]+1;
			if(p->aut[j]=='') a[1]=a[1]+1;
			if(p->aut[j]=='') a[2]=a[2]+1;
			if(p->aut[j]=='') a[3]=a[3]+1;
			if(p->aut[j]=='') a[4]=a[4]+1;
			if(p->aut[j]=='') a[5]=a[5]+1;
			if(p->aut[j]=='') a[6]=a[6]+1;
			if(p->aut[j]=='') a[7]=a[7]+1;
			if(p->aut[j]=='') a[8]=a[8]+1;
			if(p->aut[j]=='') a[9]=a[9]+1;
			if(p->aut[j]=='') a[10]=a[10]+1;
			if(p->aut[j]=='') a[11]=a[11]+1;
			if(p->aut[j]=='') a[12]=a[12]+1;
			if(p->aut[j]=='') a[13]=a[13]+1;
			if(p->aut[j]=='') a[14]=a[14]+1;
			if(p->aut[j]=='') a[15]=a[15]+1;
			if(p->aut[j]=='') a[16]=a[16]+1;
			if(p->aut[j]=='') a[17]=a[17]+1;
			if(p->aut[j]=='') a[18]=a[18]+1;
			if(p->aut[j]=='') a[19]=a[19]+1;
			if(p->aut[j]=='') a[20]=a[20]+1;
			if(p->aut[j]=='') a[21]=a[21]+1;
			if(p->aut[j]=='') a[22]=a[22]+1;
			if(p->aut[j]=='') a[23]=a[23]+1;
			if(p->aut[j]=='') a[24]=a[24]+1;
			if(p->aut[j]=='') a[25]=a[25]+1;
			if(p->aut[j]=='\0') break;
		}
		p=p->next;
	}
	t=0;
	for(i=1;i<26;i++)
	{
		if(a[t]<a[i]) t=i;
	}
	if(t==0)
	{
		printf("");
		name='';
	}
	if(t==1)
	{
		printf("");
		name='';
	}
	if(t==2)
	{
		printf("");
		name='';
	}
	if(t==3)
	{
		printf("");
		name='';
	}
	if(t==4)
	{
		printf("");
		name='';
	}
	if(t==5)
	{
		printf("");
		name='';
	}
	if(t==6)
	{
		printf("");
		name='';
	}
	if(t==7)
	{
		printf("");
		name='';
	}
	if(t==8)
	{
		printf("");
		name='';
	}
	if(t==9)
	{
		printf("");
		name='';
	}
	if(t==10)
	{
		printf("");
		name='';
	}
	if(t==11)
	{
		printf("");
		name='';
	}
	if(t==12)
	{
		printf("");
		name='';
	}
	if(t==13)
	{
		printf("");
		name='';
	}
	if(t==14)
	{
		printf("");
		name='';
	}
	if(t==15)
	{
		printf("");
		name='';
	}
	if(t==16)
	{
		printf("");
		name='';
	}
	if(t==17)
	{
		printf("");
		name='';
	}
	if(t==18)
	{
		printf("");
		name='';
	}
	if(t==19)
	{
		printf("");
		name='';
	}
	if(t==20)
	{
		printf("");
		name='';
	}
	if(t==21)
	{
		printf("");
		name='';
	}
	if(t==22)
	{
		printf("");
		name='';
	}
	if(t==23)
	{
		printf("");
		name='';
	}
	if(t==24)
	{
		printf("");
		name='';
	}
	if(t==25)
	{
		printf("");
		name='';
	}
	printf("",a[t]);
	p=head;
	for(i=0;i<m;i++)
	{
		for(j=0;j<26;j++)
		{
			if(p->aut[j]==name)
			{
				b[x]=p->num;
				x=x+1;
				break;
			}
		}
		p=p->next;
	}
	for(i=0;i<x-1;i++) printf("",b[i]);
	printf("",b[i]);
}


1000485
main()
{
	double a,n1[10000],sum1;                               
	int i,j,b,sum2,k1,k2,la,s[1000];
	char l[10000],n[10000],n2[10000],a1[2],b1[2];
	cin.getline(l,10000);                                  
	i=0;
    while (l[i]!='')                                      
    {
    	a1[i]=l[i];
    	i++;
    }
    la=i;
    i=i+1;
    k1=0;k2=0;
    while (l[i]!='')                                      
    {
    	n[k1]=l[i];
    	i++;
    	k1++;
    }
    i=i+1;
    while (l[i]!='\0')                                     
    {
    	b1[k2]=l[i];
    	i++;
    	k2++;
    }
    if (la==1)                                            
    	a=(int)a1[0]-48;
    else
    	a=((int)a1[0]-48)*10+(int)a1[1]-48;
    if (k2==1)
    	b=(int)b1[0]-48;
    else
        b=((int)b1[0]-48)*10+(int)b1[1]-48;
	for(i=0;i<k1;i++)                                     
	{
		if (''<=n[i]&&n[i]<='')
		{
		n[i]=n[i]-32;
		}
	}
	sum1=0;
	for(i=0;i<k1;i++)
	{
		if(''<=n[i]&&n[i]<='')
		{
			n1[i]=(int)(n[i])-48;
			sum1=sum1+n1[i]*pow(a,k1-i-1);
		}
		else
		{
			n1[i]=(int)(n[i])-55;
			sum1=sum1+n1[i]*pow(a,k1-i-1);
		}
	}
	sum2=(int)sum1;
	if (b==10)                                        
		cout<<sum2<<endl;
	if (b<10)                                    
	{
	 for(i=0;i<1000;i++)
		s[i]=1;
	 i=0;
	 while (sum2>=b)
	 {
		s[i]=sum2%b;
		sum2=(sum2-s[i])/b;
		i++;
	 }
	 cout<<sum2;
	 for(j=i-1;j>=0;j--)
		cout<<s[j];
	}
	if (10<b&&b<=36)                              
	        {
	          for(i=0;i<1000;i++)
		         s[i]=1;
	          i=0;
	          while (sum2>=b)
	             {
		            s[i]=sum2%b;
		            sum2=(sum2-s[i])/b;
		            if(s[i]<10)
			           {n2[i]=''+s[i];}
		            else
			           {n2[i]=''+s[i]-10;}
		            i++;
	             }
	          if(sum2<10)
	 	         {n2[i]=''+sum2;}
	          else
	 	         {n2[i]=''+sum2-10;}
              for (j=i;j>=0;j--)
                  {cout<<n2[j];}
	        }
	return 0;
}
